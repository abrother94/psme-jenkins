<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200605 09:51:04.053" generator="Robot 3.1.1 (Python 2.7.12 on linux2)">
<suite source="/home/voltha/workspace/GPON/5_RF_Auto_Test/redfish" id="s1" name="Redfish">
<suite source="/home/voltha/workspace/GPON/5_RF_Auto_Test/redfish/0_switches" id="s1-s1" name="0 Switches">
<suite source="/home/voltha/workspace/GPON/5_RF_Auto_Test/redfish/0_switches/test_switches.robot" id="s1-s1-s1" name="Test Switches">
<test id="s1-s1-s1-t1" name="Verify Stress loop test">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:51:06.518" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:51:06.550" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000564 seconds.</msg>
<msg timestamp="20200605 09:51:06.550" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:51:06.550" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:51:06.550" starttime="20200605 09:51:06.510"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:06.551" starttime="20200605 09:51:06.510"></status>
</kw>
<kw type="for" name="${i} IN RANGE [ 1 | 50 ]">
<kw type="foritem" name="${i} = 1">
<kw name="Test SFP Port tx_disable function">
<tags>
<tag>Verify_tx_disable</tag>
</tags>
<doc>Verify SFP port tx disable function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### COUNT[${count}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:06.552" starttime="20200605 09:51:06.552"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:06.561" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/</msg>
<msg timestamp="20200605 09:51:07.053" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/: 0.000433 seconds.</msg>
<msg timestamp="20200605 09:51:07.054" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:07 GMT
connection Keep-Alive
content-type application/json
content-length 4491


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPortCollection.EthernetSwitchPor...</msg>
<status status="PASS" endtime="20200605 09:51:07.054" starttime="20200605 09:51:06.553"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:07.054" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:07.054" starttime="20200605 09:51:07.054"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200605 09:51:07.055" level="INFO">Length is 74</msg>
<msg timestamp="20200605 09:51:07.055" level="INFO">${item_count} = 74</msg>
<status status="PASS" endtime="20200605 09:51:07.055" starttime="20200605 09:51:07.055"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${item_count}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.055" starttime="20200605 09:51:07.055"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<assign>
<var>${n1}</var>
</assign>
<msg timestamp="20200605 09:51:07.056" level="INFO">${n1} = 1</msg>
<status status="PASS" endtime="20200605 09:51:07.056" starttime="20200605 09:51:07.056"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${item_count}</arg>
</arguments>
<assign>
<var>${n2}</var>
</assign>
<msg timestamp="20200605 09:51:07.057" level="INFO">${n2} = 74</msg>
<status status="PASS" endtime="20200605 09:51:07.057" starttime="20200605 09:51:07.056"></status>
</kw>
<kw type="for" name="${i} IN RANGE [ ${n1} | ${n2} ]">
<kw type="foritem" name="${i} = 1">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:07.063" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200605 09:51:07.133" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000435 seconds.</msg>
<msg timestamp="20200605 09:51:07.134" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:07 GMT
connection Keep-Alive
content-type application/json
content-length 2398


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:07.134" starttime="20200605 09:51:07.057"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:07.135" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:07.135" starttime="20200605 09:51:07.134"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:07.135" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200605 09:51:07.135" starttime="20200605 09:51:07.135"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:07.136" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:07.136" starttime="20200605 09:51:07.136"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.137" starttime="20200605 09:51:07.136"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.137" starttime="20200605 09:51:07.137"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.138" starttime="20200605 09:51:07.138"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
</arguments>
<kw name="Test Tx Op Down">
<tags>
<tag>Test tx_disable</tag>
</tags>
<doc>Test SFP port tx disable function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OP_DOWN)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:51:07.144" level="INFO">${payload} = {u'OperationalState': u'Down'}</msg>
<status status="PASS" endtime="20200605 09:51:07.144" starttime="20200605 09:51:07.141"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<msg timestamp="20200605 09:51:07.152" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200605 09:51:07.189" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000437 seconds.</msg>
<status status="PASS" endtime="20200605 09:51:07.189" starttime="20200605 09:51:07.144"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.189" starttime="20200605 09:51:07.140"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.189" starttime="20200605 09:51:07.140"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.190" starttime="20200605 09:51:07.139"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.190" starttime="20200605 09:51:07.057"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.190" starttime="20200605 09:51:07.057"></status>
</kw>
<kw type="foritem" name="${i} = 2">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:07.197" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/2</msg>
<msg timestamp="20200605 09:51:07.228" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/2: 0.000512 seconds.</msg>
<msg timestamp="20200605 09:51:07.229" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:07 GMT
connection Keep-Alive
content-type application/json
content-length 2404


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:07.229" starttime="20200605 09:51:07.190"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:07.230" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:07.230" starttime="20200605 09:51:07.229"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:07.231" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200605 09:51:07.231" starttime="20200605 09:51:07.230"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:07.231" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:07.231" starttime="20200605 09:51:07.231"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.232" starttime="20200605 09:51:07.232"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.233" starttime="20200605 09:51:07.233"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.234" starttime="20200605 09:51:07.233"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
</arguments>
<kw name="Test Tx Op Down">
<tags>
<tag>Test tx_disable</tag>
</tags>
<doc>Test SFP port tx disable function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OP_DOWN)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:51:07.240" level="INFO">${payload} = {u'OperationalState': u'Down'}</msg>
<status status="PASS" endtime="20200605 09:51:07.240" starttime="20200605 09:51:07.236"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<msg timestamp="20200605 09:51:07.250" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/2</msg>
<msg timestamp="20200605 09:51:07.286" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/2: 0.000475 seconds.</msg>
<status status="PASS" endtime="20200605 09:51:07.286" starttime="20200605 09:51:07.241"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.287" starttime="20200605 09:51:07.236"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.287" starttime="20200605 09:51:07.235"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.287" starttime="20200605 09:51:07.235"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.287" starttime="20200605 09:51:07.190"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.287" starttime="20200605 09:51:07.190"></status>
</kw>
<kw type="foritem" name="${i} = 3">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:07.295" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/3</msg>
<msg timestamp="20200605 09:51:07.322" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/3: 0.000382 seconds.</msg>
<msg timestamp="20200605 09:51:07.323" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:07 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:07.323" starttime="20200605 09:51:07.288"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:07.324" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:07.324" starttime="20200605 09:51:07.323"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:07.324" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:07.325" starttime="20200605 09:51:07.324"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:07.325" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:07.325" starttime="20200605 09:51:07.325"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.326" starttime="20200605 09:51:07.325"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.327" starttime="20200605 09:51:07.326"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.328" starttime="20200605 09:51:07.327"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.331" starttime="20200605 09:51:07.329"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.331" starttime="20200605 09:51:07.328"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.331" starttime="20200605 09:51:07.287"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.331" starttime="20200605 09:51:07.287"></status>
</kw>
<kw type="foritem" name="${i} = 4">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:07.340" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/4</msg>
<msg timestamp="20200605 09:51:07.367" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/4: 0.000299 seconds.</msg>
<msg timestamp="20200605 09:51:07.367" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:07 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:07.367" starttime="20200605 09:51:07.332"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:07.368" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:07.368" starttime="20200605 09:51:07.367"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:07.368" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:07.368" starttime="20200605 09:51:07.368"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:07.369" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:07.369" starttime="20200605 09:51:07.369"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.369" starttime="20200605 09:51:07.369"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.370" starttime="20200605 09:51:07.370"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.371" starttime="20200605 09:51:07.370"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.372" starttime="20200605 09:51:07.372"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.372" starttime="20200605 09:51:07.371"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.372" starttime="20200605 09:51:07.332"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.372" starttime="20200605 09:51:07.332"></status>
</kw>
<kw type="foritem" name="${i} = 5">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:07.379" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/5</msg>
<msg timestamp="20200605 09:51:07.406" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/5: 0.000304 seconds.</msg>
<msg timestamp="20200605 09:51:07.407" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:07 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:07.407" starttime="20200605 09:51:07.373"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:07.408" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:07.408" starttime="20200605 09:51:07.407"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:07.408" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:07.408" starttime="20200605 09:51:07.408"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:07.409" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:07.409" starttime="20200605 09:51:07.409"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.409" starttime="20200605 09:51:07.409"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.410" starttime="20200605 09:51:07.410"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.411" starttime="20200605 09:51:07.410"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.412" starttime="20200605 09:51:07.412"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.412" starttime="20200605 09:51:07.411"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.412" starttime="20200605 09:51:07.372"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.412" starttime="20200605 09:51:07.372"></status>
</kw>
<kw type="foritem" name="${i} = 6">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:07.419" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/6</msg>
<msg timestamp="20200605 09:51:07.452" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/6: 0.000445 seconds.</msg>
<msg timestamp="20200605 09:51:07.453" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:07 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:07.453" starttime="20200605 09:51:07.413"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:07.454" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:07.454" starttime="20200605 09:51:07.454"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:07.455" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:07.455" starttime="20200605 09:51:07.454"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:07.456" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:07.456" starttime="20200605 09:51:07.455"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.457" starttime="20200605 09:51:07.456"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.458" starttime="20200605 09:51:07.457"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.459" starttime="20200605 09:51:07.459"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.461" starttime="20200605 09:51:07.461"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.461" starttime="20200605 09:51:07.460"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.461" starttime="20200605 09:51:07.413"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.461" starttime="20200605 09:51:07.412"></status>
</kw>
<kw type="foritem" name="${i} = 7">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:07.473" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/7</msg>
<msg timestamp="20200605 09:51:07.500" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/7: 0.000479 seconds.</msg>
<msg timestamp="20200605 09:51:07.500" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:07 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:07.501" starttime="20200605 09:51:07.462"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:07.502" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:07.502" starttime="20200605 09:51:07.501"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:07.503" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:07.503" starttime="20200605 09:51:07.502"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:07.503" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:07.503" starttime="20200605 09:51:07.503"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.504" starttime="20200605 09:51:07.503"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.505" starttime="20200605 09:51:07.504"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.505" starttime="20200605 09:51:07.505"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.507" starttime="20200605 09:51:07.506"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.507" starttime="20200605 09:51:07.506"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.507" starttime="20200605 09:51:07.462"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.507" starttime="20200605 09:51:07.462"></status>
</kw>
<kw type="foritem" name="${i} = 8">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:07.514" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/8</msg>
<msg timestamp="20200605 09:51:07.541" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/8: 0.000432 seconds.</msg>
<msg timestamp="20200605 09:51:07.541" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:07 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:07.541" starttime="20200605 09:51:07.508"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:07.542" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:07.543" starttime="20200605 09:51:07.542"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:07.543" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:07.543" starttime="20200605 09:51:07.543"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:07.544" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:07.544" starttime="20200605 09:51:07.544"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.545" starttime="20200605 09:51:07.544"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.546" starttime="20200605 09:51:07.545"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.546" starttime="20200605 09:51:07.546"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.547" starttime="20200605 09:51:07.547"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.547" starttime="20200605 09:51:07.547"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.548" starttime="20200605 09:51:07.507"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.548" starttime="20200605 09:51:07.507"></status>
</kw>
<kw type="foritem" name="${i} = 9">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:07.555" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/9</msg>
<msg timestamp="20200605 09:51:07.582" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/9: 0.00033 seconds.</msg>
<msg timestamp="20200605 09:51:07.582" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:07 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:07.582" starttime="20200605 09:51:07.548"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:07.583" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:07.583" starttime="20200605 09:51:07.582"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:07.584" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:07.584" starttime="20200605 09:51:07.583"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:07.584" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:07.584" starttime="20200605 09:51:07.584"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.585" starttime="20200605 09:51:07.585"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.586" starttime="20200605 09:51:07.586"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.587" starttime="20200605 09:51:07.586"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.588" starttime="20200605 09:51:07.588"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.588" starttime="20200605 09:51:07.587"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.588" starttime="20200605 09:51:07.548"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.588" starttime="20200605 09:51:07.548"></status>
</kw>
<kw type="foritem" name="${i} = 10">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:07.595" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/10</msg>
<msg timestamp="20200605 09:51:07.622" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/10: 0.000333 seconds.</msg>
<msg timestamp="20200605 09:51:07.623" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:07 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:07.623" starttime="20200605 09:51:07.589"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:07.624" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:07.624" starttime="20200605 09:51:07.623"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:07.624" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:07.624" starttime="20200605 09:51:07.624"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:07.625" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:07.625" starttime="20200605 09:51:07.625"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.626" starttime="20200605 09:51:07.625"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.626" starttime="20200605 09:51:07.626"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.627" starttime="20200605 09:51:07.627"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.628" starttime="20200605 09:51:07.628"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.629" starttime="20200605 09:51:07.628"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.629" starttime="20200605 09:51:07.588"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.629" starttime="20200605 09:51:07.588"></status>
</kw>
<kw type="foritem" name="${i} = 11">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:07.636" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/11</msg>
<msg timestamp="20200605 09:51:07.663" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/11: 0.00035 seconds.</msg>
<msg timestamp="20200605 09:51:07.664" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:07 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:07.664" starttime="20200605 09:51:07.629"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:07.665" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:07.665" starttime="20200605 09:51:07.664"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:07.665" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:07.665" starttime="20200605 09:51:07.665"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:07.666" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:07.666" starttime="20200605 09:51:07.666"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.667" starttime="20200605 09:51:07.666"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.668" starttime="20200605 09:51:07.667"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.669" starttime="20200605 09:51:07.668"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.670" starttime="20200605 09:51:07.670"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.670" starttime="20200605 09:51:07.669"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.670" starttime="20200605 09:51:07.629"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.671" starttime="20200605 09:51:07.629"></status>
</kw>
<kw type="foritem" name="${i} = 12">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:07.679" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/12</msg>
<msg timestamp="20200605 09:51:07.706" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/12: 0.00042 seconds.</msg>
<msg timestamp="20200605 09:51:07.707" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:07 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:07.707" starttime="20200605 09:51:07.671"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:07.708" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:07.708" starttime="20200605 09:51:07.707"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:07.709" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:07.709" starttime="20200605 09:51:07.708"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:07.709" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:07.709" starttime="20200605 09:51:07.709"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.710" starttime="20200605 09:51:07.710"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.711" starttime="20200605 09:51:07.711"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.712" starttime="20200605 09:51:07.712"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.714" starttime="20200605 09:51:07.713"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.714" starttime="20200605 09:51:07.713"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.714" starttime="20200605 09:51:07.671"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.714" starttime="20200605 09:51:07.671"></status>
</kw>
<kw type="foritem" name="${i} = 13">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:07.723" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/13</msg>
<msg timestamp="20200605 09:51:07.751" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/13: 0.000367 seconds.</msg>
<msg timestamp="20200605 09:51:07.752" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:07 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:07.752" starttime="20200605 09:51:07.715"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:07.752" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:07.753" starttime="20200605 09:51:07.752"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:07.753" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:07.753" starttime="20200605 09:51:07.753"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:07.754" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:07.754" starttime="20200605 09:51:07.753"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.755" starttime="20200605 09:51:07.754"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.756" starttime="20200605 09:51:07.755"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.757" starttime="20200605 09:51:07.756"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.759" starttime="20200605 09:51:07.758"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.759" starttime="20200605 09:51:07.758"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.759" starttime="20200605 09:51:07.714"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.759" starttime="20200605 09:51:07.714"></status>
</kw>
<kw type="foritem" name="${i} = 14">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:07.768" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/14</msg>
<msg timestamp="20200605 09:51:07.794" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/14: 0.00034 seconds.</msg>
<msg timestamp="20200605 09:51:07.795" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:07 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:07.795" starttime="20200605 09:51:07.760"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:07.796" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:07.796" starttime="20200605 09:51:07.795"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:07.796" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:07.797" starttime="20200605 09:51:07.796"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:07.797" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:07.797" starttime="20200605 09:51:07.797"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.798" starttime="20200605 09:51:07.797"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.799" starttime="20200605 09:51:07.798"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.799" starttime="20200605 09:51:07.799"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.801" starttime="20200605 09:51:07.800"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.801" starttime="20200605 09:51:07.800"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.801" starttime="20200605 09:51:07.759"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.801" starttime="20200605 09:51:07.759"></status>
</kw>
<kw type="foritem" name="${i} = 15">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:07.809" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/15</msg>
<msg timestamp="20200605 09:51:07.836" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/15: 0.000333 seconds.</msg>
<msg timestamp="20200605 09:51:07.836" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:07 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:07.836" starttime="20200605 09:51:07.802"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:07.837" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:07.837" starttime="20200605 09:51:07.837"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:07.838" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:07.838" starttime="20200605 09:51:07.838"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:07.839" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:07.839" starttime="20200605 09:51:07.838"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.839" starttime="20200605 09:51:07.839"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.841" starttime="20200605 09:51:07.840"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.841" starttime="20200605 09:51:07.841"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.843" starttime="20200605 09:51:07.842"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.843" starttime="20200605 09:51:07.842"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.843" starttime="20200605 09:51:07.801"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.843" starttime="20200605 09:51:07.801"></status>
</kw>
<kw type="foritem" name="${i} = 16">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:07.851" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/16</msg>
<msg timestamp="20200605 09:51:07.879" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/16: 0.000326 seconds.</msg>
<msg timestamp="20200605 09:51:07.879" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:08 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:07.880" starttime="20200605 09:51:07.844"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:07.880" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:07.880" starttime="20200605 09:51:07.880"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:07.881" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:07.881" starttime="20200605 09:51:07.881"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:07.882" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:07.882" starttime="20200605 09:51:07.881"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.882" starttime="20200605 09:51:07.882"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.883" starttime="20200605 09:51:07.883"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.884" starttime="20200605 09:51:07.883"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.885" starttime="20200605 09:51:07.885"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.885" starttime="20200605 09:51:07.884"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.885" starttime="20200605 09:51:07.843"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.885" starttime="20200605 09:51:07.843"></status>
</kw>
<kw type="foritem" name="${i} = 17">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:07.893" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/17</msg>
<msg timestamp="20200605 09:51:07.920" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/17: 0.000333 seconds.</msg>
<msg timestamp="20200605 09:51:07.920" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:08 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:07.920" starttime="20200605 09:51:07.886"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:07.921" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:07.921" starttime="20200605 09:51:07.921"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:07.922" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:07.922" starttime="20200605 09:51:07.921"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:07.922" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:07.922" starttime="20200605 09:51:07.922"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.923" starttime="20200605 09:51:07.923"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.924" starttime="20200605 09:51:07.923"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.925" starttime="20200605 09:51:07.924"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.926" starttime="20200605 09:51:07.926"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.926" starttime="20200605 09:51:07.925"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.927" starttime="20200605 09:51:07.886"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.927" starttime="20200605 09:51:07.886"></status>
</kw>
<kw type="foritem" name="${i} = 18">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:07.934" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/18</msg>
<msg timestamp="20200605 09:51:07.961" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/18: 0.000326 seconds.</msg>
<msg timestamp="20200605 09:51:07.962" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:08 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:07.962" starttime="20200605 09:51:07.927"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:07.963" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:07.963" starttime="20200605 09:51:07.962"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:07.963" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:07.964" starttime="20200605 09:51:07.963"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:07.964" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:07.964" starttime="20200605 09:51:07.964"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.965" starttime="20200605 09:51:07.964"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.965" starttime="20200605 09:51:07.965"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.966" starttime="20200605 09:51:07.966"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:07.967" starttime="20200605 09:51:07.967"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.967" starttime="20200605 09:51:07.967"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.968" starttime="20200605 09:51:07.927"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:07.968" starttime="20200605 09:51:07.927"></status>
</kw>
<kw type="foritem" name="${i} = 19">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:07.975" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/19</msg>
<msg timestamp="20200605 09:51:08.002" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/19: 0.000345 seconds.</msg>
<msg timestamp="20200605 09:51:08.003" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:08 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:08.003" starttime="20200605 09:51:07.968"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:08.003" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:08.003" starttime="20200605 09:51:08.003"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:08.004" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:08.004" starttime="20200605 09:51:08.004"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:08.005" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:08.005" starttime="20200605 09:51:08.004"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.005" starttime="20200605 09:51:08.005"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.006" starttime="20200605 09:51:08.005"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.007" starttime="20200605 09:51:08.006"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.008" starttime="20200605 09:51:08.008"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.008" starttime="20200605 09:51:08.007"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.008" starttime="20200605 09:51:07.968"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.008" starttime="20200605 09:51:07.968"></status>
</kw>
<kw type="foritem" name="${i} = 20">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:08.016" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/20</msg>
<msg timestamp="20200605 09:51:08.044" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/20: 0.000319 seconds.</msg>
<msg timestamp="20200605 09:51:08.045" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:08 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:08.045" starttime="20200605 09:51:08.009"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:08.045" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:08.045" starttime="20200605 09:51:08.045"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:08.047" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:08.047" starttime="20200605 09:51:08.046"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:08.048" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:08.048" starttime="20200605 09:51:08.047"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.049" starttime="20200605 09:51:08.048"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.049" starttime="20200605 09:51:08.049"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.050" starttime="20200605 09:51:08.050"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.052" starttime="20200605 09:51:08.051"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.052" starttime="20200605 09:51:08.051"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.052" starttime="20200605 09:51:08.009"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.052" starttime="20200605 09:51:08.009"></status>
</kw>
<kw type="foritem" name="${i} = 21">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:08.060" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/21</msg>
<msg timestamp="20200605 09:51:08.085" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/21: 0.000396 seconds.</msg>
<msg timestamp="20200605 09:51:08.086" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:08 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:08.086" starttime="20200605 09:51:08.053"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:08.087" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:08.087" starttime="20200605 09:51:08.086"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:08.088" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:08.088" starttime="20200605 09:51:08.087"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:08.088" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:08.088" starttime="20200605 09:51:08.088"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.089" starttime="20200605 09:51:08.089"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.090" starttime="20200605 09:51:08.090"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.091" starttime="20200605 09:51:08.090"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.092" starttime="20200605 09:51:08.092"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.092" starttime="20200605 09:51:08.091"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.093" starttime="20200605 09:51:08.053"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.093" starttime="20200605 09:51:08.052"></status>
</kw>
<kw type="foritem" name="${i} = 22">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:08.102" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/22</msg>
<msg timestamp="20200605 09:51:08.125" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/22: 0.000393 seconds.</msg>
<msg timestamp="20200605 09:51:08.126" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:08 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:08.126" starttime="20200605 09:51:08.094"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:08.127" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:08.127" starttime="20200605 09:51:08.127"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:08.128" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:08.128" starttime="20200605 09:51:08.128"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:08.129" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:08.129" starttime="20200605 09:51:08.128"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.129" starttime="20200605 09:51:08.129"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.130" starttime="20200605 09:51:08.130"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.131" starttime="20200605 09:51:08.131"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.133" starttime="20200605 09:51:08.132"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.133" starttime="20200605 09:51:08.132"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.133" starttime="20200605 09:51:08.093"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.133" starttime="20200605 09:51:08.093"></status>
</kw>
<kw type="foritem" name="${i} = 23">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:08.142" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/23</msg>
<msg timestamp="20200605 09:51:08.166" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/23: 0.000405 seconds.</msg>
<msg timestamp="20200605 09:51:08.167" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:08 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:08.167" starttime="20200605 09:51:08.134"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:08.168" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:08.168" starttime="20200605 09:51:08.167"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:08.169" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:08.169" starttime="20200605 09:51:08.168"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:08.170" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:08.170" starttime="20200605 09:51:08.169"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.171" starttime="20200605 09:51:08.170"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.171" starttime="20200605 09:51:08.171"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.173" starttime="20200605 09:51:08.172"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.174" starttime="20200605 09:51:08.174"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.174" starttime="20200605 09:51:08.173"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.175" starttime="20200605 09:51:08.133"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.175" starttime="20200605 09:51:08.133"></status>
</kw>
<kw type="foritem" name="${i} = 24">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:08.184" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/24</msg>
<msg timestamp="20200605 09:51:08.211" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/24: 0.000408 seconds.</msg>
<msg timestamp="20200605 09:51:08.212" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:08 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:08.212" starttime="20200605 09:51:08.176"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:08.212" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:08.213" starttime="20200605 09:51:08.212"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:08.213" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:08.213" starttime="20200605 09:51:08.213"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:08.214" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:08.214" starttime="20200605 09:51:08.214"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.215" starttime="20200605 09:51:08.214"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.216" starttime="20200605 09:51:08.215"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.217" starttime="20200605 09:51:08.216"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.218" starttime="20200605 09:51:08.218"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.218" starttime="20200605 09:51:08.217"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.218" starttime="20200605 09:51:08.175"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.219" starttime="20200605 09:51:08.175"></status>
</kw>
<kw type="foritem" name="${i} = 25">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:08.228" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/25</msg>
<msg timestamp="20200605 09:51:08.256" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/25: 0.000409 seconds.</msg>
<msg timestamp="20200605 09:51:08.256" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:08 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:08.257" starttime="20200605 09:51:08.219"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:08.257" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:08.257" starttime="20200605 09:51:08.257"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:08.258" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:08.258" starttime="20200605 09:51:08.258"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:08.259" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:08.259" starttime="20200605 09:51:08.259"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.260" starttime="20200605 09:51:08.259"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.261" starttime="20200605 09:51:08.260"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.262" starttime="20200605 09:51:08.261"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.263" starttime="20200605 09:51:08.263"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.263" starttime="20200605 09:51:08.262"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.264" starttime="20200605 09:51:08.219"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.264" starttime="20200605 09:51:08.219"></status>
</kw>
<kw type="foritem" name="${i} = 26">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:08.273" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/26</msg>
<msg timestamp="20200605 09:51:08.302" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/26: 0.000406 seconds.</msg>
<msg timestamp="20200605 09:51:08.302" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:08 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:08.303" starttime="20200605 09:51:08.264"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:08.303" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:08.303" starttime="20200605 09:51:08.303"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:08.304" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:08.304" starttime="20200605 09:51:08.304"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:08.305" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:08.305" starttime="20200605 09:51:08.305"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.306" starttime="20200605 09:51:08.305"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.307" starttime="20200605 09:51:08.306"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.308" starttime="20200605 09:51:08.307"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.309" starttime="20200605 09:51:08.309"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.309" starttime="20200605 09:51:08.308"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.310" starttime="20200605 09:51:08.264"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.310" starttime="20200605 09:51:08.264"></status>
</kw>
<kw type="foritem" name="${i} = 27">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:08.319" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/27</msg>
<msg timestamp="20200605 09:51:08.348" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/27: 0.000402 seconds.</msg>
<msg timestamp="20200605 09:51:08.348" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:08 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:08.348" starttime="20200605 09:51:08.311"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:08.349" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:08.349" starttime="20200605 09:51:08.349"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:08.350" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:08.350" starttime="20200605 09:51:08.350"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:08.351" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:08.351" starttime="20200605 09:51:08.350"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.352" starttime="20200605 09:51:08.351"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.352" starttime="20200605 09:51:08.352"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.354" starttime="20200605 09:51:08.353"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.356" starttime="20200605 09:51:08.356"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.356" starttime="20200605 09:51:08.355"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.356" starttime="20200605 09:51:08.310"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.356" starttime="20200605 09:51:08.310"></status>
</kw>
<kw type="foritem" name="${i} = 28">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:08.365" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/28</msg>
<msg timestamp="20200605 09:51:08.390" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/28: 0.000402 seconds.</msg>
<msg timestamp="20200605 09:51:08.391" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:08 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:08.391" starttime="20200605 09:51:08.357"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:08.392" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:08.392" starttime="20200605 09:51:08.392"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:08.393" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:08.393" starttime="20200605 09:51:08.393"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:08.394" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:08.394" starttime="20200605 09:51:08.393"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.394" starttime="20200605 09:51:08.394"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.395" starttime="20200605 09:51:08.395"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.396" starttime="20200605 09:51:08.396"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.399" starttime="20200605 09:51:08.399"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.399" starttime="20200605 09:51:08.397"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.399" starttime="20200605 09:51:08.357"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.399" starttime="20200605 09:51:08.357"></status>
</kw>
<kw type="foritem" name="${i} = 29">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:08.409" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/29</msg>
<msg timestamp="20200605 09:51:08.436" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/29: 0.000407 seconds.</msg>
<msg timestamp="20200605 09:51:08.437" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:08 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:08.437" starttime="20200605 09:51:08.400"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:08.438" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:08.438" starttime="20200605 09:51:08.437"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:08.438" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:08.439" starttime="20200605 09:51:08.438"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:08.439" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:08.439" starttime="20200605 09:51:08.439"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.440" starttime="20200605 09:51:08.440"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.441" starttime="20200605 09:51:08.441"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.442" starttime="20200605 09:51:08.441"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.443" starttime="20200605 09:51:08.443"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.443" starttime="20200605 09:51:08.442"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.444" starttime="20200605 09:51:08.400"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.444" starttime="20200605 09:51:08.399"></status>
</kw>
<kw type="foritem" name="${i} = 30">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:08.454" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/30</msg>
<msg timestamp="20200605 09:51:08.488" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/30: 0.000408 seconds.</msg>
<msg timestamp="20200605 09:51:08.488" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:08 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:08.488" starttime="20200605 09:51:08.445"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:08.489" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:08.489" starttime="20200605 09:51:08.489"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:08.490" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:08.490" starttime="20200605 09:51:08.490"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:08.491" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:08.491" starttime="20200605 09:51:08.490"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.492" starttime="20200605 09:51:08.491"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.493" starttime="20200605 09:51:08.492"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.494" starttime="20200605 09:51:08.493"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.495" starttime="20200605 09:51:08.495"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.495" starttime="20200605 09:51:08.494"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.495" starttime="20200605 09:51:08.444"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.496" starttime="20200605 09:51:08.444"></status>
</kw>
<kw type="foritem" name="${i} = 31">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:08.508" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/31</msg>
<msg timestamp="20200605 09:51:08.536" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/31: 0.000394 seconds.</msg>
<msg timestamp="20200605 09:51:08.536" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:08 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:08.536" starttime="20200605 09:51:08.496"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:08.537" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:08.537" starttime="20200605 09:51:08.537"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:08.540" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:08.540" starttime="20200605 09:51:08.538"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:08.541" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:08.541" starttime="20200605 09:51:08.540"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.542" starttime="20200605 09:51:08.542"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.545" starttime="20200605 09:51:08.544"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.546" starttime="20200605 09:51:08.545"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.548" starttime="20200605 09:51:08.547"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.548" starttime="20200605 09:51:08.546"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.548" starttime="20200605 09:51:08.496"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.548" starttime="20200605 09:51:08.496"></status>
</kw>
<kw type="foritem" name="${i} = 32">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:08.557" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/32</msg>
<msg timestamp="20200605 09:51:08.584" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/32: 0.000386 seconds.</msg>
<msg timestamp="20200605 09:51:08.585" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:08 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:08.585" starttime="20200605 09:51:08.549"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:08.586" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:08.586" starttime="20200605 09:51:08.585"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:08.586" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:08.586" starttime="20200605 09:51:08.586"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:08.587" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:08.587" starttime="20200605 09:51:08.587"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.588" starttime="20200605 09:51:08.588"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.589" starttime="20200605 09:51:08.588"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.590" starttime="20200605 09:51:08.589"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.592" starttime="20200605 09:51:08.591"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.592" starttime="20200605 09:51:08.591"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.592" starttime="20200605 09:51:08.548"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.592" starttime="20200605 09:51:08.548"></status>
</kw>
<kw type="foritem" name="${i} = 33">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:08.600" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/33</msg>
<msg timestamp="20200605 09:51:08.628" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/33: 0.000369 seconds.</msg>
<msg timestamp="20200605 09:51:08.628" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:08 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:08.628" starttime="20200605 09:51:08.593"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:08.629" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:08.629" starttime="20200605 09:51:08.629"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:08.630" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:08.630" starttime="20200605 09:51:08.629"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:08.631" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:08.631" starttime="20200605 09:51:08.630"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.631" starttime="20200605 09:51:08.631"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.632" starttime="20200605 09:51:08.632"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.633" starttime="20200605 09:51:08.633"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.635" starttime="20200605 09:51:08.634"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.635" starttime="20200605 09:51:08.634"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.635" starttime="20200605 09:51:08.592"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.635" starttime="20200605 09:51:08.592"></status>
</kw>
<kw type="foritem" name="${i} = 34">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:08.643" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/34</msg>
<msg timestamp="20200605 09:51:08.672" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/34: 0.000381 seconds.</msg>
<msg timestamp="20200605 09:51:08.672" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:08 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:08.672" starttime="20200605 09:51:08.636"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:08.673" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:08.673" starttime="20200605 09:51:08.673"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:08.674" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:08.674" starttime="20200605 09:51:08.673"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:08.675" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:08.675" starttime="20200605 09:51:08.674"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.676" starttime="20200605 09:51:08.675"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.676" starttime="20200605 09:51:08.676"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.677" starttime="20200605 09:51:08.677"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.679" starttime="20200605 09:51:08.678"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.679" starttime="20200605 09:51:08.678"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.679" starttime="20200605 09:51:08.635"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.679" starttime="20200605 09:51:08.635"></status>
</kw>
<kw type="foritem" name="${i} = 35">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:08.687" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/35</msg>
<msg timestamp="20200605 09:51:08.717" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/35: 0.000357 seconds.</msg>
<msg timestamp="20200605 09:51:08.717" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:08 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:08.717" starttime="20200605 09:51:08.680"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:08.718" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:08.718" starttime="20200605 09:51:08.718"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:08.719" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:08.719" starttime="20200605 09:51:08.719"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:08.720" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:08.720" starttime="20200605 09:51:08.719"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.720" starttime="20200605 09:51:08.720"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.721" starttime="20200605 09:51:08.721"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.722" starttime="20200605 09:51:08.722"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.724" starttime="20200605 09:51:08.723"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.724" starttime="20200605 09:51:08.723"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.724" starttime="20200605 09:51:08.680"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.724" starttime="20200605 09:51:08.679"></status>
</kw>
<kw type="foritem" name="${i} = 36">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:08.732" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/36</msg>
<msg timestamp="20200605 09:51:08.756" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/36: 0.000324 seconds.</msg>
<msg timestamp="20200605 09:51:08.757" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:08 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:08.757" starttime="20200605 09:51:08.725"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:08.758" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:08.758" starttime="20200605 09:51:08.758"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:08.759" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:08.759" starttime="20200605 09:51:08.758"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:08.759" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:08.760" starttime="20200605 09:51:08.759"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.760" starttime="20200605 09:51:08.760"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.761" starttime="20200605 09:51:08.761"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.762" starttime="20200605 09:51:08.761"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.763" starttime="20200605 09:51:08.763"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.763" starttime="20200605 09:51:08.762"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.764" starttime="20200605 09:51:08.724"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.764" starttime="20200605 09:51:08.724"></status>
</kw>
<kw type="foritem" name="${i} = 37">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:08.777" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/37</msg>
<msg timestamp="20200605 09:51:08.806" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/37: 0.000338 seconds.</msg>
<msg timestamp="20200605 09:51:08.806" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:08 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:08.806" starttime="20200605 09:51:08.764"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:08.807" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:08.807" starttime="20200605 09:51:08.807"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:08.808" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:08.809" starttime="20200605 09:51:08.807"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:08.809" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:08.809" starttime="20200605 09:51:08.809"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.810" starttime="20200605 09:51:08.809"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.811" starttime="20200605 09:51:08.810"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.812" starttime="20200605 09:51:08.811"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.813" starttime="20200605 09:51:08.813"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.813" starttime="20200605 09:51:08.812"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.813" starttime="20200605 09:51:08.764"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.813" starttime="20200605 09:51:08.764"></status>
</kw>
<kw type="foritem" name="${i} = 38">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:08.821" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/38</msg>
<msg timestamp="20200605 09:51:08.848" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/38: 0.000355 seconds.</msg>
<msg timestamp="20200605 09:51:08.848" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:09 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:08.848" starttime="20200605 09:51:08.814"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:08.849" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:08.849" starttime="20200605 09:51:08.849"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:08.850" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:08.850" starttime="20200605 09:51:08.849"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:08.850" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:08.851" starttime="20200605 09:51:08.850"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.851" starttime="20200605 09:51:08.851"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.853" starttime="20200605 09:51:08.852"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.854" starttime="20200605 09:51:08.853"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.855" starttime="20200605 09:51:08.855"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.855" starttime="20200605 09:51:08.854"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.855" starttime="20200605 09:51:08.814"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.855" starttime="20200605 09:51:08.814"></status>
</kw>
<kw type="foritem" name="${i} = 39">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:08.863" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/39</msg>
<msg timestamp="20200605 09:51:08.890" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/39: 0.000345 seconds.</msg>
<msg timestamp="20200605 09:51:08.891" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:09 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:08.891" starttime="20200605 09:51:08.856"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:08.892" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:08.892" starttime="20200605 09:51:08.891"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:08.892" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:08.892" starttime="20200605 09:51:08.892"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:08.893" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:08.893" starttime="20200605 09:51:08.893"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.893" starttime="20200605 09:51:08.893"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.895" starttime="20200605 09:51:08.894"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.896" starttime="20200605 09:51:08.895"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.897" starttime="20200605 09:51:08.897"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.897" starttime="20200605 09:51:08.896"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.897" starttime="20200605 09:51:08.856"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.897" starttime="20200605 09:51:08.855"></status>
</kw>
<kw type="foritem" name="${i} = 40">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:08.906" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/40</msg>
<msg timestamp="20200605 09:51:08.934" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/40: 0.000343 seconds.</msg>
<msg timestamp="20200605 09:51:08.934" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:09 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:08.934" starttime="20200605 09:51:08.898"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:08.935" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:08.935" starttime="20200605 09:51:08.934"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:08.936" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:08.936" starttime="20200605 09:51:08.935"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:08.936" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:08.936" starttime="20200605 09:51:08.936"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.937" starttime="20200605 09:51:08.937"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.938" starttime="20200605 09:51:08.937"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.938" starttime="20200605 09:51:08.938"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.940" starttime="20200605 09:51:08.940"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.940" starttime="20200605 09:51:08.939"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.940" starttime="20200605 09:51:08.897"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.940" starttime="20200605 09:51:08.897"></status>
</kw>
<kw type="foritem" name="${i} = 41">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:08.948" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/41</msg>
<msg timestamp="20200605 09:51:08.974" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/41: 0.000336 seconds.</msg>
<msg timestamp="20200605 09:51:08.975" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:09 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:08.975" starttime="20200605 09:51:08.941"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:08.976" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:08.976" starttime="20200605 09:51:08.975"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:08.976" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:08.976" starttime="20200605 09:51:08.976"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:08.977" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:08.977" starttime="20200605 09:51:08.977"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.978" starttime="20200605 09:51:08.977"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.978" starttime="20200605 09:51:08.978"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.980" starttime="20200605 09:51:08.980"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:08.983" starttime="20200605 09:51:08.983"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.983" starttime="20200605 09:51:08.982"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.983" starttime="20200605 09:51:08.940"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:08.983" starttime="20200605 09:51:08.940"></status>
</kw>
<kw type="foritem" name="${i} = 42">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:08.991" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/42</msg>
<msg timestamp="20200605 09:51:09.019" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/42: 0.000339 seconds.</msg>
<msg timestamp="20200605 09:51:09.019" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:09 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:09.019" starttime="20200605 09:51:08.984"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:09.020" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:09.020" starttime="20200605 09:51:09.020"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:09.021" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:09.021" starttime="20200605 09:51:09.020"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:09.022" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:09.022" starttime="20200605 09:51:09.021"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.022" starttime="20200605 09:51:09.022"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.023" starttime="20200605 09:51:09.022"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.023" starttime="20200605 09:51:09.023"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.026" starttime="20200605 09:51:09.026"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.026" starttime="20200605 09:51:09.023"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.026" starttime="20200605 09:51:08.983"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.026" starttime="20200605 09:51:08.983"></status>
</kw>
<kw type="foritem" name="${i} = 43">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:09.034" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/43</msg>
<msg timestamp="20200605 09:51:09.059" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/43: 0.000317 seconds.</msg>
<msg timestamp="20200605 09:51:09.059" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:09 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:09.059" starttime="20200605 09:51:09.027"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:09.060" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:09.060" starttime="20200605 09:51:09.059"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:09.060" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:09.061" starttime="20200605 09:51:09.060"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:09.061" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:09.061" starttime="20200605 09:51:09.061"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.062" starttime="20200605 09:51:09.061"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.062" starttime="20200605 09:51:09.062"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.063" starttime="20200605 09:51:09.062"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.064" starttime="20200605 09:51:09.064"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.064" starttime="20200605 09:51:09.063"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.064" starttime="20200605 09:51:09.026"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.064" starttime="20200605 09:51:09.026"></status>
</kw>
<kw type="foritem" name="${i} = 44">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:09.072" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/44</msg>
<msg timestamp="20200605 09:51:09.096" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/44: 0.000341 seconds.</msg>
<msg timestamp="20200605 09:51:09.097" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:09 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:09.097" starttime="20200605 09:51:09.065"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:09.097" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:09.098" starttime="20200605 09:51:09.097"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:09.098" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:09.098" starttime="20200605 09:51:09.098"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:09.099" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:09.099" starttime="20200605 09:51:09.098"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.099" starttime="20200605 09:51:09.099"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.100" starttime="20200605 09:51:09.100"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.102" starttime="20200605 09:51:09.100"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.103" starttime="20200605 09:51:09.103"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.103" starttime="20200605 09:51:09.102"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.103" starttime="20200605 09:51:09.064"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.103" starttime="20200605 09:51:09.064"></status>
</kw>
<kw type="foritem" name="${i} = 45">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:09.111" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/45</msg>
<msg timestamp="20200605 09:51:09.141" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/45: 0.00028 seconds.</msg>
<msg timestamp="20200605 09:51:09.141" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:09 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:09.141" starttime="20200605 09:51:09.104"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:09.142" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:09.142" starttime="20200605 09:51:09.142"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:09.143" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:09.143" starttime="20200605 09:51:09.142"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:09.143" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:09.143" starttime="20200605 09:51:09.143"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.144" starttime="20200605 09:51:09.143"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.144" starttime="20200605 09:51:09.144"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.144" starttime="20200605 09:51:09.144"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.145" starttime="20200605 09:51:09.145"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.146" starttime="20200605 09:51:09.145"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.146" starttime="20200605 09:51:09.103"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.146" starttime="20200605 09:51:09.103"></status>
</kw>
<kw type="foritem" name="${i} = 46">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:09.152" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/46</msg>
<msg timestamp="20200605 09:51:09.173" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/46: 0.000323 seconds.</msg>
<msg timestamp="20200605 09:51:09.173" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:09 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:09.173" starttime="20200605 09:51:09.146"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:09.174" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:09.174" starttime="20200605 09:51:09.173"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:09.174" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:09.174" starttime="20200605 09:51:09.174"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:09.175" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:09.175" starttime="20200605 09:51:09.175"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.175" starttime="20200605 09:51:09.175"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.176" starttime="20200605 09:51:09.176"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.176" starttime="20200605 09:51:09.176"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.177" starttime="20200605 09:51:09.177"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.177" starttime="20200605 09:51:09.177"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.178" starttime="20200605 09:51:09.146"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.178" starttime="20200605 09:51:09.146"></status>
</kw>
<kw type="foritem" name="${i} = 47">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:09.185" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/47</msg>
<msg timestamp="20200605 09:51:09.208" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/47: 0.000309 seconds.</msg>
<msg timestamp="20200605 09:51:09.209" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:09 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:09.209" starttime="20200605 09:51:09.178"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:09.209" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:09.209" starttime="20200605 09:51:09.209"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:09.210" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:09.210" starttime="20200605 09:51:09.210"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:09.211" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:09.211" starttime="20200605 09:51:09.210"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.211" starttime="20200605 09:51:09.211"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.211" starttime="20200605 09:51:09.211"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.212" starttime="20200605 09:51:09.212"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.213" starttime="20200605 09:51:09.213"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.213" starttime="20200605 09:51:09.212"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.213" starttime="20200605 09:51:09.178"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.213" starttime="20200605 09:51:09.178"></status>
</kw>
<kw type="foritem" name="${i} = 48">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:09.220" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/48</msg>
<msg timestamp="20200605 09:51:09.245" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/48: 0.000379 seconds.</msg>
<msg timestamp="20200605 09:51:09.246" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:09 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:09.246" starttime="20200605 09:51:09.214"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:09.247" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:09.247" starttime="20200605 09:51:09.246"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:09.247" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:09.247" starttime="20200605 09:51:09.247"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:09.248" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:09.248" starttime="20200605 09:51:09.248"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.249" starttime="20200605 09:51:09.248"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.250" starttime="20200605 09:51:09.249"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.250" starttime="20200605 09:51:09.250"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.251" starttime="20200605 09:51:09.251"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.251" starttime="20200605 09:51:09.251"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.252" starttime="20200605 09:51:09.213"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.252" starttime="20200605 09:51:09.213"></status>
</kw>
<kw type="foritem" name="${i} = 49">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:09.260" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/49</msg>
<msg timestamp="20200605 09:51:09.287" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/49: 0.000376 seconds.</msg>
<msg timestamp="20200605 09:51:09.287" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:09 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:09.288" starttime="20200605 09:51:09.252"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:09.288" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:09.288" starttime="20200605 09:51:09.288"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:09.289" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:09.289" starttime="20200605 09:51:09.289"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:09.290" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:09.290" starttime="20200605 09:51:09.289"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.290" starttime="20200605 09:51:09.290"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.291" starttime="20200605 09:51:09.291"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.292" starttime="20200605 09:51:09.291"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.293" starttime="20200605 09:51:09.292"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.293" starttime="20200605 09:51:09.292"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.293" starttime="20200605 09:51:09.252"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.293" starttime="20200605 09:51:09.252"></status>
</kw>
<kw type="foritem" name="${i} = 50">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:09.302" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/50</msg>
<msg timestamp="20200605 09:51:09.329" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/50: 0.000367 seconds.</msg>
<msg timestamp="20200605 09:51:09.330" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:09 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:09.330" starttime="20200605 09:51:09.294"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:09.330" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:09.331" starttime="20200605 09:51:09.330"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:09.331" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:09.331" starttime="20200605 09:51:09.331"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:09.332" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:09.332" starttime="20200605 09:51:09.332"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.333" starttime="20200605 09:51:09.332"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.333" starttime="20200605 09:51:09.333"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.334" starttime="20200605 09:51:09.333"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.335" starttime="20200605 09:51:09.335"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.335" starttime="20200605 09:51:09.334"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.335" starttime="20200605 09:51:09.293"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.335" starttime="20200605 09:51:09.293"></status>
</kw>
<kw type="foritem" name="${i} = 51">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:09.344" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/51</msg>
<msg timestamp="20200605 09:51:09.372" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/51: 0.000339 seconds.</msg>
<msg timestamp="20200605 09:51:09.373" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:09 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:09.373" starttime="20200605 09:51:09.336"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:09.373" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:09.374" starttime="20200605 09:51:09.373"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:09.374" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:09.375" starttime="20200605 09:51:09.374"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:09.375" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:09.375" starttime="20200605 09:51:09.375"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.376" starttime="20200605 09:51:09.375"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.376" starttime="20200605 09:51:09.376"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.377" starttime="20200605 09:51:09.376"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.378" starttime="20200605 09:51:09.378"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.378" starttime="20200605 09:51:09.377"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.378" starttime="20200605 09:51:09.336"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.378" starttime="20200605 09:51:09.336"></status>
</kw>
<kw type="foritem" name="${i} = 52">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:09.386" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/52</msg>
<msg timestamp="20200605 09:51:09.412" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/52: 0.000273 seconds.</msg>
<msg timestamp="20200605 09:51:09.412" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:09 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:09.412" starttime="20200605 09:51:09.379"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:09.413" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:09.413" starttime="20200605 09:51:09.413"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:09.414" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:09.414" starttime="20200605 09:51:09.413"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:09.414" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:09.414" starttime="20200605 09:51:09.414"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.415" starttime="20200605 09:51:09.414"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.415" starttime="20200605 09:51:09.415"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.415" starttime="20200605 09:51:09.415"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.416" starttime="20200605 09:51:09.416"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.416" starttime="20200605 09:51:09.416"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.416" starttime="20200605 09:51:09.378"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.416" starttime="20200605 09:51:09.378"></status>
</kw>
<kw type="foritem" name="${i} = 53">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:09.423" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/53</msg>
<msg timestamp="20200605 09:51:09.450" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/53: 0.000322 seconds.</msg>
<msg timestamp="20200605 09:51:09.451" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:09 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:09.451" starttime="20200605 09:51:09.417"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:09.452" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:09.452" starttime="20200605 09:51:09.451"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:09.453" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:09.453" starttime="20200605 09:51:09.452"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:09.453" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:09.453" starttime="20200605 09:51:09.453"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.454" starttime="20200605 09:51:09.453"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.454" starttime="20200605 09:51:09.454"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.455" starttime="20200605 09:51:09.455"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.456" starttime="20200605 09:51:09.456"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.456" starttime="20200605 09:51:09.455"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.456" starttime="20200605 09:51:09.417"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.456" starttime="20200605 09:51:09.416"></status>
</kw>
<kw type="foritem" name="${i} = 54">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:09.463" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/54</msg>
<msg timestamp="20200605 09:51:09.490" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/54: 0.000323 seconds.</msg>
<msg timestamp="20200605 09:51:09.491" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:09 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:09.491" starttime="20200605 09:51:09.457"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:09.492" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:09.492" starttime="20200605 09:51:09.491"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:09.492" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:09.492" starttime="20200605 09:51:09.492"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:09.493" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:09.493" starttime="20200605 09:51:09.492"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.493" starttime="20200605 09:51:09.493"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.494" starttime="20200605 09:51:09.493"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.494" starttime="20200605 09:51:09.494"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.495" starttime="20200605 09:51:09.495"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.495" starttime="20200605 09:51:09.494"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.495" starttime="20200605 09:51:09.457"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.495" starttime="20200605 09:51:09.456"></status>
</kw>
<kw type="foritem" name="${i} = 55">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:09.503" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/55</msg>
<msg timestamp="20200605 09:51:09.527" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/55: 0.000338 seconds.</msg>
<msg timestamp="20200605 09:51:09.528" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:09 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:09.528" starttime="20200605 09:51:09.496"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:09.528" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:09.528" starttime="20200605 09:51:09.528"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:09.529" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:09.529" starttime="20200605 09:51:09.529"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:09.530" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:09.530" starttime="20200605 09:51:09.529"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.530" starttime="20200605 09:51:09.530"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.530" starttime="20200605 09:51:09.530"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.531" starttime="20200605 09:51:09.531"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.532" starttime="20200605 09:51:09.532"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.532" starttime="20200605 09:51:09.531"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.532" starttime="20200605 09:51:09.496"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.532" starttime="20200605 09:51:09.495"></status>
</kw>
<kw type="foritem" name="${i} = 56">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:09.540" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/56</msg>
<msg timestamp="20200605 09:51:09.566" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/56: 0.00036 seconds.</msg>
<msg timestamp="20200605 09:51:09.567" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:09 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:09.567" starttime="20200605 09:51:09.533"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:09.568" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:09.568" starttime="20200605 09:51:09.567"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:09.568" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:09.568" starttime="20200605 09:51:09.568"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:09.569" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:09.569" starttime="20200605 09:51:09.569"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.570" starttime="20200605 09:51:09.569"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.571" starttime="20200605 09:51:09.570"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.573" starttime="20200605 09:51:09.571"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.574" starttime="20200605 09:51:09.574"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.574" starttime="20200605 09:51:09.573"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.575" starttime="20200605 09:51:09.532"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.575" starttime="20200605 09:51:09.532"></status>
</kw>
<kw type="foritem" name="${i} = 57">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:09.584" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/57</msg>
<msg timestamp="20200605 09:51:09.610" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/57: 0.000391 seconds.</msg>
<msg timestamp="20200605 09:51:09.610" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:09 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:09.610" starttime="20200605 09:51:09.576"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:09.611" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:09.611" starttime="20200605 09:51:09.611"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:09.612" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:09.612" starttime="20200605 09:51:09.611"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:09.613" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:09.613" starttime="20200605 09:51:09.612"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.613" starttime="20200605 09:51:09.613"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.614" starttime="20200605 09:51:09.614"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.616" starttime="20200605 09:51:09.615"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.617" starttime="20200605 09:51:09.617"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.617" starttime="20200605 09:51:09.616"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.617" starttime="20200605 09:51:09.575"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.617" starttime="20200605 09:51:09.575"></status>
</kw>
<kw type="foritem" name="${i} = 58">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:09.626" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/58</msg>
<msg timestamp="20200605 09:51:09.651" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/58: 0.000375 seconds.</msg>
<msg timestamp="20200605 09:51:09.651" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:09 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:09.651" starttime="20200605 09:51:09.618"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:09.653" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:09.653" starttime="20200605 09:51:09.652"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:09.654" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:09.654" starttime="20200605 09:51:09.653"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:09.654" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:09.654" starttime="20200605 09:51:09.654"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.655" starttime="20200605 09:51:09.655"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.656" starttime="20200605 09:51:09.656"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.657" starttime="20200605 09:51:09.657"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.659" starttime="20200605 09:51:09.658"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.659" starttime="20200605 09:51:09.658"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.659" starttime="20200605 09:51:09.618"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.659" starttime="20200605 09:51:09.617"></status>
</kw>
<kw type="foritem" name="${i} = 59">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:09.668" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/59</msg>
<msg timestamp="20200605 09:51:09.695" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/59: 0.000365 seconds.</msg>
<msg timestamp="20200605 09:51:09.695" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:09 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:09.696" starttime="20200605 09:51:09.660"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:09.696" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:09.696" starttime="20200605 09:51:09.696"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:09.697" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:09.697" starttime="20200605 09:51:09.697"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:09.698" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:09.698" starttime="20200605 09:51:09.697"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.698" starttime="20200605 09:51:09.698"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.699" starttime="20200605 09:51:09.699"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.700" starttime="20200605 09:51:09.700"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.702" starttime="20200605 09:51:09.702"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.702" starttime="20200605 09:51:09.701"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.703" starttime="20200605 09:51:09.659"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.703" starttime="20200605 09:51:09.659"></status>
</kw>
<kw type="foritem" name="${i} = 60">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:09.711" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/60</msg>
<msg timestamp="20200605 09:51:09.739" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/60: 0.000304 seconds.</msg>
<msg timestamp="20200605 09:51:09.739" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:09 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:09.739" starttime="20200605 09:51:09.704"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:09.740" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:09.740" starttime="20200605 09:51:09.740"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:09.741" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:09.741" starttime="20200605 09:51:09.740"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:09.741" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:09.741" starttime="20200605 09:51:09.741"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.742" starttime="20200605 09:51:09.742"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.743" starttime="20200605 09:51:09.743"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.744" starttime="20200605 09:51:09.743"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.745" starttime="20200605 09:51:09.745"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.745" starttime="20200605 09:51:09.744"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.745" starttime="20200605 09:51:09.703"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.745" starttime="20200605 09:51:09.703"></status>
</kw>
<kw type="foritem" name="${i} = 61">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:09.752" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/61</msg>
<msg timestamp="20200605 09:51:09.780" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/61: 0.000321 seconds.</msg>
<msg timestamp="20200605 09:51:09.781" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:09 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:09.781" starttime="20200605 09:51:09.746"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:09.782" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:09.782" starttime="20200605 09:51:09.781"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:09.782" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:09.783" starttime="20200605 09:51:09.782"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:09.783" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:09.783" starttime="20200605 09:51:09.783"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.784" starttime="20200605 09:51:09.783"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.785" starttime="20200605 09:51:09.784"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.785" starttime="20200605 09:51:09.785"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.787" starttime="20200605 09:51:09.786"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.787" starttime="20200605 09:51:09.786"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.787" starttime="20200605 09:51:09.746"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.787" starttime="20200605 09:51:09.745"></status>
</kw>
<kw type="foritem" name="${i} = 62">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:09.794" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/62</msg>
<msg timestamp="20200605 09:51:09.821" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/62: 0.000306 seconds.</msg>
<msg timestamp="20200605 09:51:09.821" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:09 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:09.821" starttime="20200605 09:51:09.788"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:09.822" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:09.822" starttime="20200605 09:51:09.822"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:09.823" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:09.823" starttime="20200605 09:51:09.822"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:09.823" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:09.823" starttime="20200605 09:51:09.823"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.824" starttime="20200605 09:51:09.823"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.825" starttime="20200605 09:51:09.824"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.826" starttime="20200605 09:51:09.825"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.827" starttime="20200605 09:51:09.827"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.827" starttime="20200605 09:51:09.826"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.827" starttime="20200605 09:51:09.787"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.827" starttime="20200605 09:51:09.787"></status>
</kw>
<kw type="foritem" name="${i} = 63">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:09.834" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/63</msg>
<msg timestamp="20200605 09:51:09.860" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/63: 0.000375 seconds.</msg>
<msg timestamp="20200605 09:51:09.860" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:10 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:09.860" starttime="20200605 09:51:09.828"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:09.861" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:09.861" starttime="20200605 09:51:09.861"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:09.862" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:09.862" starttime="20200605 09:51:09.861"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:09.862" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:09.862" starttime="20200605 09:51:09.862"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.863" starttime="20200605 09:51:09.862"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.864" starttime="20200605 09:51:09.863"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.865" starttime="20200605 09:51:09.864"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.866" starttime="20200605 09:51:09.866"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.866" starttime="20200605 09:51:09.865"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.866" starttime="20200605 09:51:09.827"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.866" starttime="20200605 09:51:09.827"></status>
</kw>
<kw type="foritem" name="${i} = 64">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:09.873" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/64</msg>
<msg timestamp="20200605 09:51:09.900" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/64: 0.00031 seconds.</msg>
<msg timestamp="20200605 09:51:09.900" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:10 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:09.900" starttime="20200605 09:51:09.867"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:09.901" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:09.901" starttime="20200605 09:51:09.900"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:09.901" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:09.901" starttime="20200605 09:51:09.901"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:09.902" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:09.902" starttime="20200605 09:51:09.902"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.902" starttime="20200605 09:51:09.902"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.904" starttime="20200605 09:51:09.903"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.905" starttime="20200605 09:51:09.904"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.906" starttime="20200605 09:51:09.906"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.906" starttime="20200605 09:51:09.905"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.906" starttime="20200605 09:51:09.866"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.906" starttime="20200605 09:51:09.866"></status>
</kw>
<kw type="foritem" name="${i} = 65">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:09.913" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/65</msg>
<msg timestamp="20200605 09:51:09.944" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/65: 0.000383 seconds.</msg>
<msg timestamp="20200605 09:51:09.944" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:10 GMT
connection Keep-Alive
content-type application/json
content-length 2450


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:09.944" starttime="20200605 09:51:09.907"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:09.945" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:09.945" starttime="20200605 09:51:09.945"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:09.946" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200605 09:51:09.946" starttime="20200605 09:51:09.945"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:09.947" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200605 09:51:09.947" starttime="20200605 09:51:09.946"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.947" starttime="20200605 09:51:09.947"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.948" starttime="20200605 09:51:09.948"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.949" starttime="20200605 09:51:09.949"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.951" starttime="20200605 09:51:09.950"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.951" starttime="20200605 09:51:09.950"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.951" starttime="20200605 09:51:09.907"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.951" starttime="20200605 09:51:09.906"></status>
</kw>
<kw type="foritem" name="${i} = 66">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:09.958" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/66</msg>
<msg timestamp="20200605 09:51:09.985" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/66: 0.000335 seconds.</msg>
<msg timestamp="20200605 09:51:09.986" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:10 GMT
connection Keep-Alive
content-type application/json
content-length 1056


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:09.986" starttime="20200605 09:51:09.951"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:09.987" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:09.987" starttime="20200605 09:51:09.986"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:09.987" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:09.987" starttime="20200605 09:51:09.987"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:09.988" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200605 09:51:09.988" starttime="20200605 09:51:09.988"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.989" starttime="20200605 09:51:09.988"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.989" starttime="20200605 09:51:09.989"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.990" starttime="20200605 09:51:09.990"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:09.991" starttime="20200605 09:51:09.991"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.992" starttime="20200605 09:51:09.991"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.992" starttime="20200605 09:51:09.951"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:09.992" starttime="20200605 09:51:09.951"></status>
</kw>
<kw type="foritem" name="${i} = 67">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:10.000" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/67</msg>
<msg timestamp="20200605 09:51:10.030" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/67: 0.000383 seconds.</msg>
<msg timestamp="20200605 09:51:10.030" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:10 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:10.031" starttime="20200605 09:51:09.993"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:10.031" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:10.031" starttime="20200605 09:51:10.031"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:10.032" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:10.032" starttime="20200605 09:51:10.032"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:10.033" level="INFO">${PORT_ID} = SFP port</msg>
<status status="PASS" endtime="20200605 09:51:10.033" starttime="20200605 09:51:10.032"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:10.034" starttime="20200605 09:51:10.033"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:10.035" starttime="20200605 09:51:10.034"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:10.035" starttime="20200605 09:51:10.035"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:10.037" starttime="20200605 09:51:10.036"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:10.037" starttime="20200605 09:51:10.036"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:10.037" starttime="20200605 09:51:09.992"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:10.037" starttime="20200605 09:51:09.992"></status>
</kw>
<kw type="foritem" name="${i} = 68">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:10.047" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/68</msg>
<msg timestamp="20200605 09:51:10.074" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/68: 0.000422 seconds.</msg>
<msg timestamp="20200605 09:51:10.075" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:10 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:10.075" starttime="20200605 09:51:10.038"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:10.076" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:10.076" starttime="20200605 09:51:10.075"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:10.077" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:10.077" starttime="20200605 09:51:10.076"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:10.077" level="INFO">${PORT_ID} = SFP port</msg>
<status status="PASS" endtime="20200605 09:51:10.077" starttime="20200605 09:51:10.077"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:10.078" starttime="20200605 09:51:10.078"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:10.079" starttime="20200605 09:51:10.079"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:10.081" starttime="20200605 09:51:10.080"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:10.082" starttime="20200605 09:51:10.082"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:10.082" starttime="20200605 09:51:10.081"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:10.082" starttime="20200605 09:51:10.037"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:10.082" starttime="20200605 09:51:10.037"></status>
</kw>
<kw type="foritem" name="${i} = 69">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:10.091" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/69</msg>
<msg timestamp="20200605 09:51:10.118" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/69: 0.000358 seconds.</msg>
<msg timestamp="20200605 09:51:10.119" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:10 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:10.119" starttime="20200605 09:51:10.083"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:10.120" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:10.120" starttime="20200605 09:51:10.120"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:10.121" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:10.121" starttime="20200605 09:51:10.120"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:10.121" level="INFO">${PORT_ID} = SFP port</msg>
<status status="PASS" endtime="20200605 09:51:10.121" starttime="20200605 09:51:10.121"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:10.122" starttime="20200605 09:51:10.122"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:10.123" starttime="20200605 09:51:10.123"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:10.124" starttime="20200605 09:51:10.123"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:10.125" starttime="20200605 09:51:10.125"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:10.125" starttime="20200605 09:51:10.124"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:10.126" starttime="20200605 09:51:10.083"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:10.126" starttime="20200605 09:51:10.083"></status>
</kw>
<kw type="foritem" name="${i} = 70">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:10.139" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/70</msg>
<msg timestamp="20200605 09:51:10.171" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/70: 0.00052 seconds.</msg>
<msg timestamp="20200605 09:51:10.171" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:10 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:10.171" starttime="20200605 09:51:10.126"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:10.172" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:10.173" starttime="20200605 09:51:10.172"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:10.173" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:10.173" starttime="20200605 09:51:10.173"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:10.174" level="INFO">${PORT_ID} = SFP port</msg>
<status status="PASS" endtime="20200605 09:51:10.174" starttime="20200605 09:51:10.174"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:10.175" starttime="20200605 09:51:10.175"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:10.176" starttime="20200605 09:51:10.176"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:10.177" starttime="20200605 09:51:10.177"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:10.179" starttime="20200605 09:51:10.178"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:10.179" starttime="20200605 09:51:10.178"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:10.179" starttime="20200605 09:51:10.126"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:10.179" starttime="20200605 09:51:10.126"></status>
</kw>
<kw type="foritem" name="${i} = 71">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:10.191" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/71</msg>
<msg timestamp="20200605 09:51:10.216" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/71: 0.000485 seconds.</msg>
<msg timestamp="20200605 09:51:10.216" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:10 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:10.216" starttime="20200605 09:51:10.180"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:10.217" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:10.217" starttime="20200605 09:51:10.217"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:10.218" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:10.218" starttime="20200605 09:51:10.218"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:10.219" level="INFO">${PORT_ID} = SFP port</msg>
<status status="PASS" endtime="20200605 09:51:10.219" starttime="20200605 09:51:10.219"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:10.220" starttime="20200605 09:51:10.219"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:10.221" starttime="20200605 09:51:10.220"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:10.222" starttime="20200605 09:51:10.221"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:10.223" starttime="20200605 09:51:10.223"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:10.223" starttime="20200605 09:51:10.222"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:10.223" starttime="20200605 09:51:10.179"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:10.224" starttime="20200605 09:51:10.179"></status>
</kw>
<kw type="foritem" name="${i} = 72">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:10.234" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/72</msg>
<msg timestamp="20200605 09:51:10.263" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/72: 0.000305 seconds.</msg>
<msg timestamp="20200605 09:51:10.263" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:10 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:10.263" starttime="20200605 09:51:10.224"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:10.264" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:10.264" starttime="20200605 09:51:10.263"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:10.264" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:10.264" starttime="20200605 09:51:10.264"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:10.265" level="INFO">${PORT_ID} = SFP port</msg>
<status status="PASS" endtime="20200605 09:51:10.265" starttime="20200605 09:51:10.265"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:10.265" starttime="20200605 09:51:10.265"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:10.266" starttime="20200605 09:51:10.266"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:10.267" starttime="20200605 09:51:10.267"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:10.268" starttime="20200605 09:51:10.268"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:10.269" starttime="20200605 09:51:10.268"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:10.269" starttime="20200605 09:51:10.224"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:10.269" starttime="20200605 09:51:10.224"></status>
</kw>
<kw type="foritem" name="${i} = 73">
<kw name="Test Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:10.276" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/73</msg>
<msg timestamp="20200605 09:51:10.302" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/73: 0.000299 seconds.</msg>
<msg timestamp="20200605 09:51:10.302" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:10 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:10.302" starttime="20200605 09:51:10.269"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:10.303" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:10.303" starttime="20200605 09:51:10.303"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:10.304" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 09:51:10.304" starttime="20200605 09:51:10.303"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:10.304" level="INFO">${PORT_ID} = SFP port</msg>
<status status="PASS" endtime="20200605 09:51:10.304" starttime="20200605 09:51:10.304"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:10.305" starttime="20200605 09:51:10.305"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:10.305" starttime="20200605 09:51:10.305"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:10.306" starttime="20200605 09:51:10.306"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:10.307" starttime="20200605 09:51:10.307"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:10.308" starttime="20200605 09:51:10.306"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:10.308" starttime="20200605 09:51:10.269"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:10.308" starttime="20200605 09:51:10.269"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:10.308" starttime="20200605 09:51:07.057"></status>
</kw>
<kw type="for" name="${i} IN RANGE [ ${n1} | ${n2} ]">
<kw type="foritem" name="${i} = 1">
<kw name="Test If Tx Op Down">
<tags>
<tag>Test if tx_disable down</tag>
</tags>
<doc>Test if SFP port tx disable function</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:10.315" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200605 09:51:10.382" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000448 seconds.</msg>
<msg timestamp="20200605 09:51:10.383" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:51:10 GMT
connection Keep-Alive
content-type application/json
content-length 2398


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:51:10.383" starttime="20200605 09:51:10.309"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:51:10.384" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:10.384" starttime="20200605 09:51:10.383"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 09:51:10.384" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200605 09:51:10.384" starttime="20200605 09:51:10.384"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 09:51:10.385" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 09:51:10.385" starttime="20200605 09:51:10.385"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.dict['OperationalState']}</arg>
<arg>Down</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.dict['OperationalState']}</arg>
<arg>Down</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
<arg>Down</arg>
</arguments>
<msg timestamp="20200605 09:51:10.387" level="FAIL">Up != Down</msg>
<status status="FAIL" endtime="20200605 09:51:10.387" starttime="20200605 09:51:10.386"></status>
</kw>
<status status="FAIL" endtime="20200605 09:51:10.387" starttime="20200605 09:51:10.386"></status>
</kw>
<status status="FAIL" endtime="20200605 09:51:10.387" starttime="20200605 09:51:10.385"></status>
</kw>
<status status="FAIL" endtime="20200605 09:51:10.387" starttime="20200605 09:51:10.308"></status>
</kw>
<status status="FAIL" endtime="20200605 09:51:10.387" starttime="20200605 09:51:10.308"></status>
</kw>
<status status="FAIL" endtime="20200605 09:51:10.387" starttime="20200605 09:51:10.308"></status>
</kw>
<status status="FAIL" endtime="20200605 09:51:10.387" starttime="20200605 09:51:06.551"></status>
</kw>
<status status="FAIL" endtime="20200605 09:51:10.387" starttime="20200605 09:51:06.551"></status>
</kw>
<status status="FAIL" endtime="20200605 09:51:10.387" starttime="20200605 09:51:06.551"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200605 09:51:10.394" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200605 09:51:10.414" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000344 seconds.</msg>
<msg timestamp="20200605 09:51:10.414" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200605 09:51:10.414" starttime="20200605 09:51:10.388"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:10.414" starttime="20200605 09:51:10.387"></status>
</kw>
<doc>Test SFP port tx disable stress test</doc>
<tags>
<tag>Test Stress loop test</tag>
</tags>
<status status="FAIL" endtime="20200605 09:51:10.414" critical="yes" starttime="20200605 09:51:06.509">Up != Down</status>
</test>
<doc>Test PSME switches port functionality.</doc>
<status status="FAIL" endtime="20200605 09:51:10.415" starttime="20200605 09:51:04.178"></status>
</suite>
<status status="FAIL" endtime="20200605 09:51:10.417" starttime="20200605 09:51:04.177"></status>
</suite>
<suite source="/home/voltha/workspace/GPON/5_RF_Auto_Test/redfish/1_account_service" id="s1-s2" name="1 Account Service">
<suite source="/home/voltha/workspace/GPON/5_RF_Auto_Test/redfish/1_account_service/test_user_account.robot" id="s1-s2-s1" name="Test User Account">
<test id="s1-s2-s1-t1" name="Verify AccountService Available">
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:51:10.485" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:51:10.524" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000611 seconds.</msg>
<msg timestamp="20200605 09:51:10.524" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:51:10.524" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:51:10.524" starttime="20200605 09:51:10.435"></status>
</kw>
<kw name="Get Attribute" library="redfish_utils">
<doc>Get resource attribute.</doc>
<arguments>
<arg>/redfish/v1/AccountService</arg>
<arg>ServiceEnabled</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:10.540" level="INFO">Attempt 1 of /redfish/v1/AccountService</msg>
<msg timestamp="20200605 09:51:10.566" level="INFO">Response Time to /redfish/v1/AccountService: 0.000422 seconds.</msg>
<msg timestamp="20200605 09:51:10.567" level="INFO">${resp} = True</msg>
<status status="PASS" endtime="20200605 09:51:10.567" starttime="20200605 09:51:10.525"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${True}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:10.568" starttime="20200605 09:51:10.567"></status>
</kw>
<doc>Verify Redfish account service is available.</doc>
<tags>
<tag>Verify_AccountService_Available</tag>
</tags>
<status status="PASS" endtime="20200605 09:51:10.568" critical="yes" starttime="20200605 09:51:10.434"></status>
</test>
<test id="s1-s2-s1-t2" name="Verify AccountService_session_timeout">
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:51:10.574" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:51:10.603" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000602 seconds.</msg>
<msg timestamp="20200605 09:51:10.604" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:51:10.604" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:51:10.604" starttime="20200605 09:51:10.569"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>ServiceEnabled=${True}</arg>
<arg>SessionTimeout=${6}</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:51:10.605" level="INFO">${payload} = {u'ServiceEnabled': True, u'SessionTimeout': 6}</msg>
<status status="PASS" endtime="20200605 09:51:10.605" starttime="20200605 09:51:10.604"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/SessionService/</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_OK}]</arg>
</arguments>
<msg timestamp="20200605 09:51:10.619" level="INFO">Attempt 1 of /redfish/v1/SessionService/</msg>
<msg timestamp="20200605 09:51:10.643" level="INFO">Response Time to /redfish/v1/SessionService/: 0.00039 seconds.</msg>
<status status="PASS" endtime="20200605 09:51:10.643" starttime="20200605 09:51:10.605"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200605 09:51:20.647" level="INFO">Slept 10 seconds</msg>
<status status="PASS" endtime="20200605 09:51:20.647" starttime="20200605 09:51:10.643"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Chassis/</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:51:20.661" level="INFO">Attempt 1 of /redfish/v1/Chassis/</msg>
<msg timestamp="20200605 09:51:20.685" level="INFO">Response Time to /redfish/v1/Chassis/: 0.000397 seconds.</msg>
<msg timestamp="20200605 09:51:20.685" level="INFO">${resp} = 401
date Fri, 05 Jun 2020 01:51:20 GMT
connection Keep-Alive
content-type application/json
content-length 211


{"error":{"code":"Base.1.0.ResourceAtUriUnauthorized","message":"While accessing the res...</msg>
<status status="PASS" endtime="20200605 09:51:20.685" starttime="20200605 09:51:20.647"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_UNAUTHORIZED}</arg>
</arguments>
<msg timestamp="20200605 09:51:20.686" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:51:20.686" starttime="20200605 09:51:20.686"></status>
</kw>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:51:20.691" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:51:20.720" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.00063 seconds.</msg>
<msg timestamp="20200605 09:51:20.720" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:51:20.720" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:51:20.721" starttime="20200605 09:51:20.686"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>ServiceEnabled=${True}</arg>
<arg>SessionTimeout=${60}</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:51:20.721" level="INFO">${payload} = {u'ServiceEnabled': True, u'SessionTimeout': 60}</msg>
<status status="PASS" endtime="20200605 09:51:20.722" starttime="20200605 09:51:20.721"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/SessionService/</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_OK}]</arg>
</arguments>
<msg timestamp="20200605 09:51:20.736" level="INFO">Attempt 1 of /redfish/v1/SessionService/</msg>
<msg timestamp="20200605 09:51:20.762" level="INFO">Response Time to /redfish/v1/SessionService/: 0.000399 seconds.</msg>
<status status="PASS" endtime="20200605 09:51:20.762" starttime="20200605 09:51:20.722"></status>
</kw>
<doc>Verify Redfish session timeout</doc>
<tags>
<tag>Verify_AccountService_session_timeout</tag>
</tags>
<status status="PASS" endtime="20200605 09:51:20.762" critical="yes" starttime="20200605 09:51:10.568"></status>
</test>
<test id="s1-s2-s1-t3" name="Redfish Create and Verify Users">
<kw name="Redfish Create And Verify User">
<doc>Redfish create and verify user.</doc>
<arguments>
<arg>nameadmin</arg>
<arg>admin_user</arg>
<arg>TestPwd123</arg>
<arg>Administrator</arg>
<arg>${False}</arg>
<arg>${True}</arg>
</arguments>
<kw name="Redfish Create User">
<doc>Redfish create user.</doc>
<arguments>
<arg>${name}</arg>
<arg>${username}</arg>
<arg>${password}</arg>
<arg>${role_id}</arg>
<arg>${locked}</arg>
<arg>${enabled}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Name=${name}</arg>
<arg>UserName=${username}</arg>
<arg>Password=${password}</arg>
<arg>RoleId=${role_id}</arg>
<arg>Locked=${locked}</arg>
<arg>Enabled=${enabled}</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:51:20.767" level="INFO">${payload} = {u'Name': u'nameadmin', u'UserName': u'admin_user', u'Password': u'TestPwd123', u'RoleId': u'Administrator', u'Locked': False, u'Enabled': True}</msg>
<status status="PASS" endtime="20200605 09:51:20.767" starttime="20200605 09:51:20.766"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_CREATED}]</arg>
</arguments>
<msg timestamp="20200605 09:51:20.781" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts</msg>
<msg timestamp="20200605 09:51:20.812" level="INFO">Response Time to /redfish/v1/AccountService/Accounts: 0.000527 seconds.</msg>
<status status="PASS" endtime="20200605 09:51:20.812" starttime="20200605 09:51:20.767"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:20.812" starttime="20200605 09:51:20.765"></status>
</kw>
<kw name="Redfish Verify User">
<doc>Redfish user verification.</doc>
<arguments>
<arg>${name}</arg>
<arg>${username}</arg>
<arg>${password}</arg>
<arg>${role_id}</arg>
<arg>${locked}</arg>
<arg>${enabled}</arg>
</arguments>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Redfish.Login</arg>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<assign>
<var>${is_redfish}</var>
</assign>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<arguments>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<msg timestamp="20200605 09:51:20.821" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:51:20.854" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000637 seconds.</msg>
<msg timestamp="20200605 09:51:20.855" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin_user', u'Description': u'User Session', u'@odata.id': u'edfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 2, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:51:20.855" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"edfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin_user","Id":2}</msg>
<status status="PASS" endtime="20200605 09:51:20.855" starttime="20200605 09:51:20.814"></status>
</kw>
<msg timestamp="20200605 09:51:20.855" level="INFO">${is_redfish} = True</msg>
<status status="PASS" endtime="20200605 09:51:20.855" starttime="20200605 09:51:20.813"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${is_redfish}</arg>
<arg>${enabled}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:20.856" starttime="20200605 09:51:20.855"></status>
</kw>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:51:20.862" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:51:20.889" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000616 seconds.</msg>
<msg timestamp="20200605 09:51:20.889" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:51:20.890" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:51:20.890" starttime="20200605 09:51:20.856"></status>
</kw>
<kw name="Get Attribute" library="redfish_utils">
<doc>Get resource attribute.</doc>
<arguments>
<arg>/redfish/v1/AccountService/Accounts/${username}</arg>
<arg>RoleId</arg>
</arguments>
<assign>
<var>${role_config}</var>
</assign>
<msg timestamp="20200605 09:51:20.905" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/admin_user</msg>
<msg timestamp="20200605 09:51:20.932" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/admin_user: 0.000389 seconds.</msg>
<msg timestamp="20200605 09:51:20.933" level="INFO">${role_config} = Administrator</msg>
<status status="PASS" endtime="20200605 09:51:20.933" starttime="20200605 09:51:20.890"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${role_id}</arg>
<arg>${role_config}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:20.933" starttime="20200605 09:51:20.933"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:20.934" starttime="20200605 09:51:20.813"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts/${username}</arg>
</arguments>
<msg timestamp="20200605 09:51:20.948" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/admin_user</msg>
<msg timestamp="20200605 09:51:20.973" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/admin_user: 0.000396 seconds.</msg>
<status status="PASS" endtime="20200605 09:51:20.973" starttime="20200605 09:51:20.934"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:20.974" starttime="20200605 09:51:20.764"></status>
</kw>
<kw name="Redfish Create And Verify User">
<doc>Redfish create and verify user.</doc>
<arguments>
<arg>nameadmin_1</arg>
<arg>admin_user_1</arg>
<arg>TestPwd123</arg>
<arg>ReadOnlyUser</arg>
<arg>${False}</arg>
<arg>${True}</arg>
</arguments>
<kw name="Redfish Create User">
<doc>Redfish create user.</doc>
<arguments>
<arg>${name}</arg>
<arg>${username}</arg>
<arg>${password}</arg>
<arg>${role_id}</arg>
<arg>${locked}</arg>
<arg>${enabled}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Name=${name}</arg>
<arg>UserName=${username}</arg>
<arg>Password=${password}</arg>
<arg>RoleId=${role_id}</arg>
<arg>Locked=${locked}</arg>
<arg>Enabled=${enabled}</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:51:20.976" level="INFO">${payload} = {u'Name': u'nameadmin_1', u'UserName': u'admin_user_1', u'Password': u'TestPwd123', u'RoleId': u'ReadOnlyUser', u'Locked': False, u'Enabled': True}</msg>
<status status="PASS" endtime="20200605 09:51:20.976" starttime="20200605 09:51:20.975"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_CREATED}]</arg>
</arguments>
<msg timestamp="20200605 09:51:20.991" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts</msg>
<msg timestamp="20200605 09:51:21.023" level="INFO">Response Time to /redfish/v1/AccountService/Accounts: 0.000574 seconds.</msg>
<status status="PASS" endtime="20200605 09:51:21.023" starttime="20200605 09:51:20.976"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:21.024" starttime="20200605 09:51:20.974"></status>
</kw>
<kw name="Redfish Verify User">
<doc>Redfish user verification.</doc>
<arguments>
<arg>${name}</arg>
<arg>${username}</arg>
<arg>${password}</arg>
<arg>${role_id}</arg>
<arg>${locked}</arg>
<arg>${enabled}</arg>
</arguments>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Redfish.Login</arg>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<assign>
<var>${is_redfish}</var>
</assign>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<arguments>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<msg timestamp="20200605 09:51:21.032" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:51:21.062" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.00061 seconds.</msg>
<msg timestamp="20200605 09:51:21.063" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin_user_1', u'Description': u'User Session', u'@odata.id': u'dfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 3, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:51:21.063" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"dfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin_user_1","Id":3}</msg>
<status status="PASS" endtime="20200605 09:51:21.063" starttime="20200605 09:51:21.025"></status>
</kw>
<msg timestamp="20200605 09:51:21.063" level="INFO">${is_redfish} = True</msg>
<status status="PASS" endtime="20200605 09:51:21.063" starttime="20200605 09:51:21.024"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${is_redfish}</arg>
<arg>${enabled}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:21.064" starttime="20200605 09:51:21.064"></status>
</kw>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:51:21.070" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:51:21.101" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000538 seconds.</msg>
<msg timestamp="20200605 09:51:21.101" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:51:21.101" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:51:21.101" starttime="20200605 09:51:21.064"></status>
</kw>
<kw name="Get Attribute" library="redfish_utils">
<doc>Get resource attribute.</doc>
<arguments>
<arg>/redfish/v1/AccountService/Accounts/${username}</arg>
<arg>RoleId</arg>
</arguments>
<assign>
<var>${role_config}</var>
</assign>
<msg timestamp="20200605 09:51:21.115" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/admin_user_1</msg>
<msg timestamp="20200605 09:51:21.141" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/admin_user_1: 0.00035 seconds.</msg>
<msg timestamp="20200605 09:51:21.142" level="INFO">${role_config} = ReadOnlyUser</msg>
<status status="PASS" endtime="20200605 09:51:21.142" starttime="20200605 09:51:21.102"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${role_id}</arg>
<arg>${role_config}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:21.143" starttime="20200605 09:51:21.142"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:21.143" starttime="20200605 09:51:21.024"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts/${username}</arg>
</arguments>
<msg timestamp="20200605 09:51:21.156" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/admin_user_1</msg>
<msg timestamp="20200605 09:51:21.183" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/admin_user_1: 0.00034 seconds.</msg>
<status status="PASS" endtime="20200605 09:51:21.183" starttime="20200605 09:51:21.143"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:21.183" starttime="20200605 09:51:20.974"></status>
</kw>
<kw name="Redfish Create And Verify User">
<doc>Redfish create and verify user.</doc>
<arguments>
<arg>nameopt_1</arg>
<arg>operator_user_2</arg>
<arg>TestPwd123</arg>
<arg>Operator</arg>
<arg>${False}</arg>
<arg>${True}</arg>
</arguments>
<kw name="Redfish Create User">
<doc>Redfish create user.</doc>
<arguments>
<arg>${name}</arg>
<arg>${username}</arg>
<arg>${password}</arg>
<arg>${role_id}</arg>
<arg>${locked}</arg>
<arg>${enabled}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Name=${name}</arg>
<arg>UserName=${username}</arg>
<arg>Password=${password}</arg>
<arg>RoleId=${role_id}</arg>
<arg>Locked=${locked}</arg>
<arg>Enabled=${enabled}</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:51:21.185" level="INFO">${payload} = {u'Name': u'nameopt_1', u'UserName': u'operator_user_2', u'Password': u'TestPwd123', u'RoleId': u'Operator', u'Locked': False, u'Enabled': True}</msg>
<status status="PASS" endtime="20200605 09:51:21.185" starttime="20200605 09:51:21.185"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_CREATED}]</arg>
</arguments>
<msg timestamp="20200605 09:51:21.199" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts</msg>
<msg timestamp="20200605 09:51:21.235" level="INFO">Response Time to /redfish/v1/AccountService/Accounts: 0.000485 seconds.</msg>
<status status="PASS" endtime="20200605 09:51:21.236" starttime="20200605 09:51:21.185"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:21.236" starttime="20200605 09:51:21.184"></status>
</kw>
<kw name="Redfish Verify User">
<doc>Redfish user verification.</doc>
<arguments>
<arg>${name}</arg>
<arg>${username}</arg>
<arg>${password}</arg>
<arg>${role_id}</arg>
<arg>${locked}</arg>
<arg>${enabled}</arg>
</arguments>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Redfish.Login</arg>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<assign>
<var>${is_redfish}</var>
</assign>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<arguments>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<msg timestamp="20200605 09:51:21.244" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:51:21.275" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.00053 seconds.</msg>
<msg timestamp="20200605 09:51:21.275" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'operator_user_2', u'Description': u'User Session', u'@odata.id': u'fish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 4, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:51:21.275" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"fish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"operator_user_2","Id":4}</msg>
<status status="PASS" endtime="20200605 09:51:21.275" starttime="20200605 09:51:21.237"></status>
</kw>
<msg timestamp="20200605 09:51:21.275" level="INFO">${is_redfish} = True</msg>
<status status="PASS" endtime="20200605 09:51:21.275" starttime="20200605 09:51:21.237"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${is_redfish}</arg>
<arg>${enabled}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:21.276" starttime="20200605 09:51:21.276"></status>
</kw>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:51:21.281" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:51:21.308" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.00048 seconds.</msg>
<msg timestamp="20200605 09:51:21.308" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:51:21.308" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:51:21.308" starttime="20200605 09:51:21.276"></status>
</kw>
<kw name="Get Attribute" library="redfish_utils">
<doc>Get resource attribute.</doc>
<arguments>
<arg>/redfish/v1/AccountService/Accounts/${username}</arg>
<arg>RoleId</arg>
</arguments>
<assign>
<var>${role_config}</var>
</assign>
<msg timestamp="20200605 09:51:21.320" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/operator_user_2</msg>
<msg timestamp="20200605 09:51:21.344" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/operator_user_2: 0.000325 seconds.</msg>
<msg timestamp="20200605 09:51:21.345" level="INFO">${role_config} = Operator</msg>
<status status="PASS" endtime="20200605 09:51:21.345" starttime="20200605 09:51:21.308"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${role_id}</arg>
<arg>${role_config}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:21.346" starttime="20200605 09:51:21.345"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:21.346" starttime="20200605 09:51:21.236"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts/${username}</arg>
</arguments>
<msg timestamp="20200605 09:51:21.358" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/operator_user_2</msg>
<msg timestamp="20200605 09:51:21.383" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/operator_user_2: 0.000334 seconds.</msg>
<status status="PASS" endtime="20200605 09:51:21.384" starttime="20200605 09:51:21.346"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:21.384" starttime="20200605 09:51:21.184"></status>
</kw>
<doc>Create Redfish users with various roles.</doc>
<tags>
<tag>Redfish_Create_and_Verify_Users</tag>
</tags>
<status status="PASS" endtime="20200605 09:51:21.384" critical="yes" starttime="20200605 09:51:20.763"></status>
</test>
<test id="s1-s2-s1-t4" name="Verify Redfish User with Wrong Password">
<kw name="Verify Redfish User with Wrong Password">
<doc>Verify Redfish User with Wrong Password.</doc>
<arguments>
<arg>nameadmin</arg>
<arg>admin_user_3</arg>
<arg>TestPwd123</arg>
<arg>Administrator</arg>
<arg>${False}</arg>
<arg>${True}</arg>
<arg>aa</arg>
</arguments>
<kw name="Redfish Create User">
<doc>Redfish create user.</doc>
<arguments>
<arg>${name}</arg>
<arg>${username}</arg>
<arg>${password}</arg>
<arg>${role_id}</arg>
<arg>${locked}</arg>
<arg>${enabled}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Name=${name}</arg>
<arg>UserName=${username}</arg>
<arg>Password=${password}</arg>
<arg>RoleId=${role_id}</arg>
<arg>Locked=${locked}</arg>
<arg>Enabled=${enabled}</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:51:21.389" level="INFO">${payload} = {u'Name': u'nameadmin', u'UserName': u'admin_user_3', u'Password': u'TestPwd123', u'RoleId': u'Administrator', u'Locked': False, u'Enabled': True}</msg>
<status status="PASS" endtime="20200605 09:51:21.389" starttime="20200605 09:51:21.388"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_CREATED}]</arg>
</arguments>
<msg timestamp="20200605 09:51:21.401" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts</msg>
<msg timestamp="20200605 09:51:21.437" level="INFO">Response Time to /redfish/v1/AccountService/Accounts: 0.000465 seconds.</msg>
<status status="PASS" endtime="20200605 09:51:21.438" starttime="20200605 09:51:21.389"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:21.438" starttime="20200605 09:51:21.387"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>*</arg>
<arg>Redfish.Login</arg>
<arg>${username}</arg>
<arg>${wrong_password}</arg>
</arguments>
<assign>
<var>${msg}</var>
</assign>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<arguments>
<arg>${username}</arg>
<arg>${wrong_password}</arg>
</arguments>
<msg timestamp="20200605 09:51:21.444" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:51:21.478" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000419 seconds.</msg>
<msg timestamp="20200605 09:51:21.493" level="FAIL">ValueError: No JSON object could be decoded</msg>
<status status="FAIL" endtime="20200605 09:51:21.493" starttime="20200605 09:51:21.439"></status>
</kw>
<msg timestamp="20200605 09:51:21.494" level="INFO">${msg} = ValueError: No JSON object could be decoded</msg>
<status status="PASS" endtime="20200605 09:51:21.494" starttime="20200605 09:51:21.438"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts/${username}</arg>
</arguments>
<msg timestamp="20200605 09:51:21.506" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/admin_user_3</msg>
<msg timestamp="20200605 09:51:21.533" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/admin_user_3: 0.000384 seconds.</msg>
<status status="PASS" endtime="20200605 09:51:21.534" starttime="20200605 09:51:21.494"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:21.534" starttime="20200605 09:51:21.386"></status>
</kw>
<kw name="Verify Redfish User with Wrong Password">
<doc>Verify Redfish User with Wrong Password.</doc>
<arguments>
<arg>nameadmin_1</arg>
<arg>admin_user_4</arg>
<arg>TestPwd123</arg>
<arg>ReadOnlyUser</arg>
<arg>${False}</arg>
<arg>${True}</arg>
<arg>bb</arg>
</arguments>
<kw name="Redfish Create User">
<doc>Redfish create user.</doc>
<arguments>
<arg>${name}</arg>
<arg>${username}</arg>
<arg>${password}</arg>
<arg>${role_id}</arg>
<arg>${locked}</arg>
<arg>${enabled}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Name=${name}</arg>
<arg>UserName=${username}</arg>
<arg>Password=${password}</arg>
<arg>RoleId=${role_id}</arg>
<arg>Locked=${locked}</arg>
<arg>Enabled=${enabled}</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:51:21.536" level="INFO">${payload} = {u'Name': u'nameadmin_1', u'UserName': u'admin_user_4', u'Password': u'TestPwd123', u'RoleId': u'ReadOnlyUser', u'Locked': False, u'Enabled': True}</msg>
<status status="PASS" endtime="20200605 09:51:21.536" starttime="20200605 09:51:21.535"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_CREATED}]</arg>
</arguments>
<msg timestamp="20200605 09:51:21.554" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts</msg>
<msg timestamp="20200605 09:51:21.591" level="INFO">Response Time to /redfish/v1/AccountService/Accounts: 0.000456 seconds.</msg>
<status status="PASS" endtime="20200605 09:51:21.591" starttime="20200605 09:51:21.537"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:21.592" starttime="20200605 09:51:21.535"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>*</arg>
<arg>Redfish.Login</arg>
<arg>${username}</arg>
<arg>${wrong_password}</arg>
</arguments>
<assign>
<var>${msg}</var>
</assign>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<arguments>
<arg>${username}</arg>
<arg>${wrong_password}</arg>
</arguments>
<msg timestamp="20200605 09:51:21.598" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:51:21.633" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000354 seconds.</msg>
<msg timestamp="20200605 09:51:21.633" level="FAIL">ValueError: No JSON object could be decoded</msg>
<status status="FAIL" endtime="20200605 09:51:21.633" starttime="20200605 09:51:21.592"></status>
</kw>
<msg timestamp="20200605 09:51:21.634" level="INFO">${msg} = ValueError: No JSON object could be decoded</msg>
<status status="PASS" endtime="20200605 09:51:21.634" starttime="20200605 09:51:21.592"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts/${username}</arg>
</arguments>
<msg timestamp="20200605 09:51:21.645" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/admin_user_4</msg>
<msg timestamp="20200605 09:51:21.672" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/admin_user_4: 0.000313 seconds.</msg>
<status status="PASS" endtime="20200605 09:51:21.673" starttime="20200605 09:51:21.634"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:21.673" starttime="20200605 09:51:21.534"></status>
</kw>
<kw name="Verify Redfish User with Wrong Password">
<doc>Verify Redfish User with Wrong Password.</doc>
<arguments>
<arg>nameopt_1</arg>
<arg>operator_user_5</arg>
<arg>TestPwd123</arg>
<arg>Operator</arg>
<arg>${False}</arg>
<arg>${True}</arg>
<arg>cc</arg>
</arguments>
<kw name="Redfish Create User">
<doc>Redfish create user.</doc>
<arguments>
<arg>${name}</arg>
<arg>${username}</arg>
<arg>${password}</arg>
<arg>${role_id}</arg>
<arg>${locked}</arg>
<arg>${enabled}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Name=${name}</arg>
<arg>UserName=${username}</arg>
<arg>Password=${password}</arg>
<arg>RoleId=${role_id}</arg>
<arg>Locked=${locked}</arg>
<arg>Enabled=${enabled}</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:51:21.675" level="INFO">${payload} = {u'Name': u'nameopt_1', u'UserName': u'operator_user_5', u'Password': u'TestPwd123', u'RoleId': u'Operator', u'Locked': False, u'Enabled': True}</msg>
<status status="PASS" endtime="20200605 09:51:21.675" starttime="20200605 09:51:21.674"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_CREATED}]</arg>
</arguments>
<msg timestamp="20200605 09:51:21.686" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts</msg>
<msg timestamp="20200605 09:51:21.722" level="INFO">Response Time to /redfish/v1/AccountService/Accounts: 0.000473 seconds.</msg>
<status status="PASS" endtime="20200605 09:51:21.722" starttime="20200605 09:51:21.675"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:21.723" starttime="20200605 09:51:21.674"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>*</arg>
<arg>Redfish.Login</arg>
<arg>${username}</arg>
<arg>${wrong_password}</arg>
</arguments>
<assign>
<var>${msg}</var>
</assign>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<arguments>
<arg>${username}</arg>
<arg>${wrong_password}</arg>
</arguments>
<msg timestamp="20200605 09:51:21.729" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:51:21.761" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000405 seconds.</msg>
<msg timestamp="20200605 09:51:21.761" level="FAIL">ValueError: No JSON object could be decoded</msg>
<status status="FAIL" endtime="20200605 09:51:21.761" starttime="20200605 09:51:21.723"></status>
</kw>
<msg timestamp="20200605 09:51:21.762" level="INFO">${msg} = ValueError: No JSON object could be decoded</msg>
<status status="PASS" endtime="20200605 09:51:21.762" starttime="20200605 09:51:21.723"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts/${username}</arg>
</arguments>
<msg timestamp="20200605 09:51:21.775" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/operator_user_5</msg>
<msg timestamp="20200605 09:51:21.800" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/operator_user_5: 0.000376 seconds.</msg>
<status status="PASS" endtime="20200605 09:51:21.800" starttime="20200605 09:51:21.762"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:21.800" starttime="20200605 09:51:21.673"></status>
</kw>
<doc>Verify Redfish User with Wrong Password.</doc>
<tags>
<tag>Verify_Redfish_User_with_Wrong_Password</tag>
</tags>
<status status="PASS" endtime="20200605 09:51:21.800" critical="yes" starttime="20200605 09:51:21.385"></status>
</test>
<test id="s1-s2-s1-t5" name="Verify Login with Deleted Redfish Users">
<kw name="Verify Login with Deleted Redfish User">
<doc>Verify Login with Deleted Redfish User.</doc>
<arguments>
<arg>nameadmin</arg>
<arg>admin_user_6</arg>
<arg>TestPwd123</arg>
<arg>Administrator</arg>
<arg>${False}</arg>
<arg>${True}</arg>
<arg>aa</arg>
</arguments>
<kw name="Redfish Create User">
<doc>Redfish create user.</doc>
<arguments>
<arg>${name}</arg>
<arg>${username}</arg>
<arg>${password}</arg>
<arg>${role_id}</arg>
<arg>${locked}</arg>
<arg>${enabled}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Name=${name}</arg>
<arg>UserName=${username}</arg>
<arg>Password=${password}</arg>
<arg>RoleId=${role_id}</arg>
<arg>Locked=${locked}</arg>
<arg>Enabled=${enabled}</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:51:21.804" level="INFO">${payload} = {u'Name': u'nameadmin', u'UserName': u'admin_user_6', u'Password': u'TestPwd123', u'RoleId': u'Administrator', u'Locked': False, u'Enabled': True}</msg>
<status status="PASS" endtime="20200605 09:51:21.804" starttime="20200605 09:51:21.803"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_CREATED}]</arg>
</arguments>
<msg timestamp="20200605 09:51:21.818" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts</msg>
<msg timestamp="20200605 09:51:21.853" level="INFO">Response Time to /redfish/v1/AccountService/Accounts: 0.000434 seconds.</msg>
<status status="PASS" endtime="20200605 09:51:21.853" starttime="20200605 09:51:21.804"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:21.853" starttime="20200605 09:51:21.803"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts/${username}</arg>
</arguments>
<msg timestamp="20200605 09:51:21.865" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/admin_user_6</msg>
<msg timestamp="20200605 09:51:21.892" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/admin_user_6: 0.000326 seconds.</msg>
<status status="PASS" endtime="20200605 09:51:21.892" starttime="20200605 09:51:21.853"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Redfish.Login</arg>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<assign>
<var>${is_redfish}</var>
</assign>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<arguments>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<msg timestamp="20200605 09:51:21.898" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:51:21.922" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000296 seconds.</msg>
<msg timestamp="20200605 09:51:21.922" level="INFO">{u'error': {u'@Message.ExtendedInfo': [{u'@odata.type': u'/redfish/v1/$metadata#Message.v1_0_0.Message', u'Message': u"Account 'admin_user_6' not found.", u'Resolution': u'Place a valid resource at the URI or correct the URI and resubmit the request.', u'Severity': u'Critical', u'MessageId': u'Base.1.0.ResourceMissingAtURI'}], u'message': u'The resource at the URI /redfish/v1/SessionService/Sessions was not found.', u'code': u'Base.1.0.ResourceMissingAtURI'}}</msg>
<msg timestamp="20200605 09:51:21.923" level="INFO">Login returned code 404: {"error":{"code":"Base.1.0.ResourceMissingAtURI","message":"The resource at the URI /redfish/v1/SessionService/Sessions was not found.","@Message.ExtendedInfo":[{"@odata.type":"/redfish/v1/$metadata#Message.v1_0_0.Message","MessageId":"Base.1.0.ResourceMissingAtURI","Message":"Account 'admin_user_6' not found.","Resolution":"Place a valid resource at the URI or correct the URI and resubmit the request.","Severity":"Critical"}]}}</msg>
<msg timestamp="20200605 09:51:21.923" level="FAIL">InvalidCredentialsError: 0</msg>
<status status="FAIL" endtime="20200605 09:51:21.923" starttime="20200605 09:51:21.893"></status>
</kw>
<msg timestamp="20200605 09:51:21.923" level="INFO">${is_redfish} = False</msg>
<status status="PASS" endtime="20200605 09:51:21.923" starttime="20200605 09:51:21.893"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${is_redfish}</arg>
<arg>${False}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:21.923" starttime="20200605 09:51:21.923"></status>
</kw>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:51:21.928" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:51:21.957" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000514 seconds.</msg>
<msg timestamp="20200605 09:51:21.957" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:51:21.957" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:51:21.958" starttime="20200605 09:51:21.924"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:21.958" starttime="20200605 09:51:21.802"></status>
</kw>
<kw name="Verify Login with Deleted Redfish User">
<doc>Verify Login with Deleted Redfish User.</doc>
<arguments>
<arg>nameadmin_1</arg>
<arg>admin_user_7</arg>
<arg>TestPwd123</arg>
<arg>ReadOnlyUser</arg>
<arg>${False}</arg>
<arg>${True}</arg>
<arg>dd</arg>
</arguments>
<kw name="Redfish Create User">
<doc>Redfish create user.</doc>
<arguments>
<arg>${name}</arg>
<arg>${username}</arg>
<arg>${password}</arg>
<arg>${role_id}</arg>
<arg>${locked}</arg>
<arg>${enabled}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Name=${name}</arg>
<arg>UserName=${username}</arg>
<arg>Password=${password}</arg>
<arg>RoleId=${role_id}</arg>
<arg>Locked=${locked}</arg>
<arg>Enabled=${enabled}</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:51:21.959" level="INFO">${payload} = {u'Name': u'nameadmin_1', u'UserName': u'admin_user_7', u'Password': u'TestPwd123', u'RoleId': u'ReadOnlyUser', u'Locked': False, u'Enabled': True}</msg>
<status status="PASS" endtime="20200605 09:51:21.959" starttime="20200605 09:51:21.959"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_CREATED}]</arg>
</arguments>
<msg timestamp="20200605 09:51:21.970" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts</msg>
<msg timestamp="20200605 09:51:22.002" level="INFO">Response Time to /redfish/v1/AccountService/Accounts: 0.000371 seconds.</msg>
<status status="PASS" endtime="20200605 09:51:22.002" starttime="20200605 09:51:21.960"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:22.002" starttime="20200605 09:51:21.958"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts/${username}</arg>
</arguments>
<msg timestamp="20200605 09:51:22.013" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/admin_user_7</msg>
<msg timestamp="20200605 09:51:22.037" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/admin_user_7: 0.00034 seconds.</msg>
<status status="PASS" endtime="20200605 09:51:22.037" starttime="20200605 09:51:22.002"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Redfish.Login</arg>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<assign>
<var>${is_redfish}</var>
</assign>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<arguments>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<msg timestamp="20200605 09:51:22.043" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:51:22.068" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000448 seconds.</msg>
<msg timestamp="20200605 09:51:22.069" level="INFO">{u'error': {u'@Message.ExtendedInfo': [{u'@odata.type': u'/redfish/v1/$metadata#Message.v1_0_0.Message', u'Message': u"Account 'admin_user_7' not found.", u'Resolution': u'Place a valid resource at the URI or correct the URI and resubmit the request.', u'Severity': u'Critical', u'MessageId': u'Base.1.0.ResourceMissingAtURI'}], u'message': u'The resource at the URI /redfish/v1/SessionService/Sessions was not found.', u'code': u'Base.1.0.ResourceMissingAtURI'}}</msg>
<msg timestamp="20200605 09:51:22.069" level="INFO">Login returned code 404: {"error":{"code":"Base.1.0.ResourceMissingAtURI","message":"The resource at the URI /redfish/v1/SessionService/Sessions was not found.","@Message.ExtendedInfo":[{"@odata.type":"/redfish/v1/$metadata#Message.v1_0_0.Message","MessageId":"Base.1.0.ResourceMissingAtURI","Message":"Account 'admin_user_7' not found.","Resolution":"Place a valid resource at the URI or correct the URI and resubmit the request.","Severity":"Critical"}]}}</msg>
<msg timestamp="20200605 09:51:22.069" level="FAIL">InvalidCredentialsError: 0</msg>
<status status="FAIL" endtime="20200605 09:51:22.069" starttime="20200605 09:51:22.038"></status>
</kw>
<msg timestamp="20200605 09:51:22.069" level="INFO">${is_redfish} = False</msg>
<status status="PASS" endtime="20200605 09:51:22.069" starttime="20200605 09:51:22.038"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${is_redfish}</arg>
<arg>${False}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:22.070" starttime="20200605 09:51:22.070"></status>
</kw>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:51:22.077" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:51:22.104" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000697 seconds.</msg>
<msg timestamp="20200605 09:51:22.105" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:51:22.105" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:51:22.105" starttime="20200605 09:51:22.070"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:22.105" starttime="20200605 09:51:21.958"></status>
</kw>
<kw name="Verify Login with Deleted Redfish User">
<doc>Verify Login with Deleted Redfish User.</doc>
<arguments>
<arg>nameopt_1</arg>
<arg>operator_user_8</arg>
<arg>TestPwd123</arg>
<arg>Operator</arg>
<arg>${False}</arg>
<arg>${True}</arg>
<arg>ee</arg>
</arguments>
<kw name="Redfish Create User">
<doc>Redfish create user.</doc>
<arguments>
<arg>${name}</arg>
<arg>${username}</arg>
<arg>${password}</arg>
<arg>${role_id}</arg>
<arg>${locked}</arg>
<arg>${enabled}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Name=${name}</arg>
<arg>UserName=${username}</arg>
<arg>Password=${password}</arg>
<arg>RoleId=${role_id}</arg>
<arg>Locked=${locked}</arg>
<arg>Enabled=${enabled}</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:51:22.108" level="INFO">${payload} = {u'Name': u'nameopt_1', u'UserName': u'operator_user_8', u'Password': u'TestPwd123', u'RoleId': u'Operator', u'Locked': False, u'Enabled': True}</msg>
<status status="PASS" endtime="20200605 09:51:22.108" starttime="20200605 09:51:22.107"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_CREATED}]</arg>
</arguments>
<msg timestamp="20200605 09:51:22.124" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts</msg>
<msg timestamp="20200605 09:51:22.157" level="INFO">Response Time to /redfish/v1/AccountService/Accounts: 0.000447 seconds.</msg>
<status status="PASS" endtime="20200605 09:51:22.157" starttime="20200605 09:51:22.108"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:22.158" starttime="20200605 09:51:22.106"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts/${username}</arg>
</arguments>
<msg timestamp="20200605 09:51:22.170" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/operator_user_8</msg>
<msg timestamp="20200605 09:51:22.194" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/operator_user_8: 0.000336 seconds.</msg>
<status status="PASS" endtime="20200605 09:51:22.194" starttime="20200605 09:51:22.158"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Redfish.Login</arg>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<assign>
<var>${is_redfish}</var>
</assign>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<arguments>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<msg timestamp="20200605 09:51:22.201" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:51:22.225" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000407 seconds.</msg>
<msg timestamp="20200605 09:51:22.226" level="INFO">{u'error': {u'@Message.ExtendedInfo': [{u'@odata.type': u'/redfish/v1/$metadata#Message.v1_0_0.Message', u'Message': u"Account 'operator_user_8' not found.", u'Resolution': u'Place a valid resource at the URI or correct the URI and resubmit the request.', u'Severity': u'Critical', u'MessageId': u'Base.1.0.ResourceMissingAtURI'}], u'message': u'The resource at the URI /redfish/v1/SessionService/Sessions was not found.', u'code': u'Base.1.0.ResourceMissingAtURI'}}</msg>
<msg timestamp="20200605 09:51:22.226" level="INFO">Login returned code 404: {"error":{"code":"Base.1.0.ResourceMissingAtURI","message":"The resource at the URI /redfish/v1/SessionService/Sessions was not found.","@Message.ExtendedInfo":[{"@odata.type":"/redfish/v1/$metadata#Message.v1_0_0.Message","MessageId":"Base.1.0.ResourceMissingAtURI","Message":"Account 'operator_user_8' not found.","Resolution":"Place a valid resource at the URI or correct the URI and resubmit the request.","Severity":"Critical"}]}}</msg>
<msg timestamp="20200605 09:51:22.226" level="FAIL">InvalidCredentialsError: 0</msg>
<status status="FAIL" endtime="20200605 09:51:22.226" starttime="20200605 09:51:22.195"></status>
</kw>
<msg timestamp="20200605 09:51:22.226" level="INFO">${is_redfish} = False</msg>
<status status="PASS" endtime="20200605 09:51:22.226" starttime="20200605 09:51:22.195"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${is_redfish}</arg>
<arg>${False}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:22.227" starttime="20200605 09:51:22.227"></status>
</kw>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:51:22.233" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:51:22.262" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000521 seconds.</msg>
<msg timestamp="20200605 09:51:22.263" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:51:22.263" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:51:22.263" starttime="20200605 09:51:22.227"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:22.263" starttime="20200605 09:51:22.105"></status>
</kw>
<doc>Verify login with deleted Redfish Users.</doc>
<tags>
<tag>Verify_Login_with_Deleted_Redfish_Users</tag>
</tags>
<status status="PASS" endtime="20200605 09:51:22.263" critical="yes" starttime="20200605 09:51:21.801"></status>
</test>
<test id="s1-s2-s1-t6" name="Verify User Creation Without Enabling it">
<kw name="Redfish Create And Verify User">
<doc>Redfish create and verify user.</doc>
<arguments>
<arg>nameadmin</arg>
<arg>admin_user_9</arg>
<arg>TestPwd123</arg>
<arg>Administrator</arg>
<arg>${False}</arg>
<arg>${False}</arg>
</arguments>
<kw name="Redfish Create User">
<doc>Redfish create user.</doc>
<arguments>
<arg>${name}</arg>
<arg>${username}</arg>
<arg>${password}</arg>
<arg>${role_id}</arg>
<arg>${locked}</arg>
<arg>${enabled}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Name=${name}</arg>
<arg>UserName=${username}</arg>
<arg>Password=${password}</arg>
<arg>RoleId=${role_id}</arg>
<arg>Locked=${locked}</arg>
<arg>Enabled=${enabled}</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:51:22.268" level="INFO">${payload} = {u'Name': u'nameadmin', u'UserName': u'admin_user_9', u'Password': u'TestPwd123', u'RoleId': u'Administrator', u'Locked': False, u'Enabled': False}</msg>
<status status="PASS" endtime="20200605 09:51:22.268" starttime="20200605 09:51:22.268"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_CREATED}]</arg>
</arguments>
<msg timestamp="20200605 09:51:22.283" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts</msg>
<msg timestamp="20200605 09:51:22.315" level="INFO">Response Time to /redfish/v1/AccountService/Accounts: 0.000443 seconds.</msg>
<status status="PASS" endtime="20200605 09:51:22.316" starttime="20200605 09:51:22.269"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:22.316" starttime="20200605 09:51:22.266"></status>
</kw>
<kw name="Redfish Verify User">
<doc>Redfish user verification.</doc>
<arguments>
<arg>${name}</arg>
<arg>${username}</arg>
<arg>${password}</arg>
<arg>${role_id}</arg>
<arg>${locked}</arg>
<arg>${enabled}</arg>
</arguments>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Redfish.Login</arg>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<assign>
<var>${is_redfish}</var>
</assign>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<arguments>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<msg timestamp="20200605 09:51:22.323" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:51:22.347" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000338 seconds.</msg>
<msg timestamp="20200605 09:51:22.347" level="FAIL">ValueError: No JSON object could be decoded</msg>
<status status="FAIL" endtime="20200605 09:51:22.347" starttime="20200605 09:51:22.317"></status>
</kw>
<msg timestamp="20200605 09:51:22.348" level="INFO">${is_redfish} = False</msg>
<status status="PASS" endtime="20200605 09:51:22.348" starttime="20200605 09:51:22.317"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${is_redfish}</arg>
<arg>${enabled}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:22.348" starttime="20200605 09:51:22.348"></status>
</kw>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:51:22.353" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:51:22.383" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000467 seconds.</msg>
<msg timestamp="20200605 09:51:22.384" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:51:22.384" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:51:22.384" starttime="20200605 09:51:22.348"></status>
</kw>
<kw name="Get Attribute" library="redfish_utils">
<doc>Get resource attribute.</doc>
<arguments>
<arg>/redfish/v1/AccountService/Accounts/${username}</arg>
<arg>RoleId</arg>
</arguments>
<assign>
<var>${role_config}</var>
</assign>
<msg timestamp="20200605 09:51:22.398" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/admin_user_9</msg>
<msg timestamp="20200605 09:51:22.423" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/admin_user_9: 0.000309 seconds.</msg>
<msg timestamp="20200605 09:51:22.423" level="INFO">${role_config} = Administrator</msg>
<status status="PASS" endtime="20200605 09:51:22.423" starttime="20200605 09:51:22.384"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${role_id}</arg>
<arg>${role_config}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:22.424" starttime="20200605 09:51:22.424"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:22.424" starttime="20200605 09:51:22.316"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts/${username}</arg>
</arguments>
<msg timestamp="20200605 09:51:22.436" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/admin_user_9</msg>
<msg timestamp="20200605 09:51:22.461" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/admin_user_9: 0.000308 seconds.</msg>
<status status="PASS" endtime="20200605 09:51:22.461" starttime="20200605 09:51:22.424"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:22.462" starttime="20200605 09:51:22.265"></status>
</kw>
<kw name="Redfish Create And Verify User">
<doc>Redfish create and verify user.</doc>
<arguments>
<arg>nameadmin_1</arg>
<arg>admin_user_10</arg>
<arg>TestPwd123</arg>
<arg>ReadOnlyUser</arg>
<arg>${False}</arg>
<arg>${False}</arg>
</arguments>
<kw name="Redfish Create User">
<doc>Redfish create user.</doc>
<arguments>
<arg>${name}</arg>
<arg>${username}</arg>
<arg>${password}</arg>
<arg>${role_id}</arg>
<arg>${locked}</arg>
<arg>${enabled}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Name=${name}</arg>
<arg>UserName=${username}</arg>
<arg>Password=${password}</arg>
<arg>RoleId=${role_id}</arg>
<arg>Locked=${locked}</arg>
<arg>Enabled=${enabled}</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:51:22.464" level="INFO">${payload} = {u'Name': u'nameadmin_1', u'UserName': u'admin_user_10', u'Password': u'TestPwd123', u'RoleId': u'ReadOnlyUser', u'Locked': False, u'Enabled': False}</msg>
<status status="PASS" endtime="20200605 09:51:22.464" starttime="20200605 09:51:22.463"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_CREATED}]</arg>
</arguments>
<msg timestamp="20200605 09:51:22.477" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts</msg>
<msg timestamp="20200605 09:51:22.511" level="INFO">Response Time to /redfish/v1/AccountService/Accounts: 0.000442 seconds.</msg>
<status status="PASS" endtime="20200605 09:51:22.511" starttime="20200605 09:51:22.464"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:22.511" starttime="20200605 09:51:22.462"></status>
</kw>
<kw name="Redfish Verify User">
<doc>Redfish user verification.</doc>
<arguments>
<arg>${name}</arg>
<arg>${username}</arg>
<arg>${password}</arg>
<arg>${role_id}</arg>
<arg>${locked}</arg>
<arg>${enabled}</arg>
</arguments>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Redfish.Login</arg>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<assign>
<var>${is_redfish}</var>
</assign>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<arguments>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<msg timestamp="20200605 09:51:22.518" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:51:22.542" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000358 seconds.</msg>
<msg timestamp="20200605 09:51:22.542" level="FAIL">ValueError: No JSON object could be decoded</msg>
<status status="FAIL" endtime="20200605 09:51:22.543" starttime="20200605 09:51:22.512"></status>
</kw>
<msg timestamp="20200605 09:51:22.543" level="INFO">${is_redfish} = False</msg>
<status status="PASS" endtime="20200605 09:51:22.543" starttime="20200605 09:51:22.512"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${is_redfish}</arg>
<arg>${enabled}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:22.543" starttime="20200605 09:51:22.543"></status>
</kw>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:51:22.549" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:51:22.579" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000504 seconds.</msg>
<msg timestamp="20200605 09:51:22.579" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:51:22.580" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:51:22.580" starttime="20200605 09:51:22.543"></status>
</kw>
<kw name="Get Attribute" library="redfish_utils">
<doc>Get resource attribute.</doc>
<arguments>
<arg>/redfish/v1/AccountService/Accounts/${username}</arg>
<arg>RoleId</arg>
</arguments>
<assign>
<var>${role_config}</var>
</assign>
<msg timestamp="20200605 09:51:22.594" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/admin_user_10</msg>
<msg timestamp="20200605 09:51:22.619" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/admin_user_10: 0.000389 seconds.</msg>
<msg timestamp="20200605 09:51:22.619" level="INFO">${role_config} = ReadOnlyUser</msg>
<status status="PASS" endtime="20200605 09:51:22.619" starttime="20200605 09:51:22.580"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${role_id}</arg>
<arg>${role_config}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:22.620" starttime="20200605 09:51:22.620"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:22.620" starttime="20200605 09:51:22.511"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts/${username}</arg>
</arguments>
<msg timestamp="20200605 09:51:22.635" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/admin_user_10</msg>
<msg timestamp="20200605 09:51:22.660" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/admin_user_10: 0.000379 seconds.</msg>
<status status="PASS" endtime="20200605 09:51:22.660" starttime="20200605 09:51:22.620"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:22.660" starttime="20200605 09:51:22.462"></status>
</kw>
<kw name="Redfish Create And Verify User">
<doc>Redfish create and verify user.</doc>
<arguments>
<arg>nameopt_1</arg>
<arg>operator_user_11</arg>
<arg>TestPwd123</arg>
<arg>Operator</arg>
<arg>${False}</arg>
<arg>${False}</arg>
</arguments>
<kw name="Redfish Create User">
<doc>Redfish create user.</doc>
<arguments>
<arg>${name}</arg>
<arg>${username}</arg>
<arg>${password}</arg>
<arg>${role_id}</arg>
<arg>${locked}</arg>
<arg>${enabled}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Name=${name}</arg>
<arg>UserName=${username}</arg>
<arg>Password=${password}</arg>
<arg>RoleId=${role_id}</arg>
<arg>Locked=${locked}</arg>
<arg>Enabled=${enabled}</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:51:22.663" level="INFO">${payload} = {u'Name': u'nameopt_1', u'UserName': u'operator_user_11', u'Password': u'TestPwd123', u'RoleId': u'Operator', u'Locked': False, u'Enabled': False}</msg>
<status status="PASS" endtime="20200605 09:51:22.663" starttime="20200605 09:51:22.662"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_CREATED}]</arg>
</arguments>
<msg timestamp="20200605 09:51:22.678" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts</msg>
<msg timestamp="20200605 09:51:22.711" level="INFO">Response Time to /redfish/v1/AccountService/Accounts: 0.000534 seconds.</msg>
<status status="PASS" endtime="20200605 09:51:22.712" starttime="20200605 09:51:22.663"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:22.712" starttime="20200605 09:51:22.661"></status>
</kw>
<kw name="Redfish Verify User">
<doc>Redfish user verification.</doc>
<arguments>
<arg>${name}</arg>
<arg>${username}</arg>
<arg>${password}</arg>
<arg>${role_id}</arg>
<arg>${locked}</arg>
<arg>${enabled}</arg>
</arguments>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Redfish.Login</arg>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<assign>
<var>${is_redfish}</var>
</assign>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<arguments>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<msg timestamp="20200605 09:51:22.720" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:51:22.744" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000393 seconds.</msg>
<msg timestamp="20200605 09:51:22.745" level="FAIL">ValueError: No JSON object could be decoded</msg>
<status status="FAIL" endtime="20200605 09:51:22.745" starttime="20200605 09:51:22.713"></status>
</kw>
<msg timestamp="20200605 09:51:22.745" level="INFO">${is_redfish} = False</msg>
<status status="PASS" endtime="20200605 09:51:22.745" starttime="20200605 09:51:22.713"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${is_redfish}</arg>
<arg>${enabled}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:22.746" starttime="20200605 09:51:22.745"></status>
</kw>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:51:22.752" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:51:22.779" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000578 seconds.</msg>
<msg timestamp="20200605 09:51:22.780" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:51:22.780" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:51:22.780" starttime="20200605 09:51:22.746"></status>
</kw>
<kw name="Get Attribute" library="redfish_utils">
<doc>Get resource attribute.</doc>
<arguments>
<arg>/redfish/v1/AccountService/Accounts/${username}</arg>
<arg>RoleId</arg>
</arguments>
<assign>
<var>${role_config}</var>
</assign>
<msg timestamp="20200605 09:51:22.796" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/operator_user_11</msg>
<msg timestamp="20200605 09:51:22.820" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/operator_user_11: 0.00039 seconds.</msg>
<msg timestamp="20200605 09:51:22.820" level="INFO">${role_config} = Operator</msg>
<status status="PASS" endtime="20200605 09:51:22.820" starttime="20200605 09:51:22.780"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${role_id}</arg>
<arg>${role_config}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:22.821" starttime="20200605 09:51:22.821"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:22.821" starttime="20200605 09:51:22.712"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts/${username}</arg>
</arguments>
<msg timestamp="20200605 09:51:22.835" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/operator_user_11</msg>
<msg timestamp="20200605 09:51:22.860" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/operator_user_11: 0.000363 seconds.</msg>
<status status="PASS" endtime="20200605 09:51:22.860" starttime="20200605 09:51:22.821"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:22.860" starttime="20200605 09:51:22.661"></status>
</kw>
<doc>Verify User Creation Without Enabling it.</doc>
<tags>
<tag>Verify_User_Creation_Without_Enabling_it</tag>
</tags>
<status status="PASS" endtime="20200605 09:51:22.860" critical="yes" starttime="20200605 09:51:22.264"></status>
</test>
<test id="s1-s2-s1-t7" name="Verify User Creation With locking it">
<kw name="Redfish Create And Verify User With Locked">
<doc>Redfish create and verify user with locked.</doc>
<arguments>
<arg>nameadmin</arg>
<arg>admin_user_15</arg>
<arg>TestPwd123</arg>
<arg>Administrator</arg>
<arg>${True}</arg>
<arg>${True}</arg>
</arguments>
<kw name="Redfish Create User">
<doc>Redfish create user.</doc>
<arguments>
<arg>${name}</arg>
<arg>${username}</arg>
<arg>${password}</arg>
<arg>${role_id}</arg>
<arg>${locked}</arg>
<arg>${enabled}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Name=${name}</arg>
<arg>UserName=${username}</arg>
<arg>Password=${password}</arg>
<arg>RoleId=${role_id}</arg>
<arg>Locked=${locked}</arg>
<arg>Enabled=${enabled}</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:51:22.864" level="INFO">${payload} = {u'Name': u'nameadmin', u'UserName': u'admin_user_15', u'Password': u'TestPwd123', u'RoleId': u'Administrator', u'Locked': True, u'Enabled': True}</msg>
<status status="PASS" endtime="20200605 09:51:22.864" starttime="20200605 09:51:22.864"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_CREATED}]</arg>
</arguments>
<msg timestamp="20200605 09:51:22.880" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts</msg>
<msg timestamp="20200605 09:51:22.912" level="INFO">Response Time to /redfish/v1/AccountService/Accounts: 0.000554 seconds.</msg>
<status status="PASS" endtime="20200605 09:51:22.912" starttime="20200605 09:51:22.865"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:22.912" starttime="20200605 09:51:22.863"></status>
</kw>
<kw name="Redfish Verify User With Locked">
<doc>Redfish user verification with locked.</doc>
<arguments>
<arg>${name}</arg>
<arg>${username}</arg>
<arg>${password}</arg>
<arg>${role_id}</arg>
<arg>${locked}</arg>
<arg>${enabled}</arg>
</arguments>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Redfish.Login</arg>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<assign>
<var>${is_redfish}</var>
</assign>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<arguments>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<msg timestamp="20200605 09:51:22.920" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:51:22.947" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000395 seconds.</msg>
<msg timestamp="20200605 09:51:22.947" level="FAIL">ValueError: No JSON object could be decoded</msg>
<status status="FAIL" endtime="20200605 09:51:22.948" starttime="20200605 09:51:22.913"></status>
</kw>
<msg timestamp="20200605 09:51:22.948" level="INFO">${is_redfish} = False</msg>
<status status="PASS" endtime="20200605 09:51:22.948" starttime="20200605 09:51:22.913"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${is_redfish}</arg>
<arg>${False}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:22.948" starttime="20200605 09:51:22.948"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:22.948" starttime="20200605 09:51:22.912"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts/${username}</arg>
</arguments>
<msg timestamp="20200605 09:51:22.962" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/admin_user_15</msg>
<msg timestamp="20200605 09:51:22.987" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/admin_user_15: 0.000372 seconds.</msg>
<status status="PASS" endtime="20200605 09:51:22.987" starttime="20200605 09:51:22.949"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:22.987" starttime="20200605 09:51:22.862"></status>
</kw>
<kw name="Redfish Create And Verify User With Locked">
<doc>Redfish create and verify user with locked.</doc>
<arguments>
<arg>nameadmin_1</arg>
<arg>admin_user_16</arg>
<arg>TestPwd123</arg>
<arg>ReadOnlyUser</arg>
<arg>${True}</arg>
<arg>${True}</arg>
</arguments>
<kw name="Redfish Create User">
<doc>Redfish create user.</doc>
<arguments>
<arg>${name}</arg>
<arg>${username}</arg>
<arg>${password}</arg>
<arg>${role_id}</arg>
<arg>${locked}</arg>
<arg>${enabled}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Name=${name}</arg>
<arg>UserName=${username}</arg>
<arg>Password=${password}</arg>
<arg>RoleId=${role_id}</arg>
<arg>Locked=${locked}</arg>
<arg>Enabled=${enabled}</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:51:22.990" level="INFO">${payload} = {u'Name': u'nameadmin_1', u'UserName': u'admin_user_16', u'Password': u'TestPwd123', u'RoleId': u'ReadOnlyUser', u'Locked': True, u'Enabled': True}</msg>
<status status="PASS" endtime="20200605 09:51:22.990" starttime="20200605 09:51:22.989"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_CREATED}]</arg>
</arguments>
<msg timestamp="20200605 09:51:23.005" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts</msg>
<msg timestamp="20200605 09:51:23.037" level="INFO">Response Time to /redfish/v1/AccountService/Accounts: 0.000524 seconds.</msg>
<status status="PASS" endtime="20200605 09:51:23.038" starttime="20200605 09:51:22.990"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:23.038" starttime="20200605 09:51:22.988"></status>
</kw>
<kw name="Redfish Verify User With Locked">
<doc>Redfish user verification with locked.</doc>
<arguments>
<arg>${name}</arg>
<arg>${username}</arg>
<arg>${password}</arg>
<arg>${role_id}</arg>
<arg>${locked}</arg>
<arg>${enabled}</arg>
</arguments>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Redfish.Login</arg>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<assign>
<var>${is_redfish}</var>
</assign>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<arguments>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<msg timestamp="20200605 09:51:23.046" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:51:23.070" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000373 seconds.</msg>
<msg timestamp="20200605 09:51:23.070" level="FAIL">ValueError: No JSON object could be decoded</msg>
<status status="FAIL" endtime="20200605 09:51:23.071" starttime="20200605 09:51:23.039"></status>
</kw>
<msg timestamp="20200605 09:51:23.071" level="INFO">${is_redfish} = False</msg>
<status status="PASS" endtime="20200605 09:51:23.071" starttime="20200605 09:51:23.039"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${is_redfish}</arg>
<arg>${False}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:23.071" starttime="20200605 09:51:23.071"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:23.071" starttime="20200605 09:51:23.038"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts/${username}</arg>
</arguments>
<msg timestamp="20200605 09:51:23.084" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/admin_user_16</msg>
<msg timestamp="20200605 09:51:23.108" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/admin_user_16: 0.00033 seconds.</msg>
<status status="PASS" endtime="20200605 09:51:23.109" starttime="20200605 09:51:23.072"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:23.109" starttime="20200605 09:51:22.987"></status>
</kw>
<kw name="Redfish Create And Verify User With Locked">
<doc>Redfish create and verify user with locked.</doc>
<arguments>
<arg>nameopt_1</arg>
<arg>operator_user_17</arg>
<arg>TestPwd123</arg>
<arg>Operator</arg>
<arg>${True}</arg>
<arg>${True}</arg>
</arguments>
<kw name="Redfish Create User">
<doc>Redfish create user.</doc>
<arguments>
<arg>${name}</arg>
<arg>${username}</arg>
<arg>${password}</arg>
<arg>${role_id}</arg>
<arg>${locked}</arg>
<arg>${enabled}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Name=${name}</arg>
<arg>UserName=${username}</arg>
<arg>Password=${password}</arg>
<arg>RoleId=${role_id}</arg>
<arg>Locked=${locked}</arg>
<arg>Enabled=${enabled}</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:51:23.111" level="INFO">${payload} = {u'Name': u'nameopt_1', u'UserName': u'operator_user_17', u'Password': u'TestPwd123', u'RoleId': u'Operator', u'Locked': True, u'Enabled': True}</msg>
<status status="PASS" endtime="20200605 09:51:23.111" starttime="20200605 09:51:23.110"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_CREATED}]</arg>
</arguments>
<msg timestamp="20200605 09:51:23.124" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts</msg>
<msg timestamp="20200605 09:51:23.155" level="INFO">Response Time to /redfish/v1/AccountService/Accounts: 0.000464 seconds.</msg>
<status status="PASS" endtime="20200605 09:51:23.156" starttime="20200605 09:51:23.111"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:23.156" starttime="20200605 09:51:23.110"></status>
</kw>
<kw name="Redfish Verify User With Locked">
<doc>Redfish user verification with locked.</doc>
<arguments>
<arg>${name}</arg>
<arg>${username}</arg>
<arg>${password}</arg>
<arg>${role_id}</arg>
<arg>${locked}</arg>
<arg>${enabled}</arg>
</arguments>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Redfish.Login</arg>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<assign>
<var>${is_redfish}</var>
</assign>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<arguments>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<msg timestamp="20200605 09:51:23.163" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:51:23.189" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000363 seconds.</msg>
<msg timestamp="20200605 09:51:23.190" level="FAIL">ValueError: No JSON object could be decoded</msg>
<status status="FAIL" endtime="20200605 09:51:23.190" starttime="20200605 09:51:23.157"></status>
</kw>
<msg timestamp="20200605 09:51:23.190" level="INFO">${is_redfish} = False</msg>
<status status="PASS" endtime="20200605 09:51:23.190" starttime="20200605 09:51:23.157"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${is_redfish}</arg>
<arg>${False}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:23.191" starttime="20200605 09:51:23.190"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:23.191" starttime="20200605 09:51:23.156"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts/${username}</arg>
</arguments>
<msg timestamp="20200605 09:51:23.203" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/operator_user_17</msg>
<msg timestamp="20200605 09:51:23.227" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/operator_user_17: 0.000309 seconds.</msg>
<status status="PASS" endtime="20200605 09:51:23.228" starttime="20200605 09:51:23.191"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:23.228" starttime="20200605 09:51:23.109"></status>
</kw>
<doc>Verify User Creation With locking it.</doc>
<tags>
<tag>Verify_User_Creation_With_locking_it</tag>
</tags>
<status status="PASS" endtime="20200605 09:51:23.228" critical="yes" starttime="20200605 09:51:22.861"></status>
</test>
<test id="s1-s2-s1-t8" name="Verify Create and Patch parameters">
<kw name="Redfish Create And Patch Parameters">
<doc>Redfish create and verify user.</doc>
<arguments>
<arg>nameadmin</arg>
<arg>admin_user</arg>
<arg>TestPwd123</arg>
<arg>Administrator</arg>
<arg>${False}</arg>
<arg>${True}</arg>
</arguments>
<kw name="Redfish Create User">
<doc>Redfish create user.</doc>
<arguments>
<arg>${name}</arg>
<arg>${username}</arg>
<arg>${password}</arg>
<arg>${role_id}</arg>
<arg>${locked}</arg>
<arg>${enabled}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Name=${name}</arg>
<arg>UserName=${username}</arg>
<arg>Password=${password}</arg>
<arg>RoleId=${role_id}</arg>
<arg>Locked=${locked}</arg>
<arg>Enabled=${enabled}</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:51:23.231" level="INFO">${payload} = {u'Name': u'nameadmin', u'UserName': u'admin_user', u'Password': u'TestPwd123', u'RoleId': u'Administrator', u'Locked': False, u'Enabled': True}</msg>
<status status="PASS" endtime="20200605 09:51:23.231" starttime="20200605 09:51:23.230"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_CREATED}]</arg>
</arguments>
<msg timestamp="20200605 09:51:23.244" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts</msg>
<msg timestamp="20200605 09:51:23.276" level="INFO">Response Time to /redfish/v1/AccountService/Accounts: 0.000507 seconds.</msg>
<status status="PASS" endtime="20200605 09:51:23.276" starttime="20200605 09:51:23.231"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:23.276" starttime="20200605 09:51:23.230"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Name=TESTNAME</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:51:23.277" level="INFO">${payload} = {u'Name': u'TESTNAME'}</msg>
<status status="PASS" endtime="20200605 09:51:23.277" starttime="20200605 09:51:23.277"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts/${username}</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_OK}]</arg>
</arguments>
<msg timestamp="20200605 09:51:23.289" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/admin_user</msg>
<msg timestamp="20200605 09:51:23.312" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/admin_user: 0.000319 seconds.</msg>
<status status="PASS" endtime="20200605 09:51:23.313" starttime="20200605 09:51:23.277"></status>
</kw>
<kw name="Get Attribute" library="redfish_utils">
<doc>Get resource attribute.</doc>
<arguments>
<arg>/redfish/v1/AccountService/Accounts/${username}</arg>
<arg>Name</arg>
</arguments>
<assign>
<var>${MO_NAME}</var>
</assign>
<msg timestamp="20200605 09:51:23.324" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/admin_user</msg>
<msg timestamp="20200605 09:51:23.349" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/admin_user: 0.000375 seconds.</msg>
<msg timestamp="20200605 09:51:23.350" level="INFO">${MO_NAME} = TESTNAME</msg>
<status status="PASS" endtime="20200605 09:51:23.350" starttime="20200605 09:51:23.313"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${MO_NAME}</arg>
<arg>TESTNAME</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:23.350" starttime="20200605 09:51:23.350"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>UserName=TESTUSERNAME</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:51:23.351" level="INFO">${payload} = {u'UserName': u'TESTUSERNAME'}</msg>
<status status="PASS" endtime="20200605 09:51:23.351" starttime="20200605 09:51:23.350"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts/${username}</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_OK}]</arg>
</arguments>
<msg timestamp="20200605 09:51:23.363" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/admin_user</msg>
<msg timestamp="20200605 09:51:23.386" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/admin_user: 0.000359 seconds.</msg>
<status status="PASS" endtime="20200605 09:51:23.387" starttime="20200605 09:51:23.351"></status>
</kw>
<kw name="Get Attribute" library="redfish_utils">
<doc>Get resource attribute.</doc>
<arguments>
<arg>/redfish/v1/AccountService/Accounts/TESTUSERNAME</arg>
<arg>UserName</arg>
</arguments>
<assign>
<var>${MO_USERNAME}</var>
</assign>
<msg timestamp="20200605 09:51:23.399" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/TESTUSERNAME</msg>
<msg timestamp="20200605 09:51:23.423" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/TESTUSERNAME: 0.000331 seconds.</msg>
<msg timestamp="20200605 09:51:23.424" level="INFO">${MO_USERNAME} = TESTUSERNAME</msg>
<status status="PASS" endtime="20200605 09:51:23.424" starttime="20200605 09:51:23.387"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${MO_USERNAME}</arg>
<arg>TESTUSERNAME</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:23.424" starttime="20200605 09:51:23.424"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>RoleId=ReadOnlyUser</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:51:23.425" level="INFO">${payload} = {u'RoleId': u'ReadOnlyUser'}</msg>
<status status="PASS" endtime="20200605 09:51:23.425" starttime="20200605 09:51:23.424"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts/TESTUSERNAME</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_OK}]</arg>
</arguments>
<msg timestamp="20200605 09:51:23.437" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/TESTUSERNAME</msg>
<msg timestamp="20200605 09:51:23.462" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/TESTUSERNAME: 0.000336 seconds.</msg>
<status status="PASS" endtime="20200605 09:51:23.463" starttime="20200605 09:51:23.425"></status>
</kw>
<kw name="Get Attribute" library="redfish_utils">
<doc>Get resource attribute.</doc>
<arguments>
<arg>/redfish/v1/AccountService/Accounts/TESTUSERNAME</arg>
<arg>RoleId</arg>
</arguments>
<assign>
<var>${MO_ROLEID}</var>
</assign>
<msg timestamp="20200605 09:51:23.476" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/TESTUSERNAME</msg>
<msg timestamp="20200605 09:51:23.501" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/TESTUSERNAME: 0.000388 seconds.</msg>
<msg timestamp="20200605 09:51:23.501" level="INFO">${MO_ROLEID} = ReadOnlyUser</msg>
<status status="PASS" endtime="20200605 09:51:23.502" starttime="20200605 09:51:23.463"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${MO_RoleId}</arg>
<arg>ReadOnlyUser</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:23.502" starttime="20200605 09:51:23.502"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>RoleId=Operator</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:51:23.503" level="INFO">${payload} = {u'RoleId': u'Operator'}</msg>
<status status="PASS" endtime="20200605 09:51:23.503" starttime="20200605 09:51:23.502"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts/TESTUSERNAME</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_OK}]</arg>
</arguments>
<msg timestamp="20200605 09:51:23.517" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/TESTUSERNAME</msg>
<msg timestamp="20200605 09:51:23.543" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/TESTUSERNAME: 0.000701 seconds.</msg>
<status status="PASS" endtime="20200605 09:51:23.544" starttime="20200605 09:51:23.503"></status>
</kw>
<kw name="Get Attribute" library="redfish_utils">
<doc>Get resource attribute.</doc>
<arguments>
<arg>/redfish/v1/AccountService/Accounts/TESTUSERNAME</arg>
<arg>RoleId</arg>
</arguments>
<assign>
<var>${MO_ROLEID}</var>
</assign>
<msg timestamp="20200605 09:51:23.558" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/TESTUSERNAME</msg>
<msg timestamp="20200605 09:51:23.582" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/TESTUSERNAME: 0.000343 seconds.</msg>
<msg timestamp="20200605 09:51:23.583" level="INFO">${MO_ROLEID} = Operator</msg>
<status status="PASS" endtime="20200605 09:51:23.583" starttime="20200605 09:51:23.544"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${MO_RoleId}</arg>
<arg>Operator</arg>
</arguments>
<status status="PASS" endtime="20200605 09:51:23.583" starttime="20200605 09:51:23.583"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Name=${name}</arg>
<arg>UserName=${username}</arg>
<arg>Password=${password}</arg>
<arg>RoleId=${role_id}</arg>
<arg>Locked=${locked}</arg>
<arg>Enabled=${enabled}</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:51:23.584" level="INFO">${payload} = {u'Name': u'nameadmin', u'UserName': u'admin_user', u'Password': u'TestPwd123', u'RoleId': u'Administrator', u'Locked': False, u'Enabled': True}</msg>
<status status="PASS" endtime="20200605 09:51:23.584" starttime="20200605 09:51:23.584"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts/TESTUSERNAME</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_OK}]</arg>
</arguments>
<msg timestamp="20200605 09:51:23.602" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/TESTUSERNAME</msg>
<msg timestamp="20200605 09:51:23.634" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/TESTUSERNAME: 0.000348 seconds.</msg>
<status status="PASS" endtime="20200605 09:51:23.634" starttime="20200605 09:51:23.584"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts/${username}</arg>
</arguments>
<msg timestamp="20200605 09:51:23.645" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/admin_user</msg>
<msg timestamp="20200605 09:51:23.674" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/admin_user: 0.000323 seconds.</msg>
<status status="PASS" endtime="20200605 09:51:23.674" starttime="20200605 09:51:23.635"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:23.674" starttime="20200605 09:51:23.229"></status>
</kw>
<doc>Create Redfish users with various roles.</doc>
<tags>
<tag>Redfish_Create_and_Verify_Users</tag>
</tags>
<status status="PASS" endtime="20200605 09:51:23.675" critical="yes" starttime="20200605 09:51:23.228"></status>
</test>
<test id="s1-s2-s1-t9" name="Verify Redfish User Persistence After Reboot">
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<arguments>
<arg>${UserName}</arg>
<arg>${Pwd}</arg>
</arguments>
<msg timestamp="20200605 09:51:23.681" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:51:23.710" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000516 seconds.</msg>
<msg timestamp="20200605 09:51:23.710" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:51:23.711" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:51:23.711" starttime="20200605 09:51:23.676"></status>
</kw>
<kw name="Redfish Create User">
<doc>Redfish create user.</doc>
<arguments>
<arg>newname_1</arg>
<arg>admin_user_12</arg>
<arg>TestPwd123</arg>
<arg>Administrator</arg>
<arg>${False}</arg>
<arg>${True}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Name=${name}</arg>
<arg>UserName=${username}</arg>
<arg>Password=${password}</arg>
<arg>RoleId=${role_id}</arg>
<arg>Locked=${locked}</arg>
<arg>Enabled=${enabled}</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:51:23.712" level="INFO">${payload} = {u'Name': u'newname_1', u'UserName': u'admin_user_12', u'Password': u'TestPwd123', u'RoleId': u'Administrator', u'Locked': False, u'Enabled': True}</msg>
<status status="PASS" endtime="20200605 09:51:23.712" starttime="20200605 09:51:23.711"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_CREATED}]</arg>
</arguments>
<msg timestamp="20200605 09:51:23.725" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts</msg>
<msg timestamp="20200605 09:51:23.757" level="INFO">Response Time to /redfish/v1/AccountService/Accounts: 0.000486 seconds.</msg>
<status status="PASS" endtime="20200605 09:51:23.758" starttime="20200605 09:51:23.712"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:23.758" starttime="20200605 09:51:23.711"></status>
</kw>
<kw name="Redfish Create User">
<doc>Redfish create user.</doc>
<arguments>
<arg>newname_2</arg>
<arg>admin_user_13</arg>
<arg>TestPwd123</arg>
<arg>ReadOnlyUser</arg>
<arg>${False}</arg>
<arg>${True}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Name=${name}</arg>
<arg>UserName=${username}</arg>
<arg>Password=${password}</arg>
<arg>RoleId=${role_id}</arg>
<arg>Locked=${locked}</arg>
<arg>Enabled=${enabled}</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:51:23.760" level="INFO">${payload} = {u'Name': u'newname_2', u'UserName': u'admin_user_13', u'Password': u'TestPwd123', u'RoleId': u'ReadOnlyUser', u'Locked': False, u'Enabled': True}</msg>
<status status="PASS" endtime="20200605 09:51:23.760" starttime="20200605 09:51:23.759"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_CREATED}]</arg>
</arguments>
<msg timestamp="20200605 09:51:23.773" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts</msg>
<msg timestamp="20200605 09:51:23.808" level="INFO">Response Time to /redfish/v1/AccountService/Accounts: 0.00043 seconds.</msg>
<status status="PASS" endtime="20200605 09:51:23.808" starttime="20200605 09:51:23.760"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:23.809" starttime="20200605 09:51:23.758"></status>
</kw>
<kw name="Redfish Create User">
<doc>Redfish create user.</doc>
<arguments>
<arg>newname_3</arg>
<arg>operator_user_14</arg>
<arg>TestPwd123</arg>
<arg>Operator</arg>
<arg>${False}</arg>
<arg>${True}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Name=${name}</arg>
<arg>UserName=${username}</arg>
<arg>Password=${password}</arg>
<arg>RoleId=${role_id}</arg>
<arg>Locked=${locked}</arg>
<arg>Enabled=${enabled}</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:51:23.810" level="INFO">${payload} = {u'Name': u'newname_3', u'UserName': u'operator_user_14', u'Password': u'TestPwd123', u'RoleId': u'Operator', u'Locked': False, u'Enabled': True}</msg>
<status status="PASS" endtime="20200605 09:51:23.810" starttime="20200605 09:51:23.809"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_CREATED}]</arg>
</arguments>
<msg timestamp="20200605 09:51:23.822" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts</msg>
<msg timestamp="20200605 09:51:23.853" level="INFO">Response Time to /redfish/v1/AccountService/Accounts: 0.000393 seconds.</msg>
<status status="PASS" endtime="20200605 09:51:23.853" starttime="20200605 09:51:23.810"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:23.853" starttime="20200605 09:51:23.809"></status>
</kw>
<kw name="Redfish GracefulRestart">
<doc>Redfish GracefulRestart</doc>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>ResetType=GracefulRestart</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:51:23.854" level="INFO">${payload} = {u'ResetType': u'GracefulRestart'}</msg>
<status status="PASS" endtime="20200605 09:51:23.854" starttime="20200605 09:51:23.854"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Systems/1/Actions/ComputerSystem.Reset</arg>
<arg>body=&amp;{payload}</arg>
</arguments>
<msg timestamp="20200605 09:51:23.865" level="INFO">Attempt 1 of /redfish/v1/Systems/1/Actions/ComputerSystem.Reset</msg>
<msg timestamp="20200605 09:51:23.888" level="INFO">Response Time to /redfish/v1/Systems/1/Actions/ComputerSystem.Reset: 0.000335 seconds.</msg>
<status status="PASS" endtime="20200605 09:51:23.889" starttime="20200605 09:51:23.854"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
<arg>valid_status_codes=[${HTTP_OK}]</arg>
</arguments>
<msg timestamp="20200605 09:51:24.890" level="INFO">Slept 1 second</msg>
<msg timestamp="20200605 09:51:24.890" level="INFO">valid_status_codes=[200]</msg>
<status status="PASS" endtime="20200605 09:51:24.890" starttime="20200605 09:51:23.889"></status>
</kw>
<status status="PASS" endtime="20200605 09:51:24.890" starttime="20200605 09:51:23.854"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>180s</arg>
</arguments>
<msg timestamp="20200605 09:54:24.891" level="INFO">Slept 3 minutes</msg>
<status status="PASS" endtime="20200605 09:54:24.891" starttime="20200605 09:51:24.890"></status>
</kw>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<arguments>
<arg>${UserName}</arg>
<arg>${Pwd}</arg>
</arguments>
<msg timestamp="20200605 09:54:24.895" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:54:24.921" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.00047 seconds.</msg>
<msg timestamp="20200605 09:54:24.922" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:54:24.922" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:54:24.922" starttime="20200605 09:54:24.891"></status>
</kw>
<kw name="Redfish Verify User">
<doc>Redfish user verification.</doc>
<arguments>
<arg>newname_1</arg>
<arg>admin_user_12</arg>
<arg>TestPwd123</arg>
<arg>Administrator</arg>
<arg>${False}</arg>
<arg>${True}</arg>
</arguments>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Redfish.Login</arg>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<assign>
<var>${is_redfish}</var>
</assign>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<arguments>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<msg timestamp="20200605 09:54:24.928" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:54:24.963" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000538 seconds.</msg>
<msg timestamp="20200605 09:54:24.963" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin_user_12', u'Description': u'User Session', u'@odata.id': u'edfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 2, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:54:24.963" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"edfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin_user_12","Id":2}</msg>
<status status="PASS" endtime="20200605 09:54:24.964" starttime="20200605 09:54:24.923"></status>
</kw>
<msg timestamp="20200605 09:54:24.964" level="INFO">${is_redfish} = True</msg>
<status status="PASS" endtime="20200605 09:54:24.964" starttime="20200605 09:54:24.923"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${is_redfish}</arg>
<arg>${enabled}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:54:24.964" starttime="20200605 09:54:24.964"></status>
</kw>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:54:24.969" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:54:24.998" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000766 seconds.</msg>
<msg timestamp="20200605 09:54:24.999" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:54:24.999" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:54:24.999" starttime="20200605 09:54:24.964"></status>
</kw>
<kw name="Get Attribute" library="redfish_utils">
<doc>Get resource attribute.</doc>
<arguments>
<arg>/redfish/v1/AccountService/Accounts/${username}</arg>
<arg>RoleId</arg>
</arguments>
<assign>
<var>${role_config}</var>
</assign>
<msg timestamp="20200605 09:54:25.014" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/admin_user_12</msg>
<msg timestamp="20200605 09:54:25.039" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/admin_user_12: 0.000366 seconds.</msg>
<msg timestamp="20200605 09:54:25.040" level="INFO">${role_config} = Administrator</msg>
<status status="PASS" endtime="20200605 09:54:25.040" starttime="20200605 09:54:24.999"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${role_id}</arg>
<arg>${role_config}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:54:25.041" starttime="20200605 09:54:25.040"></status>
</kw>
<status status="PASS" endtime="20200605 09:54:25.041" starttime="20200605 09:54:24.922"></status>
</kw>
<kw name="Redfish Verify User">
<doc>Redfish user verification.</doc>
<arguments>
<arg>newname_2</arg>
<arg>admin_user_13</arg>
<arg>TestPwd123</arg>
<arg>ReadOnlyUser</arg>
<arg>${False}</arg>
<arg>${True}</arg>
</arguments>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Redfish.Login</arg>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<assign>
<var>${is_redfish}</var>
</assign>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<arguments>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<msg timestamp="20200605 09:54:25.048" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:54:25.079" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000523 seconds.</msg>
<msg timestamp="20200605 09:54:25.080" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin_user_13', u'Description': u'User Session', u'@odata.id': u'dfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 3, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:54:25.080" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"dfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin_user_13","Id":3}</msg>
<status status="PASS" endtime="20200605 09:54:25.080" starttime="20200605 09:54:25.042"></status>
</kw>
<msg timestamp="20200605 09:54:25.080" level="INFO">${is_redfish} = True</msg>
<status status="PASS" endtime="20200605 09:54:25.080" starttime="20200605 09:54:25.042"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${is_redfish}</arg>
<arg>${enabled}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:54:25.081" starttime="20200605 09:54:25.081"></status>
</kw>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:54:25.086" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:54:25.113" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000457 seconds.</msg>
<msg timestamp="20200605 09:54:25.113" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:54:25.113" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:54:25.113" starttime="20200605 09:54:25.081"></status>
</kw>
<kw name="Get Attribute" library="redfish_utils">
<doc>Get resource attribute.</doc>
<arguments>
<arg>/redfish/v1/AccountService/Accounts/${username}</arg>
<arg>RoleId</arg>
</arguments>
<assign>
<var>${role_config}</var>
</assign>
<msg timestamp="20200605 09:54:25.125" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/admin_user_13</msg>
<msg timestamp="20200605 09:54:25.152" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/admin_user_13: 0.000326 seconds.</msg>
<msg timestamp="20200605 09:54:25.153" level="INFO">${role_config} = ReadOnlyUser</msg>
<status status="PASS" endtime="20200605 09:54:25.153" starttime="20200605 09:54:25.114"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${role_id}</arg>
<arg>${role_config}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:54:25.153" starttime="20200605 09:54:25.153"></status>
</kw>
<status status="PASS" endtime="20200605 09:54:25.153" starttime="20200605 09:54:25.041"></status>
</kw>
<kw name="Redfish Verify User">
<doc>Redfish user verification.</doc>
<arguments>
<arg>newname_3</arg>
<arg>operator_user_14</arg>
<arg>TestPwd123</arg>
<arg>Operator</arg>
<arg>${False}</arg>
<arg>${True}</arg>
</arguments>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Redfish.Login</arg>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<assign>
<var>${is_redfish}</var>
</assign>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<arguments>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<msg timestamp="20200605 09:54:25.159" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:54:25.196" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000525 seconds.</msg>
<msg timestamp="20200605 09:54:25.196" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'operator_user_14', u'Description': u'User Session', u'@odata.id': u'fish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 4, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:54:25.196" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"fish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"operator_user_14","Id":4}</msg>
<status status="PASS" endtime="20200605 09:54:25.196" starttime="20200605 09:54:25.154"></status>
</kw>
<msg timestamp="20200605 09:54:25.196" level="INFO">${is_redfish} = True</msg>
<status status="PASS" endtime="20200605 09:54:25.196" starttime="20200605 09:54:25.154"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${is_redfish}</arg>
<arg>${enabled}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:54:25.197" starttime="20200605 09:54:25.197"></status>
</kw>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:54:25.202" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:54:25.232" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000484999999999 seconds.</msg>
<msg timestamp="20200605 09:54:25.232" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:54:25.232" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:54:25.232" starttime="20200605 09:54:25.197"></status>
</kw>
<kw name="Get Attribute" library="redfish_utils">
<doc>Get resource attribute.</doc>
<arguments>
<arg>/redfish/v1/AccountService/Accounts/${username}</arg>
<arg>RoleId</arg>
</arguments>
<assign>
<var>${role_config}</var>
</assign>
<msg timestamp="20200605 09:54:25.246" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/operator_user_14</msg>
<msg timestamp="20200605 09:54:25.269" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/operator_user_14: 0.000328 seconds.</msg>
<msg timestamp="20200605 09:54:25.270" level="INFO">${role_config} = Operator</msg>
<status status="PASS" endtime="20200605 09:54:25.270" starttime="20200605 09:54:25.233"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${role_id}</arg>
<arg>${role_config}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:54:25.271" starttime="20200605 09:54:25.270"></status>
</kw>
<status status="PASS" endtime="20200605 09:54:25.271" starttime="20200605 09:54:25.153"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts/admin_user_12</arg>
</arguments>
<msg timestamp="20200605 09:54:25.282" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/admin_user_12</msg>
<msg timestamp="20200605 09:54:25.309" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/admin_user_12: 0.000314 seconds.</msg>
<status status="PASS" endtime="20200605 09:54:25.310" starttime="20200605 09:54:25.271"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts/admin_user_13</arg>
</arguments>
<msg timestamp="20200605 09:54:25.321" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/admin_user_13</msg>
<msg timestamp="20200605 09:54:25.346" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/admin_user_13: 0.000351 seconds.</msg>
<status status="PASS" endtime="20200605 09:54:25.347" starttime="20200605 09:54:25.310"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts/operator_user_14</arg>
</arguments>
<msg timestamp="20200605 09:54:25.359" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/operator_user_14</msg>
<msg timestamp="20200605 09:54:25.387" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/operator_user_14: 0.00038 seconds.</msg>
<status status="PASS" endtime="20200605 09:54:25.387" starttime="20200605 09:54:25.347"></status>
</kw>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200605 09:54:25.401" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200605 09:54:25.427" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000379 seconds.</msg>
<msg timestamp="20200605 09:54:25.427" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200605 09:54:25.428" starttime="20200605 09:54:25.387"></status>
</kw>
<doc>Verify Redfish user persistence after reboot.</doc>
<tags>
<tag>Verify_Redfish_User_Persistence_After_Reboot</tag>
</tags>
<status status="PASS" endtime="20200605 09:54:25.428" critical="yes" starttime="20200605 09:51:23.675"></status>
</test>
<test id="s1-s2-s1-t10" name="Verify AccountService_ReadOnlyUser">
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<arguments>
<arg>${UserName}</arg>
<arg>${Pwd}</arg>
</arguments>
<msg timestamp="20200605 09:54:25.435" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:54:25.464" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000631 seconds.</msg>
<msg timestamp="20200605 09:54:25.465" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:54:25.465" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:54:25.465" starttime="20200605 09:54:25.430"></status>
</kw>
<kw name="Redfish Create User">
<doc>Redfish create user.</doc>
<arguments>
<arg>NewName</arg>
<arg>${RO_UserName}</arg>
<arg>${RO_Pwd}</arg>
<arg>${RO_ROLE}</arg>
<arg>${False}</arg>
<arg>${True}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Name=${name}</arg>
<arg>UserName=${username}</arg>
<arg>Password=${password}</arg>
<arg>RoleId=${role_id}</arg>
<arg>Locked=${locked}</arg>
<arg>Enabled=${enabled}</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:54:25.467" level="INFO">${payload} = {u'Name': u'NewName', u'UserName': u'readonly', u'Password': u'readonly', u'RoleId': u'ReadOnlyUser', u'Locked': False, u'Enabled': True}</msg>
<status status="PASS" endtime="20200605 09:54:25.467" starttime="20200605 09:54:25.466"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_CREATED}]</arg>
</arguments>
<msg timestamp="20200605 09:54:25.482" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts</msg>
<msg timestamp="20200605 09:54:25.516" level="INFO">Response Time to /redfish/v1/AccountService/Accounts: 0.000569 seconds.</msg>
<status status="PASS" endtime="20200605 09:54:25.516" starttime="20200605 09:54:25.467"></status>
</kw>
<status status="PASS" endtime="20200605 09:54:25.516" starttime="20200605 09:54:25.466"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200605 09:54:26.517" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200605 09:54:26.517" starttime="20200605 09:54:25.517"></status>
</kw>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200605 09:54:26.529" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200605 09:54:26.555" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000405 seconds.</msg>
<msg timestamp="20200605 09:54:26.556" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200605 09:54:26.556" starttime="20200605 09:54:26.518"></status>
</kw>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<arguments>
<arg>${RO_UserName}</arg>
<arg>${RO_Pwd}</arg>
</arguments>
<msg timestamp="20200605 09:54:26.561" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:54:26.591" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000572 seconds.</msg>
<msg timestamp="20200605 09:54:26.591" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'readonly', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:54:26.591" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"readonly","Id":1}</msg>
<status status="PASS" endtime="20200605 09:54:26.592" starttime="20200605 09:54:26.556"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200605 09:54:27.592" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200605 09:54:27.593" starttime="20200605 09:54:26.592"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:54:27.607" level="INFO">Attempt 1 of /redfish/v1/</msg>
<msg timestamp="20200605 09:54:27.632" level="INFO">Response Time to /redfish/v1/: 0.000406999999999 seconds.</msg>
<msg timestamp="20200605 09:54:27.633" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:54:27 GMT
connection Keep-Alive
content-type application/json
content-length 891


{"@odata.context":"/redfish/v1/$metadata#ServiceRoot.ServiceRoot","@odata.id":"/redfish/...</msg>
<status status="PASS" endtime="20200605 09:54:27.633" starttime="20200605 09:54:27.593"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:54:27.634" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:54:27.634" starttime="20200605 09:54:27.634"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:54:27.649" level="INFO">Attempt 1 of /redfish/</msg>
<msg timestamp="20200605 09:54:27.674" level="INFO">Response Time to /redfish/: 0.000425 seconds.</msg>
<msg timestamp="20200605 09:54:27.675" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:54:27 GMT
connection Keep-Alive
content-type application/json
content-length 20


{"v1":"/redfish/v1"}</msg>
<status status="PASS" endtime="20200605 09:54:27.675" starttime="20200605 09:54:27.634"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:54:27.676" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:54:27.676" starttime="20200605 09:54:27.675"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:54:27.689" level="INFO">Attempt 1 of /</msg>
<msg timestamp="20200605 09:54:27.714" level="INFO">Response Time to /: 0.00039 seconds.</msg>
<msg timestamp="20200605 09:54:27.714" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:54:27 GMT
connection Keep-Alive
content-type application/json
content-length 2


{}</msg>
<status status="PASS" endtime="20200605 09:54:27.714" starttime="20200605 09:54:27.676"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:54:27.715" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:54:27.715" starttime="20200605 09:54:27.715"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:54:27.729" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1</msg>
<msg timestamp="20200605 09:54:27.756" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1: 0.000412 seconds.</msg>
<msg timestamp="20200605 09:54:27.757" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:54:27 GMT
connection Keep-Alive
content-type application/json
content-length 721


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitch.EthernetSwitch","@odata.id":"/re...</msg>
<status status="PASS" endtime="20200605 09:54:27.757" starttime="20200605 09:54:27.716"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:54:27.758" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:54:27.758" starttime="20200605 09:54:27.757"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:54:27.772" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/</msg>
<msg timestamp="20200605 09:54:28.261" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/: 0.000555 seconds.</msg>
<msg timestamp="20200605 09:54:28.262" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:54:28 GMT
connection Keep-Alive
content-type application/json
content-length 4491


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPortCollection.EthernetSwitchPor...</msg>
<status status="PASS" endtime="20200605 09:54:28.262" starttime="20200605 09:54:27.758"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:54:28.263" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:54:28.263" starttime="20200605 09:54:28.262"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/1</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:54:28.277" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200605 09:54:28.334" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000576000000001 seconds.</msg>
<msg timestamp="20200605 09:54:28.335" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:54:28 GMT
connection Keep-Alive
content-type application/json
content-length 2309


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 09:54:28.335" starttime="20200605 09:54:28.263"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:54:28.335" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:54:28.336" starttime="20200605 09:54:28.335"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EventService/</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:54:28.348" level="INFO">Attempt 1 of /redfish/v1/EventService/</msg>
<msg timestamp="20200605 09:54:28.374" level="INFO">Response Time to /redfish/v1/EventService/: 0.000304 seconds.</msg>
<msg timestamp="20200605 09:54:28.374" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:54:28 GMT
connection Keep-Alive
content-type application/json
content-length 560


{"@odata.context":"/redfish/v1/$metadata#EventService.EventService","@odata.id":"/redfis...</msg>
<status status="PASS" endtime="20200605 09:54:28.374" starttime="20200605 09:54:28.336"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:54:28.375" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:54:28.375" starttime="20200605 09:54:28.375"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EventService/Subscriptions</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:54:28.386" level="INFO">Attempt 1 of /redfish/v1/EventService/Subscriptions</msg>
<msg timestamp="20200605 09:54:28.410" level="INFO">Response Time to /redfish/v1/EventService/Subscriptions: 0.000293 seconds.</msg>
<msg timestamp="20200605 09:54:28.410" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:54:28 GMT
connection Keep-Alive
content-type application/json
content-length 319


{"@odata.context":"/redfish/v1/$metadata#EventService.EventService","@odata.id":"/redfis...</msg>
<status status="PASS" endtime="20200605 09:54:28.411" starttime="20200605 09:54:28.375"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:54:28.411" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:54:28.411" starttime="20200605 09:54:28.411"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:54:28.421" level="INFO">Attempt 1 of /redfish/v1/AccountService/</msg>
<msg timestamp="20200605 09:54:28.446" level="INFO">Response Time to /redfish/v1/AccountService/: 0.000347 seconds.</msg>
<msg timestamp="20200605 09:54:28.446" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:54:28 GMT
connection Keep-Alive
content-type application/json
content-length 631


{"@odata.context":"/redfish/v1/$metadata#AccountService.AccountService","@odata.id":"/re...</msg>
<status status="PASS" endtime="20200605 09:54:28.446" starttime="20200605 09:54:28.411"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:54:28.447" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:54:28.447" starttime="20200605 09:54:28.446"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:54:28.459" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts</msg>
<msg timestamp="20200605 09:54:28.487" level="INFO">Response Time to /redfish/v1/AccountService/Accounts: 0.000376999999999 seconds.</msg>
<msg timestamp="20200605 09:54:28.487" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:54:28 GMT
connection Keep-Alive
content-type application/json
content-length 373


{"@odata.context":"/redfish/v1/$metadata#AccountService.AccountService","@odata.id":"/re...</msg>
<status status="PASS" endtime="20200605 09:54:28.487" starttime="20200605 09:54:28.447"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:54:28.488" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:54:28.488" starttime="20200605 09:54:28.488"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Roles</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:54:28.501" level="INFO">Attempt 1 of /redfish/v1/AccountService/Roles</msg>
<msg timestamp="20200605 09:54:28.526" level="INFO">Response Time to /redfish/v1/AccountService/Roles: 0.000391 seconds.</msg>
<msg timestamp="20200605 09:54:28.527" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:54:28 GMT
connection Keep-Alive
content-type application/json
content-length 381


{"@odata.context":"/redfish/v1/$metadata#RoleCollection.RoleCollection","@odata.id":"/re...</msg>
<status status="PASS" endtime="20200605 09:54:28.527" starttime="20200605 09:54:28.488"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:54:28.528" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:54:28.528" starttime="20200605 09:54:28.527"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Roles/1</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:54:28.546" level="INFO">Attempt 1 of /redfish/v1/AccountService/Roles/1</msg>
<msg timestamp="20200605 09:54:28.570" level="INFO">Response Time to /redfish/v1/AccountService/Roles/1: 0.000362 seconds.</msg>
<msg timestamp="20200605 09:54:28.571" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:54:28 GMT
connection Keep-Alive
content-type application/json
content-length 298


{"@odata.context":"/redfish/v1/$metadata#Role.Role","@odata.id":"/redfish/v1/AccountServ...</msg>
<status status="PASS" endtime="20200605 09:54:28.571" starttime="20200605 09:54:28.528"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:54:28.571" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:54:28.572" starttime="20200605 09:54:28.571"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Roles/2</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:54:28.583" level="INFO">Attempt 1 of /redfish/v1/AccountService/Roles/2</msg>
<msg timestamp="20200605 09:54:28.610" level="INFO">Response Time to /redfish/v1/AccountService/Roles/2: 0.000336 seconds.</msg>
<msg timestamp="20200605 09:54:28.611" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:54:28 GMT
connection Keep-Alive
content-type application/json
content-length 262


{"@odata.context":"/redfish/v1/$metadata#Role.Role","@odata.id":"/redfish/v1/AccountServ...</msg>
<status status="PASS" endtime="20200605 09:54:28.611" starttime="20200605 09:54:28.572"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:54:28.612" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:54:28.612" starttime="20200605 09:54:28.611"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Roles/3</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:54:28.623" level="INFO">Attempt 1 of /redfish/v1/AccountService/Roles/3</msg>
<msg timestamp="20200605 09:54:28.647" level="INFO">Response Time to /redfish/v1/AccountService/Roles/3: 0.000274 seconds.</msg>
<msg timestamp="20200605 09:54:28.648" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:54:28 GMT
connection Keep-Alive
content-type application/json
content-length 240


{"@odata.context":"/redfish/v1/$metadata#Role.Role","@odata.id":"/redfish/v1/AccountServ...</msg>
<status status="PASS" endtime="20200605 09:54:28.648" starttime="20200605 09:54:28.612"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:54:28.648" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:54:28.648" starttime="20200605 09:54:28.648"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Registries/</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:54:28.658" level="INFO">Attempt 1 of /redfish/v1/Registries/</msg>
<msg timestamp="20200605 09:54:28.684" level="INFO">Response Time to /redfish/v1/Registries/: 0.000279 seconds.</msg>
<msg timestamp="20200605 09:54:28.685" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:54:28 GMT
connection Keep-Alive
content-type application/json
content-length 427


{"@odata.context":"/redfish/v1/$metadata#MessageRegistryFileCollection.MessageRegistryFi...</msg>
<status status="PASS" endtime="20200605 09:54:28.685" starttime="20200605 09:54:28.649"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:54:28.686" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:54:28.686" starttime="20200605 09:54:28.685"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Registries/1</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:54:28.696" level="INFO">Attempt 1 of /redfish/v1/Registries/1</msg>
<msg timestamp="20200605 09:54:28.720" level="INFO">Response Time to /redfish/v1/Registries/1: 0.000304000000001 seconds.</msg>
<msg timestamp="20200605 09:54:28.721" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:54:28 GMT
connection Keep-Alive
content-type application/json
content-length 464


{"@odata.context":"/redfish/v1/$metadata#MessageRegistryFile.MessageRegistryFile","@odat...</msg>
<status status="PASS" endtime="20200605 09:54:28.721" starttime="20200605 09:54:28.686"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:54:28.721" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:54:28.722" starttime="20200605 09:54:28.721"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Chassis/</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:54:28.732" level="INFO">Attempt 1 of /redfish/v1/Chassis/</msg>
<msg timestamp="20200605 09:54:28.758" level="INFO">Response Time to /redfish/v1/Chassis/: 0.000311 seconds.</msg>
<msg timestamp="20200605 09:54:28.759" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:54:28 GMT
connection Keep-Alive
content-type application/json
content-length 285


{"@odata.context":"/redfish/v1/$metadata#Chassis.Chassis","@odata.id":"/redfish/v1/Chass...</msg>
<status status="PASS" endtime="20200605 09:54:28.759" starttime="20200605 09:54:28.722"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:54:28.760" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:54:28.760" starttime="20200605 09:54:28.759"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Chassis/1</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:54:28.770" level="INFO">Attempt 1 of /redfish/v1/Chassis/1</msg>
<msg timestamp="20200605 09:54:28.795" level="INFO">Response Time to /redfish/v1/Chassis/1: 0.000306 seconds.</msg>
<msg timestamp="20200605 09:54:28.796" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:54:28 GMT
connection Keep-Alive
content-type application/json
content-length 1362


{"@odata.context":"/redfish/v1/$metadata#Chassis.Chassis","@odata.id":"/redfish/v1/Chas...</msg>
<status status="PASS" endtime="20200605 09:54:28.796" starttime="20200605 09:54:28.760"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:54:28.796" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:54:28.796" starttime="20200605 09:54:28.796"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Chassis/1/Thermal</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:54:28.807" level="INFO">Attempt 1 of /redfish/v1/Chassis/1/Thermal</msg>
<msg timestamp="20200605 09:54:28.835" level="INFO">Response Time to /redfish/v1/Chassis/1/Thermal: 0.000334 seconds.</msg>
<msg timestamp="20200605 09:54:28.835" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:54:28 GMT
connection Keep-Alive
content-type application/json
content-length 7564


{"@odata.context":"/redfish/v1/$metadata#Thermal.Thermal","@odata.id":"/redfish/v1/Chas...</msg>
<status status="PASS" endtime="20200605 09:54:28.835" starttime="20200605 09:54:28.796"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:54:28.836" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:54:28.836" starttime="20200605 09:54:28.836"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Chassis/1/Power</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:54:28.847" level="INFO">Attempt 1 of /redfish/v1/Chassis/1/Power</msg>
<msg timestamp="20200605 09:54:28.874" level="INFO">Response Time to /redfish/v1/Chassis/1/Power: 0.000319 seconds.</msg>
<msg timestamp="20200605 09:54:28.874" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:54:29 GMT
connection Keep-Alive
content-type application/json
content-length 2840


{"@odata.context":"/redfish/v1/$metadata#Power.Power","@odata.id":"/redfish/v1/Chassis/...</msg>
<status status="PASS" endtime="20200605 09:54:28.874" starttime="20200605 09:54:28.836"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:54:28.875" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:54:28.875" starttime="20200605 09:54:28.874"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Chassis/1/Drives/1/</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:54:28.886" level="INFO">Attempt 1 of /redfish/v1/Chassis/1/Drives/1/</msg>
<msg timestamp="20200605 09:54:28.912" level="INFO">Response Time to /redfish/v1/Chassis/1/Drives/1/: 0.000355 seconds.</msg>
<msg timestamp="20200605 09:54:28.913" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:54:29 GMT
connection Keep-Alive
content-type application/json
content-length 1140


{"@odata.context":"/redfish/v1/$metadata#Chassis.Chassis","@odata.id":"/redfish/v1/Chas...</msg>
<status status="PASS" endtime="20200605 09:54:28.913" starttime="20200605 09:54:28.875"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:54:28.913" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:54:28.914" starttime="20200605 09:54:28.913"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Managers</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:54:28.926" level="INFO">Attempt 1 of /redfish/v1/Managers</msg>
<msg timestamp="20200605 09:54:28.951" level="INFO">Response Time to /redfish/v1/Managers: 0.000385 seconds.</msg>
<msg timestamp="20200605 09:54:28.952" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:54:29 GMT
connection Keep-Alive
content-type application/json
content-length 308


{"@odata.context":"/redfish/v1/$metadata#ManagerCollection.ManagerCollection","@odata.id...</msg>
<status status="PASS" endtime="20200605 09:54:28.952" starttime="20200605 09:54:28.914"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:54:28.952" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:54:28.953" starttime="20200605 09:54:28.952"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Managers/1</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:54:28.966" level="INFO">Attempt 1 of /redfish/v1/Managers/1</msg>
<msg timestamp="20200605 09:54:28.994" level="INFO">Response Time to /redfish/v1/Managers/1: 0.000408 seconds.</msg>
<msg timestamp="20200605 09:54:28.995" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:54:29 GMT
connection Keep-Alive
content-type application/json
content-length 1241


{"@odata.context":"/redfish/v1/$metadata#Manager.Manager","@odata.id":"/redfish/v1/Mana...</msg>
<status status="PASS" endtime="20200605 09:54:28.995" starttime="20200605 09:54:28.953"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:54:28.995" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:54:28.995" starttime="20200605 09:54:28.995"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Managers/1/EthernetInterfaces</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:54:29.008" level="INFO">Attempt 1 of /redfish/v1/Managers/1/EthernetInterfaces</msg>
<msg timestamp="20200605 09:54:29.035" level="INFO">Response Time to /redfish/v1/Managers/1/EthernetInterfaces: 0.000324 seconds.</msg>
<msg timestamp="20200605 09:54:29.035" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:54:29 GMT
connection Keep-Alive
content-type application/json
content-length 430


{"@odata.context":"/redfish/v1/$metadata#EthernetInterfaceCollection.EthernetInterfaceCo...</msg>
<status status="PASS" endtime="20200605 09:54:29.035" starttime="20200605 09:54:28.996"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:54:29.036" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:54:29.036" starttime="20200605 09:54:29.035"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Managers/1/EthernetInterfaces/1</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:54:29.047" level="INFO">Attempt 1 of /redfish/v1/Managers/1/EthernetInterfaces/1</msg>
<msg timestamp="20200605 09:54:29.178" level="INFO">Response Time to /redfish/v1/Managers/1/EthernetInterfaces/1: 0.000416 seconds.</msg>
<msg timestamp="20200605 09:54:29.179" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:54:29 GMT
connection Keep-Alive
content-type application/json
content-length 1596


{"@odata.context":"/redfish/v1/$metadata#EthernetInterface.EthernetInterface","@odata.i...</msg>
<status status="PASS" endtime="20200605 09:54:29.179" starttime="20200605 09:54:29.036"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:54:29.180" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:54:29.180" starttime="20200605 09:54:29.179"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Managers/1/SerialInterfaces/1</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:54:29.191" level="INFO">Attempt 1 of /redfish/v1/Managers/1/SerialInterfaces/1</msg>
<msg timestamp="20200605 09:54:29.217" level="INFO">Response Time to /redfish/v1/Managers/1/SerialInterfaces/1: 0.000306 seconds.</msg>
<msg timestamp="20200605 09:54:29.218" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:54:29 GMT
connection Keep-Alive
content-type application/json
content-length 451


{"@odata.context":"/redfish/v1/$metadata#SerialInterface.SerialInterface","@odata.id":"/...</msg>
<status status="PASS" endtime="20200605 09:54:29.218" starttime="20200605 09:54:29.180"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:54:29.218" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:54:29.218" starttime="20200605 09:54:29.218"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Systems/1</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:54:29.230" level="INFO">Attempt 1 of /redfish/v1/Systems/1</msg>
<msg timestamp="20200605 09:54:29.270" level="INFO">Response Time to /redfish/v1/Systems/1: 0.000401 seconds.</msg>
<msg timestamp="20200605 09:54:29.270" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:54:29 GMT
connection Keep-Alive
content-type application/json
content-length 1847


{"@odata.context":"/redfish/v1/$metadata#ComputerSystem.ComputerSystem","@odata.id":"/r...</msg>
<status status="PASS" endtime="20200605 09:54:29.270" starttime="20200605 09:54:29.219"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:54:29.271" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:54:29.271" starttime="20200605 09:54:29.271"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Systems/1/Processors</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:54:29.282" level="INFO">Attempt 1 of /redfish/v1/Systems/1/Processors</msg>
<msg timestamp="20200605 09:54:29.308" level="INFO">Response Time to /redfish/v1/Systems/1/Processors: 0.000342000000001 seconds.</msg>
<msg timestamp="20200605 09:54:29.308" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:54:29 GMT
connection Keep-Alive
content-type application/json
content-length 344


{"@odata.context":"/redfish/v1/$metadata#ProcessorCollection.ProcessorCollection","@odat...</msg>
<status status="PASS" endtime="20200605 09:54:29.308" starttime="20200605 09:54:29.271"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:54:29.309" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:54:29.309" starttime="20200605 09:54:29.309"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Systems/1/Processors/1</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:54:29.322" level="INFO">Attempt 1 of /redfish/v1/Systems/1/Processors/1</msg>
<msg timestamp="20200605 09:54:29.547" level="INFO">Response Time to /redfish/v1/Systems/1/Processors/1: 0.000648 seconds.</msg>
<msg timestamp="20200605 09:54:29.548" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:54:29 GMT
connection Keep-Alive
content-type application/json
content-length 967


{"@odata.context":"/redfish/v1/$metadata#Processor.Processor","@odata.id":"/redfish/v1/S...</msg>
<status status="PASS" endtime="20200605 09:54:29.548" starttime="20200605 09:54:29.309"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:54:29.549" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:54:29.549" starttime="20200605 09:54:29.548"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Systems/1/Storage/1</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:54:29.570" level="INFO">Attempt 1 of /redfish/v1/Systems/1/Storage/1</msg>
<msg timestamp="20200605 09:54:29.597" level="INFO">Response Time to /redfish/v1/Systems/1/Storage/1: 0.000432 seconds.</msg>
<msg timestamp="20200605 09:54:29.598" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:54:29 GMT
connection Keep-Alive
content-type application/json
content-length 461


{"@odata.context":"/redfish/v1/$metadata#Storage.Storage","@odata.id":"/redfish/v1/Syste...</msg>
<status status="PASS" endtime="20200605 09:54:29.598" starttime="20200605 09:54:29.549"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:54:29.599" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:54:29.599" starttime="20200605 09:54:29.598"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/SessionService/</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:54:29.612" level="INFO">Attempt 1 of /redfish/v1/SessionService/</msg>
<msg timestamp="20200605 09:54:29.640" level="INFO">Response Time to /redfish/v1/SessionService/: 0.000418 seconds.</msg>
<msg timestamp="20200605 09:54:29.640" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:54:29 GMT
connection Keep-Alive
content-type application/json
content-length 424


{"@odata.context":"/redfish/v1/$metadata#SessionService.SessionService","@odata.id":"/re...</msg>
<status status="PASS" endtime="20200605 09:54:29.640" starttime="20200605 09:54:29.599"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:54:29.641" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:54:29.641" starttime="20200605 09:54:29.640"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/SessionService/Sessions</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:54:29.654" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:54:29.681" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000366 seconds.</msg>
<msg timestamp="20200605 09:54:29.681" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:54:29 GMT
connection Keep-Alive
content-type application/json
content-length 496


{"@odata.context":"/redfish/v1/$metadata#SessionCollection.SessionCollection","@odata.id...</msg>
<status status="PASS" endtime="20200605 09:54:29.681" starttime="20200605 09:54:29.641"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:54:29.682" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:54:29.682" starttime="20200605 09:54:29.681"></status>
</kw>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:54:29.687" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:54:29.716" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000607 seconds.</msg>
<msg timestamp="20200605 09:54:29.716" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'ish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 5, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:54:29.716" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"ish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":5}</msg>
<status status="PASS" endtime="20200605 09:54:29.717" starttime="20200605 09:54:29.682"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts/${RO_UserName}</arg>
</arguments>
<msg timestamp="20200605 09:54:29.730" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/readonly</msg>
<msg timestamp="20200605 09:54:29.754" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/readonly: 0.000364 seconds.</msg>
<status status="PASS" endtime="20200605 09:54:29.755" starttime="20200605 09:54:29.717"></status>
</kw>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200605 09:54:29.768" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/5</msg>
<msg timestamp="20200605 09:54:29.794" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/5: 0.000375 seconds.</msg>
<msg timestamp="20200605 09:54:29.794" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200605 09:54:29.795" starttime="20200605 09:54:29.755"></status>
</kw>
<doc>Verify Redfish ReadOnlyUser account can get major service</doc>
<tags>
<tag>Verify_AccountService_UserOnlyUser_Enable</tag>
</tags>
<status status="PASS" endtime="20200605 09:54:29.795" critical="yes" starttime="20200605 09:54:25.429"></status>
</test>
<test id="s1-s2-s1-t11" name="Verify AccountService_ReadOnlyUser_Cannot_POST_PATCH">
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<arguments>
<arg>${UserName}</arg>
<arg>${Pwd}</arg>
</arguments>
<msg timestamp="20200605 09:54:29.801" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:54:29.830" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.00051 seconds.</msg>
<msg timestamp="20200605 09:54:29.830" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'ish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 5, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:54:29.830" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"ish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":5}</msg>
<status status="PASS" endtime="20200605 09:54:29.830" starttime="20200605 09:54:29.796"></status>
</kw>
<kw name="Redfish Create User">
<doc>Redfish create user.</doc>
<arguments>
<arg>NewName</arg>
<arg>${RO_UserName}</arg>
<arg>${RO_Pwd}</arg>
<arg>${RO_ROLE}</arg>
<arg>${False}</arg>
<arg>${True}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Name=${name}</arg>
<arg>UserName=${username}</arg>
<arg>Password=${password}</arg>
<arg>RoleId=${role_id}</arg>
<arg>Locked=${locked}</arg>
<arg>Enabled=${enabled}</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:54:29.832" level="INFO">${payload} = {u'Name': u'NewName', u'UserName': u'readonly', u'Password': u'readonly', u'RoleId': u'ReadOnlyUser', u'Locked': False, u'Enabled': True}</msg>
<status status="PASS" endtime="20200605 09:54:29.832" starttime="20200605 09:54:29.831"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_CREATED}]</arg>
</arguments>
<msg timestamp="20200605 09:54:29.845" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts</msg>
<msg timestamp="20200605 09:54:29.878" level="INFO">Response Time to /redfish/v1/AccountService/Accounts: 0.000454 seconds.</msg>
<status status="PASS" endtime="20200605 09:54:29.878" starttime="20200605 09:54:29.832"></status>
</kw>
<status status="PASS" endtime="20200605 09:54:29.879" starttime="20200605 09:54:29.830"></status>
</kw>
<kw name="Redfish Create User">
<doc>Redfish create user.</doc>
<arguments>
<arg>NewName</arg>
<arg>${TEST_RO_UserName}</arg>
<arg>${TEST_RO_Pwd}</arg>
<arg>${RO_ROLE}</arg>
<arg>${False}</arg>
<arg>${True}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Name=${name}</arg>
<arg>UserName=${username}</arg>
<arg>Password=${password}</arg>
<arg>RoleId=${role_id}</arg>
<arg>Locked=${locked}</arg>
<arg>Enabled=${enabled}</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:54:29.880" level="INFO">${payload} = {u'Name': u'NewName', u'UserName': u'testreadonly', u'Password': u'testreadonly', u'RoleId': u'ReadOnlyUser', u'Locked': False, u'Enabled': True}</msg>
<status status="PASS" endtime="20200605 09:54:29.880" starttime="20200605 09:54:29.879"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_CREATED}]</arg>
</arguments>
<msg timestamp="20200605 09:54:29.893" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts</msg>
<msg timestamp="20200605 09:54:29.933" level="INFO">Response Time to /redfish/v1/AccountService/Accounts: 0.000465 seconds.</msg>
<status status="PASS" endtime="20200605 09:54:29.933" starttime="20200605 09:54:29.880"></status>
</kw>
<status status="PASS" endtime="20200605 09:54:29.933" starttime="20200605 09:54:29.879"></status>
</kw>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200605 09:54:29.946" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/5</msg>
<msg timestamp="20200605 09:54:29.974" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/5: 0.000389 seconds.</msg>
<msg timestamp="20200605 09:54:29.974" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200605 09:54:29.975" starttime="20200605 09:54:29.934"></status>
</kw>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<arguments>
<arg>${RO_UserName}</arg>
<arg>${RO_Pwd}</arg>
</arguments>
<msg timestamp="20200605 09:54:29.979" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:54:30.009" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000477 seconds.</msg>
<msg timestamp="20200605 09:54:30.009" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'readonly', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:54:30.010" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"readonly","Id":1}</msg>
<status status="PASS" endtime="20200605 09:54:30.010" starttime="20200605 09:54:29.975"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OP_UP)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:54:30.013" level="INFO">${payload} = {u'OperationalState': u'Up'}</msg>
<status status="PASS" endtime="20200605 09:54:30.013" starttime="20200605 09:54:30.010"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/1</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:54:30.024" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200605 09:54:30.050" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000331 seconds.</msg>
<msg timestamp="20200605 09:54:30.050" level="INFO">${resp} = 401
date Fri, 05 Jun 2020 01:54:30 GMT
connection Keep-Alive
content-type application/json
content-length 211


{"error":{"code":"Base.1.0.ResourceAtUriUnauthorized","message":"While accessing the res...</msg>
<status status="PASS" endtime="20200605 09:54:30.050" starttime="20200605 09:54:30.013"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_UNAUTHORIZED}</arg>
</arguments>
<msg timestamp="20200605 09:54:30.051" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:54:30.051" starttime="20200605 09:54:30.050"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>ResetType=GracefulRestart</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:54:30.051" level="INFO">${payload} = {u'ResetType': u'GracefulRestart'}</msg>
<status status="PASS" endtime="20200605 09:54:30.051" starttime="20200605 09:54:30.051"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Systems/1/Actions/ComputerSystem.Reset</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_UNAUTHORIZED}]</arg>
</arguments>
<msg timestamp="20200605 09:54:30.063" level="INFO">Attempt 1 of /redfish/v1/Systems/1/Actions/ComputerSystem.Reset</msg>
<msg timestamp="20200605 09:54:30.089" level="INFO">Response Time to /redfish/v1/Systems/1/Actions/ComputerSystem.Reset: 0.000383999999999 seconds.</msg>
<status status="PASS" endtime="20200605 09:54:30.089" starttime="20200605 09:54:30.051"></status>
</kw>
<kw name="Redfish Create User">
<doc>Redfish create user.</doc>
<arguments>
<arg>NewName</arg>
<arg>${TEST1_RO_UserName}</arg>
<arg>${TEST1_RO_Pwd}</arg>
<arg>${RO_ROLE}</arg>
<arg>${False}</arg>
<arg>${True}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Name=${name}</arg>
<arg>UserName=${username}</arg>
<arg>Password=${password}</arg>
<arg>RoleId=${role_id}</arg>
<arg>Locked=${locked}</arg>
<arg>Enabled=${enabled}</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:54:30.090" level="INFO">${payload} = {u'Name': u'NewName', u'UserName': u'test1readonlypwd', u'Password': u'test1readonlypwd', u'RoleId': u'ReadOnlyUser', u'Locked': False, u'Enabled': True}</msg>
<status status="PASS" endtime="20200605 09:54:30.090" starttime="20200605 09:54:30.090"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_CREATED}]</arg>
</arguments>
<msg timestamp="20200605 09:54:30.103" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts</msg>
<msg timestamp="20200605 09:54:30.129" level="INFO">Response Time to /redfish/v1/AccountService/Accounts: 0.00033 seconds.</msg>
<status status="PASS" endtime="20200605 09:54:30.129" starttime="20200605 09:54:30.091"></status>
</kw>
<status status="PASS" endtime="20200605 09:54:30.129" starttime="20200605 09:54:30.089"></status>
</kw>
<kw name="Get Attribute" library="redfish_utils">
<doc>Get resource attribute.</doc>
<arguments>
<arg>/redfish/v1/AccountService/Accounts/${TEST1_RO_UserName}</arg>
<arg>RoleId</arg>
</arguments>
<assign>
<var>${role_config}</var>
</assign>
<msg timestamp="20200605 09:54:30.142" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/test1readonlypwd</msg>
<msg timestamp="20200605 09:54:30.171" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/test1readonlypwd: 0.000365 seconds.</msg>
<msg timestamp="20200605 09:54:30.171" level="INFO">${role_config} = None</msg>
<status status="PASS" endtime="20200605 09:54:30.171" starttime="20200605 09:54:30.129"></status>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<doc>Fails if the given objects are equal.</doc>
<arguments>
<arg>${RO_ROLE}</arg>
<arg>${role_config}</arg>
</arguments>
<msg timestamp="20200605 09:54:30.174" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'NoneType'&gt;</msg>
<status status="PASS" endtime="20200605 09:54:30.174" starttime="20200605 09:54:30.171"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts/</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:54:30.212" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/</msg>
<msg timestamp="20200605 09:54:30.238" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/: 0.000317 seconds.</msg>
<msg timestamp="20200605 09:54:30.239" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:54:30 GMT
connection Keep-Alive
content-type application/json
content-length 438


{"@odata.context":"/redfish/v1/$metadata#AccountService.AccountService","@odata.id":"/re...</msg>
<status status="PASS" endtime="20200605 09:54:30.239" starttime="20200605 09:54:30.174"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:54:30.239" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:54:30.239" starttime="20200605 09:54:30.239"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($PATCH_PWD_BODY)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:54:30.242" level="INFO">${payload} = {u'UserName': u'readonly', u'Enabled': True, u'Password': u'readonlyU2', u'Locked': False, u'RoleId': u'ReadOnlyUser'}</msg>
<status status="PASS" endtime="20200605 09:54:30.243" starttime="20200605 09:54:30.239"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts/${RO_UserName}</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_OK}]</arg>
</arguments>
<msg timestamp="20200605 09:54:30.253" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/readonly</msg>
<msg timestamp="20200605 09:54:30.286" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/readonly: 0.000331 seconds.</msg>
<status status="PASS" endtime="20200605 09:54:30.287" starttime="20200605 09:54:30.243"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>RoleId=Administrator</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:54:30.287" level="INFO">${payload} = {u'RoleId': u'Administrator'}</msg>
<status status="PASS" endtime="20200605 09:54:30.288" starttime="20200605 09:54:30.287"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts/${RO_UserName}</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_UNAUTHORIZED}]</arg>
</arguments>
<msg timestamp="20200605 09:54:30.298" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/readonly</msg>
<msg timestamp="20200605 09:54:30.321" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/readonly: 0.000325 seconds.</msg>
<status status="PASS" endtime="20200605 09:54:30.321" starttime="20200605 09:54:30.288"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>RoleId=Administrator</arg>
<arg>Password=P2</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:54:30.322" level="INFO">${payload} = {u'RoleId': u'Administrator', u'Password': u'P2'}</msg>
<status status="PASS" endtime="20200605 09:54:30.322" starttime="20200605 09:54:30.322"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts/${RO_UserName}</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_UNAUTHORIZED}]</arg>
</arguments>
<msg timestamp="20200605 09:54:30.332" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/readonly</msg>
<msg timestamp="20200605 09:54:30.366" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/readonly: 0.000383 seconds.</msg>
<status status="PASS" endtime="20200605 09:54:30.367" starttime="20200605 09:54:30.322"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Password=NewPasswordOP</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:54:30.367" level="INFO">${payload} = {u'Password': u'NewPasswordOP'}</msg>
<status status="PASS" endtime="20200605 09:54:30.367" starttime="20200605 09:54:30.367"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts/${RO_UserName}</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_OK}]</arg>
</arguments>
<msg timestamp="20200605 09:54:30.380" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/readonly</msg>
<msg timestamp="20200605 09:54:30.413" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/readonly: 0.000329 seconds.</msg>
<status status="PASS" endtime="20200605 09:54:30.413" starttime="20200605 09:54:30.368"></status>
</kw>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200605 09:54:30.423" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200605 09:54:30.445" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000368 seconds.</msg>
<msg timestamp="20200605 09:54:30.445" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200605 09:54:30.446" starttime="20200605 09:54:30.414"></status>
</kw>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<arguments>
<arg>${RO_UserName}</arg>
<arg>NewPasswordOP</arg>
</arguments>
<msg timestamp="20200605 09:54:30.450" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:54:30.480" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000666 seconds.</msg>
<msg timestamp="20200605 09:54:30.480" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'readonly', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:54:30.480" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"readonly","Id":1}</msg>
<status status="PASS" endtime="20200605 09:54:30.480" starttime="20200605 09:54:30.446"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($PATCH_TEST_PWD_BODY)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:54:30.483" level="INFO">${payload} = {u'UserName': u'testreadonly', u'Enabled': True, u'Password': u'testreadonlyU2', u'Locked': False, u'RoleId': u'ReadOnlyUser'}</msg>
<status status="PASS" endtime="20200605 09:54:30.483" starttime="20200605 09:54:30.480"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts/${TEST_RO_UserName}</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_UNAUTHORIZED}]</arg>
</arguments>
<msg timestamp="20200605 09:54:30.496" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/testreadonly</msg>
<msg timestamp="20200605 09:54:30.532" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/testreadonly: 0.000354 seconds.</msg>
<status status="PASS" endtime="20200605 09:54:30.532" starttime="20200605 09:54:30.484"></status>
</kw>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200605 09:54:30.545" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200605 09:54:30.572" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000319 seconds.</msg>
<msg timestamp="20200605 09:54:30.572" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200605 09:54:30.572" starttime="20200605 09:54:30.532"></status>
</kw>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:54:30.576" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:54:30.603" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000438 seconds.</msg>
<msg timestamp="20200605 09:54:30.604" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:54:30.604" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:54:30.604" starttime="20200605 09:54:30.572"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts/${RO_UserName}</arg>
</arguments>
<msg timestamp="20200605 09:54:30.614" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/readonly</msg>
<msg timestamp="20200605 09:54:30.640" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/readonly: 0.00031 seconds.</msg>
<status status="PASS" endtime="20200605 09:54:30.640" starttime="20200605 09:54:30.604"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts/${TEST_RO_UserName}</arg>
</arguments>
<msg timestamp="20200605 09:54:30.651" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/testreadonly</msg>
<msg timestamp="20200605 09:54:30.676" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/testreadonly: 0.000274 seconds.</msg>
<status status="PASS" endtime="20200605 09:54:30.676" starttime="20200605 09:54:30.640"></status>
</kw>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200605 09:54:30.688" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200605 09:54:30.716" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000303000000001 seconds.</msg>
<msg timestamp="20200605 09:54:30.716" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200605 09:54:30.716" starttime="20200605 09:54:30.676"></status>
</kw>
<doc>Verify Redfish ReadOnlyUser account cannot use patch post action</doc>
<tags>
<tag>Verify_AccountService_ReadOnlyUser_CANNOT_PATCH_POST</tag>
</tags>
<status status="PASS" endtime="20200605 09:54:30.716" critical="yes" starttime="20200605 09:54:29.795"></status>
</test>
<test id="s1-s2-s1-t12" name="Verify AccountService_OPUser_Cannot_POST_PATCH">
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<arguments>
<arg>${UserName}</arg>
<arg>${Pwd}</arg>
</arguments>
<msg timestamp="20200605 09:54:30.721" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:54:30.747" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000423 seconds.</msg>
<msg timestamp="20200605 09:54:30.748" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:54:30.748" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:54:30.748" starttime="20200605 09:54:30.718"></status>
</kw>
<kw name="Redfish Create User">
<doc>Redfish create user.</doc>
<arguments>
<arg>NewName</arg>
<arg>${OP_UserName}</arg>
<arg>${OP_Pwd}</arg>
<arg>${OP_ROLE}</arg>
<arg>${False}</arg>
<arg>${True}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Name=${name}</arg>
<arg>UserName=${username}</arg>
<arg>Password=${password}</arg>
<arg>RoleId=${role_id}</arg>
<arg>Locked=${locked}</arg>
<arg>Enabled=${enabled}</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:54:30.749" level="INFO">${payload} = {u'Name': u'NewName', u'UserName': u'Operator', u'Password': u'Operator', u'RoleId': u'Operator', u'Locked': False, u'Enabled': True}</msg>
<status status="PASS" endtime="20200605 09:54:30.749" starttime="20200605 09:54:30.749"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_CREATED}]</arg>
</arguments>
<msg timestamp="20200605 09:54:30.759" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts</msg>
<msg timestamp="20200605 09:54:30.793" level="INFO">Response Time to /redfish/v1/AccountService/Accounts: 0.000503 seconds.</msg>
<status status="PASS" endtime="20200605 09:54:30.794" starttime="20200605 09:54:30.749"></status>
</kw>
<status status="PASS" endtime="20200605 09:54:30.794" starttime="20200605 09:54:30.748"></status>
</kw>
<kw name="Redfish Create User">
<doc>Redfish create user.</doc>
<arguments>
<arg>NewName</arg>
<arg>${TEST_RO_UserName}</arg>
<arg>${TEST_RO_Pwd}</arg>
<arg>${RO_ROLE}</arg>
<arg>${False}</arg>
<arg>${True}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Name=${name}</arg>
<arg>UserName=${username}</arg>
<arg>Password=${password}</arg>
<arg>RoleId=${role_id}</arg>
<arg>Locked=${locked}</arg>
<arg>Enabled=${enabled}</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:54:30.796" level="INFO">${payload} = {u'Name': u'NewName', u'UserName': u'testreadonly', u'Password': u'testreadonly', u'RoleId': u'ReadOnlyUser', u'Locked': False, u'Enabled': True}</msg>
<status status="PASS" endtime="20200605 09:54:30.796" starttime="20200605 09:54:30.795"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_CREATED}]</arg>
</arguments>
<msg timestamp="20200605 09:54:30.810" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts</msg>
<msg timestamp="20200605 09:54:30.851" level="INFO">Response Time to /redfish/v1/AccountService/Accounts: 0.000525 seconds.</msg>
<status status="PASS" endtime="20200605 09:54:30.851" starttime="20200605 09:54:30.796"></status>
</kw>
<status status="PASS" endtime="20200605 09:54:30.851" starttime="20200605 09:54:30.794"></status>
</kw>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200605 09:54:30.865" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200605 09:54:30.892" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000285 seconds.</msg>
<msg timestamp="20200605 09:54:30.892" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200605 09:54:30.892" starttime="20200605 09:54:30.851"></status>
</kw>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<arguments>
<arg>${OP_UserName}</arg>
<arg>${OP_Pwd}</arg>
</arguments>
<msg timestamp="20200605 09:54:30.897" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:54:30.928" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.00125 seconds.</msg>
<msg timestamp="20200605 09:54:30.929" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'Operator', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:54:30.930" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"Operator","Id":1}</msg>
<status status="PASS" endtime="20200605 09:54:30.930" starttime="20200605 09:54:30.893"></status>
</kw>
<kw name="Redfish Create User">
<doc>Redfish create user.</doc>
<arguments>
<arg>NewName</arg>
<arg>${TEST1_RO_UserName}</arg>
<arg>${TEST1_RO_Pwd}</arg>
<arg>${RO_ROLE}</arg>
<arg>${False}</arg>
<arg>${True}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Name=${name}</arg>
<arg>UserName=${username}</arg>
<arg>Password=${password}</arg>
<arg>RoleId=${role_id}</arg>
<arg>Locked=${locked}</arg>
<arg>Enabled=${enabled}</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:54:30.934" level="INFO">${payload} = {u'Name': u'NewName', u'UserName': u'test1readonlypwd', u'Password': u'test1readonlypwd', u'RoleId': u'ReadOnlyUser', u'Locked': False, u'Enabled': True}</msg>
<status status="PASS" endtime="20200605 09:54:30.934" starttime="20200605 09:54:30.932"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_CREATED}]</arg>
</arguments>
<msg timestamp="20200605 09:54:30.963" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts</msg>
<msg timestamp="20200605 09:54:30.988" level="INFO">Response Time to /redfish/v1/AccountService/Accounts: 0.000297 seconds.</msg>
<status status="PASS" endtime="20200605 09:54:30.989" starttime="20200605 09:54:30.934"></status>
</kw>
<status status="PASS" endtime="20200605 09:54:30.989" starttime="20200605 09:54:30.930"></status>
</kw>
<kw name="Get Attribute" library="redfish_utils">
<doc>Get resource attribute.</doc>
<arguments>
<arg>/redfish/v1/AccountService/Accounts/${TEST1_RO_UserName}</arg>
<arg>RoleId</arg>
</arguments>
<assign>
<var>${role_config}</var>
</assign>
<msg timestamp="20200605 09:54:30.999" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/test1readonlypwd</msg>
<msg timestamp="20200605 09:54:31.025" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/test1readonlypwd: 0.000322000000001 seconds.</msg>
<msg timestamp="20200605 09:54:31.026" level="INFO">${role_config} = None</msg>
<status status="PASS" endtime="20200605 09:54:31.026" starttime="20200605 09:54:30.989"></status>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<doc>Fails if the given objects are equal.</doc>
<arguments>
<arg>${RO_ROLE}</arg>
<arg>${role_config}</arg>
</arguments>
<msg timestamp="20200605 09:54:31.027" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'NoneType'&gt;</msg>
<status status="PASS" endtime="20200605 09:54:31.027" starttime="20200605 09:54:31.026"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OP_PATCH_PWD_BODY)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:54:31.030" level="INFO">${payload} = {u'UserName': u'Operator', u'Enabled': True, u'Password': u'OperatorU2', u'Locked': False, u'RoleId': u'Operator'}</msg>
<status status="PASS" endtime="20200605 09:54:31.030" starttime="20200605 09:54:31.027"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts/${OP_UserName}</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_OK}]</arg>
</arguments>
<msg timestamp="20200605 09:54:31.042" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/Operator</msg>
<msg timestamp="20200605 09:54:31.077" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/Operator: 0.000422 seconds.</msg>
<status status="PASS" endtime="20200605 09:54:31.078" starttime="20200605 09:54:31.031"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Password=NewPasswordOP</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:54:31.079" level="INFO">${payload} = {u'Password': u'NewPasswordOP'}</msg>
<status status="PASS" endtime="20200605 09:54:31.079" starttime="20200605 09:54:31.078"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts/${OP_UserName}</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_OK}]</arg>
</arguments>
<msg timestamp="20200605 09:54:31.092" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/Operator</msg>
<msg timestamp="20200605 09:54:31.125" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/Operator: 0.000401 seconds.</msg>
<status status="PASS" endtime="20200605 09:54:31.125" starttime="20200605 09:54:31.079"></status>
</kw>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200605 09:54:31.138" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200605 09:54:31.162" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000314 seconds.</msg>
<msg timestamp="20200605 09:54:31.162" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200605 09:54:31.162" starttime="20200605 09:54:31.126"></status>
</kw>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<arguments>
<arg>${OP_UserName}</arg>
<arg>NewPasswordOP</arg>
</arguments>
<msg timestamp="20200605 09:54:31.167" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:54:31.197" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000451 seconds.</msg>
<msg timestamp="20200605 09:54:31.198" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'Operator', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:54:31.198" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"Operator","Id":1}</msg>
<status status="PASS" endtime="20200605 09:54:31.198" starttime="20200605 09:54:31.162"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>RoleId=Administrator</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:54:31.199" level="INFO">${payload} = {u'RoleId': u'Administrator'}</msg>
<status status="PASS" endtime="20200605 09:54:31.199" starttime="20200605 09:54:31.198"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts/${OP_UserName}</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_UNAUTHORIZED}]</arg>
</arguments>
<msg timestamp="20200605 09:54:31.210" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/Operator</msg>
<msg timestamp="20200605 09:54:31.238" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/Operator: 0.00028 seconds.</msg>
<status status="PASS" endtime="20200605 09:54:31.238" starttime="20200605 09:54:31.199"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>RoleId=Administrator</arg>
<arg>Password=P2</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:54:31.239" level="INFO">${payload} = {u'RoleId': u'Administrator', u'Password': u'P2'}</msg>
<status status="PASS" endtime="20200605 09:54:31.239" starttime="20200605 09:54:31.238"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts/${OP_UserName}</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_UNAUTHORIZED}]</arg>
</arguments>
<msg timestamp="20200605 09:54:31.249" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/Operator</msg>
<msg timestamp="20200605 09:54:31.280" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/Operator: 0.000288 seconds.</msg>
<status status="PASS" endtime="20200605 09:54:31.280" starttime="20200605 09:54:31.239"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($PATCH_TEST_PWD_BODY)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:54:31.283" level="INFO">${payload} = {u'UserName': u'testreadonly', u'Enabled': True, u'Password': u'testreadonlyU2', u'Locked': False, u'RoleId': u'ReadOnlyUser'}</msg>
<status status="PASS" endtime="20200605 09:54:31.283" starttime="20200605 09:54:31.281"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts/${TEST_RO_UserName}</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_UNAUTHORIZED}]</arg>
</arguments>
<msg timestamp="20200605 09:54:31.294" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/testreadonly</msg>
<msg timestamp="20200605 09:54:31.322" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/testreadonly: 0.000359 seconds.</msg>
<status status="PASS" endtime="20200605 09:54:31.322" starttime="20200605 09:54:31.283"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>ResetType=GracefulRestart</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:54:31.323" level="INFO">${payload} = {u'ResetType': u'GracefulRestart'}</msg>
<status status="PASS" endtime="20200605 09:54:31.323" starttime="20200605 09:54:31.323"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Systems/1/Actions/ComputerSystem.Reset</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_OK}]</arg>
</arguments>
<msg timestamp="20200605 09:54:31.333" level="INFO">Attempt 1 of /redfish/v1/Systems/1/Actions/ComputerSystem.Reset</msg>
<msg timestamp="20200605 09:54:31.358" level="INFO">Response Time to /redfish/v1/Systems/1/Actions/ComputerSystem.Reset: 0.000367000000001 seconds.</msg>
<status status="PASS" endtime="20200605 09:54:31.358" starttime="20200605 09:54:31.323"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>180s</arg>
</arguments>
<msg timestamp="20200605 09:57:31.365" level="INFO">Slept 3 minutes</msg>
<status status="PASS" endtime="20200605 09:57:31.365" starttime="20200605 09:54:31.359"></status>
</kw>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:57:31.369" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:57:31.396" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000504 seconds.</msg>
<msg timestamp="20200605 09:57:31.397" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:57:31.397" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:57:31.397" starttime="20200605 09:57:31.365"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts/${OP_UserName}</arg>
</arguments>
<msg timestamp="20200605 09:57:31.409" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/Operator</msg>
<msg timestamp="20200605 09:57:31.434" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/Operator: 0.000382999999999 seconds.</msg>
<status status="PASS" endtime="20200605 09:57:31.435" starttime="20200605 09:57:31.397"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts/${TEST_RO_UserName}</arg>
</arguments>
<msg timestamp="20200605 09:57:31.449" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/testreadonly</msg>
<msg timestamp="20200605 09:57:31.479" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/testreadonly: 0.000402 seconds.</msg>
<status status="PASS" endtime="20200605 09:57:31.479" starttime="20200605 09:57:31.435"></status>
</kw>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200605 09:57:31.493" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200605 09:57:31.520" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000389999999999 seconds.</msg>
<msg timestamp="20200605 09:57:31.520" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200605 09:57:31.520" starttime="20200605 09:57:31.480"></status>
</kw>
<doc>Verify Redfish OPUser account cannot use patch post action</doc>
<tags>
<tag>Verify_AccountService_OPUser_CANNOT_PATCH_POST</tag>
</tags>
<status status="PASS" endtime="20200605 09:57:31.521" critical="yes" starttime="20200605 09:54:30.717"></status>
</test>
<doc>Test Redfish user account.</doc>
<status status="PASS" endtime="20200605 09:57:31.522" starttime="20200605 09:51:10.420"></status>
</suite>
<status status="PASS" endtime="20200605 09:57:31.528" starttime="20200605 09:51:10.418"></status>
</suite>
<suite source="/home/voltha/workspace/GPON/5_RF_Auto_Test/redfish/2_service_root" id="s1-s3" name="2 Service Root">
<suite source="/home/voltha/workspace/GPON/5_RF_Auto_Test/redfish/2_service_root/test_service_root.robot" id="s1-s3-s1" name="Test Service Root">
<test id="s1-s3-s1-t1" name="Redfish Login And Logout">
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:57:31.602" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:57:31.658" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000573 seconds.</msg>
<msg timestamp="20200605 09:57:31.659" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:57:31.659" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:57:31.659" starttime="20200605 09:57:31.554"></status>
</kw>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200605 09:57:31.672" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200605 09:57:31.699" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000365 seconds.</msg>
<msg timestamp="20200605 09:57:31.699" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200605 09:57:31.699" starttime="20200605 09:57:31.659"></status>
</kw>
<doc>Login to BMCweb and then logout.</doc>
<tags>
<tag>Redfish_Login_And_Logout</tag>
</tags>
<status status="PASS" endtime="20200605 09:57:31.699" critical="yes" starttime="20200605 09:57:31.553"></status>
</test>
<test id="s1-s3-s1-t2" name="GET Redfish Hypermedia Without Login">
<kw name="GET And Verify Redfish Response">
<doc>GET given resource and verfiy response.</doc>
<arguments>
<arg>${HTTP_OK}</arg>
<arg>/</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>${resource_path}</arg>
<arg>valid_status_codes=[${valid_status_codes}]</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:57:31.715" level="INFO">Attempt 1 of /</msg>
<msg timestamp="20200605 09:57:31.740" level="INFO">Response Time to /: 0.000364 seconds.</msg>
<msg timestamp="20200605 09:57:31.740" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:57:31 GMT
connection Keep-Alive
content-type application/json
content-length 2


{}</msg>
<status status="PASS" endtime="20200605 09:57:31.740" starttime="20200605 09:57:31.702"></status>
</kw>
<status status="PASS" endtime="20200605 09:57:31.741" starttime="20200605 09:57:31.701"></status>
</kw>
<kw name="GET And Verify Redfish Response">
<doc>GET given resource and verfiy response.</doc>
<arguments>
<arg>${HTTP_OK}</arg>
<arg>/redfish</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>${resource_path}</arg>
<arg>valid_status_codes=[${valid_status_codes}]</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:57:31.754" level="INFO">Attempt 1 of /redfish</msg>
<msg timestamp="20200605 09:57:31.783" level="INFO">Response Time to /redfish: 0.000391 seconds.</msg>
<msg timestamp="20200605 09:57:31.783" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:57:31 GMT
connection Keep-Alive
content-type application/json
content-length 20


{"v1":"/redfish/v1"}</msg>
<status status="PASS" endtime="20200605 09:57:31.783" starttime="20200605 09:57:31.741"></status>
</kw>
<status status="PASS" endtime="20200605 09:57:31.783" starttime="20200605 09:57:31.741"></status>
</kw>
<kw name="GET And Verify Redfish Response">
<doc>GET given resource and verfiy response.</doc>
<arguments>
<arg>${HTTP_OK}</arg>
<arg>/redfish/v1</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>${resource_path}</arg>
<arg>valid_status_codes=[${valid_status_codes}]</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:57:31.797" level="INFO">Attempt 1 of /redfish/v1</msg>
<msg timestamp="20200605 09:57:31.824" level="INFO">Response Time to /redfish/v1: 0.000384 seconds.</msg>
<msg timestamp="20200605 09:57:31.824" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:57:31 GMT
connection Keep-Alive
content-type application/json
content-length 891


{"@odata.context":"/redfish/v1/$metadata#ServiceRoot.ServiceRoot","@odata.id":"/redfish/...</msg>
<status status="PASS" endtime="20200605 09:57:31.824" starttime="20200605 09:57:31.784"></status>
</kw>
<status status="PASS" endtime="20200605 09:57:31.824" starttime="20200605 09:57:31.784"></status>
</kw>
<doc>GET hypermedia URL without login.</doc>
<tags>
<tag>GET_Redfish_Hypermedia_Without_Login</tag>
</tags>
<status status="PASS" endtime="20200605 09:57:31.824" critical="yes" starttime="20200605 09:57:31.700"></status>
</test>
<test id="s1-s3-s1-t3" name="GET Redfish SessionService Resource With Login">
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:57:31.832" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:57:31.860" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000576 seconds.</msg>
<msg timestamp="20200605 09:57:31.860" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:57:31.860" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:57:31.860" starttime="20200605 09:57:31.826"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/SessionService</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:57:31.874" level="INFO">Attempt 1 of /redfish/v1/SessionService</msg>
<msg timestamp="20200605 09:57:31.899" level="INFO">Response Time to /redfish/v1/SessionService: 0.000366 seconds.</msg>
<msg timestamp="20200605 09:57:31.900" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:57:32 GMT
connection Keep-Alive
content-type application/json
content-length 424


{"@odata.context":"/redfish/v1/$metadata#SessionService.SessionService","@odata.id":"/re...</msg>
<status status="PASS" endtime="20200605 09:57:31.900" starttime="20200605 09:57:31.861"></status>
</kw>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200605 09:57:31.913" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200605 09:57:31.940" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000345 seconds.</msg>
<msg timestamp="20200605 09:57:31.941" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200605 09:57:31.941" starttime="20200605 09:57:31.900"></status>
</kw>
<doc>Login to BMCweb and get /redfish/v1/SessionService.</doc>
<tags>
<tag>GET_Redfish_SessionService_Resource_With_Login</tag>
</tags>
<status status="PASS" endtime="20200605 09:57:31.941" critical="yes" starttime="20200605 09:57:31.825"></status>
</test>
<test id="s1-s3-s1-t4" name="GET Redfish SessionService Without Login">
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/SessionService</arg>
<arg>valid_status_codes=[${HTTP_UNAUTHORIZED}]</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:57:31.955" level="INFO">Attempt 1 of /redfish/v1/SessionService</msg>
<msg timestamp="20200605 09:57:31.978" level="INFO">Response Time to /redfish/v1/SessionService: 0.000341 seconds.</msg>
<msg timestamp="20200605 09:57:31.979" level="INFO">${resp} = 401
date Fri, 05 Jun 2020 01:57:32 GMT
connection Keep-Alive
content-type application/json
content-length 211


{"error":{"code":"Base.1.0.ResourceAtUriUnauthorized","message":"While accessing the res...</msg>
<status status="PASS" endtime="20200605 09:57:31.979" starttime="20200605 09:57:31.943"></status>
</kw>
<doc>Get /redfish/v1/SessionService without login</doc>
<tags>
<tag>GET_Redfish_SessionService_Without_Login</tag>
</tags>
<status status="PASS" endtime="20200605 09:57:31.979" critical="yes" starttime="20200605 09:57:31.942"></status>
</test>
<test id="s1-s3-s1-t5" name="Delete Redfish Session Using Valid login">
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:57:31.985" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:57:32.014" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000524 seconds.</msg>
<msg timestamp="20200605 09:57:32.015" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:57:32.015" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:57:32.015" starttime="20200605 09:57:31.981"></status>
</kw>
<kw name="Get Redfish Session Info" library="redfish_utils">
<doc>Returns redfish sessions info dictionary.</doc>
<assign>
<var>${session_info}</var>
</assign>
<msg timestamp="20200605 09:57:32.016" level="INFO">${session_info} = {'location': '/redfish/v1/SessionService/Sessions/1', 'key': 'UGSrom5NIVKGpSBckZh5pKjkurCnhQrE'}</msg>
<status status="PASS" endtime="20200605 09:57:32.016" starttime="20200605 09:57:32.015"></status>
</kw>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:57:32.020" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:57:32.048" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000584 seconds.</msg>
<msg timestamp="20200605 09:57:32.049" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:57:32.049" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:57:32.049" starttime="20200605 09:57:32.016"></status>
</kw>
<kw name="List Request" library="redfish_utils">
<doc>Perform a GET list request and return available resource paths.
Description of argument(s):
resource_path  URI resource absolute path
               (e.g. "/redfish/v1/SessionService/Sessions").</doc>
<arguments>
<arg>/redfish/v1/SessionService/Sessions</arg>
</arguments>
<assign>
<var>${resp_list}</var>
</assign>
<msg timestamp="20200605 09:57:32.068" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:57:32.094" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000306 seconds.</msg>
<msg timestamp="20200605 09:57:32.102" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200605 09:57:32.126" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000312 seconds.</msg>
<msg timestamp="20200605 09:57:32.134" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:57:32.160" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000511 seconds.</msg>
<msg timestamp="20200605 09:57:32.161" level="INFO">${resp_list} = [u'/redfish/v1/SessionService/Sessions', u'/redfish/v1/SessionService/Sessions/1']</msg>
<status status="PASS" endtime="20200605 09:57:32.161" starttime="20200605 09:57:32.049"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>${session_info["location"]}</arg>
</arguments>
<msg timestamp="20200605 09:57:32.175" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200605 09:57:32.201" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000339 seconds.</msg>
<status status="PASS" endtime="20200605 09:57:32.201" starttime="20200605 09:57:32.161"></status>
</kw>
<kw name="List Request" library="redfish_utils">
<doc>Perform a GET list request and return available resource paths.
Description of argument(s):
resource_path  URI resource absolute path
               (e.g. "/redfish/v1/SessionService/Sessions").</doc>
<arguments>
<arg>/redfish/v1/SessionService/Sessions</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:57:32.220" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:57:32.245" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000325 seconds.</msg>
<msg timestamp="20200605 09:57:32.254" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:57:32.279" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000391 seconds.</msg>
<msg timestamp="20200605 09:57:32.280" level="INFO">${resp} = [u'/redfish/v1/SessionService/Sessions']</msg>
<status status="PASS" endtime="20200605 09:57:32.280" starttime="20200605 09:57:32.201"></status>
</kw>
<kw name="List Should Not Contain Value" library="Collections">
<doc>Fails if the ``value`` is found from ``list``.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${session_info["location"]}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:57:32.280" starttime="20200605 09:57:32.280"></status>
</kw>
<doc>Delete a session using valid login.</doc>
<tags>
<tag>Delete_Redfish_Session_Using_Valid_Login</tag>
</tags>
<status status="PASS" endtime="20200605 09:57:32.280" critical="yes" starttime="20200605 09:57:31.980"></status>
</test>
<doc>Test Redfish to verify responses for SessionService and Hypermedia.</doc>
<status status="PASS" endtime="20200605 09:57:32.282" starttime="20200605 09:57:31.534"></status>
</suite>
<suite source="/home/voltha/workspace/GPON/5_RF_Auto_Test/redfish/2_service_root/test_service_root_security.robot" id="s1-s3-s2" name="Test Service Root Security">
<test id="s1-s3-s2-t1" name="Redfish Login With Invalid Credentials">
<kw name="Login And Verify Redfish Response">
<doc>Login and verify redfish response.</doc>
<arguments>
<arg>*</arg>
<arg>${OPENBMC_USERNAME}</arg>
<arg>deadpassword</arg>
</arguments>
<kw name="Set Username" library="Redfish">
<doc>Set user name</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:57:32.409" starttime="20200605 09:57:32.376"></status>
</kw>
<kw name="Set Password" library="Redfish">
<doc>Set password</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:57:32.410" starttime="20200605 09:57:32.409"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>${expected_response}</arg>
<arg>Redfish.Login</arg>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<arguments>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<msg timestamp="20200605 09:57:32.415" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:57:32.449" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.00058 seconds.</msg>
<msg timestamp="20200605 09:57:32.450" level="FAIL">ValueError: No JSON object could be decoded</msg>
<status status="FAIL" endtime="20200605 09:57:32.450" starttime="20200605 09:57:32.410"></status>
</kw>
<status status="PASS" endtime="20200605 09:57:32.450" starttime="20200605 09:57:32.410"></status>
</kw>
<status status="PASS" endtime="20200605 09:57:32.450" starttime="20200605 09:57:32.375"></status>
</kw>
<kw name="Login And Verify Redfish Response">
<doc>Login and verify redfish response.</doc>
<arguments>
<arg>*</arg>
<arg>groot</arg>
<arg>${OPENBMC_PASSWORD}</arg>
</arguments>
<kw name="Set Username" library="Redfish">
<doc>Set user name</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:57:32.451" starttime="20200605 09:57:32.451"></status>
</kw>
<kw name="Set Password" library="Redfish">
<doc>Set password</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:57:32.452" starttime="20200605 09:57:32.452"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>${expected_response}</arg>
<arg>Redfish.Login</arg>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<arguments>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<msg timestamp="20200605 09:57:32.461" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:57:32.487" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000593 seconds.</msg>
<msg timestamp="20200605 09:57:32.488" level="INFO">{u'error': {u'@Message.ExtendedInfo': [{u'@odata.type': u'/redfish/v1/$metadata#Message.v1_0_0.Message', u'Message': u"Account 'groot' not found.", u'Resolution': u'Place a valid resource at the URI or correct the URI and resubmit the request.', u'Severity': u'Critical', u'MessageId': u'Base.1.0.ResourceMissingAtURI'}], u'message': u'The resource at the URI /redfish/v1/SessionService/Sessions was not found.', u'code': u'Base.1.0.ResourceMissingAtURI'}}</msg>
<msg timestamp="20200605 09:57:32.488" level="INFO">Login returned code 404: {"error":{"code":"Base.1.0.ResourceMissingAtURI","message":"The resource at the URI /redfish/v1/SessionService/Sessions was not found.","@Message.ExtendedInfo":[{"@odata.type":"/redfish/v1/$metadata#Message.v1_0_0.Message","MessageId":"Base.1.0.ResourceMissingAtURI","Message":"Account 'groot' not found.","Resolution":"Place a valid resource at the URI or correct the URI and resubmit the request.","Severity":"Critical"}]}}</msg>
<msg timestamp="20200605 09:57:32.489" level="FAIL">InvalidCredentialsError: 0</msg>
<status status="FAIL" endtime="20200605 09:57:32.489" starttime="20200605 09:57:32.453"></status>
</kw>
<status status="PASS" endtime="20200605 09:57:32.489" starttime="20200605 09:57:32.452"></status>
</kw>
<status status="PASS" endtime="20200605 09:57:32.489" starttime="20200605 09:57:32.450"></status>
</kw>
<kw name="Login And Verify Redfish Response">
<doc>Login and verify redfish response.</doc>
<arguments>
<arg>*</arg>
<arg>${EMPTY}</arg>
<arg>${OPENBMC_PASSWORD}</arg>
</arguments>
<kw name="Set Username" library="Redfish">
<doc>Set user name</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:57:32.490" starttime="20200605 09:57:32.490"></status>
</kw>
<kw name="Set Password" library="Redfish">
<doc>Set password</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:57:32.491" starttime="20200605 09:57:32.491"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>${expected_response}</arg>
<arg>Redfish.Login</arg>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<arguments>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<msg timestamp="20200605 09:57:32.501" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:57:32.527" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000383999999999 seconds.</msg>
<msg timestamp="20200605 09:57:32.528" level="FAIL">ValueError: No JSON object could be decoded</msg>
<status status="FAIL" endtime="20200605 09:57:32.528" starttime="20200605 09:57:32.492"></status>
</kw>
<status status="PASS" endtime="20200605 09:57:32.528" starttime="20200605 09:57:32.491"></status>
</kw>
<status status="PASS" endtime="20200605 09:57:32.528" starttime="20200605 09:57:32.489"></status>
</kw>
<kw name="Login And Verify Redfish Response">
<doc>Login and verify redfish response.</doc>
<arguments>
<arg>*</arg>
<arg>${OPENBMC_USERNAME}</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Set Username" library="Redfish">
<doc>Set user name</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:57:32.529" starttime="20200605 09:57:32.529"></status>
</kw>
<kw name="Set Password" library="Redfish">
<doc>Set password</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:57:32.530" starttime="20200605 09:57:32.530"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>${expected_response}</arg>
<arg>Redfish.Login</arg>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<arguments>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<msg timestamp="20200605 09:57:32.538" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:57:32.562" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000380000000001 seconds.</msg>
<msg timestamp="20200605 09:57:32.563" level="FAIL">ValueError: No JSON object could be decoded</msg>
<status status="FAIL" endtime="20200605 09:57:32.563" starttime="20200605 09:57:32.531"></status>
</kw>
<status status="PASS" endtime="20200605 09:57:32.563" starttime="20200605 09:57:32.530"></status>
</kw>
<status status="PASS" endtime="20200605 09:57:32.563" starttime="20200605 09:57:32.528"></status>
</kw>
<kw name="Login And Verify Redfish Response">
<doc>Login and verify redfish response.</doc>
<arguments>
<arg>*</arg>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Set Username" library="Redfish">
<doc>Set user name</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:57:32.564" starttime="20200605 09:57:32.564"></status>
</kw>
<kw name="Set Password" library="Redfish">
<doc>Set password</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:57:32.565" starttime="20200605 09:57:32.565"></status>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<arguments>
<arg>${expected_response}</arg>
<arg>Redfish.Login</arg>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<arguments>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<msg timestamp="20200605 09:57:32.571" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:57:32.595" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000363 seconds.</msg>
<msg timestamp="20200605 09:57:32.596" level="FAIL">ValueError: No JSON object could be decoded</msg>
<status status="FAIL" endtime="20200605 09:57:32.596" starttime="20200605 09:57:32.566"></status>
</kw>
<status status="PASS" endtime="20200605 09:57:32.596" starttime="20200605 09:57:32.565"></status>
</kw>
<status status="PASS" endtime="20200605 09:57:32.596" starttime="20200605 09:57:32.563"></status>
</kw>
<doc>Login to BMC web using invalid credential.</doc>
<tags>
<tag>Redfish_Login_With_Invalid_Credentials</tag>
</tags>
<status status="PASS" endtime="20200605 09:57:32.597" critical="yes" starttime="20200605 09:57:32.374"></status>
</test>
<test id="s1-s3-s2-t2" name="Attempt Login With Expired Session">
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:57:32.603" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:57:32.634" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000546 seconds.</msg>
<msg timestamp="20200605 09:57:32.634" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:57:32.634" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:57:32.634" starttime="20200605 09:57:32.599"></status>
</kw>
<kw name="Get Redfish Session Info" library="redfish_utils">
<doc>Returns redfish sessions info dictionary.</doc>
<assign>
<var>${saved_session_info}</var>
</assign>
<msg timestamp="20200605 09:57:32.635" level="INFO">${saved_session_info} = {'location': '/redfish/v1/SessionService/Sessions/1', 'key': 'UGSrom5NIVKGpSBckZh5pKjkurCnhQrE'}</msg>
<status status="PASS" endtime="20200605 09:57:32.635" starttime="20200605 09:57:32.635"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>ServiceEnabled=${true}</arg>
<arg>SessionTimeout=${30}</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:57:32.636" level="INFO">${payload} = {u'ServiceEnabled': True, u'SessionTimeout': 30}</msg>
<status status="PASS" endtime="20200605 09:57:32.636" starttime="20200605 09:57:32.636"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/SessionService/</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_OK}]</arg>
</arguments>
<msg timestamp="20200605 09:57:32.643" level="INFO">Attempt 1 of /redfish/v1/SessionService/</msg>
<msg timestamp="20200605 09:57:32.666" level="INFO">Response Time to /redfish/v1/SessionService/: 0.0003 seconds.</msg>
<status status="PASS" endtime="20200605 09:57:32.667" starttime="20200605 09:57:32.636"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${SESSION_TIME_OUT_TEST}s</arg>
</arguments>
<msg timestamp="20200605 09:58:07.674" level="INFO">Slept 35 seconds</msg>
<status status="PASS" endtime="20200605 09:58:07.674" starttime="20200605 09:57:32.667"></status>
</kw>
<kw name="Set Session Key" library="Redfish">
<doc>Set session key</doc>
<arguments>
<arg>${saved_session_info["key"]}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:07.675" starttime="20200605 09:58:07.674"></status>
</kw>
<kw name="Set Session Location" library="Redfish">
<doc>Set session location</doc>
<arguments>
<arg>${saved_session_info["location"]}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:07.675" starttime="20200605 09:58:07.675"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>${saved_session_info["location"]}</arg>
<arg>valid_status_codes=[${HTTP_NOT_FOUND}]</arg>
</arguments>
<msg timestamp="20200605 09:58:07.681" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200605 09:58:07.706" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000299 seconds.</msg>
<status status="PASS" endtime="20200605 09:58:07.707" starttime="20200605 09:58:07.675"></status>
</kw>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:58:07.711" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:58:07.743" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000482 seconds.</msg>
<msg timestamp="20200605 09:58:07.743" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:58:07.743" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:58:07.743" starttime="20200605 09:58:07.707"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>ServiceEnabled=${true}</arg>
<arg>SessionTimeout=${600}</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:58:07.744" level="INFO">${payload} = {u'ServiceEnabled': True, u'SessionTimeout': 600}</msg>
<status status="PASS" endtime="20200605 09:58:07.744" starttime="20200605 09:58:07.744"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/SessionService/</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_OK}]</arg>
</arguments>
<msg timestamp="20200605 09:58:07.750" level="INFO">Attempt 1 of /redfish/v1/SessionService/</msg>
<msg timestamp="20200605 09:58:07.776" level="INFO">Response Time to /redfish/v1/SessionService/: 0.000267 seconds.</msg>
<status status="PASS" endtime="20200605 09:58:07.776" starttime="20200605 09:58:07.745"></status>
</kw>
<doc>Authenticate to redfish, then log out and attempt to
use the session.</doc>
<tags>
<tag>Attempt_Login_With_Expired_Session</tag>
</tags>
<status status="PASS" endtime="20200605 09:58:07.776" critical="yes" starttime="20200605 09:57:32.597"></status>
</test>
<doc>Test Redfish service root login security.</doc>
<status status="PASS" endtime="20200605 09:58:07.777" starttime="20200605 09:57:32.284"></status>
</suite>
<status status="PASS" endtime="20200605 09:58:07.779" starttime="20200605 09:57:31.532"></status>
</suite>
<suite source="/home/voltha/workspace/GPON/5_RF_Auto_Test/redfish/3_event_service" id="s1-s4" name="3 Event Service">
<suite source="/home/voltha/workspace/GPON/5_RF_Auto_Test/redfish/3_event_service/test_event_service.robot" id="s1-s4-s1" name="Test Event Service">
<test id="s1-s4-s1-t1" name="Verify Redfish Admin Add Event">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:58:07.832" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:58:07.860" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000587 seconds.</msg>
<msg timestamp="20200605 09:58:07.860" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:58:07.860" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:58:07.860" starttime="20200605 09:58:07.795"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:07.861" starttime="20200605 09:58:07.795"></status>
</kw>
<kw name="Redfish Admin Add Event">
<doc>Admin can add Subscribe Event</doc>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($EVENT_ALERT)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:58:07.864" level="INFO">${payload} = {u'EventTypes': [u'Alert'], u'Destination': u'https://172.17.10.60:8889', u'Protocol': u'Redfish', u'Name': u'This is Alert Subscription event test', u'Context': u'THIS IS TEST FROM AUTO TEST SUBS'}</msg>
<status status="PASS" endtime="20200605 09:58:07.864" starttime="20200605 09:58:07.861"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EventService/Subscriptions/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:07.874" level="INFO">Attempt 1 of /redfish/v1/EventService/Subscriptions/</msg>
<msg timestamp="20200605 09:58:07.901" level="INFO">Response Time to /redfish/v1/EventService/Subscriptions/: 0.000417 seconds.</msg>
<msg timestamp="20200605 09:58:07.901" level="INFO">${resp} = 201
date Fri, 05 Jun 2020 01:58:08 GMT
connection Keep-Alive
content-type application/json
content-length 0
location /redfish/v1/EventService/Subscriptions/1


</msg>
<status status="PASS" endtime="20200605 09:58:07.901" starttime="20200605 09:58:07.864"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200605 09:58:07.902" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:07.902" starttime="20200605 09:58:07.901"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($EVENT_RESOURCEADD)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:58:07.905" level="INFO">${payload} = {u'EventTypes': [u'ResourceAdded'], u'Destination': u'https://172.17.10.60:8889', u'Protocol': u'Redfish', u'Name': u'This is ResourceAdded Subscription event test', u'Context': u'THIS IS TEST FROM AU...</msg>
<status status="PASS" endtime="20200605 09:58:07.905" starttime="20200605 09:58:07.902"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EventService/Subscriptions/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:07.916" level="INFO">Attempt 1 of /redfish/v1/EventService/Subscriptions/</msg>
<msg timestamp="20200605 09:58:07.941" level="INFO">Response Time to /redfish/v1/EventService/Subscriptions/: 0.00038 seconds.</msg>
<msg timestamp="20200605 09:58:07.941" level="INFO">${resp} = 201
date Fri, 05 Jun 2020 01:58:08 GMT
connection Keep-Alive
content-type application/json
content-length 0
location /redfish/v1/EventService/Subscriptions/2


</msg>
<status status="PASS" endtime="20200605 09:58:07.941" starttime="20200605 09:58:07.905"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200605 09:58:07.942" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:07.942" starttime="20200605 09:58:07.941"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($EVENT_RESOURCEREMOVE)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:58:07.945" level="INFO">${payload} = {u'EventTypes': [u'ResourceRemoved'], u'Destination': u'https://172.17.10.60:8889', u'Protocol': u'Redfish', u'Name': u'This is ResourceRemoved Subscription event test', u'Context': u'THIS IS TEST FRO...</msg>
<status status="PASS" endtime="20200605 09:58:07.945" starttime="20200605 09:58:07.942"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EventService/Subscriptions/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:07.957" level="INFO">Attempt 1 of /redfish/v1/EventService/Subscriptions/</msg>
<msg timestamp="20200605 09:58:07.981" level="INFO">Response Time to /redfish/v1/EventService/Subscriptions/: 0.000445 seconds.</msg>
<msg timestamp="20200605 09:58:07.981" level="INFO">${resp} = 201
date Fri, 05 Jun 2020 01:58:08 GMT
connection Keep-Alive
content-type application/json
content-length 0
location /redfish/v1/EventService/Subscriptions/3


</msg>
<status status="PASS" endtime="20200605 09:58:07.981" starttime="20200605 09:58:07.945"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200605 09:58:07.982" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:07.982" starttime="20200605 09:58:07.981"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:07.982" starttime="20200605 09:58:07.861"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200605 09:58:07.997" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200605 09:58:08.021" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000367 seconds.</msg>
<msg timestamp="20200605 09:58:08.021" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200605 09:58:08.021" starttime="20200605 09:58:07.983"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:08.021" starttime="20200605 09:58:07.982"></status>
</kw>
<doc>Subscribe Event</doc>
<tags>
<tag>Admin Redfish_Add_Event</tag>
</tags>
<status status="PASS" endtime="20200605 09:58:08.021" critical="yes" starttime="20200605 09:58:07.794"></status>
</test>
<test id="s1-s4-s1-t2" name="Verify Redfish Admin Patch Event">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:58:08.029" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:58:08.057" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000508 seconds.</msg>
<msg timestamp="20200605 09:58:08.057" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:58:08.057" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:58:08.058" starttime="20200605 09:58:08.023"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:08.058" starttime="20200605 09:58:08.023"></status>
</kw>
<kw name="Redfish Admin Patch Event">
<doc>Admin can patch added Subscribe Event</doc>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($PATCH_EVENT_ALERT)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:58:08.062" level="INFO">${payload} = {u'Destination': u'https://172.17.10.60:8889', u'Name': u'This is Alert Subscription event patch test', u'Context': u'THIS IS PATCH TEST FROM AUTO TEST SUBS'}</msg>
<status status="PASS" endtime="20200605 09:58:08.062" starttime="20200605 09:58:08.058"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EventService/Subscriptions/1</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:08.074" level="INFO">Attempt 1 of /redfish/v1/EventService/Subscriptions/1</msg>
<msg timestamp="20200605 09:58:08.101" level="INFO">Response Time to /redfish/v1/EventService/Subscriptions/1: 0.000309 seconds.</msg>
<msg timestamp="20200605 09:58:08.102" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:58:08 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 09:58:08.102" starttime="20200605 09:58:08.062"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:58:08.102" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:08.102" starttime="20200605 09:58:08.102"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($PATCH_EVENT_RESOURCEADD)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:58:08.105" level="INFO">${payload} = {u'Destination': u'https://172.17.10.60:8889', u'Name': u'This is ResourceAdded Subscription event patch test', u'Context': u'THIS IS PATCH TEST FROM AUTO TEST SUBS'}</msg>
<status status="PASS" endtime="20200605 09:58:08.105" starttime="20200605 09:58:08.102"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EventService/Subscriptions/2</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:08.116" level="INFO">Attempt 1 of /redfish/v1/EventService/Subscriptions/2</msg>
<msg timestamp="20200605 09:58:08.141" level="INFO">Response Time to /redfish/v1/EventService/Subscriptions/2: 0.000309 seconds.</msg>
<msg timestamp="20200605 09:58:08.142" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:58:08 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 09:58:08.142" starttime="20200605 09:58:08.106"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:58:08.142" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:08.142" starttime="20200605 09:58:08.142"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($PATCH_EVENT_RESOURCEREMOVE)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:58:08.146" level="INFO">${payload} = {u'Destination': u'https://172.17.10.60:8889', u'Name': u'This is ResourceRemoved Subscription event patch test', u'Context': u'THIS IS PATCH TEST FROM AUTO TEST SUBS'}</msg>
<status status="PASS" endtime="20200605 09:58:08.146" starttime="20200605 09:58:08.143"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EventService/Subscriptions/3</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:08.156" level="INFO">Attempt 1 of /redfish/v1/EventService/Subscriptions/3</msg>
<msg timestamp="20200605 09:58:08.182" level="INFO">Response Time to /redfish/v1/EventService/Subscriptions/3: 0.000304000000001 seconds.</msg>
<msg timestamp="20200605 09:58:08.182" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:58:08 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 09:58:08.182" starttime="20200605 09:58:08.146"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:58:08.183" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:08.183" starttime="20200605 09:58:08.183"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($PATCH_EVENT_ALERT_NAME)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:58:08.186" level="INFO">${payload} = {u'Name': u'This is Alert Subscription event patch test name'}</msg>
<status status="PASS" endtime="20200605 09:58:08.186" starttime="20200605 09:58:08.183"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EventService/Subscriptions/1</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:08.203" level="INFO">Attempt 1 of /redfish/v1/EventService/Subscriptions/1</msg>
<msg timestamp="20200605 09:58:08.227" level="INFO">Response Time to /redfish/v1/EventService/Subscriptions/1: 0.000327 seconds.</msg>
<msg timestamp="20200605 09:58:08.227" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:58:08 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 09:58:08.227" starttime="20200605 09:58:08.186"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:58:08.228" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:08.228" starttime="20200605 09:58:08.227"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($PATCH_EVENT_RESOURCEADD_DES)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:58:08.231" level="INFO">${payload} = {u'Destination': u'https://172.17.10.60:8889ONLY'}</msg>
<status status="PASS" endtime="20200605 09:58:08.231" starttime="20200605 09:58:08.228"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EventService/Subscriptions/2</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:08.244" level="INFO">Attempt 1 of /redfish/v1/EventService/Subscriptions/2</msg>
<msg timestamp="20200605 09:58:08.270" level="INFO">Response Time to /redfish/v1/EventService/Subscriptions/2: 0.000315 seconds.</msg>
<msg timestamp="20200605 09:58:08.271" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:58:08 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 09:58:08.271" starttime="20200605 09:58:08.231"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:58:08.271" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:08.272" starttime="20200605 09:58:08.271"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($PATCH_EVENT_RESOURCEREMOVE_CONTEXT)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:58:08.275" level="INFO">${payload} = {u'Context': u'THIS IS PATCH TEST FROM AUTO TEST SUBS ONLY'}</msg>
<status status="PASS" endtime="20200605 09:58:08.275" starttime="20200605 09:58:08.272"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EventService/Subscriptions/3</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:08.286" level="INFO">Attempt 1 of /redfish/v1/EventService/Subscriptions/3</msg>
<msg timestamp="20200605 09:58:08.312" level="INFO">Response Time to /redfish/v1/EventService/Subscriptions/3: 0.000345 seconds.</msg>
<msg timestamp="20200605 09:58:08.312" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:58:08 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 09:58:08.312" starttime="20200605 09:58:08.275"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:58:08.313" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:08.313" starttime="20200605 09:58:08.313"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:08.313" starttime="20200605 09:58:08.058"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200605 09:58:08.325" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200605 09:58:08.348" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000345 seconds.</msg>
<msg timestamp="20200605 09:58:08.348" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200605 09:58:08.349" starttime="20200605 09:58:08.314"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:08.349" starttime="20200605 09:58:08.313"></status>
</kw>
<doc>Subscribe Event</doc>
<tags>
<tag>Admin Redfish_Patch_Event</tag>
</tags>
<status status="PASS" endtime="20200605 09:58:08.349" critical="yes" starttime="20200605 09:58:08.022"></status>
</test>
<test id="s1-s4-s1-t3" name="Verify Redfish Admin Del Event">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:58:08.356" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:58:08.385" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000622 seconds.</msg>
<msg timestamp="20200605 09:58:08.385" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:58:08.385" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:58:08.386" starttime="20200605 09:58:08.351"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:08.386" starttime="20200605 09:58:08.351"></status>
</kw>
<kw name="Redfish Admin Del Event">
<doc>Admin can Del Subscribed Event</doc>
<kw name="List Request" library="redfish_utils">
<doc>Perform a GET list request and return available resource paths.
Description of argument(s):
resource_path  URI resource absolute path
               (e.g. "/redfish/v1/SessionService/Sessions").</doc>
<arguments>
<arg>redfish/v1/EventService/Subscriptions/</arg>
</arguments>
<assign>
<var>${resp_list}</var>
</assign>
<msg timestamp="20200605 09:58:08.410" level="INFO">Attempt 1 of redfish/v1/EventService/Subscriptions/</msg>
<msg timestamp="20200605 09:58:08.436" level="INFO">Response Time to redfish/v1/EventService/Subscriptions/: 0.000395 seconds.</msg>
<msg timestamp="20200605 09:58:08.447" level="INFO">Attempt 1 of redfish/v1/EventService/Subscriptions</msg>
<msg timestamp="20200605 09:58:08.472" level="INFO">Response Time to redfish/v1/EventService/Subscriptions: 0.000391 seconds.</msg>
<msg timestamp="20200605 09:58:08.483" level="INFO">Attempt 1 of redfish/v1/EventService/Subscriptions/1</msg>
<msg timestamp="20200605 09:58:08.508" level="INFO">Response Time to redfish/v1/EventService/Subscriptions/1: 0.000394 seconds.</msg>
<msg timestamp="20200605 09:58:08.519" level="INFO">Attempt 1 of redfish/v1/EventService/Subscriptions/2</msg>
<msg timestamp="20200605 09:58:08.543" level="INFO">Response Time to redfish/v1/EventService/Subscriptions/2: 0.000589 seconds.</msg>
<msg timestamp="20200605 09:58:08.559" level="INFO">Attempt 1 of redfish/v1/EventService/Subscriptions/3</msg>
<msg timestamp="20200605 09:58:08.588" level="INFO">Response Time to redfish/v1/EventService/Subscriptions/3: 0.000569 seconds.</msg>
<msg timestamp="20200605 09:58:08.589" level="INFO">${resp_list} = [u'redfish/v1/EventService/Subscriptions', u'redfish/v1/EventService/Subscriptions/1', u'redfish/v1/EventService/Subscriptions/2', u'redfish/v1/EventService/Subscriptions/3']</msg>
<status status="PASS" endtime="20200605 09:58:08.589" starttime="20200605 09:58:08.386"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>${resp_list[1]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:08.610" level="INFO">Attempt 1 of redfish/v1/EventService/Subscriptions/1</msg>
<msg timestamp="20200605 09:58:08.639" level="INFO">Response Time to redfish/v1/EventService/Subscriptions/1: 0.000552000000001 seconds.</msg>
<msg timestamp="20200605 09:58:08.639" level="INFO">${resp} = 204
date Fri, 05 Jun 2020 01:58:08 GMT
connection Keep-Alive
content-type application/json


</msg>
<status status="PASS" endtime="20200605 09:58:08.639" starttime="20200605 09:58:08.589"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_NO_CONTENT}</arg>
</arguments>
<msg timestamp="20200605 09:58:08.640" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:08.641" starttime="20200605 09:58:08.640"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>${resp_list[2]}</arg>
</arguments>
<msg timestamp="20200605 09:58:08.660" level="INFO">Attempt 1 of redfish/v1/EventService/Subscriptions/2</msg>
<msg timestamp="20200605 09:58:08.686" level="INFO">Response Time to redfish/v1/EventService/Subscriptions/2: 0.000349 seconds.</msg>
<status status="PASS" endtime="20200605 09:58:08.686" starttime="20200605 09:58:08.641"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_NO_CONTENT}</arg>
</arguments>
<msg timestamp="20200605 09:58:08.687" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:08.687" starttime="20200605 09:58:08.686"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>${resp_list[3]}</arg>
</arguments>
<msg timestamp="20200605 09:58:08.701" level="INFO">Attempt 1 of redfish/v1/EventService/Subscriptions/3</msg>
<msg timestamp="20200605 09:58:08.725" level="INFO">Response Time to redfish/v1/EventService/Subscriptions/3: 0.000355 seconds.</msg>
<status status="PASS" endtime="20200605 09:58:08.726" starttime="20200605 09:58:08.687"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_NO_CONTENT}</arg>
</arguments>
<msg timestamp="20200605 09:58:08.726" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:08.726" starttime="20200605 09:58:08.726"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:08.727" starttime="20200605 09:58:08.386"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200605 09:58:08.747" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200605 09:58:08.772" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.00038 seconds.</msg>
<msg timestamp="20200605 09:58:08.772" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200605 09:58:08.773" starttime="20200605 09:58:08.727"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:08.773" starttime="20200605 09:58:08.727"></status>
</kw>
<doc>Del Subscribed Event</doc>
<tags>
<tag>Admin Redfish_Del_Event</tag>
</tags>
<status status="PASS" endtime="20200605 09:58:08.773" critical="yes" starttime="20200605 09:58:08.350"></status>
</test>
<test id="s1-s4-s1-t4" name="Verify Redfish Op Add Event">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:58:08.781" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:58:08.809" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000584 seconds.</msg>
<msg timestamp="20200605 09:58:08.810" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:58:08.810" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:58:08.810" starttime="20200605 09:58:08.776"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:08.810" starttime="20200605 09:58:08.775"></status>
</kw>
<kw name="Redfish Op Add Event">
<doc>Operator can add Subscribe Event</doc>
<kw name="Redfish Create User">
<doc>Redfish create user.</doc>
<arguments>
<arg>NewOp</arg>
<arg>OpUser</arg>
<arg>OpUserPwd</arg>
<arg>Operator</arg>
<arg>${False}</arg>
<arg>${True}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Name=${name}</arg>
<arg>UserName=${username}</arg>
<arg>Password=${password}</arg>
<arg>RoleId=${role_id}</arg>
<arg>Locked=${locked}</arg>
<arg>Enabled=${enabled}</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:58:08.812" level="INFO">${payload} = {u'Name': u'NewOp', u'UserName': u'OpUser', u'Password': u'OpUserPwd', u'RoleId': u'Operator', u'Locked': False, u'Enabled': True}</msg>
<status status="PASS" endtime="20200605 09:58:08.812" starttime="20200605 09:58:08.811"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_CREATED}]</arg>
</arguments>
<msg timestamp="20200605 09:58:08.826" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts</msg>
<msg timestamp="20200605 09:58:08.857" level="INFO">Response Time to /redfish/v1/AccountService/Accounts: 0.000483 seconds.</msg>
<status status="PASS" endtime="20200605 09:58:08.858" starttime="20200605 09:58:08.812"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:08.858" starttime="20200605 09:58:08.810"></status>
</kw>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200605 09:58:08.871" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200605 09:58:08.895" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000338999999999 seconds.</msg>
<msg timestamp="20200605 09:58:08.896" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200605 09:58:08.896" starttime="20200605 09:58:08.858"></status>
</kw>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<arguments>
<arg>OpUser</arg>
<arg>OpUserPwd</arg>
</arguments>
<msg timestamp="20200605 09:58:08.901" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:58:08.928" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.00053 seconds.</msg>
<msg timestamp="20200605 09:58:08.928" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'OpUser', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:58:08.928" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"OpUser","Id":1}</msg>
<status status="PASS" endtime="20200605 09:58:08.928" starttime="20200605 09:58:08.896"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($EVENT_ALERT)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:58:08.932" level="INFO">${payload} = {u'EventTypes': [u'Alert'], u'Destination': u'https://172.17.10.60:8889', u'Protocol': u'Redfish', u'Name': u'This is Alert Subscription event test', u'Context': u'THIS IS TEST FROM AUTO TEST SUBS'}</msg>
<status status="PASS" endtime="20200605 09:58:08.932" starttime="20200605 09:58:08.929"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EventService/Subscriptions/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:08.944" level="INFO">Attempt 1 of /redfish/v1/EventService/Subscriptions/</msg>
<msg timestamp="20200605 09:58:08.972" level="INFO">Response Time to /redfish/v1/EventService/Subscriptions/: 0.000428 seconds.</msg>
<msg timestamp="20200605 09:58:08.973" level="INFO">${resp} = 201
date Fri, 05 Jun 2020 01:58:09 GMT
connection Keep-Alive
content-type application/json
content-length 0
location /redfish/v1/EventService/Subscriptions/1


</msg>
<status status="PASS" endtime="20200605 09:58:08.973" starttime="20200605 09:58:08.932"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200605 09:58:08.973" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:08.973" starttime="20200605 09:58:08.973"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($EVENT_RESOURCEADD)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:58:08.977" level="INFO">${payload} = {u'EventTypes': [u'ResourceAdded'], u'Destination': u'https://172.17.10.60:8889', u'Protocol': u'Redfish', u'Name': u'This is ResourceAdded Subscription event test', u'Context': u'THIS IS TEST FROM AU...</msg>
<status status="PASS" endtime="20200605 09:58:08.977" starttime="20200605 09:58:08.974"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EventService/Subscriptions/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:08.990" level="INFO">Attempt 1 of /redfish/v1/EventService/Subscriptions/</msg>
<msg timestamp="20200605 09:58:09.015" level="INFO">Response Time to /redfish/v1/EventService/Subscriptions/: 0.000395 seconds.</msg>
<msg timestamp="20200605 09:58:09.015" level="INFO">${resp} = 201
date Fri, 05 Jun 2020 01:58:09 GMT
connection Keep-Alive
content-type application/json
content-length 0
location /redfish/v1/EventService/Subscriptions/2


</msg>
<status status="PASS" endtime="20200605 09:58:09.015" starttime="20200605 09:58:08.977"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200605 09:58:09.016" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:09.016" starttime="20200605 09:58:09.015"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($EVENT_RESOURCEREMOVE)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:58:09.019" level="INFO">${payload} = {u'EventTypes': [u'ResourceRemoved'], u'Destination': u'https://172.17.10.60:8889', u'Protocol': u'Redfish', u'Name': u'This is ResourceRemoved Subscription event test', u'Context': u'THIS IS TEST FRO...</msg>
<status status="PASS" endtime="20200605 09:58:09.019" starttime="20200605 09:58:09.016"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EventService/Subscriptions/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:09.032" level="INFO">Attempt 1 of /redfish/v1/EventService/Subscriptions/</msg>
<msg timestamp="20200605 09:58:09.058" level="INFO">Response Time to /redfish/v1/EventService/Subscriptions/: 0.000404000000001 seconds.</msg>
<msg timestamp="20200605 09:58:09.058" level="INFO">${resp} = 201
date Fri, 05 Jun 2020 01:58:09 GMT
connection Keep-Alive
content-type application/json
content-length 0
location /redfish/v1/EventService/Subscriptions/3


</msg>
<status status="PASS" endtime="20200605 09:58:09.059" starttime="20200605 09:58:09.019"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200605 09:58:09.059" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:09.059" starttime="20200605 09:58:09.059"></status>
</kw>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200605 09:58:09.071" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200605 09:58:09.095" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000334000000001 seconds.</msg>
<msg timestamp="20200605 09:58:09.095" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200605 09:58:09.095" starttime="20200605 09:58:09.059"></status>
</kw>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:58:09.100" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:58:09.127" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000504 seconds.</msg>
<msg timestamp="20200605 09:58:09.128" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:58:09.128" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:58:09.128" starttime="20200605 09:58:09.096"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:09.128" starttime="20200605 09:58:08.810"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200605 09:58:09.140" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200605 09:58:09.164" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000342 seconds.</msg>
<msg timestamp="20200605 09:58:09.165" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200605 09:58:09.165" starttime="20200605 09:58:09.129"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:09.165" starttime="20200605 09:58:09.128"></status>
</kw>
<doc>Subscribe Event</doc>
<tags>
<tag>Op Redfish_Add_Event</tag>
</tags>
<status status="PASS" endtime="20200605 09:58:09.165" critical="yes" starttime="20200605 09:58:08.774"></status>
</test>
<test id="s1-s4-s1-t5" name="Verify Redfish Op Del Event">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:58:09.172" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:58:09.200" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000517 seconds.</msg>
<msg timestamp="20200605 09:58:09.200" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:58:09.200" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:58:09.201" starttime="20200605 09:58:09.167"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:09.201" starttime="20200605 09:58:09.167"></status>
</kw>
<kw name="Redfish Op Del Event">
<doc>Operator can del Subscribed Event</doc>
<kw name="Redfish Create User">
<doc>Redfish create user.</doc>
<arguments>
<arg>NewOp</arg>
<arg>OpUser</arg>
<arg>OpUserPwd</arg>
<arg>Operator</arg>
<arg>${False}</arg>
<arg>${True}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Name=${name}</arg>
<arg>UserName=${username}</arg>
<arg>Password=${password}</arg>
<arg>RoleId=${role_id}</arg>
<arg>Locked=${locked}</arg>
<arg>Enabled=${enabled}</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:58:09.202" level="INFO">${payload} = {u'Name': u'NewOp', u'UserName': u'OpUser', u'Password': u'OpUserPwd', u'RoleId': u'Operator', u'Locked': False, u'Enabled': True}</msg>
<status status="PASS" endtime="20200605 09:58:09.202" starttime="20200605 09:58:09.202"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_CREATED}]</arg>
</arguments>
<msg timestamp="20200605 09:58:09.215" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts</msg>
<msg timestamp="20200605 09:58:09.249" level="INFO">Response Time to /redfish/v1/AccountService/Accounts: 0.000499 seconds.</msg>
<status status="PASS" endtime="20200605 09:58:09.250" starttime="20200605 09:58:09.203"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:09.250" starttime="20200605 09:58:09.201"></status>
</kw>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200605 09:58:09.265" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200605 09:58:09.289" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000369 seconds.</msg>
<msg timestamp="20200605 09:58:09.290" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200605 09:58:09.290" starttime="20200605 09:58:09.250"></status>
</kw>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<arguments>
<arg>OpUser</arg>
<arg>OpUserPwd</arg>
</arguments>
<msg timestamp="20200605 09:58:09.295" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:58:09.325" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000513 seconds.</msg>
<msg timestamp="20200605 09:58:09.325" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'OpUser', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:58:09.325" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"OpUser","Id":1}</msg>
<status status="PASS" endtime="20200605 09:58:09.325" starttime="20200605 09:58:09.290"></status>
</kw>
<kw name="List Request" library="redfish_utils">
<doc>Perform a GET list request and return available resource paths.
Description of argument(s):
resource_path  URI resource absolute path
               (e.g. "/redfish/v1/SessionService/Sessions").</doc>
<arguments>
<arg>redfish/v1/EventService/Subscriptions/</arg>
</arguments>
<assign>
<var>${resp_list}</var>
</assign>
<msg timestamp="20200605 09:58:09.346" level="INFO">Attempt 1 of redfish/v1/EventService/Subscriptions/</msg>
<msg timestamp="20200605 09:58:09.372" level="INFO">Response Time to redfish/v1/EventService/Subscriptions/: 0.000303000000001 seconds.</msg>
<msg timestamp="20200605 09:58:09.380" level="INFO">Attempt 1 of redfish/v1/EventService/Subscriptions</msg>
<msg timestamp="20200605 09:58:09.405" level="INFO">Response Time to redfish/v1/EventService/Subscriptions: 0.000304 seconds.</msg>
<msg timestamp="20200605 09:58:09.413" level="INFO">Attempt 1 of redfish/v1/EventService/Subscriptions/1</msg>
<msg timestamp="20200605 09:58:09.439" level="INFO">Response Time to redfish/v1/EventService/Subscriptions/1: 0.000322000000001 seconds.</msg>
<msg timestamp="20200605 09:58:09.447" level="INFO">Attempt 1 of redfish/v1/EventService/Subscriptions/2</msg>
<msg timestamp="20200605 09:58:09.473" level="INFO">Response Time to redfish/v1/EventService/Subscriptions/2: 0.000383999999999 seconds.</msg>
<msg timestamp="20200605 09:58:09.483" level="INFO">Attempt 1 of redfish/v1/EventService/Subscriptions/3</msg>
<msg timestamp="20200605 09:58:09.508" level="INFO">Response Time to redfish/v1/EventService/Subscriptions/3: 0.000370999999999 seconds.</msg>
<msg timestamp="20200605 09:58:09.509" level="INFO">${resp_list} = [u'redfish/v1/EventService/Subscriptions', u'redfish/v1/EventService/Subscriptions/1', u'redfish/v1/EventService/Subscriptions/2', u'redfish/v1/EventService/Subscriptions/3']</msg>
<status status="PASS" endtime="20200605 09:58:09.509" starttime="20200605 09:58:09.326"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>${resp_list[1]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:09.523" level="INFO">Attempt 1 of redfish/v1/EventService/Subscriptions/1</msg>
<msg timestamp="20200605 09:58:09.550" level="INFO">Response Time to redfish/v1/EventService/Subscriptions/1: 0.000307 seconds.</msg>
<msg timestamp="20200605 09:58:09.550" level="INFO">${resp} = 204
date Fri, 05 Jun 2020 01:58:09 GMT
connection Keep-Alive
content-type application/json


</msg>
<status status="PASS" endtime="20200605 09:58:09.551" starttime="20200605 09:58:09.509"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_NO_CONTENT}</arg>
</arguments>
<msg timestamp="20200605 09:58:09.551" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:09.551" starttime="20200605 09:58:09.551"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>${resp_list[2]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:09.563" level="INFO">Attempt 1 of redfish/v1/EventService/Subscriptions/2</msg>
<msg timestamp="20200605 09:58:09.589" level="INFO">Response Time to redfish/v1/EventService/Subscriptions/2: 0.00031 seconds.</msg>
<msg timestamp="20200605 09:58:09.590" level="INFO">${resp} = 204
date Fri, 05 Jun 2020 01:58:09 GMT
connection Keep-Alive
content-type application/json


</msg>
<status status="PASS" endtime="20200605 09:58:09.590" starttime="20200605 09:58:09.551"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_NO_CONTENT}</arg>
</arguments>
<msg timestamp="20200605 09:58:09.591" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:09.591" starttime="20200605 09:58:09.590"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>${resp_list[3]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:09.602" level="INFO">Attempt 1 of redfish/v1/EventService/Subscriptions/3</msg>
<msg timestamp="20200605 09:58:09.627" level="INFO">Response Time to redfish/v1/EventService/Subscriptions/3: 0.000264 seconds.</msg>
<msg timestamp="20200605 09:58:09.627" level="INFO">${resp} = 204
date Fri, 05 Jun 2020 01:58:09 GMT
connection Keep-Alive
content-type application/json


</msg>
<status status="PASS" endtime="20200605 09:58:09.627" starttime="20200605 09:58:09.591"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_NO_CONTENT}</arg>
</arguments>
<msg timestamp="20200605 09:58:09.628" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:09.628" starttime="20200605 09:58:09.627"></status>
</kw>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200605 09:58:09.638" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200605 09:58:09.662" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.00027 seconds.</msg>
<msg timestamp="20200605 09:58:09.662" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200605 09:58:09.662" starttime="20200605 09:58:09.628"></status>
</kw>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:58:09.667" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:58:09.697" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000401 seconds.</msg>
<msg timestamp="20200605 09:58:09.698" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:58:09.698" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:58:09.698" starttime="20200605 09:58:09.662"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts/OpUser</arg>
</arguments>
<msg timestamp="20200605 09:58:09.708" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/OpUser</msg>
<msg timestamp="20200605 09:58:09.732" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/OpUser: 0.000276 seconds.</msg>
<status status="PASS" endtime="20200605 09:58:09.732" starttime="20200605 09:58:09.698"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:09.732" starttime="20200605 09:58:09.201"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200605 09:58:09.743" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200605 09:58:09.763" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000262 seconds.</msg>
<msg timestamp="20200605 09:58:09.764" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200605 09:58:09.764" starttime="20200605 09:58:09.733"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:09.764" starttime="20200605 09:58:09.733"></status>
</kw>
<doc>Del Subscribed Event</doc>
<tags>
<tag>Op Redfish_Del_Event</tag>
</tags>
<status status="PASS" endtime="20200605 09:58:09.764" critical="yes" starttime="20200605 09:58:09.166"></status>
</test>
<test id="s1-s4-s1-t6" name="Verify Redfish ReadOnlyUser Add Event">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:58:09.770" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:58:09.799" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000457 seconds.</msg>
<msg timestamp="20200605 09:58:09.800" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:58:09.800" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:58:09.800" starttime="20200605 09:58:09.765"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:09.800" starttime="20200605 09:58:09.765"></status>
</kw>
<kw name="Redfish ReadOnlyUser Add Event">
<doc>ReadOnly User can't Subscribe Event</doc>
<kw name="Redfish Create User">
<doc>Redfish create user.</doc>
<arguments>
<arg>NewReadOnlyUser</arg>
<arg>ReadOnlyUser1</arg>
<arg>UserPwd</arg>
<arg>ReadOnlyUser</arg>
<arg>${False}</arg>
<arg>${True}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Name=${name}</arg>
<arg>UserName=${username}</arg>
<arg>Password=${password}</arg>
<arg>RoleId=${role_id}</arg>
<arg>Locked=${locked}</arg>
<arg>Enabled=${enabled}</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:58:09.801" level="INFO">${payload} = {u'Name': u'NewReadOnlyUser', u'UserName': u'ReadOnlyUser1', u'Password': u'UserPwd', u'RoleId': u'ReadOnlyUser', u'Locked': False, u'Enabled': True}</msg>
<status status="PASS" endtime="20200605 09:58:09.801" starttime="20200605 09:58:09.801"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_CREATED}]</arg>
</arguments>
<msg timestamp="20200605 09:58:09.813" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts</msg>
<msg timestamp="20200605 09:58:09.845" level="INFO">Response Time to /redfish/v1/AccountService/Accounts: 0.000426 seconds.</msg>
<status status="PASS" endtime="20200605 09:58:09.845" starttime="20200605 09:58:09.802"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:09.845" starttime="20200605 09:58:09.800"></status>
</kw>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200605 09:58:09.856" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200605 09:58:09.880" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000328 seconds.</msg>
<msg timestamp="20200605 09:58:09.880" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200605 09:58:09.881" starttime="20200605 09:58:09.845"></status>
</kw>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<arguments>
<arg>ReadOnlyUser1</arg>
<arg>UserPwd</arg>
</arguments>
<msg timestamp="20200605 09:58:09.887" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:58:09.915" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.0006 seconds.</msg>
<msg timestamp="20200605 09:58:09.915" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'ReadOnlyUser1', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:58:09.916" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"ReadOnlyUser1","Id":1}</msg>
<status status="PASS" endtime="20200605 09:58:09.916" starttime="20200605 09:58:09.881"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($EVENT_ALERT)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:58:09.920" level="INFO">${payload} = {u'EventTypes': [u'Alert'], u'Destination': u'https://172.17.10.60:8889', u'Protocol': u'Redfish', u'Name': u'This is Alert Subscription event test', u'Context': u'THIS IS TEST FROM AUTO TEST SUBS'}</msg>
<status status="PASS" endtime="20200605 09:58:09.920" starttime="20200605 09:58:09.916"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EventService/Subscriptions/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:09.933" level="INFO">Attempt 1 of /redfish/v1/EventService/Subscriptions/</msg>
<msg timestamp="20200605 09:58:09.956" level="INFO">Response Time to /redfish/v1/EventService/Subscriptions/: 0.000366000000001 seconds.</msg>
<msg timestamp="20200605 09:58:09.957" level="INFO">${resp} = 401
date Fri, 05 Jun 2020 01:58:10 GMT
connection Keep-Alive
content-type application/json
content-length 211


{"error":{"code":"Base.1.0.ResourceAtUriUnauthorized","message":"While accessing the res...</msg>
<status status="PASS" endtime="20200605 09:58:09.957" starttime="20200605 09:58:09.920"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_UNAUTHORIZED}</arg>
</arguments>
<msg timestamp="20200605 09:58:09.957" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:09.957" starttime="20200605 09:58:09.957"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($EVENT_RESOURCEADD)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:58:09.961" level="INFO">${payload} = {u'EventTypes': [u'ResourceAdded'], u'Destination': u'https://172.17.10.60:8889', u'Protocol': u'Redfish', u'Name': u'This is ResourceAdded Subscription event test', u'Context': u'THIS IS TEST FROM AU...</msg>
<status status="PASS" endtime="20200605 09:58:09.961" starttime="20200605 09:58:09.958"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EventService/Subscriptions/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:09.973" level="INFO">Attempt 1 of /redfish/v1/EventService/Subscriptions/</msg>
<msg timestamp="20200605 09:58:09.998" level="INFO">Response Time to /redfish/v1/EventService/Subscriptions/: 0.000331 seconds.</msg>
<msg timestamp="20200605 09:58:09.999" level="INFO">${resp} = 401
date Fri, 05 Jun 2020 01:58:10 GMT
connection Keep-Alive
content-type application/json
content-length 211


{"error":{"code":"Base.1.0.ResourceAtUriUnauthorized","message":"While accessing the res...</msg>
<status status="PASS" endtime="20200605 09:58:09.999" starttime="20200605 09:58:09.961"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_UNAUTHORIZED}</arg>
</arguments>
<msg timestamp="20200605 09:58:10.000" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:10.000" starttime="20200605 09:58:09.999"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($EVENT_RESOURCEREMOVE)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:58:10.003" level="INFO">${payload} = {u'EventTypes': [u'ResourceRemoved'], u'Destination': u'https://172.17.10.60:8889', u'Protocol': u'Redfish', u'Name': u'This is ResourceRemoved Subscription event test', u'Context': u'THIS IS TEST FRO...</msg>
<status status="PASS" endtime="20200605 09:58:10.003" starttime="20200605 09:58:10.000"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EventService/Subscriptions/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:10.014" level="INFO">Attempt 1 of /redfish/v1/EventService/Subscriptions/</msg>
<msg timestamp="20200605 09:58:10.038" level="INFO">Response Time to /redfish/v1/EventService/Subscriptions/: 0.000315 seconds.</msg>
<msg timestamp="20200605 09:58:10.039" level="INFO">${resp} = 401
date Fri, 05 Jun 2020 01:58:10 GMT
connection Keep-Alive
content-type application/json
content-length 211


{"error":{"code":"Base.1.0.ResourceAtUriUnauthorized","message":"While accessing the res...</msg>
<status status="PASS" endtime="20200605 09:58:10.039" starttime="20200605 09:58:10.003"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_UNAUTHORIZED}</arg>
</arguments>
<msg timestamp="20200605 09:58:10.039" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:10.039" starttime="20200605 09:58:10.039"></status>
</kw>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200605 09:58:10.051" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200605 09:58:10.078" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000301 seconds.</msg>
<msg timestamp="20200605 09:58:10.078" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200605 09:58:10.078" starttime="20200605 09:58:10.039"></status>
</kw>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:58:10.083" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:58:10.110" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000441 seconds.</msg>
<msg timestamp="20200605 09:58:10.111" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:58:10.111" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:58:10.111" starttime="20200605 09:58:10.079"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts/OpUser</arg>
</arguments>
<msg timestamp="20200605 09:58:10.122" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/OpUser</msg>
<msg timestamp="20200605 09:58:10.145" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/OpUser: 0.000336 seconds.</msg>
<status status="PASS" endtime="20200605 09:58:10.145" starttime="20200605 09:58:10.111"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:10.145" starttime="20200605 09:58:09.800"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200605 09:58:10.156" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200605 09:58:10.183" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000307 seconds.</msg>
<msg timestamp="20200605 09:58:10.183" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200605 09:58:10.183" starttime="20200605 09:58:10.146"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:10.183" starttime="20200605 09:58:10.145"></status>
</kw>
<doc>Subscribe Event</doc>
<tags>
<tag>ReadOnlyUser Redfish_Add_Event</tag>
</tags>
<status status="PASS" endtime="20200605 09:58:10.183" critical="yes" starttime="20200605 09:58:09.764"></status>
</test>
<test id="s1-s4-s1-t7" name="Verify Redfish Op Add Event">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:58:10.189" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:58:10.216" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000477 seconds.</msg>
<msg timestamp="20200605 09:58:10.216" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:58:10.216" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:58:10.216" starttime="20200605 09:58:10.185"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:10.216" starttime="20200605 09:58:10.184"></status>
</kw>
<kw name="Redfish Op Add Event">
<doc>Operator can add Subscribe Event</doc>
<kw name="Redfish Create User">
<doc>Redfish create user.</doc>
<arguments>
<arg>NewOp</arg>
<arg>OpUser</arg>
<arg>OpUserPwd</arg>
<arg>Operator</arg>
<arg>${False}</arg>
<arg>${True}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Name=${name}</arg>
<arg>UserName=${username}</arg>
<arg>Password=${password}</arg>
<arg>RoleId=${role_id}</arg>
<arg>Locked=${locked}</arg>
<arg>Enabled=${enabled}</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:58:10.218" level="INFO">${payload} = {u'Name': u'NewOp', u'UserName': u'OpUser', u'Password': u'OpUserPwd', u'RoleId': u'Operator', u'Locked': False, u'Enabled': True}</msg>
<status status="PASS" endtime="20200605 09:58:10.218" starttime="20200605 09:58:10.217"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_CREATED}]</arg>
</arguments>
<msg timestamp="20200605 09:58:10.230" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts</msg>
<msg timestamp="20200605 09:58:10.260" level="INFO">Response Time to /redfish/v1/AccountService/Accounts: 0.000428 seconds.</msg>
<status status="PASS" endtime="20200605 09:58:10.260" starttime="20200605 09:58:10.218"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:10.261" starttime="20200605 09:58:10.217"></status>
</kw>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200605 09:58:10.273" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200605 09:58:10.299" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000369 seconds.</msg>
<msg timestamp="20200605 09:58:10.299" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200605 09:58:10.299" starttime="20200605 09:58:10.261"></status>
</kw>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<arguments>
<arg>OpUser</arg>
<arg>OpUserPwd</arg>
</arguments>
<msg timestamp="20200605 09:58:10.305" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:58:10.332" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000569 seconds.</msg>
<msg timestamp="20200605 09:58:10.333" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'OpUser', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:58:10.333" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"OpUser","Id":1}</msg>
<status status="PASS" endtime="20200605 09:58:10.333" starttime="20200605 09:58:10.299"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($EVENT_ALERT)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:58:10.337" level="INFO">${payload} = {u'EventTypes': [u'Alert'], u'Destination': u'https://172.17.10.60:8889', u'Protocol': u'Redfish', u'Name': u'This is Alert Subscription event test', u'Context': u'THIS IS TEST FROM AUTO TEST SUBS'}</msg>
<status status="PASS" endtime="20200605 09:58:10.337" starttime="20200605 09:58:10.333"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EventService/Subscriptions/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:10.351" level="INFO">Attempt 1 of /redfish/v1/EventService/Subscriptions/</msg>
<msg timestamp="20200605 09:58:10.377" level="INFO">Response Time to /redfish/v1/EventService/Subscriptions/: 0.000446 seconds.</msg>
<msg timestamp="20200605 09:58:10.377" level="INFO">${resp} = 201
date Fri, 05 Jun 2020 01:58:10 GMT
connection Keep-Alive
content-type application/json
content-length 0
location /redfish/v1/EventService/Subscriptions/1


</msg>
<status status="PASS" endtime="20200605 09:58:10.377" starttime="20200605 09:58:10.338"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200605 09:58:10.378" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:10.378" starttime="20200605 09:58:10.377"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($EVENT_RESOURCEADD)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:58:10.382" level="INFO">${payload} = {u'EventTypes': [u'ResourceAdded'], u'Destination': u'https://172.17.10.60:8889', u'Protocol': u'Redfish', u'Name': u'This is ResourceAdded Subscription event test', u'Context': u'THIS IS TEST FROM AU...</msg>
<status status="PASS" endtime="20200605 09:58:10.382" starttime="20200605 09:58:10.378"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EventService/Subscriptions/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:10.395" level="INFO">Attempt 1 of /redfish/v1/EventService/Subscriptions/</msg>
<msg timestamp="20200605 09:58:10.423" level="INFO">Response Time to /redfish/v1/EventService/Subscriptions/: 0.000462 seconds.</msg>
<msg timestamp="20200605 09:58:10.423" level="INFO">${resp} = 201
date Fri, 05 Jun 2020 01:58:10 GMT
connection Keep-Alive
content-type application/json
content-length 0
location /redfish/v1/EventService/Subscriptions/2


</msg>
<status status="PASS" endtime="20200605 09:58:10.423" starttime="20200605 09:58:10.382"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200605 09:58:10.424" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:10.424" starttime="20200605 09:58:10.424"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($EVENT_RESOURCEREMOVE)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:58:10.428" level="INFO">${payload} = {u'EventTypes': [u'ResourceRemoved'], u'Destination': u'https://172.17.10.60:8889', u'Protocol': u'Redfish', u'Name': u'This is ResourceRemoved Subscription event test', u'Context': u'THIS IS TEST FRO...</msg>
<status status="PASS" endtime="20200605 09:58:10.428" starttime="20200605 09:58:10.424"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EventService/Subscriptions/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:10.442" level="INFO">Attempt 1 of /redfish/v1/EventService/Subscriptions/</msg>
<msg timestamp="20200605 09:58:10.466" level="INFO">Response Time to /redfish/v1/EventService/Subscriptions/: 0.000451 seconds.</msg>
<msg timestamp="20200605 09:58:10.466" level="INFO">${resp} = 201
date Fri, 05 Jun 2020 01:58:10 GMT
connection Keep-Alive
content-type application/json
content-length 0
location /redfish/v1/EventService/Subscriptions/3


</msg>
<status status="PASS" endtime="20200605 09:58:10.466" starttime="20200605 09:58:10.428"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200605 09:58:10.467" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:10.467" starttime="20200605 09:58:10.467"></status>
</kw>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200605 09:58:10.481" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200605 09:58:10.507" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000365 seconds.</msg>
<msg timestamp="20200605 09:58:10.508" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200605 09:58:10.508" starttime="20200605 09:58:10.467"></status>
</kw>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:58:10.514" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:58:10.545" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000562 seconds.</msg>
<msg timestamp="20200605 09:58:10.546" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:58:10.546" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:58:10.546" starttime="20200605 09:58:10.508"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:10.546" starttime="20200605 09:58:10.217"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200605 09:58:10.560" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200605 09:58:10.583" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000364 seconds.</msg>
<msg timestamp="20200605 09:58:10.584" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200605 09:58:10.584" starttime="20200605 09:58:10.547"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:10.584" starttime="20200605 09:58:10.546"></status>
</kw>
<doc>Subscribe Event</doc>
<tags>
<tag>Op Redfish_Add_Event</tag>
</tags>
<status status="PASS" endtime="20200605 09:58:10.584" critical="yes" starttime="20200605 09:58:10.184"></status>
</test>
<test id="s1-s4-s1-t8" name="Verify Redfish ReadOnlyUser Del Event">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:58:10.591" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:58:10.623" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000586 seconds.</msg>
<msg timestamp="20200605 09:58:10.623" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:58:10.624" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:58:10.624" starttime="20200605 09:58:10.586"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:10.624" starttime="20200605 09:58:10.585"></status>
</kw>
<kw name="Redfish ReadOnlyUser Del Event">
<doc>ReadOnly User can't del Subscribed Event</doc>
<kw name="Redfish Create User">
<doc>Redfish create user.</doc>
<arguments>
<arg>NewReadOnlyUser</arg>
<arg>ReadOnlyUser1</arg>
<arg>UserPwd</arg>
<arg>ReadOnlyUser</arg>
<arg>${False}</arg>
<arg>${True}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Name=${name}</arg>
<arg>UserName=${username}</arg>
<arg>Password=${password}</arg>
<arg>RoleId=${role_id}</arg>
<arg>Locked=${locked}</arg>
<arg>Enabled=${enabled}</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:58:10.626" level="INFO">${payload} = {u'Name': u'NewReadOnlyUser', u'UserName': u'ReadOnlyUser1', u'Password': u'UserPwd', u'RoleId': u'ReadOnlyUser', u'Locked': False, u'Enabled': True}</msg>
<status status="PASS" endtime="20200605 09:58:10.626" starttime="20200605 09:58:10.625"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_CREATED}]</arg>
</arguments>
<msg timestamp="20200605 09:58:10.641" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts</msg>
<msg timestamp="20200605 09:58:10.668" level="INFO">Response Time to /redfish/v1/AccountService/Accounts: 0.000459 seconds.</msg>
<status status="PASS" endtime="20200605 09:58:10.668" starttime="20200605 09:58:10.626"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:10.668" starttime="20200605 09:58:10.624"></status>
</kw>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200605 09:58:10.682" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200605 09:58:10.709" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.00037 seconds.</msg>
<msg timestamp="20200605 09:58:10.710" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200605 09:58:10.710" starttime="20200605 09:58:10.669"></status>
</kw>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<arguments>
<arg>ReadOnlyUser1</arg>
<arg>UserPwd</arg>
</arguments>
<msg timestamp="20200605 09:58:10.716" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:58:10.743" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000525 seconds.</msg>
<msg timestamp="20200605 09:58:10.744" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'ReadOnlyUser1', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:58:10.744" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"ReadOnlyUser1","Id":1}</msg>
<status status="PASS" endtime="20200605 09:58:10.744" starttime="20200605 09:58:10.710"></status>
</kw>
<kw name="List Request" library="redfish_utils">
<doc>Perform a GET list request and return available resource paths.
Description of argument(s):
resource_path  URI resource absolute path
               (e.g. "/redfish/v1/SessionService/Sessions").</doc>
<arguments>
<arg>redfish/v1/EventService/Subscriptions/</arg>
</arguments>
<assign>
<var>${resp_list}</var>
</assign>
<msg timestamp="20200605 09:58:10.765" level="INFO">Attempt 1 of redfish/v1/EventService/Subscriptions/</msg>
<msg timestamp="20200605 09:58:10.792" level="INFO">Response Time to redfish/v1/EventService/Subscriptions/: 0.000332 seconds.</msg>
<msg timestamp="20200605 09:58:10.801" level="INFO">Attempt 1 of redfish/v1/EventService/Subscriptions</msg>
<msg timestamp="20200605 09:58:10.825" level="INFO">Response Time to redfish/v1/EventService/Subscriptions: 0.000321 seconds.</msg>
<msg timestamp="20200605 09:58:10.834" level="INFO">Attempt 1 of redfish/v1/EventService/Subscriptions/1</msg>
<msg timestamp="20200605 09:58:10.858" level="INFO">Response Time to redfish/v1/EventService/Subscriptions/1: 0.000332 seconds.</msg>
<msg timestamp="20200605 09:58:10.867" level="INFO">Attempt 1 of redfish/v1/EventService/Subscriptions/2</msg>
<msg timestamp="20200605 09:58:10.891" level="INFO">Response Time to redfish/v1/EventService/Subscriptions/2: 0.000323999999999 seconds.</msg>
<msg timestamp="20200605 09:58:10.900" level="INFO">Attempt 1 of redfish/v1/EventService/Subscriptions/3</msg>
<msg timestamp="20200605 09:58:10.920" level="INFO">Response Time to redfish/v1/EventService/Subscriptions/3: 0.000303000000001 seconds.</msg>
<msg timestamp="20200605 09:58:10.921" level="INFO">${resp_list} = [u'redfish/v1/EventService/Subscriptions', u'redfish/v1/EventService/Subscriptions/1', u'redfish/v1/EventService/Subscriptions/2', u'redfish/v1/EventService/Subscriptions/3']</msg>
<status status="PASS" endtime="20200605 09:58:10.921" starttime="20200605 09:58:10.744"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>${resp_list[1]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:10.932" level="INFO">Attempt 1 of redfish/v1/EventService/Subscriptions/1</msg>
<msg timestamp="20200605 09:58:10.955" level="INFO">Response Time to redfish/v1/EventService/Subscriptions/1: 0.000339 seconds.</msg>
<msg timestamp="20200605 09:58:10.955" level="INFO">${resp} = 401
date Fri, 05 Jun 2020 01:58:11 GMT
connection Keep-Alive
content-type application/json
content-length 211


{"error":{"code":"Base.1.0.ResourceAtUriUnauthorized","message":"While accessing the res...</msg>
<status status="PASS" endtime="20200605 09:58:10.955" starttime="20200605 09:58:10.921"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_UNAUTHORIZED}</arg>
</arguments>
<msg timestamp="20200605 09:58:10.956" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:10.956" starttime="20200605 09:58:10.956"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>${resp_list[2]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:10.967" level="INFO">Attempt 1 of redfish/v1/EventService/Subscriptions/2</msg>
<msg timestamp="20200605 09:58:10.989" level="INFO">Response Time to redfish/v1/EventService/Subscriptions/2: 0.000310000000001 seconds.</msg>
<msg timestamp="20200605 09:58:10.989" level="INFO">${resp} = 401
date Fri, 05 Jun 2020 01:58:11 GMT
connection Keep-Alive
content-type application/json
content-length 211


{"error":{"code":"Base.1.0.ResourceAtUriUnauthorized","message":"While accessing the res...</msg>
<status status="PASS" endtime="20200605 09:58:10.989" starttime="20200605 09:58:10.956"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_UNAUTHORIZED}</arg>
</arguments>
<msg timestamp="20200605 09:58:10.990" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:10.990" starttime="20200605 09:58:10.990"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>${resp_list[3]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:11.001" level="INFO">Attempt 1 of redfish/v1/EventService/Subscriptions/3</msg>
<msg timestamp="20200605 09:58:11.029" level="INFO">Response Time to redfish/v1/EventService/Subscriptions/3: 0.000328999999999 seconds.</msg>
<msg timestamp="20200605 09:58:11.029" level="INFO">${resp} = 401
date Fri, 05 Jun 2020 01:58:11 GMT
connection Keep-Alive
content-type application/json
content-length 211


{"error":{"code":"Base.1.0.ResourceAtUriUnauthorized","message":"While accessing the res...</msg>
<status status="PASS" endtime="20200605 09:58:11.030" starttime="20200605 09:58:10.990"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_UNAUTHORIZED}</arg>
</arguments>
<msg timestamp="20200605 09:58:11.030" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:11.030" starttime="20200605 09:58:11.030"></status>
</kw>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200605 09:58:11.042" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200605 09:58:11.065" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000304999999999 seconds.</msg>
<msg timestamp="20200605 09:58:11.066" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200605 09:58:11.066" starttime="20200605 09:58:11.030"></status>
</kw>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:58:11.070" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:58:11.098" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000482 seconds.</msg>
<msg timestamp="20200605 09:58:11.098" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:58:11.098" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:58:11.098" starttime="20200605 09:58:11.066"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts/OpUser</arg>
</arguments>
<msg timestamp="20200605 09:58:11.110" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/OpUser</msg>
<msg timestamp="20200605 09:58:11.136" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/OpUser: 0.000446 seconds.</msg>
<status status="PASS" endtime="20200605 09:58:11.136" starttime="20200605 09:58:11.099"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:11.136" starttime="20200605 09:58:10.624"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200605 09:58:11.150" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200605 09:58:11.174" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000369999999998 seconds.</msg>
<msg timestamp="20200605 09:58:11.174" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200605 09:58:11.174" starttime="20200605 09:58:11.137"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:11.174" starttime="20200605 09:58:11.136"></status>
</kw>
<doc>Del Subscribed Event</doc>
<tags>
<tag>ReadOnlyUser Redfish_Del_Event</tag>
</tags>
<status status="PASS" endtime="20200605 09:58:11.174" critical="yes" starttime="20200605 09:58:10.585"></status>
</test>
<test id="s1-s4-s1-t9" name="Verify Redfish Op Del Event">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:58:11.181" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:58:11.211" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000747 seconds.</msg>
<msg timestamp="20200605 09:58:11.211" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:58:11.212" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:58:11.212" starttime="20200605 09:58:11.176"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:11.212" starttime="20200605 09:58:11.175"></status>
</kw>
<kw name="Redfish Op Del Event">
<doc>Operator can del Subscribed Event</doc>
<kw name="Redfish Create User">
<doc>Redfish create user.</doc>
<arguments>
<arg>NewOp</arg>
<arg>OpUser</arg>
<arg>OpUserPwd</arg>
<arg>Operator</arg>
<arg>${False}</arg>
<arg>${True}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Name=${name}</arg>
<arg>UserName=${username}</arg>
<arg>Password=${password}</arg>
<arg>RoleId=${role_id}</arg>
<arg>Locked=${locked}</arg>
<arg>Enabled=${enabled}</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:58:11.214" level="INFO">${payload} = {u'Name': u'NewOp', u'UserName': u'OpUser', u'Password': u'OpUserPwd', u'RoleId': u'Operator', u'Locked': False, u'Enabled': True}</msg>
<status status="PASS" endtime="20200605 09:58:11.214" starttime="20200605 09:58:11.213"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_CREATED}]</arg>
</arguments>
<msg timestamp="20200605 09:58:11.233" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts</msg>
<msg timestamp="20200605 09:58:11.267" level="INFO">Response Time to /redfish/v1/AccountService/Accounts: 0.000406 seconds.</msg>
<status status="PASS" endtime="20200605 09:58:11.267" starttime="20200605 09:58:11.215"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:11.268" starttime="20200605 09:58:11.213"></status>
</kw>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200605 09:58:11.278" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200605 09:58:11.301" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000285 seconds.</msg>
<msg timestamp="20200605 09:58:11.301" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200605 09:58:11.301" starttime="20200605 09:58:11.268"></status>
</kw>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<arguments>
<arg>OpUser</arg>
<arg>OpUserPwd</arg>
</arguments>
<msg timestamp="20200605 09:58:11.306" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:58:11.337" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000503999999999 seconds.</msg>
<msg timestamp="20200605 09:58:11.338" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'OpUser', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:58:11.338" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"OpUser","Id":1}</msg>
<status status="PASS" endtime="20200605 09:58:11.338" starttime="20200605 09:58:11.302"></status>
</kw>
<kw name="List Request" library="redfish_utils">
<doc>Perform a GET list request and return available resource paths.
Description of argument(s):
resource_path  URI resource absolute path
               (e.g. "/redfish/v1/SessionService/Sessions").</doc>
<arguments>
<arg>redfish/v1/EventService/Subscriptions/</arg>
</arguments>
<assign>
<var>${resp_list}</var>
</assign>
<msg timestamp="20200605 09:58:11.357" level="INFO">Attempt 1 of redfish/v1/EventService/Subscriptions/</msg>
<msg timestamp="20200605 09:58:11.385" level="INFO">Response Time to redfish/v1/EventService/Subscriptions/: 0.000358 seconds.</msg>
<msg timestamp="20200605 09:58:11.395" level="INFO">Attempt 1 of redfish/v1/EventService/Subscriptions</msg>
<msg timestamp="20200605 09:58:11.422" level="INFO">Response Time to redfish/v1/EventService/Subscriptions: 0.000341000000001 seconds.</msg>
<msg timestamp="20200605 09:58:11.431" level="INFO">Attempt 1 of redfish/v1/EventService/Subscriptions/1</msg>
<msg timestamp="20200605 09:58:11.459" level="INFO">Response Time to redfish/v1/EventService/Subscriptions/1: 0.000299999999999 seconds.</msg>
<msg timestamp="20200605 09:58:11.468" level="INFO">Attempt 1 of redfish/v1/EventService/Subscriptions/2</msg>
<msg timestamp="20200605 09:58:11.496" level="INFO">Response Time to redfish/v1/EventService/Subscriptions/2: 0.000318 seconds.</msg>
<msg timestamp="20200605 09:58:11.505" level="INFO">Attempt 1 of redfish/v1/EventService/Subscriptions/3</msg>
<msg timestamp="20200605 09:58:11.528" level="INFO">Response Time to redfish/v1/EventService/Subscriptions/3: 0.000284000000001 seconds.</msg>
<msg timestamp="20200605 09:58:11.528" level="INFO">${resp_list} = [u'redfish/v1/EventService/Subscriptions', u'redfish/v1/EventService/Subscriptions/1', u'redfish/v1/EventService/Subscriptions/2', u'redfish/v1/EventService/Subscriptions/3']</msg>
<status status="PASS" endtime="20200605 09:58:11.528" starttime="20200605 09:58:11.338"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>${resp_list[1]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:11.541" level="INFO">Attempt 1 of redfish/v1/EventService/Subscriptions/1</msg>
<msg timestamp="20200605 09:58:11.566" level="INFO">Response Time to redfish/v1/EventService/Subscriptions/1: 0.000280999999999 seconds.</msg>
<msg timestamp="20200605 09:58:11.566" level="INFO">${resp} = 204
date Fri, 05 Jun 2020 01:58:11 GMT
connection Keep-Alive
content-type application/json


</msg>
<status status="PASS" endtime="20200605 09:58:11.566" starttime="20200605 09:58:11.529"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_NO_CONTENT}</arg>
</arguments>
<msg timestamp="20200605 09:58:11.567" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:11.567" starttime="20200605 09:58:11.567"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>${resp_list[2]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:11.577" level="INFO">Attempt 1 of redfish/v1/EventService/Subscriptions/2</msg>
<msg timestamp="20200605 09:58:11.606" level="INFO">Response Time to redfish/v1/EventService/Subscriptions/2: 0.000386000000001 seconds.</msg>
<msg timestamp="20200605 09:58:11.606" level="INFO">${resp} = 204
date Fri, 05 Jun 2020 01:58:11 GMT
connection Keep-Alive
content-type application/json


</msg>
<status status="PASS" endtime="20200605 09:58:11.606" starttime="20200605 09:58:11.567"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_NO_CONTENT}</arg>
</arguments>
<msg timestamp="20200605 09:58:11.607" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:11.607" starttime="20200605 09:58:11.606"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>${resp_list[3]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:11.617" level="INFO">Attempt 1 of redfish/v1/EventService/Subscriptions/3</msg>
<msg timestamp="20200605 09:58:11.642" level="INFO">Response Time to redfish/v1/EventService/Subscriptions/3: 0.000273999999999 seconds.</msg>
<msg timestamp="20200605 09:58:11.643" level="INFO">${resp} = 204
date Fri, 05 Jun 2020 01:58:11 GMT
connection Keep-Alive
content-type application/json


</msg>
<status status="PASS" endtime="20200605 09:58:11.643" starttime="20200605 09:58:11.607"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_NO_CONTENT}</arg>
</arguments>
<msg timestamp="20200605 09:58:11.643" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:11.644" starttime="20200605 09:58:11.643"></status>
</kw>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200605 09:58:11.656" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200605 09:58:11.679" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000295999999999 seconds.</msg>
<msg timestamp="20200605 09:58:11.679" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200605 09:58:11.680" starttime="20200605 09:58:11.644"></status>
</kw>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:58:11.685" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:58:11.713" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000473999999999 seconds.</msg>
<msg timestamp="20200605 09:58:11.714" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:58:11.714" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:58:11.714" starttime="20200605 09:58:11.680"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/AccountService/Accounts/OpUser</arg>
</arguments>
<msg timestamp="20200605 09:58:11.725" level="INFO">Attempt 1 of /redfish/v1/AccountService/Accounts/OpUser</msg>
<msg timestamp="20200605 09:58:11.750" level="INFO">Response Time to /redfish/v1/AccountService/Accounts/OpUser: 0.000321 seconds.</msg>
<status status="PASS" endtime="20200605 09:58:11.750" starttime="20200605 09:58:11.714"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:11.750" starttime="20200605 09:58:11.212"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200605 09:58:11.762" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200605 09:58:11.788" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000361999999999 seconds.</msg>
<msg timestamp="20200605 09:58:11.788" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200605 09:58:11.788" starttime="20200605 09:58:11.751"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:11.789" starttime="20200605 09:58:11.750"></status>
</kw>
<doc>Del Subscribed Event</doc>
<tags>
<tag>Op Redfish_Del_Event</tag>
</tags>
<status status="PASS" endtime="20200605 09:58:11.789" critical="yes" starttime="20200605 09:58:11.175"></status>
</test>
<doc>Test Redfish user account.</doc>
<status status="PASS" endtime="20200605 09:58:11.790" starttime="20200605 09:58:07.782"></status>
</suite>
<status status="PASS" endtime="20200605 09:58:11.793" starttime="20200605 09:58:07.780"></status>
</suite>
<suite source="/home/voltha/workspace/GPON/5_RF_Auto_Test/redfish/4_managers" id="s1-s5" name="4 Managers">
<suite source="/home/voltha/workspace/GPON/5_RF_Auto_Test/redfish/4_managers/test_managers_psme.robot" id="s1-s5-s1" name="Test Managers Psme">
<test id="s1-s5-s1-t1" name="Verify PSME Redfish Version">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:58:11.919" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:58:11.943" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000461999999999 seconds.</msg>
<msg timestamp="20200605 09:58:11.944" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:58:11.944" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:58:11.944" starttime="20200605 09:58:11.880"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:11.944" starttime="20200605 09:58:11.880"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Managers/1</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:11.950" level="INFO">Attempt 1 of /redfish/v1/Managers/1</msg>
<msg timestamp="20200605 09:58:11.979" level="INFO">Response Time to /redfish/v1/Managers/1: 0.000335 seconds.</msg>
<msg timestamp="20200605 09:58:11.979" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:58:12 GMT
connection Keep-Alive
content-type application/json
content-length 1241


{"@odata.context":"/redfish/v1/$metadata#Manager.Manager","@odata.id":"/redfish/v1/Mana...</msg>
<status status="PASS" endtime="20200605 09:58:11.979" starttime="20200605 09:58:11.944"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:58:11.980" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:11.980" starttime="20200605 09:58:11.979"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.dict["FirmwareVersion"]}</arg>
<arg>${FirmwareVersion}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:11.980" starttime="20200605 09:58:11.980"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200605 09:58:11.987" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200605 09:58:12.012" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000301 seconds.</msg>
<msg timestamp="20200605 09:58:12.012" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200605 09:58:12.012" starttime="20200605 09:58:11.981"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:12.012" starttime="20200605 09:58:11.981"></status>
</kw>
<doc>Get PSME version from manager board.</doc>
<tags>
<tag>Verify_PSME_Redfish_Version</tag>
</tags>
<status status="PASS" endtime="20200605 09:58:12.012" critical="yes" starttime="20200605 09:58:11.879"></status>
</test>
<test id="s1-s5-s1-t2" name="Verify Redfish PSME Manager Properties">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:58:12.018" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:58:12.043" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000452000000001 seconds.</msg>
<msg timestamp="20200605 09:58:12.044" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:58:12.044" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:58:12.044" starttime="20200605 09:58:12.014"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:12.044" starttime="20200605 09:58:12.013"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Managers/1</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:12.050" level="INFO">Attempt 1 of /redfish/v1/Managers/1</msg>
<msg timestamp="20200605 09:58:12.078" level="INFO">Response Time to /redfish/v1/Managers/1: 0.000329000000001 seconds.</msg>
<msg timestamp="20200605 09:58:12.079" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:58:12 GMT
connection Keep-Alive
content-type application/json
content-length 1241


{"@odata.context":"/redfish/v1/$metadata#Manager.Manager","@odata.id":"/redfish/v1/Mana...</msg>
<status status="PASS" endtime="20200605 09:58:12.079" starttime="20200605 09:58:12.044"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:58:12.080" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:12.080" starttime="20200605 09:58:12.079"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.dict["Description"]}</arg>
<arg>Manager description</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:12.080" starttime="20200605 09:58:12.080"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.dict["Id"]}</arg>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:12.081" starttime="20200605 09:58:12.080"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.dict["Name"]}</arg>
<arg>Manager</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:12.081" starttime="20200605 09:58:12.081"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${resp.dict["UUID"]}</arg>
</arguments>
<msg timestamp="20200605 09:58:12.082" level="INFO">Length is 36</msg>
<status status="PASS" endtime="20200605 09:58:12.082" starttime="20200605 09:58:12.082"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.dict["Status"]["State"]}</arg>
<arg>Enabled</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:12.083" starttime="20200605 09:58:12.083"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200605 09:58:12.090" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200605 09:58:12.114" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000315000000001 seconds.</msg>
<msg timestamp="20200605 09:58:12.115" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200605 09:58:12.115" starttime="20200605 09:58:12.084"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:12.115" starttime="20200605 09:58:12.083"></status>
</kw>
<doc>Verify PSME managers resource properties.</doc>
<tags>
<tag>Verify_Redfish_PSME_Manager_Properties</tag>
</tags>
<status status="PASS" endtime="20200605 09:58:12.115" critical="yes" starttime="20200605 09:58:12.013"></status>
</test>
<test id="s1-s5-s1-t3" name="Verify Set Static IPv4 IP address">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:58:12.121" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:58:12.150" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000515999999999 seconds.</msg>
<msg timestamp="20200605 09:58:12.151" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:58:12.151" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:58:12.151" starttime="20200605 09:58:12.116"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:12.151" starttime="20200605 09:58:12.116"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($IPV4)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:58:12.155" level="INFO">${payload} = {u'StaticNameServers': [{u'Address': u'8.8.8.8'}], u'DHCPv4': {u'DHCPEnabled': False}, u'IPv4Addresses': [{u'SubnetMask': u'255.255.252.0', u'Gateway': u'172.17.10.251', u'Address': u'172.17.8.6'}]}</msg>
<status status="PASS" endtime="20200605 09:58:12.155" starttime="20200605 09:58:12.151"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/Managers/1/EthernetInterfaces/1</arg>
<arg>body=${payload}</arg>
</arguments>
<msg timestamp="20200605 09:58:12.162" level="INFO">Attempt 1 of /redfish/v1/Managers/1/EthernetInterfaces/1</msg>
<msg timestamp="20200605 09:58:31.512" level="INFO">Response Time to /redfish/v1/Managers/1/EthernetInterfaces/1: 0.000384 seconds.</msg>
<status status="PASS" endtime="20200605 09:58:31.512" starttime="20200605 09:58:12.156"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
<arg>valid_status_codes=[${HTTP_OK}]</arg>
</arguments>
<msg timestamp="20200605 09:58:38.513" level="INFO">Slept 7 seconds</msg>
<msg timestamp="20200605 09:58:38.513" level="INFO">valid_status_codes=[200]</msg>
<status status="PASS" endtime="20200605 09:58:38.514" starttime="20200605 09:58:31.513"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200605 09:58:38.528" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200605 09:58:38.555" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000343000000001 seconds.</msg>
<msg timestamp="20200605 09:58:38.555" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200605 09:58:38.555" starttime="20200605 09:58:38.515"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:38.555" starttime="20200605 09:58:38.514"></status>
</kw>
<doc>Verify PSME managers to set IPv4 IP address</doc>
<tags>
<tag>Verify_PSME_managers_to_set_IPv4_IP</tag>
</tags>
<status status="PASS" endtime="20200605 09:58:38.555" critical="yes" starttime="20200605 09:58:12.115"></status>
</test>
<doc>Test PSME Manager functionality.</doc>
<status status="PASS" endtime="20200605 09:58:38.557" starttime="20200605 09:58:11.798"></status>
</suite>
<status status="PASS" endtime="20200605 09:58:38.559" starttime="20200605 09:58:11.796"></status>
</suite>
<suite source="/home/voltha/workspace/GPON/5_RF_Auto_Test/redfish/5_chassis" id="s1-s6" name="5 Chassis">
<suite source="/home/voltha/workspace/GPON/5_RF_Auto_Test/redfish/5_chassis/test_chassis_psme.robot" id="s1-s6-s1" name="Test Chassis Psme">
<test id="s1-s6-s1-t1" name="Verify Redfish PSME Chassis Properties">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:58:38.671" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:58:38.695" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000553 seconds.</msg>
<msg timestamp="20200605 09:58:38.696" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:58:38.696" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:58:38.696" starttime="20200605 09:58:38.631"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:38.696" starttime="20200605 09:58:38.631"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Chassis/1</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:38.704" level="INFO">Attempt 1 of /redfish/v1/Chassis/1</msg>
<msg timestamp="20200605 09:58:39.050" level="INFO">Response Time to /redfish/v1/Chassis/1: 0.000453 seconds.</msg>
<msg timestamp="20200605 09:58:39.051" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:58:39 GMT
connection Keep-Alive
content-type application/json
content-length 1362


{"@odata.context":"/redfish/v1/$metadata#Chassis.Chassis","@odata.id":"/redfish/v1/Chas...</msg>
<status status="PASS" endtime="20200605 09:58:39.051" starttime="20200605 09:58:38.697"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:58:39.052" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:39.052" starttime="20200605 09:58:39.051"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${resp.dict["Oem"]["Intel_RackScale"]["Accton_Oem"]["ServiceTag"]}</arg>
</arguments>
<msg timestamp="20200605 09:58:39.052" level="INFO">Length is 36</msg>
<status status="PASS" endtime="20200605 09:58:39.052" starttime="20200605 09:58:39.052"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200605 09:58:39.060" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200605 09:58:39.083" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000319000000001 seconds.</msg>
<msg timestamp="20200605 09:58:39.084" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200605 09:58:39.084" starttime="20200605 09:58:39.053"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:39.084" starttime="20200605 09:58:39.053"></status>
</kw>
<doc>Verify PSME chassis resource properties.</doc>
<tags>
<tag>Verify_Redfish_PSME_Chsssis_Properties</tag>
</tags>
<status status="PASS" endtime="20200605 09:58:39.084" critical="yes" starttime="20200605 09:58:38.630"></status>
</test>
<test id="s1-s6-s1-t2" name="Check Thermal Sensor">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:58:39.091" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:58:39.118" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000432 seconds.</msg>
<msg timestamp="20200605 09:58:39.118" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:58:39.118" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:58:39.118" starttime="20200605 09:58:39.086"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:39.118" starttime="20200605 09:58:39.085"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Chassis/1/Thermal/</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:39.124" level="INFO">Attempt 1 of /redfish/v1/Chassis/1/Thermal/</msg>
<msg timestamp="20200605 09:58:39.148" level="INFO">Response Time to /redfish/v1/Chassis/1/Thermal/: 0.000450000000001 seconds.</msg>
<msg timestamp="20200605 09:58:39.148" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:58:39 GMT
connection Keep-Alive
content-type application/json
content-length 7564


{"@odata.context":"/redfish/v1/$metadata#Thermal.Thermal","@odata.id":"/redfish/v1/Chas...</msg>
<status status="PASS" endtime="20200605 09:58:39.148" starttime="20200605 09:58:39.119"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:58:39.149" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:39.149" starttime="20200605 09:58:39.149"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Temperatures']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200605 09:58:39.150" level="INFO">Length is 10</msg>
<msg timestamp="20200605 09:58:39.150" level="INFO">${item_count} = 10</msg>
<status status="PASS" endtime="20200605 09:58:39.150" starttime="20200605 09:58:39.149"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${item_count}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.150" starttime="20200605 09:58:39.150"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<assign>
<var>${n1}</var>
</assign>
<msg timestamp="20200605 09:58:39.151" level="INFO">${n1} = 1</msg>
<status status="PASS" endtime="20200605 09:58:39.151" starttime="20200605 09:58:39.151"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${item_count}</arg>
</arguments>
<assign>
<var>${n2}</var>
</assign>
<msg timestamp="20200605 09:58:39.151" level="INFO">${n2} = 10</msg>
<status status="PASS" endtime="20200605 09:58:39.151" starttime="20200605 09:58:39.151"></status>
</kw>
<kw type="for" name="${i} IN RANGE [ ${n1} | ${n2} ]">
<kw type="foritem" name="${i} = 1">
<kw name="Test Thermal Sensor">
<tags>
<tag>Test Thermal Sensor</tag>
</tags>
<doc>Test Thermal Sensor</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${THERMAL_SENSOR_ID} - ${1}</arg>
</arguments>
<assign>
<var>${ID}</var>
</assign>
<msg timestamp="20200605 09:58:39.152" level="INFO">${ID} = 0</msg>
<status status="PASS" endtime="20200605 09:58:39.152" starttime="20200605 09:58:39.152"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Chassis/1/Thermal</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:39.159" level="INFO">Attempt 1 of /redfish/v1/Chassis/1/Thermal</msg>
<msg timestamp="20200605 09:58:39.185" level="INFO">Response Time to /redfish/v1/Chassis/1/Thermal: 0.000313999999999 seconds.</msg>
<msg timestamp="20200605 09:58:39.185" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:58:39 GMT
connection Keep-Alive
content-type application/json
content-length 7564


{"@odata.context":"/redfish/v1/$metadata#Thermal.Thermal","@odata.id":"/redfish/v1/Chas...</msg>
<status status="PASS" endtime="20200605 09:58:39.185" starttime="20200605 09:58:39.153"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:58:39.186" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:39.186" starttime="20200605 09:58:39.186"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['Temperatures'][${ID}]}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.187" starttime="20200605 09:58:39.186"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.dict['Temperatures'][${ID}]['Status']['State']}</arg>
<arg>Enabled</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.188" starttime="20200605 09:58:39.187"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['Temperatures'][${ID}]['ReadingCelsius']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.189" starttime="20200605 09:58:39.188"></status>
</kw>
<kw name="Should Not Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are equal after converting them to integers.</doc>
<arguments>
<arg>${resp.dict['Temperatures'][${ID}]['ReadingCelsius']}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200605 09:58:39.190" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:39.190" starttime="20200605 09:58:39.189"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:39.190" starttime="20200605 09:58:39.152"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:39.190" starttime="20200605 09:58:39.151"></status>
</kw>
<kw type="foritem" name="${i} = 2">
<kw name="Test Thermal Sensor">
<tags>
<tag>Test Thermal Sensor</tag>
</tags>
<doc>Test Thermal Sensor</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${THERMAL_SENSOR_ID} - ${1}</arg>
</arguments>
<assign>
<var>${ID}</var>
</assign>
<msg timestamp="20200605 09:58:39.191" level="INFO">${ID} = 1</msg>
<status status="PASS" endtime="20200605 09:58:39.191" starttime="20200605 09:58:39.190"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Chassis/1/Thermal</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:39.197" level="INFO">Attempt 1 of /redfish/v1/Chassis/1/Thermal</msg>
<msg timestamp="20200605 09:58:39.222" level="INFO">Response Time to /redfish/v1/Chassis/1/Thermal: 0.000349 seconds.</msg>
<msg timestamp="20200605 09:58:39.222" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:58:39 GMT
connection Keep-Alive
content-type application/json
content-length 7564


{"@odata.context":"/redfish/v1/$metadata#Thermal.Thermal","@odata.id":"/redfish/v1/Chas...</msg>
<status status="PASS" endtime="20200605 09:58:39.222" starttime="20200605 09:58:39.191"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:58:39.223" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:39.223" starttime="20200605 09:58:39.223"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['Temperatures'][${ID}]}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.224" starttime="20200605 09:58:39.224"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.dict['Temperatures'][${ID}]['Status']['State']}</arg>
<arg>Enabled</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.225" starttime="20200605 09:58:39.225"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['Temperatures'][${ID}]['ReadingCelsius']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.226" starttime="20200605 09:58:39.225"></status>
</kw>
<kw name="Should Not Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are equal after converting them to integers.</doc>
<arguments>
<arg>${resp.dict['Temperatures'][${ID}]['ReadingCelsius']}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200605 09:58:39.227" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:39.227" starttime="20200605 09:58:39.226"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:39.227" starttime="20200605 09:58:39.190"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:39.227" starttime="20200605 09:58:39.190"></status>
</kw>
<kw type="foritem" name="${i} = 3">
<kw name="Test Thermal Sensor">
<tags>
<tag>Test Thermal Sensor</tag>
</tags>
<doc>Test Thermal Sensor</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${THERMAL_SENSOR_ID} - ${1}</arg>
</arguments>
<assign>
<var>${ID}</var>
</assign>
<msg timestamp="20200605 09:58:39.228" level="INFO">${ID} = 2</msg>
<status status="PASS" endtime="20200605 09:58:39.228" starttime="20200605 09:58:39.228"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Chassis/1/Thermal</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:39.234" level="INFO">Attempt 1 of /redfish/v1/Chassis/1/Thermal</msg>
<msg timestamp="20200605 09:58:39.258" level="INFO">Response Time to /redfish/v1/Chassis/1/Thermal: 0.000432 seconds.</msg>
<msg timestamp="20200605 09:58:39.258" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:58:39 GMT
connection Keep-Alive
content-type application/json
content-length 7564


{"@odata.context":"/redfish/v1/$metadata#Thermal.Thermal","@odata.id":"/redfish/v1/Chas...</msg>
<status status="PASS" endtime="20200605 09:58:39.258" starttime="20200605 09:58:39.228"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:58:39.259" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:39.259" starttime="20200605 09:58:39.259"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['Temperatures'][${ID}]}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.260" starttime="20200605 09:58:39.259"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.dict['Temperatures'][${ID}]['Status']['State']}</arg>
<arg>Enabled</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.261" starttime="20200605 09:58:39.260"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['Temperatures'][${ID}]['ReadingCelsius']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.262" starttime="20200605 09:58:39.261"></status>
</kw>
<kw name="Should Not Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are equal after converting them to integers.</doc>
<arguments>
<arg>${resp.dict['Temperatures'][${ID}]['ReadingCelsius']}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200605 09:58:39.262" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:39.263" starttime="20200605 09:58:39.262"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:39.263" starttime="20200605 09:58:39.227"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:39.263" starttime="20200605 09:58:39.227"></status>
</kw>
<kw type="foritem" name="${i} = 4">
<kw name="Test Thermal Sensor">
<tags>
<tag>Test Thermal Sensor</tag>
</tags>
<doc>Test Thermal Sensor</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${THERMAL_SENSOR_ID} - ${1}</arg>
</arguments>
<assign>
<var>${ID}</var>
</assign>
<msg timestamp="20200605 09:58:39.264" level="INFO">${ID} = 3</msg>
<status status="PASS" endtime="20200605 09:58:39.264" starttime="20200605 09:58:39.263"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Chassis/1/Thermal</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:39.270" level="INFO">Attempt 1 of /redfish/v1/Chassis/1/Thermal</msg>
<msg timestamp="20200605 09:58:39.294" level="INFO">Response Time to /redfish/v1/Chassis/1/Thermal: 0.000381000000001 seconds.</msg>
<msg timestamp="20200605 09:58:39.294" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:58:39 GMT
connection Keep-Alive
content-type application/json
content-length 7564


{"@odata.context":"/redfish/v1/$metadata#Thermal.Thermal","@odata.id":"/redfish/v1/Chas...</msg>
<status status="PASS" endtime="20200605 09:58:39.294" starttime="20200605 09:58:39.264"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:58:39.295" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:39.295" starttime="20200605 09:58:39.295"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['Temperatures'][${ID}]}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.296" starttime="20200605 09:58:39.295"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.dict['Temperatures'][${ID}]['Status']['State']}</arg>
<arg>Enabled</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.297" starttime="20200605 09:58:39.296"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['Temperatures'][${ID}]['ReadingCelsius']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.298" starttime="20200605 09:58:39.297"></status>
</kw>
<kw name="Should Not Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are equal after converting them to integers.</doc>
<arguments>
<arg>${resp.dict['Temperatures'][${ID}]['ReadingCelsius']}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200605 09:58:39.299" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:39.299" starttime="20200605 09:58:39.298"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:39.299" starttime="20200605 09:58:39.263"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:39.299" starttime="20200605 09:58:39.263"></status>
</kw>
<kw type="foritem" name="${i} = 5">
<kw name="Test Thermal Sensor">
<tags>
<tag>Test Thermal Sensor</tag>
</tags>
<doc>Test Thermal Sensor</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${THERMAL_SENSOR_ID} - ${1}</arg>
</arguments>
<assign>
<var>${ID}</var>
</assign>
<msg timestamp="20200605 09:58:39.300" level="INFO">${ID} = 4</msg>
<status status="PASS" endtime="20200605 09:58:39.300" starttime="20200605 09:58:39.300"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Chassis/1/Thermal</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:39.306" level="INFO">Attempt 1 of /redfish/v1/Chassis/1/Thermal</msg>
<msg timestamp="20200605 09:58:39.332" level="INFO">Response Time to /redfish/v1/Chassis/1/Thermal: 0.000419000000001 seconds.</msg>
<msg timestamp="20200605 09:58:39.332" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:58:39 GMT
connection Keep-Alive
content-type application/json
content-length 7564


{"@odata.context":"/redfish/v1/$metadata#Thermal.Thermal","@odata.id":"/redfish/v1/Chas...</msg>
<status status="PASS" endtime="20200605 09:58:39.332" starttime="20200605 09:58:39.300"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:58:39.333" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:39.333" starttime="20200605 09:58:39.332"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['Temperatures'][${ID}]}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.334" starttime="20200605 09:58:39.333"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.dict['Temperatures'][${ID}]['Status']['State']}</arg>
<arg>Enabled</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.335" starttime="20200605 09:58:39.334"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['Temperatures'][${ID}]['ReadingCelsius']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.336" starttime="20200605 09:58:39.335"></status>
</kw>
<kw name="Should Not Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are equal after converting them to integers.</doc>
<arguments>
<arg>${resp.dict['Temperatures'][${ID}]['ReadingCelsius']}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200605 09:58:39.337" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:39.337" starttime="20200605 09:58:39.336"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:39.337" starttime="20200605 09:58:39.299"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:39.337" starttime="20200605 09:58:39.299"></status>
</kw>
<kw type="foritem" name="${i} = 6">
<kw name="Test Thermal Sensor">
<tags>
<tag>Test Thermal Sensor</tag>
</tags>
<doc>Test Thermal Sensor</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${THERMAL_SENSOR_ID} - ${1}</arg>
</arguments>
<assign>
<var>${ID}</var>
</assign>
<msg timestamp="20200605 09:58:39.338" level="INFO">${ID} = 5</msg>
<status status="PASS" endtime="20200605 09:58:39.338" starttime="20200605 09:58:39.338"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Chassis/1/Thermal</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:39.345" level="INFO">Attempt 1 of /redfish/v1/Chassis/1/Thermal</msg>
<msg timestamp="20200605 09:58:39.371" level="INFO">Response Time to /redfish/v1/Chassis/1/Thermal: 0.000473000000001 seconds.</msg>
<msg timestamp="20200605 09:58:39.371" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:58:39 GMT
connection Keep-Alive
content-type application/json
content-length 7564


{"@odata.context":"/redfish/v1/$metadata#Thermal.Thermal","@odata.id":"/redfish/v1/Chas...</msg>
<status status="PASS" endtime="20200605 09:58:39.371" starttime="20200605 09:58:39.338"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:58:39.372" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:39.372" starttime="20200605 09:58:39.372"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['Temperatures'][${ID}]}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.373" starttime="20200605 09:58:39.372"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.dict['Temperatures'][${ID}]['Status']['State']}</arg>
<arg>Enabled</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.374" starttime="20200605 09:58:39.374"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['Temperatures'][${ID}]['ReadingCelsius']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.375" starttime="20200605 09:58:39.375"></status>
</kw>
<kw name="Should Not Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are equal after converting them to integers.</doc>
<arguments>
<arg>${resp.dict['Temperatures'][${ID}]['ReadingCelsius']}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200605 09:58:39.376" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:39.376" starttime="20200605 09:58:39.376"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:39.376" starttime="20200605 09:58:39.337"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:39.376" starttime="20200605 09:58:39.337"></status>
</kw>
<kw type="foritem" name="${i} = 7">
<kw name="Test Thermal Sensor">
<tags>
<tag>Test Thermal Sensor</tag>
</tags>
<doc>Test Thermal Sensor</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${THERMAL_SENSOR_ID} - ${1}</arg>
</arguments>
<assign>
<var>${ID}</var>
</assign>
<msg timestamp="20200605 09:58:39.378" level="INFO">${ID} = 6</msg>
<status status="PASS" endtime="20200605 09:58:39.378" starttime="20200605 09:58:39.377"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Chassis/1/Thermal</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:39.386" level="INFO">Attempt 1 of /redfish/v1/Chassis/1/Thermal</msg>
<msg timestamp="20200605 09:58:39.411" level="INFO">Response Time to /redfish/v1/Chassis/1/Thermal: 0.000572999999999 seconds.</msg>
<msg timestamp="20200605 09:58:39.411" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:58:39 GMT
connection Keep-Alive
content-type application/json
content-length 7564


{"@odata.context":"/redfish/v1/$metadata#Thermal.Thermal","@odata.id":"/redfish/v1/Chas...</msg>
<status status="PASS" endtime="20200605 09:58:39.411" starttime="20200605 09:58:39.378"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:58:39.412" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:39.412" starttime="20200605 09:58:39.412"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['Temperatures'][${ID}]}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.414" starttime="20200605 09:58:39.413"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.dict['Temperatures'][${ID}]['Status']['State']}</arg>
<arg>Enabled</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.415" starttime="20200605 09:58:39.414"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['Temperatures'][${ID}]['ReadingCelsius']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.416" starttime="20200605 09:58:39.415"></status>
</kw>
<kw name="Should Not Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are equal after converting them to integers.</doc>
<arguments>
<arg>${resp.dict['Temperatures'][${ID}]['ReadingCelsius']}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200605 09:58:39.417" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:39.417" starttime="20200605 09:58:39.416"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:39.417" starttime="20200605 09:58:39.377"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:39.417" starttime="20200605 09:58:39.377"></status>
</kw>
<kw type="foritem" name="${i} = 8">
<kw name="Test Thermal Sensor">
<tags>
<tag>Test Thermal Sensor</tag>
</tags>
<doc>Test Thermal Sensor</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${THERMAL_SENSOR_ID} - ${1}</arg>
</arguments>
<assign>
<var>${ID}</var>
</assign>
<msg timestamp="20200605 09:58:39.419" level="INFO">${ID} = 7</msg>
<status status="PASS" endtime="20200605 09:58:39.419" starttime="20200605 09:58:39.418"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Chassis/1/Thermal</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:39.427" level="INFO">Attempt 1 of /redfish/v1/Chassis/1/Thermal</msg>
<msg timestamp="20200605 09:58:39.455" level="INFO">Response Time to /redfish/v1/Chassis/1/Thermal: 0.000514000000001 seconds.</msg>
<msg timestamp="20200605 09:58:39.456" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:58:39 GMT
connection Keep-Alive
content-type application/json
content-length 7564


{"@odata.context":"/redfish/v1/$metadata#Thermal.Thermal","@odata.id":"/redfish/v1/Chas...</msg>
<status status="PASS" endtime="20200605 09:58:39.456" starttime="20200605 09:58:39.419"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:58:39.457" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:39.457" starttime="20200605 09:58:39.456"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['Temperatures'][${ID}]}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.458" starttime="20200605 09:58:39.457"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.dict['Temperatures'][${ID}]['Status']['State']}</arg>
<arg>Enabled</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.459" starttime="20200605 09:58:39.458"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['Temperatures'][${ID}]['ReadingCelsius']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.460" starttime="20200605 09:58:39.459"></status>
</kw>
<kw name="Should Not Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are equal after converting them to integers.</doc>
<arguments>
<arg>${resp.dict['Temperatures'][${ID}]['ReadingCelsius']}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200605 09:58:39.461" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:39.461" starttime="20200605 09:58:39.460"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:39.461" starttime="20200605 09:58:39.418"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:39.461" starttime="20200605 09:58:39.417"></status>
</kw>
<kw type="foritem" name="${i} = 9">
<kw name="Test Thermal Sensor">
<tags>
<tag>Test Thermal Sensor</tag>
</tags>
<doc>Test Thermal Sensor</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${THERMAL_SENSOR_ID} - ${1}</arg>
</arguments>
<assign>
<var>${ID}</var>
</assign>
<msg timestamp="20200605 09:58:39.462" level="INFO">${ID} = 8</msg>
<status status="PASS" endtime="20200605 09:58:39.462" starttime="20200605 09:58:39.462"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Chassis/1/Thermal</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:39.470" level="INFO">Attempt 1 of /redfish/v1/Chassis/1/Thermal</msg>
<msg timestamp="20200605 09:58:39.496" level="INFO">Response Time to /redfish/v1/Chassis/1/Thermal: 0.000451 seconds.</msg>
<msg timestamp="20200605 09:58:39.497" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:58:39 GMT
connection Keep-Alive
content-type application/json
content-length 7564


{"@odata.context":"/redfish/v1/$metadata#Thermal.Thermal","@odata.id":"/redfish/v1/Chas...</msg>
<status status="PASS" endtime="20200605 09:58:39.497" starttime="20200605 09:58:39.463"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:58:39.498" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:39.498" starttime="20200605 09:58:39.497"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['Temperatures'][${ID}]}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.499" starttime="20200605 09:58:39.498"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.dict['Temperatures'][${ID}]['Status']['State']}</arg>
<arg>Enabled</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.500" starttime="20200605 09:58:39.499"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['Temperatures'][${ID}]['ReadingCelsius']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.501" starttime="20200605 09:58:39.500"></status>
</kw>
<kw name="Should Not Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are equal after converting them to integers.</doc>
<arguments>
<arg>${resp.dict['Temperatures'][${ID}]['ReadingCelsius']}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200605 09:58:39.502" level="INFO">Argument types are:
&lt;type 'float'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200605 09:58:39.502" level="FAIL">0 == 0</msg>
<status status="FAIL" endtime="20200605 09:58:39.502" starttime="20200605 09:58:39.501"></status>
</kw>
<status status="FAIL" endtime="20200605 09:58:39.502" starttime="20200605 09:58:39.461"></status>
</kw>
<status status="FAIL" endtime="20200605 09:58:39.502" starttime="20200605 09:58:39.461"></status>
</kw>
<status status="FAIL" endtime="20200605 09:58:39.502" starttime="20200605 09:58:39.151"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200605 09:58:39.509" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200605 09:58:39.533" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000335999999999 seconds.</msg>
<msg timestamp="20200605 09:58:39.534" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200605 09:58:39.534" starttime="20200605 09:58:39.503"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:39.534" starttime="20200605 09:58:39.502"></status>
</kw>
<doc>Verify Thermal sensor</doc>
<tags>
<tag>Verify_Thermal_sensor</tag>
</tags>
<status status="FAIL" endtime="20200605 09:58:39.535" critical="yes" starttime="20200605 09:58:39.085">0 == 0</status>
</test>
<test id="s1-s6-s1-t3" name="Check Fan">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:58:39.545" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:58:39.573" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000484 seconds.</msg>
<msg timestamp="20200605 09:58:39.574" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:58:39.574" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:58:39.574" starttime="20200605 09:58:39.538"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:39.574" starttime="20200605 09:58:39.537"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Chassis/1/Thermal/</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:39.581" level="INFO">Attempt 1 of /redfish/v1/Chassis/1/Thermal/</msg>
<msg timestamp="20200605 09:58:39.605" level="INFO">Response Time to /redfish/v1/Chassis/1/Thermal/: 0.000426000000001 seconds.</msg>
<msg timestamp="20200605 09:58:39.605" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:58:39 GMT
connection Keep-Alive
content-type application/json
content-length 7564


{"@odata.context":"/redfish/v1/$metadata#Thermal.Thermal","@odata.id":"/redfish/v1/Chas...</msg>
<status status="PASS" endtime="20200605 09:58:39.605" starttime="20200605 09:58:39.575"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:58:39.606" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:39.606" starttime="20200605 09:58:39.606"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Fans']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200605 09:58:39.607" level="INFO">Length is 6</msg>
<msg timestamp="20200605 09:58:39.607" level="INFO">${item_count} = 6</msg>
<status status="PASS" endtime="20200605 09:58:39.607" starttime="20200605 09:58:39.607"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${item_count}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.608" starttime="20200605 09:58:39.607"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<assign>
<var>${n1}</var>
</assign>
<msg timestamp="20200605 09:58:39.608" level="INFO">${n1} = 1</msg>
<status status="PASS" endtime="20200605 09:58:39.608" starttime="20200605 09:58:39.608"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${item_count}</arg>
</arguments>
<assign>
<var>${n2}</var>
</assign>
<msg timestamp="20200605 09:58:39.609" level="INFO">${n2} = 6</msg>
<status status="PASS" endtime="20200605 09:58:39.609" starttime="20200605 09:58:39.609"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"#################################################"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.609" starttime="20200605 09:58:39.609"></status>
</kw>
<kw type="for" name="${i} IN RANGE [ ${n1} | ${n2} ]">
<kw type="foritem" name="${i} = 1">
<kw name="Plug In Fan">
<tags>
<tag>Plug_In_Fan_and_verify_status</tag>
</tags>
<doc>Plug In Fan and verify status</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${FAN_ID} - ${1}</arg>
</arguments>
<assign>
<var>${ID}</var>
</assign>
<msg timestamp="20200605 09:58:39.610" level="INFO">${ID} = 0</msg>
<status status="PASS" endtime="20200605 09:58:39.610" starttime="20200605 09:58:39.610"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Chassis/1/Thermal</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:39.617" level="INFO">Attempt 1 of /redfish/v1/Chassis/1/Thermal</msg>
<msg timestamp="20200605 09:58:39.646" level="INFO">Response Time to /redfish/v1/Chassis/1/Thermal: 0.000456000000002 seconds.</msg>
<msg timestamp="20200605 09:58:39.647" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:58:39 GMT
connection Keep-Alive
content-type application/json
content-length 7564


{"@odata.context":"/redfish/v1/$metadata#Thermal.Thermal","@odata.id":"/redfish/v1/Chas...</msg>
<status status="PASS" endtime="20200605 09:58:39.647" starttime="20200605 09:58:39.611"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:58:39.648" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:39.648" starttime="20200605 09:58:39.647"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['Fans'][${ID}]}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.649" starttime="20200605 09:58:39.648"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.dict['Fans'][${ID}]['Status']['State']}</arg>
<arg>Enabled</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.650" starttime="20200605 09:58:39.649"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['Fans'][${ID}]['Reading']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.651" starttime="20200605 09:58:39.650"></status>
</kw>
<kw name="Should Not Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are equal after converting them to integers.</doc>
<arguments>
<arg>${resp.dict['Fans'][${ID}]['Reading']}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200605 09:58:39.651" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:39.652" starttime="20200605 09:58:39.651"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:39.652" starttime="20200605 09:58:39.610"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:39.652" starttime="20200605 09:58:39.610"></status>
</kw>
<kw type="foritem" name="${i} = 2">
<kw name="Plug In Fan">
<tags>
<tag>Plug_In_Fan_and_verify_status</tag>
</tags>
<doc>Plug In Fan and verify status</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${FAN_ID} - ${1}</arg>
</arguments>
<assign>
<var>${ID}</var>
</assign>
<msg timestamp="20200605 09:58:39.653" level="INFO">${ID} = 1</msg>
<status status="PASS" endtime="20200605 09:58:39.653" starttime="20200605 09:58:39.652"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Chassis/1/Thermal</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:39.660" level="INFO">Attempt 1 of /redfish/v1/Chassis/1/Thermal</msg>
<msg timestamp="20200605 09:58:39.689" level="INFO">Response Time to /redfish/v1/Chassis/1/Thermal: 0.000402999999999 seconds.</msg>
<msg timestamp="20200605 09:58:39.689" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:58:39 GMT
connection Keep-Alive
content-type application/json
content-length 7564


{"@odata.context":"/redfish/v1/$metadata#Thermal.Thermal","@odata.id":"/redfish/v1/Chas...</msg>
<status status="PASS" endtime="20200605 09:58:39.689" starttime="20200605 09:58:39.653"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:58:39.690" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:39.690" starttime="20200605 09:58:39.690"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['Fans'][${ID}]}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.691" starttime="20200605 09:58:39.690"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.dict['Fans'][${ID}]['Status']['State']}</arg>
<arg>Enabled</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.692" starttime="20200605 09:58:39.691"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['Fans'][${ID}]['Reading']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.693" starttime="20200605 09:58:39.693"></status>
</kw>
<kw name="Should Not Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are equal after converting them to integers.</doc>
<arguments>
<arg>${resp.dict['Fans'][${ID}]['Reading']}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200605 09:58:39.694" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:39.694" starttime="20200605 09:58:39.693"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:39.694" starttime="20200605 09:58:39.652"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:39.694" starttime="20200605 09:58:39.652"></status>
</kw>
<kw type="foritem" name="${i} = 3">
<kw name="Plug In Fan">
<tags>
<tag>Plug_In_Fan_and_verify_status</tag>
</tags>
<doc>Plug In Fan and verify status</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${FAN_ID} - ${1}</arg>
</arguments>
<assign>
<var>${ID}</var>
</assign>
<msg timestamp="20200605 09:58:39.695" level="INFO">${ID} = 2</msg>
<status status="PASS" endtime="20200605 09:58:39.695" starttime="20200605 09:58:39.695"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Chassis/1/Thermal</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:39.702" level="INFO">Attempt 1 of /redfish/v1/Chassis/1/Thermal</msg>
<msg timestamp="20200605 09:58:39.730" level="INFO">Response Time to /redfish/v1/Chassis/1/Thermal: 0.000418999999999 seconds.</msg>
<msg timestamp="20200605 09:58:39.730" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:58:39 GMT
connection Keep-Alive
content-type application/json
content-length 7564


{"@odata.context":"/redfish/v1/$metadata#Thermal.Thermal","@odata.id":"/redfish/v1/Chas...</msg>
<status status="PASS" endtime="20200605 09:58:39.730" starttime="20200605 09:58:39.695"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:58:39.731" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:39.731" starttime="20200605 09:58:39.730"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['Fans'][${ID}]}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.732" starttime="20200605 09:58:39.731"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.dict['Fans'][${ID}]['Status']['State']}</arg>
<arg>Enabled</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.733" starttime="20200605 09:58:39.732"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['Fans'][${ID}]['Reading']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.734" starttime="20200605 09:58:39.733"></status>
</kw>
<kw name="Should Not Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are equal after converting them to integers.</doc>
<arguments>
<arg>${resp.dict['Fans'][${ID}]['Reading']}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200605 09:58:39.734" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:39.735" starttime="20200605 09:58:39.734"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:39.735" starttime="20200605 09:58:39.694"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:39.735" starttime="20200605 09:58:39.694"></status>
</kw>
<kw type="foritem" name="${i} = 4">
<kw name="Plug In Fan">
<tags>
<tag>Plug_In_Fan_and_verify_status</tag>
</tags>
<doc>Plug In Fan and verify status</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${FAN_ID} - ${1}</arg>
</arguments>
<assign>
<var>${ID}</var>
</assign>
<msg timestamp="20200605 09:58:39.736" level="INFO">${ID} = 3</msg>
<status status="PASS" endtime="20200605 09:58:39.736" starttime="20200605 09:58:39.735"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Chassis/1/Thermal</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:39.742" level="INFO">Attempt 1 of /redfish/v1/Chassis/1/Thermal</msg>
<msg timestamp="20200605 09:58:39.770" level="INFO">Response Time to /redfish/v1/Chassis/1/Thermal: 0.000535000000001 seconds.</msg>
<msg timestamp="20200605 09:58:39.770" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:58:39 GMT
connection Keep-Alive
content-type application/json
content-length 7564


{"@odata.context":"/redfish/v1/$metadata#Thermal.Thermal","@odata.id":"/redfish/v1/Chas...</msg>
<status status="PASS" endtime="20200605 09:58:39.770" starttime="20200605 09:58:39.736"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:58:39.771" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:39.772" starttime="20200605 09:58:39.771"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['Fans'][${ID}]}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.773" starttime="20200605 09:58:39.772"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.dict['Fans'][${ID}]['Status']['State']}</arg>
<arg>Enabled</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.775" starttime="20200605 09:58:39.774"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['Fans'][${ID}]['Reading']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.776" starttime="20200605 09:58:39.775"></status>
</kw>
<kw name="Should Not Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are equal after converting them to integers.</doc>
<arguments>
<arg>${resp.dict['Fans'][${ID}]['Reading']}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200605 09:58:39.777" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:39.777" starttime="20200605 09:58:39.776"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:39.778" starttime="20200605 09:58:39.735"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:39.778" starttime="20200605 09:58:39.735"></status>
</kw>
<kw type="foritem" name="${i} = 5">
<kw name="Plug In Fan">
<tags>
<tag>Plug_In_Fan_and_verify_status</tag>
</tags>
<doc>Plug In Fan and verify status</doc>
<arguments>
<arg>${i}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${FAN_ID} - ${1}</arg>
</arguments>
<assign>
<var>${ID}</var>
</assign>
<msg timestamp="20200605 09:58:39.779" level="INFO">${ID} = 4</msg>
<status status="PASS" endtime="20200605 09:58:39.779" starttime="20200605 09:58:39.779"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Chassis/1/Thermal</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:39.788" level="INFO">Attempt 1 of /redfish/v1/Chassis/1/Thermal</msg>
<msg timestamp="20200605 09:58:39.814" level="INFO">Response Time to /redfish/v1/Chassis/1/Thermal: 0.000417000000001 seconds.</msg>
<msg timestamp="20200605 09:58:39.815" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:58:39 GMT
connection Keep-Alive
content-type application/json
content-length 7564


{"@odata.context":"/redfish/v1/$metadata#Thermal.Thermal","@odata.id":"/redfish/v1/Chas...</msg>
<status status="PASS" endtime="20200605 09:58:39.815" starttime="20200605 09:58:39.779"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:58:39.816" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:39.816" starttime="20200605 09:58:39.815"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['Fans'][${ID}]}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.817" starttime="20200605 09:58:39.816"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.dict['Fans'][${ID}]['Status']['State']}</arg>
<arg>Enabled</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.819" starttime="20200605 09:58:39.817"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['Fans'][${ID}]['Reading']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.820" starttime="20200605 09:58:39.819"></status>
</kw>
<kw name="Should Not Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are equal after converting them to integers.</doc>
<arguments>
<arg>${resp.dict['Fans'][${ID}]['Reading']}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200605 09:58:39.821" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:39.821" starttime="20200605 09:58:39.820"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:39.821" starttime="20200605 09:58:39.778"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:39.821" starttime="20200605 09:58:39.778"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:39.821" starttime="20200605 09:58:39.609"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200605 09:58:39.829" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200605 09:58:39.854" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000539 seconds.</msg>
<msg timestamp="20200605 09:58:39.854" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200605 09:58:39.855" starttime="20200605 09:58:39.822"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:39.855" starttime="20200605 09:58:39.821"></status>
</kw>
<doc>Verify Fan and verify status</doc>
<tags>
<tag>Verify_FAN_and_verify_status</tag>
</tags>
<status status="PASS" endtime="20200605 09:58:39.855" critical="yes" starttime="20200605 09:58:39.536"></status>
</test>
<test id="s1-s6-s1-t4" name="Check PSU">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 09:58:39.867" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:58:39.898" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000861 seconds.</msg>
<msg timestamp="20200605 09:58:39.899" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:58:39.899" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:58:39.899" starttime="20200605 09:58:39.858"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:39.899" starttime="20200605 09:58:39.857"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"######## Plug In PSU 1 with Power Core #######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.900" starttime="20200605 09:58:39.900"></status>
</kw>
<kw name="Plug In PSU">
<tags>
<tag>Plug_In_PSU_and_verify_status</tag>
</tags>
<doc>Plugi In PSU and verify status</doc>
<arguments>
<arg>1</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PSU_ID} - ${1}</arg>
</arguments>
<assign>
<var>${ID}</var>
</assign>
<msg timestamp="20200605 09:58:39.902" level="INFO">${ID} = 0</msg>
<status status="PASS" endtime="20200605 09:58:39.902" starttime="20200605 09:58:39.902"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Chassis/1/Power</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:39.914" level="INFO">Attempt 1 of /redfish/v1/Chassis/1/Power</msg>
<msg timestamp="20200605 09:58:39.939" level="INFO">Response Time to /redfish/v1/Chassis/1/Power: 0.000584 seconds.</msg>
<msg timestamp="20200605 09:58:39.940" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:58:39 GMT
connection Keep-Alive
content-type application/json
content-length 2840


{"@odata.context":"/redfish/v1/$metadata#Power.Power","@odata.id":"/redfish/v1/Chassis/...</msg>
<status status="PASS" endtime="20200605 09:58:39.940" starttime="20200605 09:58:39.903"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:58:39.941" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:39.941" starttime="20200605 09:58:39.941"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['PowerControl'][${ID}]['Status']['State']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.943" starttime="20200605 09:58:39.942"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.dict['PowerControl'][${ID}]['Status']['State']}</arg>
<arg>Enabled</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.944" starttime="20200605 09:58:39.943"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['PowerControl'][${ID}]['PowerConsumedWatts']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.945" starttime="20200605 09:58:39.945"></status>
</kw>
<kw name="Should Not Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are equal after converting them to integers.</doc>
<arguments>
<arg>${resp.dict['PowerControl'][${ID}]['PowerConsumedWatts']}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200605 09:58:39.947" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:39.947" starttime="20200605 09:58:39.946"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:39.948" starttime="20200605 09:58:39.900"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"######## Plug In PSU 2 with Power Core #######"</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.948" starttime="20200605 09:58:39.948"></status>
</kw>
<kw name="Plug In PSU">
<tags>
<tag>Plug_In_PSU_and_verify_status</tag>
</tags>
<doc>Plugi In PSU and verify status</doc>
<arguments>
<arg>2</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PSU_ID} - ${1}</arg>
</arguments>
<assign>
<var>${ID}</var>
</assign>
<msg timestamp="20200605 09:58:39.950" level="INFO">${ID} = 1</msg>
<status status="PASS" endtime="20200605 09:58:39.950" starttime="20200605 09:58:39.950"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Chassis/1/Power</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 09:58:39.962" level="INFO">Attempt 1 of /redfish/v1/Chassis/1/Power</msg>
<msg timestamp="20200605 09:58:39.989" level="INFO">Response Time to /redfish/v1/Chassis/1/Power: 0.000392 seconds.</msg>
<msg timestamp="20200605 09:58:39.990" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 01:58:39 GMT
connection Keep-Alive
content-type application/json
content-length 2840


{"@odata.context":"/redfish/v1/$metadata#Power.Power","@odata.id":"/redfish/v1/Chassis/...</msg>
<status status="PASS" endtime="20200605 09:58:39.990" starttime="20200605 09:58:39.951"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 09:58:39.991" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:39.991" starttime="20200605 09:58:39.990"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['PowerControl'][${ID}]['Status']['State']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.992" starttime="20200605 09:58:39.991"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.dict['PowerControl'][${ID}]['Status']['State']}</arg>
<arg>Enabled</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.993" starttime="20200605 09:58:39.992"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['PowerControl'][${ID}]['PowerConsumedWatts']}</arg>
</arguments>
<status status="PASS" endtime="20200605 09:58:39.994" starttime="20200605 09:58:39.993"></status>
</kw>
<kw name="Should Not Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are equal after converting them to integers.</doc>
<arguments>
<arg>${resp.dict['PowerControl'][${ID}]['PowerConsumedWatts']}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200605 09:58:39.996" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 09:58:39.996" starttime="20200605 09:58:39.995"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:39.996" starttime="20200605 09:58:39.949"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200605 09:58:40.004" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200605 09:58:40.029" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000391 seconds.</msg>
<msg timestamp="20200605 09:58:40.029" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200605 09:58:40.029" starttime="20200605 09:58:39.997"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:40.030" starttime="20200605 09:58:39.996"></status>
</kw>
<doc>Verify PSU and verify status</doc>
<tags>
<tag>Verify_PSU_and_verify_status</tag>
</tags>
<status status="PASS" endtime="20200605 09:58:40.030" critical="yes" starttime="20200605 09:58:39.856"></status>
</test>
<doc>Test PSME Manager functionality.</doc>
<status status="FAIL" endtime="20200605 09:58:40.031" starttime="20200605 09:58:38.562"></status>
</suite>
<status status="FAIL" endtime="20200605 09:58:40.035" starttime="20200605 09:58:38.561"></status>
</suite>
<suite source="/home/voltha/workspace/GPON/5_RF_Auto_Test/redfish/6_dmtf_tools" id="s1-s7" name="6 Dmtf Tools">
<suite source="/home/voltha/workspace/GPON/5_RF_Auto_Test/redfish/6_dmtf_tools/Redfish_Service_Validator.robot" id="s1-s7-s1" name="Redfish Service Validator">
<test id="s1-s7-s1-t1" name="Test Redfish Using Redfish Service Validator">
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<arguments>
<arg>admin</arg>
<arg>redfish</arg>
</arguments>
<msg timestamp="20200605 09:58:40.112" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 09:58:40.141" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000596 seconds.</msg>
<msg timestamp="20200605 09:58:40.141" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 09:58:40.142" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 09:58:40.142" starttime="20200605 09:58:40.060"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>ServiceEnabled=${false}</arg>
<arg>SessionTimeout=${600}</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:58:40.143" level="INFO">${payload} = {u'ServiceEnabled': False, u'SessionTimeout': 600}</msg>
<status status="PASS" endtime="20200605 09:58:40.143" starttime="20200605 09:58:40.142"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/SessionService/</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_OK}]</arg>
</arguments>
<msg timestamp="20200605 09:58:40.157" level="INFO">Attempt 1 of /redfish/v1/SessionService/</msg>
<msg timestamp="20200605 09:58:40.185" level="INFO">Response Time to /redfish/v1/SessionService/: 0.000437 seconds.</msg>
<status status="PASS" endtime="20200605 09:58:40.185" starttime="20200605 09:58:40.143"></status>
</kw>
<kw name="Download DMTF Tool" library="dmtf_tools_utils">
<doc>Git clone tool.</doc>
<arguments>
<arg>${rsv_dir_path}</arg>
<arg>${rsv_github_url}</arg>
<arg>"1.3.4"</arg>
</arguments>
<kw name="Shell Cmd" library="gen_cmd">
<doc>Run the given command string in a shell and return a tuple consisting of
the shell return code and the output.</doc>
<arguments>
<arg>rm -rf ${rsv_dir_path} ; git clone ${rsv_github_url} ${rsv_dir_path};cd ${rsv_dir_path};git reset --hard ${tool_ver}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200605 09:58:42.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20200605 09:58:42.978" level="INFO">${output} = Cloning into 'Redfish-Service-Validator'...
HEAD is now at 67437a2 Merge pull request #357 from DMTF/1.3.4-Tagging
</msg>
<status status="PASS" endtime="20200605 09:58:42.978" starttime="20200605 09:58:40.186"></status>
</kw>
<status status="PASS" endtime="20200605 09:58:42.979" starttime="20200605 09:58:40.185"></status>
</kw>
<kw name="Run DMTF Tool" library="dmtf_tools_utils">
<doc>Execution of the command.</doc>
<arguments>
<arg>${rsv_dir_path}</arg>
<arg>${command_string}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Shell Cmd" library="gen_cmd">
<doc>Run the given command string in a shell and return a tuple consisting of
the shell return code and the output.</doc>
<arguments>
<arg>${command_string}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200605 09:59:22.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20200605 09:59:22.814" level="INFO">${output} = First run suggested to create and own local schema files, please download manually or use --schema_pack latest
Alternatively, use the option --prefer_online to skip local schema file checks
The tool w...</msg>
<status status="PASS" endtime="20200605 09:59:22.814" starttime="20200605 09:58:42.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200605 09:59:22.815" level="INFO">First run suggested to create and own local schema files, please download manually or use --schema_pack latest
Alternatively, use the option --prefer_online to skip local schema file checks
The tool will, by default, attempt to download and store XML files to relieve traffic from DMTF/service
Redfish Service Validator, version 1.3.4
Setting up service...
Constructing metadata...
Writing online XML to file: LogEntry.xml
Writing online XML to file: Manager.xml
Writing online XML to file: EthernetSwitchPort.xml
Writing online XML to file: EventService.xml
Writing online XML to file: ManagerCollection.xml
Writing online XML to file: EthernetSwitchONU.xml
Writing online XML to file: SerialInterfaceCollection.xml
Writing online XML to file: Memory.xml
Writing online XML to file: EthernetSwitch.xml
Writing online XML to file: Processor.xml
Writing online XML to file: VLanNetworkInterfaceCollection.xml
Writing online XML to file: Chassis.xml
Writing online XML to file: Org.OData.Core.V1.xml
Writing online XML to file: StorageCollection.xml
Writing online XML to file: EthernetInterfaceCollection.xml
Writing online XML to file: ProcessorCollection.xml
Writing online XML to file: EthernetSwitchStaticMACCollection.xml
Writing online XML to file: EthernetSwitchCollection.xml
Writing online XML to file: EthernetInterface.xml
Writing online XML to file: ComputerSystemCollection.xml
Writing online XML to file: ServiceRoot.xml
Writing online XML to file: ComputerSystem.xml
Writing online XML to file: Thermal.xml
Writing online XML to file: Session.xml
Writing online XML to file: VolumeCollection.xml
Writing online XML to file: Role.xml
Writing online XML to file: Storage.xml
Writing online XML to file: RedfishExtensions.xml
Writing online XML to file: IntelRackScaleOem.xml
Writing online XML to file: LogService.xml
Writing online XML to file: LogServiceCollection.xml
Writing online XML to file: ManagerAccountCollection.xml
Writing online XML to file: Power.xml
Writing online XML to file: Resource.xml
Writing online XML to file: LogEntryCollection.xml
Writing online XML to file: ManagerNetworkProtocol.xml
Writing online XML to file: RoleCollection.xml
Writing online XML to file: SessionCollection.xml
Writing online XML to file: AccountService.xml
Writing online XML to file: EthernetSwitchPortCollection.xml
Writing online XML to file: EthernetSwitchACLCollection.xml
Writing online XML to file: EthernetSwitchONUCollection.xml
Writing online XML to file: ManagerAccount.xml
Writing online XML to file: MessageRegistryFile.xml
Writing online XML to file: SerialInterface.xml
Writing online XML to file: MemoryCollection.xml
Writing online XML to file: MessageRegistryFileCollection.xml
Writing online XML to file: EventDestination.xml
Writing online XML to file: SessionService.xml
Writing online XML to file: ChassisCollection.xml
Writing online XML to file: EventDestinationCollection.xml
Writing online XML to file: PrivilegeRegistry.xml
Writing online XML to file: Drive.xml
Redfish Version of Service: 1.0.2
ConfigURI: 172.17.8.6:8888
System Info: No desc
authtype: Basic
cachefilepath: ./cache
cachemode: Off
certificatecheck: False
configuri: https://172.17.8.6:8888
debug_logging: True
forceauth: True
linklimit: {'LogEntry': 20}
localonlymode: False
logpath: /home/voltha/workspace/GPON/5_RF_Auto_Test/logs/
metadatafilepath: ./SchemaFiles/metadata
oemcheck: True
preferonline: False
sample: 0
schemasuffix: _v1.xml
servicemode: False
timeout: 30
uricheck: False
username: admin
usessl: True
Start time: 06/05/20 - 09:58:43

*** /redfish/v1/
Writing online XML to file: FabricCollection.xml
Writing online XML to file: ComposedNodeCollection.xml
Writing online XML to file: TaskService.xml
Writing online XML to file: JsonSchemaFileCollection.xml
Writing online XML to file: StorageServiceCollection.xml
	 Type (#ServiceRoot.v1_1_1.ServiceRoot), GET SUCCESS (time: 0.027419)
Oem.Intel_RackScale.EthernetSwitches not defined in schema Intel.Oem (check version, spelling and casing)
	 PASS

*** /redfish/v1/Registries
	 Type (#MessageRegistryFileCollection.MessageRegistryFileCollection), GET SUCCESS (time: 0.026556)
	 PASS

*** /redfish/v1/Registries/1
	 Type (#MessageRegistryFile.v1_0_0.MessageRegistryFile), GET SUCCESS (time: 0.033621)
	 PASS

*** /redfish/v1/Registries/2
	 Type (#MessageRegistryFile.v1_0_0.MessageRegistryFile), GET SUCCESS (time: 0.021951)
	 PASS

*** /redfish/v1/Registries/PrivilegeRegistry
No such reference Privileges.v1_0_0 in localFile:./SchemaFiles/metadata/PrivilegeRegistry.xml, using unversioned
Writing online XML to file: Privileges.xml
	 Type (#PrivilegeRegistry.v1_0_0.PrivilegeRegistry), GET SUCCESS (time: 0.029963)
	 PASS

*** /redfish/v1/Systems
	 Type (#ComputerSystemCollection.ComputerSystemCollection), GET SUCCESS (time: 0.027804)
	 PASS

*** /redfish/v1/Systems/1
Writing online XML to file: NetworkInterfaceCollection.xml
Writing online XML to file: PCIeDevice.xml
Writing online XML to file: PCIeFunction.xml
Writing online XML to file: Endpoint.xml
Writing online XML to file: SimpleStorageCollection.xml
	 Type (#ComputerSystem.v1_3_0.ComputerSystem), GET SUCCESS (time: 0.042008)
	 PASS

*** /redfish/v1/Systems/1/Memory
	 Type (#MemoryCollection.MemoryCollection), GET SUCCESS (time: 0.046811)
	 PASS

*** /redfish/v1/Systems/1/Memory/1
	 Type (#Memory.v1_1_0.Memory), GET SUCCESS (time: 0.02531)
	 PASS

*** /redfish/v1/Systems/1/Memory/2
	 Type (#Memory.v1_1_0.Memory), GET SUCCESS (time: 0.024517)
	 PASS

*** /redfish/v1/Systems/1/Storage
	 Type (#StorageCollection.StorageCollection), GET SUCCESS (time: 0.024779)
	 PASS

*** /redfish/v1/Systems/1/Storage/1
Writing online XML to file: Redundancy.xml
	 Type (#Storage.v1_1_0.Storage), GET SUCCESS (time: 0.025355)
	 PASS

*** /redfish/v1/Chassis/1/Drives/1
Writing online XML to file: Volume.xml
	 Type (#Drive.v1_1_1.Drive), GET SUCCESS (time: 0.024127)
Model: Empty string found - Services should omit properties if not supported
	 PASS

*** /redfish/v1/Systems/1/Storage/1/Volumes
	 Type (#VolumeCollection.VolumeCollection), GET SUCCESS (time: 0.024907)
	 PASS

*** /redfish/v1/Systems/1/Processors
	 Type (#ProcessorCollection.ProcessorCollection), GET SUCCESS (time: 0.067914)
	 PASS

*** /redfish/v1/Systems/1/Processors/1
	 Type (#Processor.v1_0_0.Processor), GET SUCCESS (time: 0.226566)
	 PASS

*** /redfish/v1/Chassis
	 Type (#ChassisCollection.ChassisCollection), GET SUCCESS (time: 0.023975)
	 PASS

*** /redfish/v1/Chassis/1
Writing online XML to file: ThermalZoneCollection.xml
Writing online XML to file: PowerZoneCollection.xml
	 Type (#Chassis.v1_3_0.Chassis), GET SUCCESS (time: 0.024833)
	 PASS

*** /redfish/v1/Chassis/1/Thermal
	 Type (#Thermal.v1_1_0.Thermal), GET SUCCESS (time: 0.030027)
	 PASS

*** /redfish/v1/Chassis/1/Power
	 Type (#Power.v1_1_0.Power), GET SUCCESS (time: 0.024858)
	 PASS

*** /redfish/v1/Managers
	 Type (#ManagerCollection.ManagerCollection), GET SUCCESS (time: 0.024301)
	 PASS

*** /redfish/v1/Managers/1
Writing online XML to file: StorageService.xml
Writing online XML to file: VirtualMediaCollection.xml
	 Type (#Manager.v1_0_0.Manager), GET SUCCESS (time: 0.027544)
	 PASS

*** /redfish/v1/Managers/1/EthernetInterfaces
	 Type (#EthernetInterfaceCollection.EthernetInterfaceCollection), GET SUCCESS (time: 0.025674)
	 PASS

*** /redfish/v1/Managers/1/EthernetInterfaces/1
No such reference IPAddresses in localFile:./SchemaFiles/metadata/EthernetInterface.xml
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetInterface.v1_4_0.EthernetInterface IPAddresses IPv6StaticDefaultGateways
Writing online XML to file: IPAddresses.xml
No such reference Chassis in /redfish/v1/metadata/EthernetInterface.xml
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetInterface.v1_3_0.Links Chassis Chassis
No such reference HostInterface in /redfish/v1/metadata/EthernetInterface.xml
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetInterface.v1_2_0.Links HostInterface HostInterface
Writing online XML to file: VLanNetworkInterface.xml
	 Type (#EthernetInterface.v1_4_0.EthernetInterface), GET SUCCESS (time: 0.129658)
	 PASS

*** /redfish/v1/Managers/1/SerialInterfaces
	 Type (#SerialInterfaceCollection.SerialInterfaceCollection), GET SUCCESS (time: 0.024493)
	 PASS

*** /redfish/v1/Managers/1/SerialInterfaces/1
	 Type (#SerialInterface.v1_0_2.SerialInterface), GET SUCCESS (time: 0.026894)
	 PASS

*** /redfish/v1/Managers/1/NetworkProtocol
	 Type (#ManagerNetworkProtocol.v1_0_2.ManagerNetworkProtocol), GET SUCCESS (time: 0.116376)
	 PASS

*** /redfish/v1/Managers/1/LogServices
	 Type (#LogServiceCollection.LogServiceCollection), GET SUCCESS (time: 0.026866)
	 PASS

*** /redfish/v1/Managers/1/LogServices/1
	 Type (#LogService.v1_0_0.LogService), GET SUCCESS (time: 0.077216)
	 PASS

*** /redfish/v1/Managers/1/LogServices/1/Entries
	 Type (#LogEntryCollection.LogEntryCollection), GET SUCCESS (time: 0.045928)
	 PASS

*** /redfish/v1/SessionService
	 Type (#SessionService.v1_0_0.SessionService), GET SUCCESS (time: 0.024507)
	 PASS

*** /redfish/v1/SessionService/Sessions
	 Type (#SessionCollection.SessionCollection), GET SUCCESS (time: 0.023819)
	 PASS

*** /redfish/v1/AccountService
	 Type (#AccountService.v1_0_0.AccountService), GET SUCCESS (time: 0.023629)
	 PASS

*** /redfish/v1/AccountService/Accounts
	 Type (#ManagerAccountCollection.ManagerAccountCollection), GET SUCCESS (time: 0.026822)
	 PASS

*** /redfish/v1/AccountService/Accounts/ReadOnlyUser1
	 Type (#ManagerAccount.v1_0_0.ManagerAccount), GET SUCCESS (time: 0.027656)
	 PASS

*** /redfish/v1/AccountService/Accounts/admin
	 Type (#ManagerAccount.v1_0_0.ManagerAccount), GET SUCCESS (time: 0.02602)
Name: Empty string found - Services should omit properties if not supported
	 PASS

*** /redfish/v1/AccountService/Roles
	 Type (#RoleCollection.RoleCollection), GET SUCCESS (time: 0.026057)
	 PASS

*** /redfish/v1/AccountService/Roles/1
	 Type (#Role.v1_0_0.Role), GET SUCCESS (time: 0.027748)
Name: Empty string found - Services should omit properties if not supported
	 PASS

*** /redfish/v1/AccountService/Roles/2
	 Type (#Role.v1_0_0.Role), GET SUCCESS (time: 0.024116)
Name: Empty string found - Services should omit properties if not supported
	 PASS

*** /redfish/v1/AccountService/Roles/3
	 Type (#Role.v1_0_0.Role), GET SUCCESS (time: 0.026865)
Name: Empty string found - Services should omit properties if not supported
	 PASS

*** /redfish/v1/EventService
Writing online XML to file: Event.xml
	 Type (#EventService.v1_0_0.EventService), GET SUCCESS (time: 0.024182)
	 PASS

*** /redfish/v1/EventService/Subscriptions
	 Type (#EventDestinationCollection.EventDestinationCollection), GET SUCCESS (time: 0.02525)
	 PASS

*** /redfish/v1/EthernetSwitches/1
SchemaURI /redfish/v1/metadata/EthernetSwitchMetrics.xml was unable to be called, defaulting to local storage in ./SchemaFiles/metadata
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitch.v1_1_0.EthernetSwitch EthernetSwitchMetrics Metrics
	 Type (#EthernetSwitch.v1_0_0.EthernetSwitch), GET SUCCESS (time: 0.027331)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports
	 Type (#EthernetSwitchPortCollection.EthernetSwitchPortCollection), GET SUCCESS (time: 0.032835)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/1
SchemaURI /redfish/v1/metadata/EthernetSwitchPortMetrics.xml was unable to be called, defaulting to local storage in ./SchemaFiles/metadata
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
Writing online XML to file: EthernetSwitchACL.xml
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.058671)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/1/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.031032)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/1/ONUs
	 Type (#EthernetSwitchONUCollection.EthernetSwitchONUCollection), GET SUCCESS (time: 0.02469)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1
	 Type (#EthernetSwitchONU.v1_0_0.EthernetSwitchONU), GET SUCCESS (time: 0.023986)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/1/StaticMACs
Writing online XML to file: EthernetSwitchStaticMAC.xml
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.031465)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/2
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.030141)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/2/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.032844)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/2/ONUs
	 Type (#EthernetSwitchONUCollection.EthernetSwitchONUCollection), GET SUCCESS (time: 0.02656)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/2/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.029767)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/3
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.025391)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/3/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.030002)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/3/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.029536)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/4
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.026136)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/4/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.030658)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/4/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.030678)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/5
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.024212)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/5/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.033413)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/5/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.031968)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/6
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.026099)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/6/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.03289)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/6/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.030902)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/7
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.026092)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/7/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.078027)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/7/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.030252)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/8
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.024081)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/8/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.034912)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/8/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.030385)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/9
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.027294)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/9/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.033584)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/9/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.047976)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/10
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.026772)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/10/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.071789)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/10/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.030384)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/11
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.025102)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/11/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.072945)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/11/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.033233)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/12
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.025861)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/12/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.031348)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/12/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.029457)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/13
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.02394)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/13/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.033617)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/13/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.032479)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/14
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.02634)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/14/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.030676)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/14/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.029775)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/15
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.026178)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/15/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.032363)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/15/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.033279)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/16
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.024249)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/16/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.084217)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/16/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.032576)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/17
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.027462)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/17/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.032884)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/17/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.030717)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/18
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.029139)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/18/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.073322)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/18/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.032183)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/19
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.027502)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/19/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.083211)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/19/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.030037)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/20
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.025167)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/20/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.032351)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/20/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.032692)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/21
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.024948)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/21/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.032134)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/21/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.029343)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/22
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.025542)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/22/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.057028)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/22/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.030612)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/23
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.026209)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/23/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.08016)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/23/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.032518)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/24
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.02774)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/24/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.031183)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/24/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.030543)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/25
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.02819)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/25/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.077149)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/25/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.031505)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/26
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.027922)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/26/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.081831)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/26/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.031284)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/27
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.02841)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/27/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.083094)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/27/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.031859)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/28
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.026621)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/28/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.053835)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/28/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.031925)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/29
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.02698)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/29/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.082103)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/29/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.030904)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/30
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.028244)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/30/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.032501)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/30/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.032804)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/31
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.026885)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/31/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.064555)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/31/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.032984)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/32
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.029357)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/32/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.032276)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/32/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.05133)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/33
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.029319)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/33/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.032925)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/33/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.051054)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/34
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.028199)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/34/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.036345)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/34/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.03121)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/35
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.028548)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/35/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.033353)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/35/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.03244)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/36
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.026846)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/36/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.032749)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/36/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.052546)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/37
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.050503)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/37/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.031271)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/37/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.03238)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/38
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.024928)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/38/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.072255)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/38/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.030493)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/39
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.028217)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/39/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.032257)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/39/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.031217)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/40
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.026658)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/40/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.033177)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/40/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.029298)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/41
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.072459)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/41/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.033364)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/41/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.027912)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/42
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.027319)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/42/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.033205)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/42/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.030885)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/43
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.026467)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/43/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.031365)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/43/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.031095)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/44
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.027765)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/44/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.032151)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/44/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.029943)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/45
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.078981)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/45/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.031538)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/45/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.029736)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/46
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.024785)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/46/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.03242)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/46/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.032298)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/47
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.029524)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/47/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.031578)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/47/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.02943)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/48
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.026616)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/48/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.034222)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/48/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.033145)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/49
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.028135)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/49/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.034263)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/49/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.049381)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/50
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.028142)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/50/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.032533)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/50/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.054223)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/51
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.026885)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/51/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.031001)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/51/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.029953)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/52
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.027934)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/52/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.081679)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/52/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.034011)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/53
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.028762)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/53/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.032041)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/53/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.031347)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/54
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.028555)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/54/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.07478)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/54/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.034905)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/55
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.030072)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/55/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.031489)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/55/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.033048)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/56
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.028819)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/56/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.032151)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/56/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.047213)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/57
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.024236)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/57/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.053589)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/57/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.032325)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/58
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.045479)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/58/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.079918)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/58/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.033608)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/59
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.027955)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/59/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.030201)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/59/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.030724)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/60
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.02907)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/60/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.032133)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/60/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.051171)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/61
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.043296)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/61/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.03332)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/61/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.030627)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/62
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.027468)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/62/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.031195)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/62/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.032383)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/63
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.026211)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/63/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.031132)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/63/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.030434)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/64
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.026973)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/64/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.032798)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/64/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.033502)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/65
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.028597)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/65/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.031578)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/65/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.030958)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/66
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.031233)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/66/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.030066)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/66/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.032561)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/67
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.028074)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/67/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.031271)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/67/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.050661)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/68
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.029718)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/68/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.032822)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/68/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.054518)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/69
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.027426)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/69/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.064883)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/69/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.032365)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/70
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.029038)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/70/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.063304)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/70/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.032146)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/71
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.026494)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/71/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.032496)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/71/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.045773)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/72
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.02772)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/72/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.033136)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/72/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.03252)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/73
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.070007)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/73/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.030131)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/73/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.029662)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/74
getPropertyDetails: Could not acquire appropriate Schema for this item, EthernetSwitchPort.v1_1_0.EthernetSwitchPort EthernetSwitchPortMetrics Metrics
	 Type (#EthernetSwitchPort.v1_0_0.EthernetSwitchPort), GET SUCCESS (time: 0.031792)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/74/VLANs
	 Type (#VLanNetworkInterfaceCollection.VLanNetworkInterfaceCollection), GET SUCCESS (time: 0.030618)
	 PASS

*** /redfish/v1/EthernetSwitches/1/Ports/74/StaticMACs
	 Type (#EthernetSwitchStaticMACCollection.EthernetSwitchStaticMACCollection), GET SUCCESS (time: 0.031424)
	 PASS

*** /redfish/v1/EthernetSwitches/1/ACLs
	 Type (#EthernetSwitchACLCollection.EthernetSwitchACLCollection), GET SUCCESS (time: 0.033305)
	 PASS
Elapsed time: 0:00:38
Counter({'pass': 3226, 'skipOptional': 735, 'passGet': 270, 'metadataNamespaces': 84, 'warningPresent': 83, 'serviceNamespaces': 71, 'repeat': 23, 'invalidPropertyValue': 5, 'passAction': 4, 'optionalAction': 2, 'unverifiedComplexAdditional': 1, 'reflink': 1})
Validation has succeeded.
</msg>
<status status="PASS" endtime="20200605 09:59:22.816" starttime="20200605 09:59:22.815"></status>
</kw>
<msg timestamp="20200605 09:59:22.817" level="INFO">${output} = First run suggested to create and own local schema files, please download manually or use --schema_pack latest
Alternatively, use the option --prefer_online to skip local schema file checks
The tool w...</msg>
<status status="PASS" endtime="20200605 09:59:22.817" starttime="20200605 09:58:42.979"></status>
</kw>
<kw name="Redfish Service Validator Result" library="dmtf_tools_utils">
<doc>Check tool output for errors.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${tool_output}</arg>
<arg>Validation has failed</arg>
</arguments>
<status status="PASS" endtime="20200605 09:59:22.818" starttime="20200605 09:59:22.818"></status>
</kw>
<status status="PASS" endtime="20200605 09:59:22.818" starttime="20200605 09:59:22.817"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>ServiceEnabled=${true}</arg>
<arg>SessionTimeout=${600}</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 09:59:22.819" level="INFO">${payload} = {u'ServiceEnabled': True, u'SessionTimeout': 600}</msg>
<status status="PASS" endtime="20200605 09:59:22.819" starttime="20200605 09:59:22.818"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/SessionService/</arg>
<arg>body=&amp;{payload}</arg>
<arg>valid_status_codes=[${HTTP_OK}]</arg>
</arguments>
<msg timestamp="20200605 09:59:22.839" level="INFO">Attempt 1 of /redfish/v1/SessionService/</msg>
<msg timestamp="20200605 09:59:22.867" level="INFO">Response Time to /redfish/v1/SessionService/: 0.000379000000001 seconds.</msg>
<status status="PASS" endtime="20200605 09:59:22.867" starttime="20200605 09:59:22.819"></status>
</kw>
<doc>Check conformance with a Redfish service interface.</doc>
<tags>
<tag>Test_Redfish_Using_Redfish_Service_Validator</tag>
</tags>
<status status="PASS" endtime="20200605 09:59:22.868" critical="yes" starttime="20200605 09:58:40.059"></status>
</test>
<doc>Test PSME using https://github.com/DMTF/Redfish-Service-Validator.
DMTF tool.</doc>
<status status="PASS" endtime="20200605 09:59:22.868" starttime="20200605 09:58:40.040"></status>
</suite>
<status status="PASS" endtime="20200605 09:59:22.869" starttime="20200605 09:58:40.037"></status>
</suite>
<status status="FAIL" endtime="20200605 09:59:22.872" starttime="20200605 09:51:04.055"></status>
</suite>
<statistics>
<total>
<stat fail="2" pass="35">Critical Tests</stat>
<stat fail="2" pass="35">All Tests</stat>
</total>
<tag>
<stat fail="0" pass="1">Admin Redfish_Add_Event</stat>
<stat fail="0" pass="1">Admin Redfish_Del_Event</stat>
<stat fail="0" pass="1">Admin Redfish_Patch_Event</stat>
<stat fail="0" pass="1">Attempt_Login_With_Expired_Session</stat>
<stat fail="0" pass="1">Delete_Redfish_Session_Using_Valid_Login</stat>
<stat fail="0" pass="1">GET_Redfish_Hypermedia_Without_Login</stat>
<stat fail="0" pass="1">GET_Redfish_SessionService_Resource_With_Login</stat>
<stat fail="0" pass="1">GET_Redfish_SessionService_Without_Login</stat>
<stat fail="0" pass="2">Op Redfish_Add_Event</stat>
<stat fail="0" pass="2">Op Redfish_Del_Event</stat>
<stat fail="0" pass="1">ReadOnlyUser Redfish_Add_Event</stat>
<stat fail="0" pass="1">ReadOnlyUser Redfish_Del_Event</stat>
<stat fail="0" pass="2">Redfish_Create_and_Verify_Users</stat>
<stat fail="0" pass="1">Redfish_Login_And_Logout</stat>
<stat fail="0" pass="1">Redfish_Login_With_Invalid_Credentials</stat>
<stat fail="0" pass="1">Test_Redfish_Using_Redfish_Service_Validator</stat>
<stat fail="1" pass="0">Test Stress loop test</stat>
<stat fail="0" pass="1">Verify_AccountService_Available</stat>
<stat fail="0" pass="1">Verify_AccountService_OPUser_CANNOT_PATCH_POST</stat>
<stat fail="0" pass="1">Verify_AccountService_ReadOnlyUser_CANNOT_PATCH_POST</stat>
<stat fail="0" pass="1">Verify_AccountService_session_timeout</stat>
<stat fail="0" pass="1">Verify_AccountService_UserOnlyUser_Enable</stat>
<stat fail="0" pass="1">Verify_FAN_and_verify_status</stat>
<stat fail="0" pass="1">Verify_Login_with_Deleted_Redfish_Users</stat>
<stat fail="0" pass="1">Verify_PSME_managers_to_set_IPv4_IP</stat>
<stat fail="0" pass="1">Verify_PSME_Redfish_Version</stat>
<stat fail="0" pass="1">Verify_PSU_and_verify_status</stat>
<stat fail="0" pass="1">Verify_Redfish_PSME_Chsssis_Properties</stat>
<stat fail="0" pass="1">Verify_Redfish_PSME_Manager_Properties</stat>
<stat fail="0" pass="1">Verify_Redfish_User_Persistence_After_Reboot</stat>
<stat fail="0" pass="1">Verify_Redfish_User_with_Wrong_Password</stat>
<stat fail="1" pass="0">Verify_Thermal_sensor</stat>
<stat fail="0" pass="1">Verify_User_Creation_With_locking_it</stat>
<stat fail="0" pass="1">Verify_User_Creation_Without_Enabling_it</stat>
</tag>
<suite>
<stat fail="2" id="s1" name="Redfish" pass="35">Redfish</stat>
<stat fail="1" id="s1-s1" name="0 Switches" pass="0">Redfish.0 Switches</stat>
<stat fail="1" id="s1-s1-s1" name="Test Switches" pass="0">Redfish.0 Switches.Test Switches</stat>
<stat fail="0" id="s1-s2" name="1 Account Service" pass="12">Redfish.1 Account Service</stat>
<stat fail="0" id="s1-s2-s1" name="Test User Account" pass="12">Redfish.1 Account Service.Test User Account</stat>
<stat fail="0" id="s1-s3" name="2 Service Root" pass="7">Redfish.2 Service Root</stat>
<stat fail="0" id="s1-s3-s1" name="Test Service Root" pass="5">Redfish.2 Service Root.Test Service Root</stat>
<stat fail="0" id="s1-s3-s2" name="Test Service Root Security" pass="2">Redfish.2 Service Root.Test Service Root Security</stat>
<stat fail="0" id="s1-s4" name="3 Event Service" pass="9">Redfish.3 Event Service</stat>
<stat fail="0" id="s1-s4-s1" name="Test Event Service" pass="9">Redfish.3 Event Service.Test Event Service</stat>
<stat fail="0" id="s1-s5" name="4 Managers" pass="3">Redfish.4 Managers</stat>
<stat fail="0" id="s1-s5-s1" name="Test Managers Psme" pass="3">Redfish.4 Managers.Test Managers Psme</stat>
<stat fail="1" id="s1-s6" name="5 Chassis" pass="3">Redfish.5 Chassis</stat>
<stat fail="1" id="s1-s6-s1" name="Test Chassis Psme" pass="3">Redfish.5 Chassis.Test Chassis Psme</stat>
<stat fail="0" id="s1-s7" name="6 Dmtf Tools" pass="1">Redfish.6 Dmtf Tools</stat>
<stat fail="0" id="s1-s7-s1" name="Redfish Service Validator" pass="1">Redfish.6 Dmtf Tools.Redfish Service Validator</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20200605 09:58:10.184" level="WARN">Multiple test cases with name 'Verify Redfish Op Add Event' executed in test suite 'Redfish.3 Event Service.Test Event Service'.</msg>
<msg timestamp="20200605 09:58:11.175" level="WARN">Multiple test cases with name 'Verify Redfish Op Del Event' executed in test suite 'Redfish.3 Event Service.Test Event Service'.</msg>
</errors>
</robot>
