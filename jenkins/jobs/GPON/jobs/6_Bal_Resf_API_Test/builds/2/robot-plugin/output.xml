<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200605 10:10:12.477" generator="Robot 3.1.1 (Python 2.7.12 on linux2)">
<suite source="/home/voltha/workspace/GPON/6_Bal_Resf_API_Test/RF_Auto_Test/bal_test" id="s1" name="Bal Test">
<suite source="/home/voltha/workspace/GPON/6_Bal_Resf_API_Test/RF_Auto_Test/bal_test/test_bal.robot" id="s1-s1" name="Test Bal">
<test id="s1-s1-t1" name="Verify Restful API for BAL Test">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 10:10:14.230" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 10:10:14.260" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000438 seconds.</msg>
<msg timestamp="20200605 10:10:14.260" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 10:10:14.260" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 10:10:14.260" starttime="20200605 10:10:14.224"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:14.260" starttime="20200605 10:10:14.224"></status>
</kw>
<kw name="Test Bal Component">
<tags>
<tag>Bal_Component</tag>
</tags>
<doc>Do basic test 1.Enable All PON MAC PON NNI port enable/disable.</doc>
<kw name="Disable All Tx Port">
<tags>
<tag>Disable Pon Port Tx</tag>
</tags>
<doc>Disable all port function</doc>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:14.268" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/</msg>
<msg timestamp="20200605 10:10:15.050" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/: 0.001454 seconds.</msg>
<msg timestamp="20200605 10:10:15.052" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:15 GMT
connection Keep-Alive
content-type application/json
content-length 4491


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPortCollection.EthernetSwitchPor...</msg>
<status status="PASS" endtime="20200605 10:10:15.052" starttime="20200605 10:10:14.261"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200605 10:10:15.055" level="INFO">Length is 74</msg>
<msg timestamp="20200605 10:10:15.056" level="INFO">${item_count} = 74</msg>
<status status="PASS" endtime="20200605 10:10:15.056" starttime="20200605 10:10:15.054"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable All Pon Port ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.059" starttime="20200605 10:10:15.057"></status>
</kw>
<kw type="for" name="${ID} IN RANGE [ 1 | ${item_count} ]">
<kw type="foritem" name="${ID} = 1">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:15.086" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200605 10:10:15.224" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.001404 seconds.</msg>
<msg timestamp="20200605 10:10:15.226" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:15 GMT
connection Keep-Alive
content-type application/json
content-length 2309


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:15.226" starttime="20200605 10:10:15.063"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:15.228" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:15.229" starttime="20200605 10:10:15.227"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:15.231" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200605 10:10:15.231" starttime="20200605 10:10:15.229"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:15.234" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:15.234" starttime="20200605 10:10:15.232"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.236" starttime="20200605 10:10:15.235"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.238" starttime="20200605 10:10:15.237"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.242" starttime="20200605 10:10:15.240"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
</arguments>
<kw name="Test Tx Op Down">
<tags>
<tag>Test tx_disable</tag>
</tags>
<doc>Test SFP port tx disable function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OP_DOWN)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 10:10:15.257" level="INFO">${payload} = {u'OperationalState': u'Down'}</msg>
<status status="PASS" endtime="20200605 10:10:15.257" starttime="20200605 10:10:15.249"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<msg timestamp="20200605 10:10:15.269" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200605 10:10:15.306" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.001085 seconds.</msg>
<status status="PASS" endtime="20200605 10:10:15.307" starttime="20200605 10:10:15.258"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:15.308" starttime="20200605 10:10:15.247"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:15.308" starttime="20200605 10:10:15.246"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:15.308" starttime="20200605 10:10:15.243"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:15.308" starttime="20200605 10:10:15.061"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:15.309" starttime="20200605 10:10:15.061"></status>
</kw>
<kw type="foritem" name="${ID} = 2">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:15.332" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/2</msg>
<msg timestamp="20200605 10:10:15.364" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/2: 0.000764 seconds.</msg>
<msg timestamp="20200605 10:10:15.365" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:15 GMT
connection Keep-Alive
content-type application/json
content-length 2318


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:15.365" starttime="20200605 10:10:15.311"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:15.366" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:15.367" starttime="20200605 10:10:15.366"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:15.368" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200605 10:10:15.368" starttime="20200605 10:10:15.367"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:15.369" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:15.370" starttime="20200605 10:10:15.368"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.371" starttime="20200605 10:10:15.370"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.373" starttime="20200605 10:10:15.371"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.375" starttime="20200605 10:10:15.374"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
</arguments>
<kw name="Test Tx Op Down">
<tags>
<tag>Test tx_disable</tag>
</tags>
<doc>Test SFP port tx disable function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OP_DOWN)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 10:10:15.390" level="INFO">${payload} = {u'OperationalState': u'Down'}</msg>
<status status="PASS" endtime="20200605 10:10:15.390" starttime="20200605 10:10:15.380"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<msg timestamp="20200605 10:10:15.406" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/2</msg>
<msg timestamp="20200605 10:10:15.445" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/2: 0.000522 seconds.</msg>
<status status="PASS" endtime="20200605 10:10:15.446" starttime="20200605 10:10:15.390"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:15.446" starttime="20200605 10:10:15.378"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:15.446" starttime="20200605 10:10:15.377"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:15.446" starttime="20200605 10:10:15.376"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:15.446" starttime="20200605 10:10:15.310"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:15.446" starttime="20200605 10:10:15.309"></status>
</kw>
<kw type="foritem" name="${ID} = 3">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:15.455" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/3</msg>
<msg timestamp="20200605 10:10:15.484" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/3: 0.000493 seconds.</msg>
<msg timestamp="20200605 10:10:15.484" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:15 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:15.484" starttime="20200605 10:10:15.447"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:15.485" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:15.486" starttime="20200605 10:10:15.485"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:15.487" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:15.487" starttime="20200605 10:10:15.486"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:15.487" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:15.488" starttime="20200605 10:10:15.487"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.488" starttime="20200605 10:10:15.488"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.489" starttime="20200605 10:10:15.489"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.491" starttime="20200605 10:10:15.490"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.493" starttime="20200605 10:10:15.492"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:15.493" starttime="20200605 10:10:15.491"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:15.493" starttime="20200605 10:10:15.447"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:15.493" starttime="20200605 10:10:15.447"></status>
</kw>
<kw type="foritem" name="${ID} = 4">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:15.505" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/4</msg>
<msg timestamp="20200605 10:10:15.537" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/4: 0.001357 seconds.</msg>
<msg timestamp="20200605 10:10:15.539" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:15 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:15.539" starttime="20200605 10:10:15.494"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:15.542" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:15.542" starttime="20200605 10:10:15.540"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:15.545" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:15.545" starttime="20200605 10:10:15.543"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:15.547" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:15.547" starttime="20200605 10:10:15.545"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.550" starttime="20200605 10:10:15.548"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.552" starttime="20200605 10:10:15.551"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.555" starttime="20200605 10:10:15.553"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.558" starttime="20200605 10:10:15.558"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:15.559" starttime="20200605 10:10:15.556"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:15.559" starttime="20200605 10:10:15.494"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:15.560" starttime="20200605 10:10:15.494"></status>
</kw>
<kw type="foritem" name="${ID} = 5">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:15.585" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/5</msg>
<msg timestamp="20200605 10:10:15.613" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/5: 0.000373 seconds.</msg>
<msg timestamp="20200605 10:10:15.613" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:15 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:15.613" starttime="20200605 10:10:15.562"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:15.614" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:15.614" starttime="20200605 10:10:15.614"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:15.615" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:15.615" starttime="20200605 10:10:15.615"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:15.616" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:15.616" starttime="20200605 10:10:15.615"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.616" starttime="20200605 10:10:15.616"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.617" starttime="20200605 10:10:15.617"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.618" starttime="20200605 10:10:15.618"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.620" starttime="20200605 10:10:15.620"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:15.620" starttime="20200605 10:10:15.619"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:15.620" starttime="20200605 10:10:15.560"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:15.620" starttime="20200605 10:10:15.560"></status>
</kw>
<kw type="foritem" name="${ID} = 6">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:15.629" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/6</msg>
<msg timestamp="20200605 10:10:15.653" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/6: 0.00042 seconds.</msg>
<msg timestamp="20200605 10:10:15.654" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:15 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:15.654" starttime="20200605 10:10:15.621"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:15.655" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:15.655" starttime="20200605 10:10:15.654"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:15.656" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:15.656" starttime="20200605 10:10:15.655"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:15.656" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:15.656" starttime="20200605 10:10:15.656"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.657" starttime="20200605 10:10:15.657"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.659" starttime="20200605 10:10:15.658"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.660" starttime="20200605 10:10:15.659"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.662" starttime="20200605 10:10:15.662"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:15.662" starttime="20200605 10:10:15.661"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:15.663" starttime="20200605 10:10:15.621"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:15.663" starttime="20200605 10:10:15.620"></status>
</kw>
<kw type="foritem" name="${ID} = 7">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:15.673" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/7</msg>
<msg timestamp="20200605 10:10:15.700" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/7: 0.000673 seconds.</msg>
<msg timestamp="20200605 10:10:15.701" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:15 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:15.701" starttime="20200605 10:10:15.664"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:15.702" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:15.702" starttime="20200605 10:10:15.701"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:15.703" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:15.703" starttime="20200605 10:10:15.702"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:15.703" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:15.704" starttime="20200605 10:10:15.703"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.704" starttime="20200605 10:10:15.704"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.705" starttime="20200605 10:10:15.705"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.706" starttime="20200605 10:10:15.706"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.708" starttime="20200605 10:10:15.708"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:15.708" starttime="20200605 10:10:15.707"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:15.708" starttime="20200605 10:10:15.663"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:15.708" starttime="20200605 10:10:15.663"></status>
</kw>
<kw type="foritem" name="${ID} = 8">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:15.717" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/8</msg>
<msg timestamp="20200605 10:10:15.742" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/8: 0.000416 seconds.</msg>
<msg timestamp="20200605 10:10:15.743" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:15 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:15.743" starttime="20200605 10:10:15.709"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:15.744" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:15.744" starttime="20200605 10:10:15.743"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:15.745" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:15.745" starttime="20200605 10:10:15.745"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:15.746" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:15.746" starttime="20200605 10:10:15.745"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.747" starttime="20200605 10:10:15.746"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.748" starttime="20200605 10:10:15.747"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.749" starttime="20200605 10:10:15.748"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.751" starttime="20200605 10:10:15.750"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:15.751" starttime="20200605 10:10:15.750"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:15.751" starttime="20200605 10:10:15.709"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:15.751" starttime="20200605 10:10:15.708"></status>
</kw>
<kw type="foritem" name="${ID} = 9">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:15.760" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/9</msg>
<msg timestamp="20200605 10:10:15.788" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/9: 0.000756 seconds.</msg>
<msg timestamp="20200605 10:10:15.789" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:15 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:15.790" starttime="20200605 10:10:15.752"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:15.791" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:15.791" starttime="20200605 10:10:15.790"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:15.793" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:15.793" starttime="20200605 10:10:15.792"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:15.795" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:15.795" starttime="20200605 10:10:15.793"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.796" starttime="20200605 10:10:15.795"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.798" starttime="20200605 10:10:15.798"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.801" starttime="20200605 10:10:15.800"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.804" starttime="20200605 10:10:15.803"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:15.804" starttime="20200605 10:10:15.802"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:15.805" starttime="20200605 10:10:15.751"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:15.805" starttime="20200605 10:10:15.751"></status>
</kw>
<kw type="foritem" name="${ID} = 10">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:15.819" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/10</msg>
<msg timestamp="20200605 10:10:15.847" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/10: 0.000465 seconds.</msg>
<msg timestamp="20200605 10:10:15.847" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:15 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:15.847" starttime="20200605 10:10:15.808"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:15.848" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:15.848" starttime="20200605 10:10:15.848"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:15.849" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:15.849" starttime="20200605 10:10:15.849"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:15.850" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:15.850" starttime="20200605 10:10:15.849"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.850" starttime="20200605 10:10:15.850"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.851" starttime="20200605 10:10:15.851"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.852" starttime="20200605 10:10:15.851"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.853" starttime="20200605 10:10:15.853"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:15.853" starttime="20200605 10:10:15.852"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:15.853" starttime="20200605 10:10:15.805"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:15.853" starttime="20200605 10:10:15.805"></status>
</kw>
<kw type="foritem" name="${ID} = 11">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:15.862" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/11</msg>
<msg timestamp="20200605 10:10:15.889" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/11: 0.001027 seconds.</msg>
<msg timestamp="20200605 10:10:15.890" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:15 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:15.891" starttime="20200605 10:10:15.854"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:15.892" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:15.893" starttime="20200605 10:10:15.891"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:15.895" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:15.895" starttime="20200605 10:10:15.893"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:15.897" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:15.897" starttime="20200605 10:10:15.895"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.899" starttime="20200605 10:10:15.898"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.902" starttime="20200605 10:10:15.900"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.905" starttime="20200605 10:10:15.904"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.908" starttime="20200605 10:10:15.907"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:15.908" starttime="20200605 10:10:15.906"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:15.909" starttime="20200605 10:10:15.853"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:15.909" starttime="20200605 10:10:15.853"></status>
</kw>
<kw type="foritem" name="${ID} = 12">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:15.920" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/12</msg>
<msg timestamp="20200605 10:10:15.943" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/12: 0.000388 seconds.</msg>
<msg timestamp="20200605 10:10:15.944" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:15 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:15.944" starttime="20200605 10:10:15.910"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:15.945" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:15.945" starttime="20200605 10:10:15.944"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:15.946" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:15.946" starttime="20200605 10:10:15.945"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:15.946" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:15.946" starttime="20200605 10:10:15.946"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.947" starttime="20200605 10:10:15.946"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.948" starttime="20200605 10:10:15.947"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.949" starttime="20200605 10:10:15.948"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.950" starttime="20200605 10:10:15.950"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:15.950" starttime="20200605 10:10:15.949"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:15.951" starttime="20200605 10:10:15.909"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:15.951" starttime="20200605 10:10:15.909"></status>
</kw>
<kw type="foritem" name="${ID} = 13">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:15.958" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/13</msg>
<msg timestamp="20200605 10:10:15.983" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/13: 0.000346 seconds.</msg>
<msg timestamp="20200605 10:10:15.984" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:15 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:15.984" starttime="20200605 10:10:15.951"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:15.985" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:15.985" starttime="20200605 10:10:15.984"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:15.985" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:15.985" starttime="20200605 10:10:15.985"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:15.986" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:15.986" starttime="20200605 10:10:15.986"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.987" starttime="20200605 10:10:15.986"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.988" starttime="20200605 10:10:15.987"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.988" starttime="20200605 10:10:15.988"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:15.990" starttime="20200605 10:10:15.990"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:15.990" starttime="20200605 10:10:15.989"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:15.990" starttime="20200605 10:10:15.951"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:15.990" starttime="20200605 10:10:15.951"></status>
</kw>
<kw type="foritem" name="${ID} = 14">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:16.003" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/14</msg>
<msg timestamp="20200605 10:10:16.030" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/14: 0.000449 seconds.</msg>
<msg timestamp="20200605 10:10:16.031" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:16 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:16.031" starttime="20200605 10:10:15.991"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:16.032" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:16.032" starttime="20200605 10:10:16.031"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:16.032" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:16.032" starttime="20200605 10:10:16.032"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:16.033" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:16.033" starttime="20200605 10:10:16.033"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.034" starttime="20200605 10:10:16.033"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.034" starttime="20200605 10:10:16.034"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.035" starttime="20200605 10:10:16.035"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.037" starttime="20200605 10:10:16.036"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.037" starttime="20200605 10:10:16.036"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.037" starttime="20200605 10:10:15.991"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.037" starttime="20200605 10:10:15.990"></status>
</kw>
<kw type="foritem" name="${ID} = 15">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:16.046" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/15</msg>
<msg timestamp="20200605 10:10:16.073" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/15: 0.00035 seconds.</msg>
<msg timestamp="20200605 10:10:16.073" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:16 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:16.073" starttime="20200605 10:10:16.038"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:16.074" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:16.074" starttime="20200605 10:10:16.073"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:16.075" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:16.075" starttime="20200605 10:10:16.074"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:16.075" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:16.075" starttime="20200605 10:10:16.075"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.076" starttime="20200605 10:10:16.075"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.077" starttime="20200605 10:10:16.076"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.078" starttime="20200605 10:10:16.077"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.079" starttime="20200605 10:10:16.079"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.079" starttime="20200605 10:10:16.078"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.079" starttime="20200605 10:10:16.037"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.079" starttime="20200605 10:10:16.037"></status>
</kw>
<kw type="foritem" name="${ID} = 16">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:16.087" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/16</msg>
<msg timestamp="20200605 10:10:16.115" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/16: 0.000347 seconds.</msg>
<msg timestamp="20200605 10:10:16.118" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:16 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:16.118" starttime="20200605 10:10:16.080"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:16.119" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:16.119" starttime="20200605 10:10:16.118"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:16.119" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:16.119" starttime="20200605 10:10:16.119"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:16.120" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:16.120" starttime="20200605 10:10:16.120"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.121" starttime="20200605 10:10:16.120"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.121" starttime="20200605 10:10:16.121"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.122" starttime="20200605 10:10:16.122"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.124" starttime="20200605 10:10:16.123"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.124" starttime="20200605 10:10:16.123"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.124" starttime="20200605 10:10:16.080"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.124" starttime="20200605 10:10:16.080"></status>
</kw>
<kw type="foritem" name="${ID} = 17">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:16.132" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/17</msg>
<msg timestamp="20200605 10:10:16.160" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/17: 0.001092 seconds.</msg>
<msg timestamp="20200605 10:10:16.161" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:16 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:16.161" starttime="20200605 10:10:16.125"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:16.164" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:16.164" starttime="20200605 10:10:16.162"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:16.166" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:16.166" starttime="20200605 10:10:16.165"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:16.168" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:16.168" starttime="20200605 10:10:16.167"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.170" starttime="20200605 10:10:16.169"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.172" starttime="20200605 10:10:16.171"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.175" starttime="20200605 10:10:16.174"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.177" starttime="20200605 10:10:16.177"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.178" starttime="20200605 10:10:16.176"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.178" starttime="20200605 10:10:16.124"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.178" starttime="20200605 10:10:16.124"></status>
</kw>
<kw type="foritem" name="${ID} = 18">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:16.190" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/18</msg>
<msg timestamp="20200605 10:10:16.232" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/18: 0.000498 seconds.</msg>
<msg timestamp="20200605 10:10:16.233" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:16 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:16.233" starttime="20200605 10:10:16.180"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:16.234" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:16.234" starttime="20200605 10:10:16.233"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:16.235" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:16.235" starttime="20200605 10:10:16.234"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:16.235" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:16.236" starttime="20200605 10:10:16.235"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.236" starttime="20200605 10:10:16.236"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.237" starttime="20200605 10:10:16.237"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.238" starttime="20200605 10:10:16.238"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.240" starttime="20200605 10:10:16.240"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.240" starttime="20200605 10:10:16.239"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.241" starttime="20200605 10:10:16.179"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.241" starttime="20200605 10:10:16.179"></status>
</kw>
<kw type="foritem" name="${ID} = 19">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:16.251" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/19</msg>
<msg timestamp="20200605 10:10:16.278" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/19: 0.000509 seconds.</msg>
<msg timestamp="20200605 10:10:16.279" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:16 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:16.279" starttime="20200605 10:10:16.242"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:16.280" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:16.280" starttime="20200605 10:10:16.279"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:16.281" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:16.281" starttime="20200605 10:10:16.280"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:16.282" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:16.282" starttime="20200605 10:10:16.281"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.283" starttime="20200605 10:10:16.282"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.284" starttime="20200605 10:10:16.283"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.285" starttime="20200605 10:10:16.284"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.287" starttime="20200605 10:10:16.286"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.287" starttime="20200605 10:10:16.286"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.287" starttime="20200605 10:10:16.241"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.287" starttime="20200605 10:10:16.241"></status>
</kw>
<kw type="foritem" name="${ID} = 20">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:16.297" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/20</msg>
<msg timestamp="20200605 10:10:16.324" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/20: 0.000438 seconds.</msg>
<msg timestamp="20200605 10:10:16.324" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:16 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:16.324" starttime="20200605 10:10:16.288"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:16.325" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:16.325" starttime="20200605 10:10:16.325"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:16.326" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:16.326" starttime="20200605 10:10:16.325"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:16.327" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:16.327" starttime="20200605 10:10:16.326"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.327" starttime="20200605 10:10:16.327"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.328" starttime="20200605 10:10:16.327"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.329" starttime="20200605 10:10:16.328"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.330" starttime="20200605 10:10:16.330"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.331" starttime="20200605 10:10:16.329"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.331" starttime="20200605 10:10:16.287"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.331" starttime="20200605 10:10:16.287"></status>
</kw>
<kw type="foritem" name="${ID} = 21">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:16.340" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/21</msg>
<msg timestamp="20200605 10:10:16.365" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/21: 0.000379 seconds.</msg>
<msg timestamp="20200605 10:10:16.366" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:16 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:16.366" starttime="20200605 10:10:16.332"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:16.367" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:16.367" starttime="20200605 10:10:16.366"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:16.367" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:16.367" starttime="20200605 10:10:16.367"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:16.368" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:16.368" starttime="20200605 10:10:16.368"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.369" starttime="20200605 10:10:16.368"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.370" starttime="20200605 10:10:16.369"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.371" starttime="20200605 10:10:16.370"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.372" starttime="20200605 10:10:16.371"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.372" starttime="20200605 10:10:16.371"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.372" starttime="20200605 10:10:16.331"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.372" starttime="20200605 10:10:16.331"></status>
</kw>
<kw type="foritem" name="${ID} = 22">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:16.379" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/22</msg>
<msg timestamp="20200605 10:10:16.405" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/22: 0.000472 seconds.</msg>
<msg timestamp="20200605 10:10:16.405" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:16 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:16.405" starttime="20200605 10:10:16.373"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:16.408" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:16.408" starttime="20200605 10:10:16.407"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:16.409" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:16.409" starttime="20200605 10:10:16.408"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:16.410" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:16.410" starttime="20200605 10:10:16.409"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.411" starttime="20200605 10:10:16.410"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.412" starttime="20200605 10:10:16.411"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.413" starttime="20200605 10:10:16.412"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.414" starttime="20200605 10:10:16.414"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.414" starttime="20200605 10:10:16.413"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.414" starttime="20200605 10:10:16.372"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.414" starttime="20200605 10:10:16.372"></status>
</kw>
<kw type="foritem" name="${ID} = 23">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:16.421" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/23</msg>
<msg timestamp="20200605 10:10:16.453" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/23: 0.001027 seconds.</msg>
<msg timestamp="20200605 10:10:16.455" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:16 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:16.455" starttime="20200605 10:10:16.415"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:16.457" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:16.457" starttime="20200605 10:10:16.456"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:16.459" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:16.459" starttime="20200605 10:10:16.458"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:16.462" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:16.462" starttime="20200605 10:10:16.460"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.464" starttime="20200605 10:10:16.462"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.466" starttime="20200605 10:10:16.466"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.470" starttime="20200605 10:10:16.469"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.474" starttime="20200605 10:10:16.473"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.474" starttime="20200605 10:10:16.471"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.474" starttime="20200605 10:10:16.414"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.475" starttime="20200605 10:10:16.414"></status>
</kw>
<kw type="foritem" name="${ID} = 24">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:16.487" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/24</msg>
<msg timestamp="20200605 10:10:16.511" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/24: 0.000347 seconds.</msg>
<msg timestamp="20200605 10:10:16.511" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:16 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:16.511" starttime="20200605 10:10:16.476"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:16.512" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:16.512" starttime="20200605 10:10:16.511"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:16.513" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:16.513" starttime="20200605 10:10:16.512"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:16.513" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:16.513" starttime="20200605 10:10:16.513"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.514" starttime="20200605 10:10:16.514"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.514" starttime="20200605 10:10:16.514"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.515" starttime="20200605 10:10:16.515"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.516" starttime="20200605 10:10:16.516"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.517" starttime="20200605 10:10:16.516"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.517" starttime="20200605 10:10:16.475"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.517" starttime="20200605 10:10:16.475"></status>
</kw>
<kw type="foritem" name="${ID} = 25">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:16.524" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/25</msg>
<msg timestamp="20200605 10:10:16.549" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/25: 0.000356 seconds.</msg>
<msg timestamp="20200605 10:10:16.550" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:16 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:16.550" starttime="20200605 10:10:16.518"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:16.551" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:16.551" starttime="20200605 10:10:16.550"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:16.552" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:16.552" starttime="20200605 10:10:16.551"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:16.552" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:16.552" starttime="20200605 10:10:16.552"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.553" starttime="20200605 10:10:16.553"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.554" starttime="20200605 10:10:16.553"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.555" starttime="20200605 10:10:16.554"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.556" starttime="20200605 10:10:16.555"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.556" starttime="20200605 10:10:16.555"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.556" starttime="20200605 10:10:16.517"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.556" starttime="20200605 10:10:16.517"></status>
</kw>
<kw type="foritem" name="${ID} = 26">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:16.564" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/26</msg>
<msg timestamp="20200605 10:10:16.591" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/26: 0.000359 seconds.</msg>
<msg timestamp="20200605 10:10:16.592" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:16 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:16.592" starttime="20200605 10:10:16.557"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:16.592" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:16.592" starttime="20200605 10:10:16.592"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:16.593" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:16.594" starttime="20200605 10:10:16.593"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:16.594" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:16.594" starttime="20200605 10:10:16.594"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.595" starttime="20200605 10:10:16.594"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.595" starttime="20200605 10:10:16.595"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.596" starttime="20200605 10:10:16.596"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.597" starttime="20200605 10:10:16.597"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.598" starttime="20200605 10:10:16.597"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.598" starttime="20200605 10:10:16.556"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.598" starttime="20200605 10:10:16.556"></status>
</kw>
<kw type="foritem" name="${ID} = 27">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:16.606" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/27</msg>
<msg timestamp="20200605 10:10:16.631" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/27: 0.000363 seconds.</msg>
<msg timestamp="20200605 10:10:16.632" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:16 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:16.632" starttime="20200605 10:10:16.599"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:16.633" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:16.633" starttime="20200605 10:10:16.632"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:16.634" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:16.634" starttime="20200605 10:10:16.633"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:16.634" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:16.634" starttime="20200605 10:10:16.634"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.635" starttime="20200605 10:10:16.634"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.636" starttime="20200605 10:10:16.635"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.636" starttime="20200605 10:10:16.636"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.638" starttime="20200605 10:10:16.637"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.638" starttime="20200605 10:10:16.637"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.638" starttime="20200605 10:10:16.598"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.638" starttime="20200605 10:10:16.598"></status>
</kw>
<kw type="foritem" name="${ID} = 28">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:16.646" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/28</msg>
<msg timestamp="20200605 10:10:16.674" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/28: 0.000373 seconds.</msg>
<msg timestamp="20200605 10:10:16.675" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:16 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:16.675" starttime="20200605 10:10:16.639"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:16.676" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:16.676" starttime="20200605 10:10:16.675"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:16.677" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:16.677" starttime="20200605 10:10:16.676"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:16.677" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:16.678" starttime="20200605 10:10:16.677"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.678" starttime="20200605 10:10:16.678"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.679" starttime="20200605 10:10:16.678"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.680" starttime="20200605 10:10:16.679"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.682" starttime="20200605 10:10:16.681"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.682" starttime="20200605 10:10:16.681"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.682" starttime="20200605 10:10:16.638"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.682" starttime="20200605 10:10:16.638"></status>
</kw>
<kw type="foritem" name="${ID} = 29">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:16.692" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/29</msg>
<msg timestamp="20200605 10:10:16.719" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/29: 0.000617 seconds.</msg>
<msg timestamp="20200605 10:10:16.720" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:16 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:16.720" starttime="20200605 10:10:16.683"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:16.722" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:16.722" starttime="20200605 10:10:16.721"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:16.723" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:16.723" starttime="20200605 10:10:16.722"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:16.724" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:16.724" starttime="20200605 10:10:16.723"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.725" starttime="20200605 10:10:16.725"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.727" starttime="20200605 10:10:16.726"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.729" starttime="20200605 10:10:16.728"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.731" starttime="20200605 10:10:16.731"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.732" starttime="20200605 10:10:16.730"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.732" starttime="20200605 10:10:16.682"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.732" starttime="20200605 10:10:16.682"></status>
</kw>
<kw type="foritem" name="${ID} = 30">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:16.746" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/30</msg>
<msg timestamp="20200605 10:10:16.771" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/30: 0.000389 seconds.</msg>
<msg timestamp="20200605 10:10:16.772" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:16 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:16.772" starttime="20200605 10:10:16.733"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:16.773" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:16.773" starttime="20200605 10:10:16.772"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:16.773" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:16.774" starttime="20200605 10:10:16.773"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:16.774" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:16.774" starttime="20200605 10:10:16.774"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.775" starttime="20200605 10:10:16.775"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.776" starttime="20200605 10:10:16.775"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.777" starttime="20200605 10:10:16.776"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.778" starttime="20200605 10:10:16.778"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.778" starttime="20200605 10:10:16.777"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.778" starttime="20200605 10:10:16.733"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.778" starttime="20200605 10:10:16.732"></status>
</kw>
<kw type="foritem" name="${ID} = 31">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:16.788" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/31</msg>
<msg timestamp="20200605 10:10:16.815" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/31: 0.000521 seconds.</msg>
<msg timestamp="20200605 10:10:16.815" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:16 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:16.816" starttime="20200605 10:10:16.779"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:16.817" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:16.817" starttime="20200605 10:10:16.816"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:16.818" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:16.818" starttime="20200605 10:10:16.817"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:16.819" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:16.819" starttime="20200605 10:10:16.818"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.820" starttime="20200605 10:10:16.820"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.822" starttime="20200605 10:10:16.821"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.823" starttime="20200605 10:10:16.822"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.826" starttime="20200605 10:10:16.825"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.826" starttime="20200605 10:10:16.824"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.826" starttime="20200605 10:10:16.779"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.827" starttime="20200605 10:10:16.779"></status>
</kw>
<kw type="foritem" name="${ID} = 32">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:16.842" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/32</msg>
<msg timestamp="20200605 10:10:16.872" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/32: 0.000575 seconds.</msg>
<msg timestamp="20200605 10:10:16.873" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:16 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:16.873" starttime="20200605 10:10:16.828"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:16.874" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:16.874" starttime="20200605 10:10:16.873"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:16.875" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:16.875" starttime="20200605 10:10:16.874"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:16.876" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:16.876" starttime="20200605 10:10:16.876"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.877" starttime="20200605 10:10:16.877"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.879" starttime="20200605 10:10:16.878"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.880" starttime="20200605 10:10:16.879"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.882" starttime="20200605 10:10:16.882"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.882" starttime="20200605 10:10:16.881"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.882" starttime="20200605 10:10:16.827"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.883" starttime="20200605 10:10:16.827"></status>
</kw>
<kw type="foritem" name="${ID} = 33">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:16.894" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/33</msg>
<msg timestamp="20200605 10:10:16.922" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/33: 0.000627 seconds.</msg>
<msg timestamp="20200605 10:10:16.923" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:16 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:16.923" starttime="20200605 10:10:16.884"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:16.924" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:16.924" starttime="20200605 10:10:16.923"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:16.925" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:16.926" starttime="20200605 10:10:16.925"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:16.927" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:16.927" starttime="20200605 10:10:16.926"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.928" starttime="20200605 10:10:16.927"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.929" starttime="20200605 10:10:16.928"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.931" starttime="20200605 10:10:16.930"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.933" starttime="20200605 10:10:16.933"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.933" starttime="20200605 10:10:16.932"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.933" starttime="20200605 10:10:16.883"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.934" starttime="20200605 10:10:16.883"></status>
</kw>
<kw type="foritem" name="${ID} = 34">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:16.948" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/34</msg>
<msg timestamp="20200605 10:10:16.977" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/34: 0.000481 seconds.</msg>
<msg timestamp="20200605 10:10:16.978" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:16 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:16.978" starttime="20200605 10:10:16.935"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:16.979" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:16.979" starttime="20200605 10:10:16.978"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:16.980" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:16.980" starttime="20200605 10:10:16.979"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:16.981" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:16.981" starttime="20200605 10:10:16.980"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.982" starttime="20200605 10:10:16.981"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.983" starttime="20200605 10:10:16.982"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.984" starttime="20200605 10:10:16.983"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:16.986" starttime="20200605 10:10:16.986"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.986" starttime="20200605 10:10:16.985"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.987" starttime="20200605 10:10:16.934"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:16.987" starttime="20200605 10:10:16.934"></status>
</kw>
<kw type="foritem" name="${ID} = 35">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:16.998" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/35</msg>
<msg timestamp="20200605 10:10:17.025" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/35: 0.0004 seconds.</msg>
<msg timestamp="20200605 10:10:17.026" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:17 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:17.026" starttime="20200605 10:10:16.988"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:17.027" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:17.027" starttime="20200605 10:10:17.026"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:17.028" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:17.028" starttime="20200605 10:10:17.027"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:17.029" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:17.029" starttime="20200605 10:10:17.028"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.029" starttime="20200605 10:10:17.029"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.030" starttime="20200605 10:10:17.030"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.032" starttime="20200605 10:10:17.031"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.033" starttime="20200605 10:10:17.033"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.033" starttime="20200605 10:10:17.032"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.034" starttime="20200605 10:10:16.987"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.034" starttime="20200605 10:10:16.987"></status>
</kw>
<kw type="foritem" name="${ID} = 36">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:17.043" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/36</msg>
<msg timestamp="20200605 10:10:17.070" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/36: 0.000353 seconds.</msg>
<msg timestamp="20200605 10:10:17.070" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:17 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:17.070" starttime="20200605 10:10:17.035"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:17.071" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:17.071" starttime="20200605 10:10:17.070"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:17.072" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:17.072" starttime="20200605 10:10:17.071"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:17.072" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:17.072" starttime="20200605 10:10:17.072"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.073" starttime="20200605 10:10:17.073"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.074" starttime="20200605 10:10:17.073"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.075" starttime="20200605 10:10:17.074"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.076" starttime="20200605 10:10:17.076"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.076" starttime="20200605 10:10:17.075"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.076" starttime="20200605 10:10:17.034"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.076" starttime="20200605 10:10:17.034"></status>
</kw>
<kw type="foritem" name="${ID} = 37">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:17.085" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/37</msg>
<msg timestamp="20200605 10:10:17.115" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/37: 0.000972 seconds.</msg>
<msg timestamp="20200605 10:10:17.116" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:17 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:17.116" starttime="20200605 10:10:17.077"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:17.118" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:17.119" starttime="20200605 10:10:17.117"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:17.121" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:17.121" starttime="20200605 10:10:17.119"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:17.123" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:17.123" starttime="20200605 10:10:17.122"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.126" starttime="20200605 10:10:17.124"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.128" starttime="20200605 10:10:17.126"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.130" starttime="20200605 10:10:17.128"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.134" starttime="20200605 10:10:17.133"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.134" starttime="20200605 10:10:17.131"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.134" starttime="20200605 10:10:17.077"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.134" starttime="20200605 10:10:17.076"></status>
</kw>
<kw type="foritem" name="${ID} = 38">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:17.149" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/38</msg>
<msg timestamp="20200605 10:10:17.181" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/38: 0.000393 seconds.</msg>
<msg timestamp="20200605 10:10:17.182" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:17 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:17.182" starttime="20200605 10:10:17.137"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:17.183" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:17.183" starttime="20200605 10:10:17.182"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:17.184" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:17.184" starttime="20200605 10:10:17.183"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:17.184" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:17.184" starttime="20200605 10:10:17.184"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.185" starttime="20200605 10:10:17.184"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.186" starttime="20200605 10:10:17.185"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.187" starttime="20200605 10:10:17.186"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.188" starttime="20200605 10:10:17.188"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.188" starttime="20200605 10:10:17.187"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.188" starttime="20200605 10:10:17.135"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.189" starttime="20200605 10:10:17.135"></status>
</kw>
<kw type="foritem" name="${ID} = 39">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:17.196" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/39</msg>
<msg timestamp="20200605 10:10:17.224" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/39: 0.000421 seconds.</msg>
<msg timestamp="20200605 10:10:17.225" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:17 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:17.225" starttime="20200605 10:10:17.189"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:17.226" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:17.226" starttime="20200605 10:10:17.225"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:17.227" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:17.227" starttime="20200605 10:10:17.226"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:17.227" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:17.227" starttime="20200605 10:10:17.227"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.228" starttime="20200605 10:10:17.228"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.229" starttime="20200605 10:10:17.228"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.230" starttime="20200605 10:10:17.229"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.232" starttime="20200605 10:10:17.231"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.232" starttime="20200605 10:10:17.231"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.232" starttime="20200605 10:10:17.189"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.232" starttime="20200605 10:10:17.189"></status>
</kw>
<kw type="foritem" name="${ID} = 40">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:17.242" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/40</msg>
<msg timestamp="20200605 10:10:17.272" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/40: 0.000608 seconds.</msg>
<msg timestamp="20200605 10:10:17.272" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:17 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:17.272" starttime="20200605 10:10:17.233"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:17.273" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:17.274" starttime="20200605 10:10:17.273"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:17.275" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:17.275" starttime="20200605 10:10:17.274"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:17.276" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:17.276" starttime="20200605 10:10:17.276"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.277" starttime="20200605 10:10:17.277"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.278" starttime="20200605 10:10:17.277"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.279" starttime="20200605 10:10:17.278"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.281" starttime="20200605 10:10:17.281"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.281" starttime="20200605 10:10:17.280"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.281" starttime="20200605 10:10:17.232"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.281" starttime="20200605 10:10:17.232"></status>
</kw>
<kw type="foritem" name="${ID} = 41">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:17.293" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/41</msg>
<msg timestamp="20200605 10:10:17.325" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/41: 0.000611 seconds.</msg>
<msg timestamp="20200605 10:10:17.326" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:17 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:17.326" starttime="20200605 10:10:17.283"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:17.327" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:17.327" starttime="20200605 10:10:17.326"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:17.327" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:17.328" starttime="20200605 10:10:17.327"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:17.328" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:17.328" starttime="20200605 10:10:17.328"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.329" starttime="20200605 10:10:17.329"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.330" starttime="20200605 10:10:17.329"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.331" starttime="20200605 10:10:17.330"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.332" starttime="20200605 10:10:17.332"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.332" starttime="20200605 10:10:17.331"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.332" starttime="20200605 10:10:17.282"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.333" starttime="20200605 10:10:17.282"></status>
</kw>
<kw type="foritem" name="${ID} = 42">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:17.342" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/42</msg>
<msg timestamp="20200605 10:10:17.369" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/42: 0.000425 seconds.</msg>
<msg timestamp="20200605 10:10:17.370" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:17 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:17.370" starttime="20200605 10:10:17.333"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:17.371" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:17.371" starttime="20200605 10:10:17.370"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:17.372" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:17.372" starttime="20200605 10:10:17.371"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:17.373" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:17.373" starttime="20200605 10:10:17.372"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.373" starttime="20200605 10:10:17.373"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.374" starttime="20200605 10:10:17.374"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.375" starttime="20200605 10:10:17.375"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.377" starttime="20200605 10:10:17.377"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.377" starttime="20200605 10:10:17.376"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.377" starttime="20200605 10:10:17.333"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.377" starttime="20200605 10:10:17.333"></status>
</kw>
<kw type="foritem" name="${ID} = 43">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:17.389" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/43</msg>
<msg timestamp="20200605 10:10:17.418" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/43: 0.000477 seconds.</msg>
<msg timestamp="20200605 10:10:17.419" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:17 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:17.419" starttime="20200605 10:10:17.379"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:17.420" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:17.420" starttime="20200605 10:10:17.419"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:17.421" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:17.421" starttime="20200605 10:10:17.421"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:17.422" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:17.423" starttime="20200605 10:10:17.422"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.423" starttime="20200605 10:10:17.423"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.425" starttime="20200605 10:10:17.424"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.426" starttime="20200605 10:10:17.425"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.429" starttime="20200605 10:10:17.428"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.429" starttime="20200605 10:10:17.427"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.429" starttime="20200605 10:10:17.378"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.429" starttime="20200605 10:10:17.378"></status>
</kw>
<kw type="foritem" name="${ID} = 44">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:17.472" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/44</msg>
<msg timestamp="20200605 10:10:17.501" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/44: 0.00105 seconds.</msg>
<msg timestamp="20200605 10:10:17.503" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:17 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:17.503" starttime="20200605 10:10:17.431"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:17.505" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:17.505" starttime="20200605 10:10:17.504"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:17.507" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:17.507" starttime="20200605 10:10:17.506"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:17.509" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:17.510" starttime="20200605 10:10:17.508"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.511" starttime="20200605 10:10:17.510"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.513" starttime="20200605 10:10:17.512"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.516" starttime="20200605 10:10:17.514"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.519" starttime="20200605 10:10:17.518"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.520" starttime="20200605 10:10:17.517"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.520" starttime="20200605 10:10:17.430"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.520" starttime="20200605 10:10:17.430"></status>
</kw>
<kw type="foritem" name="${ID} = 45">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:17.539" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/45</msg>
<msg timestamp="20200605 10:10:17.566" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/45: 0.000329 seconds.</msg>
<msg timestamp="20200605 10:10:17.567" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:17 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:17.567" starttime="20200605 10:10:17.523"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:17.567" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:17.567" starttime="20200605 10:10:17.567"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:17.568" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:17.568" starttime="20200605 10:10:17.568"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:17.569" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:17.569" starttime="20200605 10:10:17.568"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.569" starttime="20200605 10:10:17.569"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.570" starttime="20200605 10:10:17.570"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.571" starttime="20200605 10:10:17.570"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.572" starttime="20200605 10:10:17.571"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.572" starttime="20200605 10:10:17.571"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.572" starttime="20200605 10:10:17.521"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.572" starttime="20200605 10:10:17.520"></status>
</kw>
<kw type="foritem" name="${ID} = 46">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:17.580" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/46</msg>
<msg timestamp="20200605 10:10:17.609" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/46: 0.000392 seconds.</msg>
<msg timestamp="20200605 10:10:17.610" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:17 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:17.610" starttime="20200605 10:10:17.573"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:17.611" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:17.611" starttime="20200605 10:10:17.610"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:17.612" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:17.612" starttime="20200605 10:10:17.611"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:17.612" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:17.612" starttime="20200605 10:10:17.612"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.613" starttime="20200605 10:10:17.613"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.614" starttime="20200605 10:10:17.613"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.615" starttime="20200605 10:10:17.614"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.616" starttime="20200605 10:10:17.616"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.616" starttime="20200605 10:10:17.615"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.616" starttime="20200605 10:10:17.572"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.616" starttime="20200605 10:10:17.572"></status>
</kw>
<kw type="foritem" name="${ID} = 47">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:17.625" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/47</msg>
<msg timestamp="20200605 10:10:17.651" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/47: 0.000378 seconds.</msg>
<msg timestamp="20200605 10:10:17.651" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:17 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:17.651" starttime="20200605 10:10:17.617"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:17.652" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:17.652" starttime="20200605 10:10:17.652"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:17.653" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:17.653" starttime="20200605 10:10:17.652"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:17.653" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:17.653" starttime="20200605 10:10:17.653"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.654" starttime="20200605 10:10:17.654"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.655" starttime="20200605 10:10:17.655"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.656" starttime="20200605 10:10:17.656"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.658" starttime="20200605 10:10:17.657"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.658" starttime="20200605 10:10:17.657"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.658" starttime="20200605 10:10:17.616"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.658" starttime="20200605 10:10:17.616"></status>
</kw>
<kw type="foritem" name="${ID} = 48">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:17.673" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/48</msg>
<msg timestamp="20200605 10:10:17.698" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/48: 0.000268 seconds.</msg>
<msg timestamp="20200605 10:10:17.698" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:17 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:17.698" starttime="20200605 10:10:17.659"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:17.699" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:17.699" starttime="20200605 10:10:17.698"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:17.699" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:17.699" starttime="20200605 10:10:17.699"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:17.700" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:17.700" starttime="20200605 10:10:17.700"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.700" starttime="20200605 10:10:17.700"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.701" starttime="20200605 10:10:17.701"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.702" starttime="20200605 10:10:17.701"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.703" starttime="20200605 10:10:17.703"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.703" starttime="20200605 10:10:17.702"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.703" starttime="20200605 10:10:17.658"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.704" starttime="20200605 10:10:17.658"></status>
</kw>
<kw type="foritem" name="${ID} = 49">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:17.710" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/49</msg>
<msg timestamp="20200605 10:10:17.736" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/49: 0.000407 seconds.</msg>
<msg timestamp="20200605 10:10:17.737" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:17 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:17.737" starttime="20200605 10:10:17.704"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:17.738" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:17.738" starttime="20200605 10:10:17.737"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:17.738" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:17.738" starttime="20200605 10:10:17.738"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:17.739" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:17.739" starttime="20200605 10:10:17.739"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.739" starttime="20200605 10:10:17.739"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.740" starttime="20200605 10:10:17.740"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.741" starttime="20200605 10:10:17.741"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.743" starttime="20200605 10:10:17.742"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.743" starttime="20200605 10:10:17.742"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.743" starttime="20200605 10:10:17.704"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.743" starttime="20200605 10:10:17.704"></status>
</kw>
<kw type="foritem" name="${ID} = 50">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:17.751" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/50</msg>
<msg timestamp="20200605 10:10:17.784" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/50: 0.001142 seconds.</msg>
<msg timestamp="20200605 10:10:17.785" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:17 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:17.785" starttime="20200605 10:10:17.744"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:17.787" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:17.788" starttime="20200605 10:10:17.786"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:17.790" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:17.790" starttime="20200605 10:10:17.789"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:17.792" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:17.792" starttime="20200605 10:10:17.791"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.794" starttime="20200605 10:10:17.793"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.796" starttime="20200605 10:10:17.795"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.798" starttime="20200605 10:10:17.797"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.802" starttime="20200605 10:10:17.801"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.802" starttime="20200605 10:10:17.799"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.802" starttime="20200605 10:10:17.743"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.802" starttime="20200605 10:10:17.743"></status>
</kw>
<kw type="foritem" name="${ID} = 51">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:17.817" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/51</msg>
<msg timestamp="20200605 10:10:17.845" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/51: 0.000409 seconds.</msg>
<msg timestamp="20200605 10:10:17.845" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:17 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:17.846" starttime="20200605 10:10:17.804"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:17.846" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:17.846" starttime="20200605 10:10:17.846"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:17.847" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:17.847" starttime="20200605 10:10:17.847"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:17.848" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:17.848" starttime="20200605 10:10:17.847"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.849" starttime="20200605 10:10:17.848"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.849" starttime="20200605 10:10:17.849"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.850" starttime="20200605 10:10:17.849"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.851" starttime="20200605 10:10:17.851"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.851" starttime="20200605 10:10:17.850"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.851" starttime="20200605 10:10:17.803"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.851" starttime="20200605 10:10:17.803"></status>
</kw>
<kw type="foritem" name="${ID} = 52">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:17.859" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/52</msg>
<msg timestamp="20200605 10:10:17.888" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/52: 0.000471 seconds.</msg>
<msg timestamp="20200605 10:10:17.889" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:17 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:17.889" starttime="20200605 10:10:17.852"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:17.890" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:17.890" starttime="20200605 10:10:17.890"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:17.891" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:17.891" starttime="20200605 10:10:17.891"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:17.892" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:17.892" starttime="20200605 10:10:17.891"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.892" starttime="20200605 10:10:17.892"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.893" starttime="20200605 10:10:17.893"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.894" starttime="20200605 10:10:17.894"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.895" starttime="20200605 10:10:17.895"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.895" starttime="20200605 10:10:17.894"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.896" starttime="20200605 10:10:17.852"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.896" starttime="20200605 10:10:17.851"></status>
</kw>
<kw type="foritem" name="${ID} = 53">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:17.905" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/53</msg>
<msg timestamp="20200605 10:10:17.931" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/53: 0.000384 seconds.</msg>
<msg timestamp="20200605 10:10:17.931" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:17 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:17.932" starttime="20200605 10:10:17.896"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:17.932" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:17.932" starttime="20200605 10:10:17.932"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:17.933" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:17.933" starttime="20200605 10:10:17.933"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:17.934" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:17.934" starttime="20200605 10:10:17.933"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.935" starttime="20200605 10:10:17.934"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.935" starttime="20200605 10:10:17.935"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.936" starttime="20200605 10:10:17.936"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.937" starttime="20200605 10:10:17.937"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.937" starttime="20200605 10:10:17.936"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.938" starttime="20200605 10:10:17.896"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.938" starttime="20200605 10:10:17.896"></status>
</kw>
<kw type="foritem" name="${ID} = 54">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:17.946" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/54</msg>
<msg timestamp="20200605 10:10:17.973" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/54: 0.000383 seconds.</msg>
<msg timestamp="20200605 10:10:17.974" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:17 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:17.974" starttime="20200605 10:10:17.938"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:17.975" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:17.975" starttime="20200605 10:10:17.974"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:17.976" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:17.976" starttime="20200605 10:10:17.975"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:17.976" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:17.976" starttime="20200605 10:10:17.976"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.977" starttime="20200605 10:10:17.977"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.978" starttime="20200605 10:10:17.977"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.979" starttime="20200605 10:10:17.978"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:17.980" starttime="20200605 10:10:17.980"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.980" starttime="20200605 10:10:17.979"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.980" starttime="20200605 10:10:17.938"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:17.980" starttime="20200605 10:10:17.938"></status>
</kw>
<kw type="foritem" name="${ID} = 55">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:17.989" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/55</msg>
<msg timestamp="20200605 10:10:18.018" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/55: 0.000466 seconds.</msg>
<msg timestamp="20200605 10:10:18.019" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:18 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:18.019" starttime="20200605 10:10:17.981"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:18.020" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:18.020" starttime="20200605 10:10:18.019"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:18.021" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:18.021" starttime="20200605 10:10:18.021"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:18.022" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:18.022" starttime="20200605 10:10:18.022"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.023" starttime="20200605 10:10:18.023"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.024" starttime="20200605 10:10:18.023"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.025" starttime="20200605 10:10:18.025"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.028" starttime="20200605 10:10:18.027"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.028" starttime="20200605 10:10:18.026"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.028" starttime="20200605 10:10:17.980"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.028" starttime="20200605 10:10:17.980"></status>
</kw>
<kw type="foritem" name="${ID} = 56">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:18.043" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/56</msg>
<msg timestamp="20200605 10:10:18.080" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/56: 0.000766 seconds.</msg>
<msg timestamp="20200605 10:10:18.081" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:18 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:18.081" starttime="20200605 10:10:18.030"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:18.083" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:18.083" starttime="20200605 10:10:18.082"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:18.085" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:18.085" starttime="20200605 10:10:18.084"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:18.086" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:18.086" starttime="20200605 10:10:18.085"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.087" starttime="20200605 10:10:18.087"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.089" starttime="20200605 10:10:18.088"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.091" starttime="20200605 10:10:18.090"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.094" starttime="20200605 10:10:18.093"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.094" starttime="20200605 10:10:18.092"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.094" starttime="20200605 10:10:18.029"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.094" starttime="20200605 10:10:18.029"></status>
</kw>
<kw type="foritem" name="${ID} = 57">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:18.119" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/57</msg>
<msg timestamp="20200605 10:10:18.149" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/57: 0.000452 seconds.</msg>
<msg timestamp="20200605 10:10:18.150" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:18 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:18.150" starttime="20200605 10:10:18.096"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:18.151" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:18.151" starttime="20200605 10:10:18.150"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:18.152" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:18.152" starttime="20200605 10:10:18.151"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:18.153" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:18.153" starttime="20200605 10:10:18.152"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.154" starttime="20200605 10:10:18.153"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.155" starttime="20200605 10:10:18.154"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.156" starttime="20200605 10:10:18.155"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.158" starttime="20200605 10:10:18.158"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.158" starttime="20200605 10:10:18.157"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.159" starttime="20200605 10:10:18.095"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.159" starttime="20200605 10:10:18.094"></status>
</kw>
<kw type="foritem" name="${ID} = 58">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:18.177" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/58</msg>
<msg timestamp="20200605 10:10:18.207" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/58: 0.000541 seconds.</msg>
<msg timestamp="20200605 10:10:18.209" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:18 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:18.209" starttime="20200605 10:10:18.160"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:18.210" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:18.210" starttime="20200605 10:10:18.209"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:18.211" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:18.211" starttime="20200605 10:10:18.210"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:18.212" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:18.212" starttime="20200605 10:10:18.211"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.213" starttime="20200605 10:10:18.212"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.214" starttime="20200605 10:10:18.213"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.215" starttime="20200605 10:10:18.214"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.216" starttime="20200605 10:10:18.216"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.217" starttime="20200605 10:10:18.215"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.217" starttime="20200605 10:10:18.159"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.217" starttime="20200605 10:10:18.159"></status>
</kw>
<kw type="foritem" name="${ID} = 59">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:18.228" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/59</msg>
<msg timestamp="20200605 10:10:18.257" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/59: 0.00044 seconds.</msg>
<msg timestamp="20200605 10:10:18.257" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:18 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:18.257" starttime="20200605 10:10:18.218"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:18.258" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:18.258" starttime="20200605 10:10:18.258"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:18.259" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:18.259" starttime="20200605 10:10:18.259"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:18.260" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:18.260" starttime="20200605 10:10:18.259"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.261" starttime="20200605 10:10:18.260"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.261" starttime="20200605 10:10:18.261"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.262" starttime="20200605 10:10:18.262"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.264" starttime="20200605 10:10:18.263"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.264" starttime="20200605 10:10:18.263"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.264" starttime="20200605 10:10:18.217"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.264" starttime="20200605 10:10:18.217"></status>
</kw>
<kw type="foritem" name="${ID} = 60">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:18.274" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/60</msg>
<msg timestamp="20200605 10:10:18.302" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/60: 0.000468 seconds.</msg>
<msg timestamp="20200605 10:10:18.302" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:18 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:18.303" starttime="20200605 10:10:18.265"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:18.303" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:18.304" starttime="20200605 10:10:18.303"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:18.304" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:18.304" starttime="20200605 10:10:18.304"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:18.305" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:18.305" starttime="20200605 10:10:18.305"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.306" starttime="20200605 10:10:18.306"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.307" starttime="20200605 10:10:18.306"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.308" starttime="20200605 10:10:18.307"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.309" starttime="20200605 10:10:18.309"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.309" starttime="20200605 10:10:18.308"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.309" starttime="20200605 10:10:18.264"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.309" starttime="20200605 10:10:18.264"></status>
</kw>
<kw type="foritem" name="${ID} = 61">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:18.319" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/61</msg>
<msg timestamp="20200605 10:10:18.348" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/61: 0.000401 seconds.</msg>
<msg timestamp="20200605 10:10:18.348" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:18 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:18.348" starttime="20200605 10:10:18.310"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:18.349" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:18.350" starttime="20200605 10:10:18.349"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:18.350" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:18.350" starttime="20200605 10:10:18.350"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:18.351" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:18.351" starttime="20200605 10:10:18.351"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.352" starttime="20200605 10:10:18.351"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.353" starttime="20200605 10:10:18.352"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.354" starttime="20200605 10:10:18.353"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.355" starttime="20200605 10:10:18.355"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.355" starttime="20200605 10:10:18.354"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.355" starttime="20200605 10:10:18.310"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.355" starttime="20200605 10:10:18.310"></status>
</kw>
<kw type="foritem" name="${ID} = 62">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:18.364" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/62</msg>
<msg timestamp="20200605 10:10:18.391" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/62: 0.000398 seconds.</msg>
<msg timestamp="20200605 10:10:18.392" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:18 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:18.392" starttime="20200605 10:10:18.356"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:18.393" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:18.393" starttime="20200605 10:10:18.392"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:18.394" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:18.394" starttime="20200605 10:10:18.393"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:18.394" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:18.394" starttime="20200605 10:10:18.394"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.395" starttime="20200605 10:10:18.395"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.396" starttime="20200605 10:10:18.395"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.397" starttime="20200605 10:10:18.396"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.398" starttime="20200605 10:10:18.398"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.398" starttime="20200605 10:10:18.397"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.399" starttime="20200605 10:10:18.356"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.399" starttime="20200605 10:10:18.355"></status>
</kw>
<kw type="foritem" name="${ID} = 63">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:18.409" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/63</msg>
<msg timestamp="20200605 10:10:18.438" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/63: 0.000345 seconds.</msg>
<msg timestamp="20200605 10:10:18.438" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:18 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:18.438" starttime="20200605 10:10:18.400"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:18.439" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:18.439" starttime="20200605 10:10:18.439"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:18.440" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:18.440" starttime="20200605 10:10:18.439"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:18.441" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:18.441" starttime="20200605 10:10:18.440"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.441" starttime="20200605 10:10:18.441"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.442" starttime="20200605 10:10:18.442"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.443" starttime="20200605 10:10:18.442"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.444" starttime="20200605 10:10:18.444"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.444" starttime="20200605 10:10:18.443"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.444" starttime="20200605 10:10:18.399"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.444" starttime="20200605 10:10:18.399"></status>
</kw>
<kw type="foritem" name="${ID} = 64">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:18.452" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/64</msg>
<msg timestamp="20200605 10:10:18.476" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/64: 0.00034 seconds.</msg>
<msg timestamp="20200605 10:10:18.477" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:18 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:18.477" starttime="20200605 10:10:18.445"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:18.477" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:18.477" starttime="20200605 10:10:18.477"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:18.478" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:18.478" starttime="20200605 10:10:18.478"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:18.479" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:18.479" starttime="20200605 10:10:18.478"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.479" starttime="20200605 10:10:18.479"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.480" starttime="20200605 10:10:18.480"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.481" starttime="20200605 10:10:18.480"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.482" starttime="20200605 10:10:18.482"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.482" starttime="20200605 10:10:18.481"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.482" starttime="20200605 10:10:18.444"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.482" starttime="20200605 10:10:18.444"></status>
</kw>
<kw type="foritem" name="${ID} = 65">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:18.491" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/65</msg>
<msg timestamp="20200605 10:10:18.517" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/65: 0.000383 seconds.</msg>
<msg timestamp="20200605 10:10:18.518" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:18 GMT
connection Keep-Alive
content-type application/json
content-length 2438


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:18.518" starttime="20200605 10:10:18.483"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:18.519" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:18.519" starttime="20200605 10:10:18.518"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:18.519" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200605 10:10:18.519" starttime="20200605 10:10:18.519"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:18.520" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200605 10:10:18.525" starttime="20200605 10:10:18.520"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.526" starttime="20200605 10:10:18.526"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.527" starttime="20200605 10:10:18.526"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.528" starttime="20200605 10:10:18.527"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.529" starttime="20200605 10:10:18.529"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.529" starttime="20200605 10:10:18.528"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.529" starttime="20200605 10:10:18.483"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.529" starttime="20200605 10:10:18.482"></status>
</kw>
<kw type="foritem" name="${ID} = 66">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:18.540" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/66</msg>
<msg timestamp="20200605 10:10:18.568" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/66: 0.000325 seconds.</msg>
<msg timestamp="20200605 10:10:18.568" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:18 GMT
connection Keep-Alive
content-type application/json
content-length 1056


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:18.568" starttime="20200605 10:10:18.530"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:18.569" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:18.569" starttime="20200605 10:10:18.569"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:18.570" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:18.570" starttime="20200605 10:10:18.569"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:18.570" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200605 10:10:18.570" starttime="20200605 10:10:18.570"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.571" starttime="20200605 10:10:18.571"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.572" starttime="20200605 10:10:18.571"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.572" starttime="20200605 10:10:18.572"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.573" starttime="20200605 10:10:18.573"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.573" starttime="20200605 10:10:18.573"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.574" starttime="20200605 10:10:18.530"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.574" starttime="20200605 10:10:18.529"></status>
</kw>
<kw type="foritem" name="${ID} = 67">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:18.581" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/67</msg>
<msg timestamp="20200605 10:10:18.609" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/67: 0.000402 seconds.</msg>
<msg timestamp="20200605 10:10:18.609" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:18 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:18.609" starttime="20200605 10:10:18.574"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:18.610" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:18.610" starttime="20200605 10:10:18.610"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:18.611" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:18.611" starttime="20200605 10:10:18.611"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:18.612" level="INFO">${PORT_ID} = SFP port</msg>
<status status="PASS" endtime="20200605 10:10:18.612" starttime="20200605 10:10:18.612"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.613" starttime="20200605 10:10:18.612"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.613" starttime="20200605 10:10:18.613"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.614" starttime="20200605 10:10:18.614"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.615" starttime="20200605 10:10:18.615"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.615" starttime="20200605 10:10:18.614"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.616" starttime="20200605 10:10:18.574"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.616" starttime="20200605 10:10:18.574"></status>
</kw>
<kw type="foritem" name="${ID} = 68">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:18.625" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/68</msg>
<msg timestamp="20200605 10:10:18.651" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/68: 0.000383 seconds.</msg>
<msg timestamp="20200605 10:10:18.651" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:18 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:18.651" starttime="20200605 10:10:18.616"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:18.652" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:18.653" starttime="20200605 10:10:18.652"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:18.653" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:18.653" starttime="20200605 10:10:18.653"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:18.654" level="INFO">${PORT_ID} = SFP port</msg>
<status status="PASS" endtime="20200605 10:10:18.654" starttime="20200605 10:10:18.654"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.655" starttime="20200605 10:10:18.654"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.656" starttime="20200605 10:10:18.655"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.656" starttime="20200605 10:10:18.656"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.658" starttime="20200605 10:10:18.657"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.658" starttime="20200605 10:10:18.657"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.658" starttime="20200605 10:10:18.616"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.658" starttime="20200605 10:10:18.616"></status>
</kw>
<kw type="foritem" name="${ID} = 69">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:18.667" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/69</msg>
<msg timestamp="20200605 10:10:18.695" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/69: 0.000976 seconds.</msg>
<msg timestamp="20200605 10:10:18.696" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:18 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:18.697" starttime="20200605 10:10:18.659"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:18.699" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:18.699" starttime="20200605 10:10:18.697"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:18.701" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:18.701" starttime="20200605 10:10:18.700"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:18.704" level="INFO">${PORT_ID} = SFP port</msg>
<status status="PASS" endtime="20200605 10:10:18.704" starttime="20200605 10:10:18.702"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.706" starttime="20200605 10:10:18.705"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.708" starttime="20200605 10:10:18.707"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.710" starttime="20200605 10:10:18.708"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.714" starttime="20200605 10:10:18.713"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.714" starttime="20200605 10:10:18.711"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.714" starttime="20200605 10:10:18.658"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.714" starttime="20200605 10:10:18.658"></status>
</kw>
<kw type="foritem" name="${ID} = 70">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:18.753" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/70</msg>
<msg timestamp="20200605 10:10:18.782" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/70: 0.001104 seconds.</msg>
<msg timestamp="20200605 10:10:18.783" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:18 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:18.783" starttime="20200605 10:10:18.715"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:18.785" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:18.786" starttime="20200605 10:10:18.784"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:18.788" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:18.788" starttime="20200605 10:10:18.786"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:18.790" level="INFO">${PORT_ID} = SFP port</msg>
<status status="PASS" endtime="20200605 10:10:18.790" starttime="20200605 10:10:18.789"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.792" starttime="20200605 10:10:18.791"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.794" starttime="20200605 10:10:18.793"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.797" starttime="20200605 10:10:18.795"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.801" starttime="20200605 10:10:18.800"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.801" starttime="20200605 10:10:18.798"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.801" starttime="20200605 10:10:18.715"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.801" starttime="20200605 10:10:18.714"></status>
</kw>
<kw type="foritem" name="${ID} = 71">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:18.817" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/71</msg>
<msg timestamp="20200605 10:10:18.848" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/71: 0.000361 seconds.</msg>
<msg timestamp="20200605 10:10:18.848" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:18 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:18.848" starttime="20200605 10:10:18.803"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:18.849" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:18.849" starttime="20200605 10:10:18.848"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:18.850" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:18.850" starttime="20200605 10:10:18.849"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:18.850" level="INFO">${PORT_ID} = SFP port</msg>
<status status="PASS" endtime="20200605 10:10:18.850" starttime="20200605 10:10:18.850"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.851" starttime="20200605 10:10:18.851"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.852" starttime="20200605 10:10:18.851"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.852" starttime="20200605 10:10:18.852"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.854" starttime="20200605 10:10:18.853"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.854" starttime="20200605 10:10:18.853"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.854" starttime="20200605 10:10:18.802"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.854" starttime="20200605 10:10:18.802"></status>
</kw>
<kw type="foritem" name="${ID} = 72">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:18.862" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/72</msg>
<msg timestamp="20200605 10:10:18.888" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/72: 0.000357 seconds.</msg>
<msg timestamp="20200605 10:10:18.889" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:18 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:18.889" starttime="20200605 10:10:18.855"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:18.890" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:18.890" starttime="20200605 10:10:18.889"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:18.891" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:18.891" starttime="20200605 10:10:18.890"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:18.891" level="INFO">${PORT_ID} = SFP port</msg>
<status status="PASS" endtime="20200605 10:10:18.891" starttime="20200605 10:10:18.891"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.892" starttime="20200605 10:10:18.891"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.892" starttime="20200605 10:10:18.892"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.893" starttime="20200605 10:10:18.893"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.894" starttime="20200605 10:10:18.894"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.894" starttime="20200605 10:10:18.894"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.895" starttime="20200605 10:10:18.854"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.895" starttime="20200605 10:10:18.854"></status>
</kw>
<kw type="foritem" name="${ID} = 73">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:18.903" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/73</msg>
<msg timestamp="20200605 10:10:18.928" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/73: 0.000351 seconds.</msg>
<msg timestamp="20200605 10:10:18.928" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:18 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:18.928" starttime="20200605 10:10:18.895"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:18.929" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:18.929" starttime="20200605 10:10:18.929"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:18.930" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:18.930" starttime="20200605 10:10:18.930"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:18.931" level="INFO">${PORT_ID} = SFP port</msg>
<status status="PASS" endtime="20200605 10:10:18.931" starttime="20200605 10:10:18.930"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.931" starttime="20200605 10:10:18.931"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.932" starttime="20200605 10:10:18.932"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.933" starttime="20200605 10:10:18.932"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.934" starttime="20200605 10:10:18.934"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.934" starttime="20200605 10:10:18.933"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.934" starttime="20200605 10:10:18.895"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.934" starttime="20200605 10:10:18.895"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.934" starttime="20200605 10:10:15.059"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.934" starttime="20200605 10:10:14.261"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PON_TYPE}' == 'GPON'</arg>
<arg>Log to console</arg>
<arg>"####### GPON TESTING ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### XGSPON TESTING ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### GPON TESTING ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.935" starttime="20200605 10:10:18.935"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:18.936" starttime="20200605 10:10:18.935"></status>
</kw>
<kw name="Enable All Tx Port">
<tags>
<tag>Enable Pon Port Tx</tag>
</tags>
<doc>Enable all port function</doc>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:18.943" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/</msg>
<msg timestamp="20200605 10:10:18.975" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/: 0.000586 seconds.</msg>
<msg timestamp="20200605 10:10:18.975" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:18 GMT
connection Keep-Alive
content-type application/json
content-length 4491


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPortCollection.EthernetSwitchPor...</msg>
<status status="PASS" endtime="20200605 10:10:18.975" starttime="20200605 10:10:18.936"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200605 10:10:18.976" level="INFO">Length is 74</msg>
<msg timestamp="20200605 10:10:18.976" level="INFO">${item_count} = 74</msg>
<status status="PASS" endtime="20200605 10:10:18.976" starttime="20200605 10:10:18.976"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Enable All Pon Port Tx ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:18.977" starttime="20200605 10:10:18.977"></status>
</kw>
<kw type="for" name="${ID} IN RANGE [ 1 | ${item_count} ]">
<kw type="foritem" name="${ID} = 1">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:18.986" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200605 10:10:19.289" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.001403 seconds.</msg>
<msg timestamp="20200605 10:10:19.291" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:19 GMT
connection Keep-Alive
content-type application/json
content-length 2309


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:19.291" starttime="20200605 10:10:18.978"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:19.293" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:19.293" starttime="20200605 10:10:19.292"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:19.296" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200605 10:10:19.296" starttime="20200605 10:10:19.294"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:19.298" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:19.299" starttime="20200605 10:10:19.297"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:19.301" starttime="20200605 10:10:19.300"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:19.303" starttime="20200605 10:10:19.302"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:19.306" starttime="20200605 10:10:19.304"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
</arguments>
<kw name="Test Tx Op Up">
<tags>
<tag>Test tx_disable</tag>
</tags>
<doc>Test SFP port tx disable function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OP_UP)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 10:10:19.321" level="INFO">${payload} = {u'OperationalState': u'Up'}</msg>
<status status="PASS" endtime="20200605 10:10:19.321" starttime="20200605 10:10:19.312"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<msg timestamp="20200605 10:10:19.332" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200605 10:10:19.527" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.001126 seconds.</msg>
<status status="PASS" endtime="20200605 10:10:19.529" starttime="20200605 10:10:19.321"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:19.529" starttime="20200605 10:10:19.310"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:19.530" starttime="20200605 10:10:19.309"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:19.530" starttime="20200605 10:10:19.307"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:19.530" starttime="20200605 10:10:18.978"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:19.531" starttime="20200605 10:10:18.978"></status>
</kw>
<kw type="foritem" name="${ID} = 2">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:19.557" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/2</msg>
<msg timestamp="20200605 10:10:19.605" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/2: 0.001014 seconds.</msg>
<msg timestamp="20200605 10:10:19.606" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:19 GMT
connection Keep-Alive
content-type application/json
content-length 2318


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:19.606" starttime="20200605 10:10:19.534"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:19.608" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:19.609" starttime="20200605 10:10:19.607"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:19.611" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200605 10:10:19.611" starttime="20200605 10:10:19.609"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:19.613" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:19.613" starttime="20200605 10:10:19.612"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:19.615" starttime="20200605 10:10:19.614"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:19.618" starttime="20200605 10:10:19.616"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:19.620" starttime="20200605 10:10:19.619"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
</arguments>
<kw name="Test Tx Op Up">
<tags>
<tag>Test tx_disable</tag>
</tags>
<doc>Test SFP port tx disable function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OP_UP)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 10:10:19.635" level="INFO">${payload} = {u'OperationalState': u'Up'}</msg>
<status status="PASS" endtime="20200605 10:10:19.635" starttime="20200605 10:10:19.626"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<msg timestamp="20200605 10:10:19.647" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/2</msg>
<msg timestamp="20200605 10:10:19.841" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/2: 0.001336 seconds.</msg>
<status status="PASS" endtime="20200605 10:10:19.842" starttime="20200605 10:10:19.636"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:19.842" starttime="20200605 10:10:19.625"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:19.842" starttime="20200605 10:10:19.624"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:19.842" starttime="20200605 10:10:19.621"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:19.843" starttime="20200605 10:10:19.532"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:19.843" starttime="20200605 10:10:19.531"></status>
</kw>
<kw type="foritem" name="${ID} = 3">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:19.869" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/3</msg>
<msg timestamp="20200605 10:10:19.902" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/3: 0.00069 seconds.</msg>
<msg timestamp="20200605 10:10:19.903" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:19 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:19.903" starttime="20200605 10:10:19.846"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:19.904" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:19.905" starttime="20200605 10:10:19.904"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:19.906" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:19.906" starttime="20200605 10:10:19.905"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:19.908" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:19.908" starttime="20200605 10:10:19.907"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:19.910" starttime="20200605 10:10:19.909"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:19.911" starttime="20200605 10:10:19.910"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:19.913" starttime="20200605 10:10:19.912"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:19.915" starttime="20200605 10:10:19.915"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:19.915" starttime="20200605 10:10:19.913"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:19.916" starttime="20200605 10:10:19.844"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:19.916" starttime="20200605 10:10:19.843"></status>
</kw>
<kw type="foritem" name="${ID} = 4">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:19.929" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/4</msg>
<msg timestamp="20200605 10:10:19.955" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/4: 0.000781 seconds.</msg>
<msg timestamp="20200605 10:10:19.956" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:19 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:19.956" starttime="20200605 10:10:19.917"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:19.958" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:19.958" starttime="20200605 10:10:19.957"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:19.959" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:19.960" starttime="20200605 10:10:19.959"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:19.961" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:19.961" starttime="20200605 10:10:19.960"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:19.962" starttime="20200605 10:10:19.962"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:19.964" starttime="20200605 10:10:19.963"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:19.966" starttime="20200605 10:10:19.965"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:19.969" starttime="20200605 10:10:19.968"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:19.969" starttime="20200605 10:10:19.966"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:19.969" starttime="20200605 10:10:19.916"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:19.969" starttime="20200605 10:10:19.916"></status>
</kw>
<kw type="foritem" name="${ID} = 5">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:19.998" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/5</msg>
<msg timestamp="20200605 10:10:20.024" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/5: 0.000534 seconds.</msg>
<msg timestamp="20200605 10:10:20.025" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:20 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:20.025" starttime="20200605 10:10:19.971"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:20.026" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:20.026" starttime="20200605 10:10:20.025"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:20.027" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:20.027" starttime="20200605 10:10:20.026"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:20.029" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:20.029" starttime="20200605 10:10:20.028"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.030" starttime="20200605 10:10:20.029"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.031" starttime="20200605 10:10:20.030"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.032" starttime="20200605 10:10:20.032"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.034" starttime="20200605 10:10:20.034"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.034" starttime="20200605 10:10:20.033"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.035" starttime="20200605 10:10:19.970"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.035" starttime="20200605 10:10:19.970"></status>
</kw>
<kw type="foritem" name="${ID} = 6">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:20.047" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/6</msg>
<msg timestamp="20200605 10:10:20.074" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/6: 0.000454 seconds.</msg>
<msg timestamp="20200605 10:10:20.074" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:20 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:20.074" starttime="20200605 10:10:20.036"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:20.075" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:20.075" starttime="20200605 10:10:20.075"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:20.076" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:20.076" starttime="20200605 10:10:20.076"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:20.077" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:20.077" starttime="20200605 10:10:20.076"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.077" starttime="20200605 10:10:20.077"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.078" starttime="20200605 10:10:20.078"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.079" starttime="20200605 10:10:20.078"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.080" starttime="20200605 10:10:20.080"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.080" starttime="20200605 10:10:20.079"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.081" starttime="20200605 10:10:20.035"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.081" starttime="20200605 10:10:20.035"></status>
</kw>
<kw type="foritem" name="${ID} = 7">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:20.090" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/7</msg>
<msg timestamp="20200605 10:10:20.118" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/7: 0.000445 seconds.</msg>
<msg timestamp="20200605 10:10:20.119" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:20 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:20.119" starttime="20200605 10:10:20.081"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:20.120" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:20.120" starttime="20200605 10:10:20.119"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:20.121" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:20.121" starttime="20200605 10:10:20.120"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:20.121" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:20.121" starttime="20200605 10:10:20.121"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.122" starttime="20200605 10:10:20.122"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.123" starttime="20200605 10:10:20.122"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.124" starttime="20200605 10:10:20.123"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.125" starttime="20200605 10:10:20.125"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.125" starttime="20200605 10:10:20.124"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.125" starttime="20200605 10:10:20.081"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.125" starttime="20200605 10:10:20.081"></status>
</kw>
<kw type="foritem" name="${ID} = 8">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:20.134" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/8</msg>
<msg timestamp="20200605 10:10:20.161" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/8: 0.000384 seconds.</msg>
<msg timestamp="20200605 10:10:20.162" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:20 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:20.162" starttime="20200605 10:10:20.126"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:20.163" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:20.163" starttime="20200605 10:10:20.162"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:20.164" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:20.164" starttime="20200605 10:10:20.163"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:20.164" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:20.164" starttime="20200605 10:10:20.164"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.165" starttime="20200605 10:10:20.165"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.166" starttime="20200605 10:10:20.165"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.167" starttime="20200605 10:10:20.166"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.168" starttime="20200605 10:10:20.168"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.168" starttime="20200605 10:10:20.167"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.168" starttime="20200605 10:10:20.126"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.168" starttime="20200605 10:10:20.125"></status>
</kw>
<kw type="foritem" name="${ID} = 9">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:20.177" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/9</msg>
<msg timestamp="20200605 10:10:20.208" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/9: 0.000603 seconds.</msg>
<msg timestamp="20200605 10:10:20.209" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:20 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:20.209" starttime="20200605 10:10:20.169"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:20.210" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:20.210" starttime="20200605 10:10:20.209"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:20.211" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:20.211" starttime="20200605 10:10:20.210"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:20.211" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:20.212" starttime="20200605 10:10:20.211"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.212" starttime="20200605 10:10:20.212"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.214" starttime="20200605 10:10:20.213"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.215" starttime="20200605 10:10:20.214"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.216" starttime="20200605 10:10:20.216"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.217" starttime="20200605 10:10:20.215"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.217" starttime="20200605 10:10:20.168"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.217" starttime="20200605 10:10:20.168"></status>
</kw>
<kw type="foritem" name="${ID} = 10">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:20.226" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/10</msg>
<msg timestamp="20200605 10:10:20.258" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/10: 0.000474 seconds.</msg>
<msg timestamp="20200605 10:10:20.259" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:20 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:20.259" starttime="20200605 10:10:20.217"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:20.260" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:20.260" starttime="20200605 10:10:20.259"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:20.260" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:20.261" starttime="20200605 10:10:20.260"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:20.261" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:20.261" starttime="20200605 10:10:20.261"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.262" starttime="20200605 10:10:20.261"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.264" starttime="20200605 10:10:20.263"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.265" starttime="20200605 10:10:20.264"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.267" starttime="20200605 10:10:20.266"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.267" starttime="20200605 10:10:20.265"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.267" starttime="20200605 10:10:20.217"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.267" starttime="20200605 10:10:20.217"></status>
</kw>
<kw type="foritem" name="${ID} = 11">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:20.276" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/11</msg>
<msg timestamp="20200605 10:10:20.298" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/11: 0.000391 seconds.</msg>
<msg timestamp="20200605 10:10:20.299" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:20 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:20.299" starttime="20200605 10:10:20.268"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:20.300" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:20.300" starttime="20200605 10:10:20.299"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:20.301" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:20.301" starttime="20200605 10:10:20.300"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:20.302" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:20.302" starttime="20200605 10:10:20.301"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.302" starttime="20200605 10:10:20.302"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.304" starttime="20200605 10:10:20.303"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.305" starttime="20200605 10:10:20.304"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.306" starttime="20200605 10:10:20.306"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.307" starttime="20200605 10:10:20.305"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.307" starttime="20200605 10:10:20.267"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.307" starttime="20200605 10:10:20.267"></status>
</kw>
<kw type="foritem" name="${ID} = 12">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:20.316" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/12</msg>
<msg timestamp="20200605 10:10:20.341" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/12: 0.000344 seconds.</msg>
<msg timestamp="20200605 10:10:20.342" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:20 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:20.342" starttime="20200605 10:10:20.308"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:20.342" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:20.343" starttime="20200605 10:10:20.342"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:20.343" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:20.343" starttime="20200605 10:10:20.343"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:20.344" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:20.344" starttime="20200605 10:10:20.343"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.344" starttime="20200605 10:10:20.344"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.346" starttime="20200605 10:10:20.345"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.346" starttime="20200605 10:10:20.346"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.348" starttime="20200605 10:10:20.348"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.348" starttime="20200605 10:10:20.347"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.348" starttime="20200605 10:10:20.307"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.348" starttime="20200605 10:10:20.307"></status>
</kw>
<kw type="foritem" name="${ID} = 13">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:20.356" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/13</msg>
<msg timestamp="20200605 10:10:20.385" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/13: 0.001098 seconds.</msg>
<msg timestamp="20200605 10:10:20.387" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:20 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:20.387" starttime="20200605 10:10:20.349"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:20.390" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:20.390" starttime="20200605 10:10:20.388"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:20.392" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:20.392" starttime="20200605 10:10:20.391"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:20.394" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:20.394" starttime="20200605 10:10:20.393"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.398" starttime="20200605 10:10:20.395"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.406" starttime="20200605 10:10:20.399"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.410" starttime="20200605 10:10:20.408"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.414" starttime="20200605 10:10:20.414"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.416" starttime="20200605 10:10:20.412"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.416" starttime="20200605 10:10:20.349"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.416" starttime="20200605 10:10:20.348"></status>
</kw>
<kw type="foritem" name="${ID} = 14">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:20.432" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/14</msg>
<msg timestamp="20200605 10:10:20.461" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/14: 0.000407 seconds.</msg>
<msg timestamp="20200605 10:10:20.461" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:20 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:20.462" starttime="20200605 10:10:20.419"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:20.462" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:20.462" starttime="20200605 10:10:20.462"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:20.463" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:20.463" starttime="20200605 10:10:20.463"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:20.464" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:20.464" starttime="20200605 10:10:20.463"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.464" starttime="20200605 10:10:20.464"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.466" starttime="20200605 10:10:20.465"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.467" starttime="20200605 10:10:20.466"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.468" starttime="20200605 10:10:20.468"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.468" starttime="20200605 10:10:20.467"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.469" starttime="20200605 10:10:20.417"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.469" starttime="20200605 10:10:20.417"></status>
</kw>
<kw type="foritem" name="${ID} = 15">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:20.476" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/15</msg>
<msg timestamp="20200605 10:10:20.512" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/15: 0.001159 seconds.</msg>
<msg timestamp="20200605 10:10:20.514" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:20 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:20.514" starttime="20200605 10:10:20.469"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:20.516" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:20.516" starttime="20200605 10:10:20.515"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:20.518" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:20.518" starttime="20200605 10:10:20.517"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:20.520" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:20.520" starttime="20200605 10:10:20.519"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.522" starttime="20200605 10:10:20.521"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.525" starttime="20200605 10:10:20.524"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.530" starttime="20200605 10:10:20.528"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.535" starttime="20200605 10:10:20.534"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.535" starttime="20200605 10:10:20.531"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.536" starttime="20200605 10:10:20.469"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.536" starttime="20200605 10:10:20.469"></status>
</kw>
<kw type="foritem" name="${ID} = 16">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:20.550" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/16</msg>
<msg timestamp="20200605 10:10:20.576" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/16: 0.000560999999999 seconds.</msg>
<msg timestamp="20200605 10:10:20.577" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:20 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:20.577" starttime="20200605 10:10:20.538"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:20.578" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:20.578" starttime="20200605 10:10:20.577"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:20.579" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:20.580" starttime="20200605 10:10:20.578"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:20.581" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:20.581" starttime="20200605 10:10:20.580"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.582" starttime="20200605 10:10:20.581"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.583" starttime="20200605 10:10:20.582"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.584" starttime="20200605 10:10:20.583"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.586" starttime="20200605 10:10:20.586"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.586" starttime="20200605 10:10:20.585"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.586" starttime="20200605 10:10:20.537"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.586" starttime="20200605 10:10:20.536"></status>
</kw>
<kw type="foritem" name="${ID} = 17">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:20.598" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/17</msg>
<msg timestamp="20200605 10:10:20.654" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/17: 0.000743999999999 seconds.</msg>
<msg timestamp="20200605 10:10:20.655" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:20 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:20.655" starttime="20200605 10:10:20.588"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:20.657" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:20.657" starttime="20200605 10:10:20.656"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:20.659" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:20.659" starttime="20200605 10:10:20.658"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:20.661" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:20.661" starttime="20200605 10:10:20.660"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.663" starttime="20200605 10:10:20.662"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.664" starttime="20200605 10:10:20.663"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.667" starttime="20200605 10:10:20.665"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.670" starttime="20200605 10:10:20.669"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.670" starttime="20200605 10:10:20.668"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.671" starttime="20200605 10:10:20.587"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.671" starttime="20200605 10:10:20.587"></status>
</kw>
<kw type="foritem" name="${ID} = 18">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:20.688" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/18</msg>
<msg timestamp="20200605 10:10:20.715" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/18: 0.000412 seconds.</msg>
<msg timestamp="20200605 10:10:20.715" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:20 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:20.715" starttime="20200605 10:10:20.673"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:20.716" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:20.716" starttime="20200605 10:10:20.716"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:20.717" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:20.717" starttime="20200605 10:10:20.716"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:20.718" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:20.718" starttime="20200605 10:10:20.717"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.718" starttime="20200605 10:10:20.718"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.719" starttime="20200605 10:10:20.719"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.720" starttime="20200605 10:10:20.719"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.721" starttime="20200605 10:10:20.721"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.721" starttime="20200605 10:10:20.720"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.721" starttime="20200605 10:10:20.671"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.721" starttime="20200605 10:10:20.671"></status>
</kw>
<kw type="foritem" name="${ID} = 19">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:20.730" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/19</msg>
<msg timestamp="20200605 10:10:20.757" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/19: 0.000444 seconds.</msg>
<msg timestamp="20200605 10:10:20.758" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:20 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:20.758" starttime="20200605 10:10:20.722"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:20.759" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:20.759" starttime="20200605 10:10:20.758"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:20.759" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:20.759" starttime="20200605 10:10:20.759"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:20.760" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:20.760" starttime="20200605 10:10:20.760"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.761" starttime="20200605 10:10:20.761"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.762" starttime="20200605 10:10:20.761"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.763" starttime="20200605 10:10:20.762"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.764" starttime="20200605 10:10:20.763"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.764" starttime="20200605 10:10:20.763"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.764" starttime="20200605 10:10:20.721"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.764" starttime="20200605 10:10:20.721"></status>
</kw>
<kw type="foritem" name="${ID} = 20">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:20.775" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/20</msg>
<msg timestamp="20200605 10:10:20.804" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/20: 0.00054 seconds.</msg>
<msg timestamp="20200605 10:10:20.805" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:20 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:20.805" starttime="20200605 10:10:20.765"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:20.806" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:20.806" starttime="20200605 10:10:20.805"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:20.807" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:20.807" starttime="20200605 10:10:20.806"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:20.808" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:20.808" starttime="20200605 10:10:20.807"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.809" starttime="20200605 10:10:20.809"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.810" starttime="20200605 10:10:20.809"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.811" starttime="20200605 10:10:20.810"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.813" starttime="20200605 10:10:20.812"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.813" starttime="20200605 10:10:20.812"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.813" starttime="20200605 10:10:20.764"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.813" starttime="20200605 10:10:20.764"></status>
</kw>
<kw type="foritem" name="${ID} = 21">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:20.826" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/21</msg>
<msg timestamp="20200605 10:10:20.854" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/21: 0.000524 seconds.</msg>
<msg timestamp="20200605 10:10:20.855" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:20 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:20.855" starttime="20200605 10:10:20.814"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:20.856" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:20.856" starttime="20200605 10:10:20.855"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:20.856" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:20.856" starttime="20200605 10:10:20.856"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:20.857" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:20.857" starttime="20200605 10:10:20.857"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.858" starttime="20200605 10:10:20.857"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.858" starttime="20200605 10:10:20.858"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.859" starttime="20200605 10:10:20.859"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.860" starttime="20200605 10:10:20.860"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.860" starttime="20200605 10:10:20.859"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.861" starttime="20200605 10:10:20.814"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.861" starttime="20200605 10:10:20.813"></status>
</kw>
<kw type="foritem" name="${ID} = 22">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:20.869" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/22</msg>
<msg timestamp="20200605 10:10:20.896" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/22: 0.000383999999999 seconds.</msg>
<msg timestamp="20200605 10:10:20.897" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:20 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:20.897" starttime="20200605 10:10:20.861"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:20.898" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:20.898" starttime="20200605 10:10:20.898"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:20.899" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:20.899" starttime="20200605 10:10:20.898"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:20.900" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:20.900" starttime="20200605 10:10:20.899"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.900" starttime="20200605 10:10:20.900"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.901" starttime="20200605 10:10:20.901"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.902" starttime="20200605 10:10:20.902"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.904" starttime="20200605 10:10:20.903"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.904" starttime="20200605 10:10:20.903"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.904" starttime="20200605 10:10:20.861"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.904" starttime="20200605 10:10:20.861"></status>
</kw>
<kw type="foritem" name="${ID} = 23">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:20.913" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/23</msg>
<msg timestamp="20200605 10:10:20.941" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/23: 0.000458 seconds.</msg>
<msg timestamp="20200605 10:10:20.942" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:20 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:20.942" starttime="20200605 10:10:20.905"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:20.943" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:20.943" starttime="20200605 10:10:20.942"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:20.944" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:20.944" starttime="20200605 10:10:20.943"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:20.944" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:20.944" starttime="20200605 10:10:20.944"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.945" starttime="20200605 10:10:20.945"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.946" starttime="20200605 10:10:20.945"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.947" starttime="20200605 10:10:20.946"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.948" starttime="20200605 10:10:20.948"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.948" starttime="20200605 10:10:20.947"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.949" starttime="20200605 10:10:20.904"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.949" starttime="20200605 10:10:20.904"></status>
</kw>
<kw type="foritem" name="${ID} = 24">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:20.957" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/24</msg>
<msg timestamp="20200605 10:10:20.984" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/24: 0.000389999999999 seconds.</msg>
<msg timestamp="20200605 10:10:20.985" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:20 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:20.985" starttime="20200605 10:10:20.950"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:20.986" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:20.986" starttime="20200605 10:10:20.985"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:20.987" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:20.987" starttime="20200605 10:10:20.986"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:20.987" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:20.987" starttime="20200605 10:10:20.987"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.988" starttime="20200605 10:10:20.988"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.989" starttime="20200605 10:10:20.989"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.990" starttime="20200605 10:10:20.989"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:20.992" starttime="20200605 10:10:20.991"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.992" starttime="20200605 10:10:20.990"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.992" starttime="20200605 10:10:20.949"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:20.992" starttime="20200605 10:10:20.949"></status>
</kw>
<kw type="foritem" name="${ID} = 25">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:21.001" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/25</msg>
<msg timestamp="20200605 10:10:21.026" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/25: 0.000369 seconds.</msg>
<msg timestamp="20200605 10:10:21.026" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:21 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:21.026" starttime="20200605 10:10:20.993"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:21.027" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:21.027" starttime="20200605 10:10:21.027"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:21.028" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:21.028" starttime="20200605 10:10:21.028"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:21.029" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:21.029" starttime="20200605 10:10:21.028"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.030" starttime="20200605 10:10:21.029"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.030" starttime="20200605 10:10:21.030"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.031" starttime="20200605 10:10:21.030"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.032" starttime="20200605 10:10:21.032"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.032" starttime="20200605 10:10:21.031"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.032" starttime="20200605 10:10:20.992"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.032" starttime="20200605 10:10:20.992"></status>
</kw>
<kw type="foritem" name="${ID} = 26">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:21.041" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/26</msg>
<msg timestamp="20200605 10:10:21.067" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/26: 0.000441 seconds.</msg>
<msg timestamp="20200605 10:10:21.067" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:21 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:21.067" starttime="20200605 10:10:21.033"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:21.068" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:21.068" starttime="20200605 10:10:21.068"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:21.069" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:21.069" starttime="20200605 10:10:21.068"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:21.070" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:21.070" starttime="20200605 10:10:21.069"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.070" starttime="20200605 10:10:21.070"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.071" starttime="20200605 10:10:21.070"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.072" starttime="20200605 10:10:21.071"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.073" starttime="20200605 10:10:21.072"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.073" starttime="20200605 10:10:21.072"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.073" starttime="20200605 10:10:21.033"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.073" starttime="20200605 10:10:21.032"></status>
</kw>
<kw type="foritem" name="${ID} = 27">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:21.081" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/27</msg>
<msg timestamp="20200605 10:10:21.107" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/27: 0.000371 seconds.</msg>
<msg timestamp="20200605 10:10:21.107" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:21 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:21.107" starttime="20200605 10:10:21.074"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:21.108" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:21.108" starttime="20200605 10:10:21.108"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:21.109" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:21.109" starttime="20200605 10:10:21.109"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:21.110" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:21.110" starttime="20200605 10:10:21.109"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.111" starttime="20200605 10:10:21.110"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.111" starttime="20200605 10:10:21.111"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.112" starttime="20200605 10:10:21.112"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.113" starttime="20200605 10:10:21.113"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.113" starttime="20200605 10:10:21.112"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.114" starttime="20200605 10:10:21.073"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.114" starttime="20200605 10:10:21.073"></status>
</kw>
<kw type="foritem" name="${ID} = 28">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:21.122" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/28</msg>
<msg timestamp="20200605 10:10:21.150" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/28: 0.000454 seconds.</msg>
<msg timestamp="20200605 10:10:21.150" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:21 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:21.151" starttime="20200605 10:10:21.114"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:21.151" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:21.152" starttime="20200605 10:10:21.151"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:21.152" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:21.152" starttime="20200605 10:10:21.152"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:21.153" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:21.153" starttime="20200605 10:10:21.153"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.154" starttime="20200605 10:10:21.153"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.155" starttime="20200605 10:10:21.154"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.156" starttime="20200605 10:10:21.155"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.157" starttime="20200605 10:10:21.157"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.157" starttime="20200605 10:10:21.156"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.157" starttime="20200605 10:10:21.114"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.157" starttime="20200605 10:10:21.114"></status>
</kw>
<kw type="foritem" name="${ID} = 29">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:21.166" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/29</msg>
<msg timestamp="20200605 10:10:21.195" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/29: 0.001183 seconds.</msg>
<msg timestamp="20200605 10:10:21.196" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:21 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:21.196" starttime="20200605 10:10:21.158"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:21.199" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:21.199" starttime="20200605 10:10:21.197"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:21.201" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:21.201" starttime="20200605 10:10:21.200"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:21.203" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:21.203" starttime="20200605 10:10:21.202"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.205" starttime="20200605 10:10:21.204"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.207" starttime="20200605 10:10:21.206"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.209" starttime="20200605 10:10:21.208"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.213" starttime="20200605 10:10:21.212"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.213" starttime="20200605 10:10:21.210"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.213" starttime="20200605 10:10:21.158"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.213" starttime="20200605 10:10:21.157"></status>
</kw>
<kw type="foritem" name="${ID} = 30">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:21.249" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/30</msg>
<msg timestamp="20200605 10:10:21.280" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/30: 0.000639 seconds.</msg>
<msg timestamp="20200605 10:10:21.281" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:21 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:21.281" starttime="20200605 10:10:21.215"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:21.282" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:21.283" starttime="20200605 10:10:21.282"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:21.284" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:21.284" starttime="20200605 10:10:21.283"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:21.286" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:21.286" starttime="20200605 10:10:21.285"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.287" starttime="20200605 10:10:21.286"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.289" starttime="20200605 10:10:21.287"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.291" starttime="20200605 10:10:21.290"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.293" starttime="20200605 10:10:21.292"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.293" starttime="20200605 10:10:21.291"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.293" starttime="20200605 10:10:21.214"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.293" starttime="20200605 10:10:21.214"></status>
</kw>
<kw type="foritem" name="${ID} = 31">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:21.308" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/31</msg>
<msg timestamp="20200605 10:10:21.338" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/31: 0.000434 seconds.</msg>
<msg timestamp="20200605 10:10:21.338" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:21 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:21.338" starttime="20200605 10:10:21.295"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:21.339" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:21.339" starttime="20200605 10:10:21.339"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:21.340" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:21.340" starttime="20200605 10:10:21.339"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:21.341" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:21.341" starttime="20200605 10:10:21.340"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.342" starttime="20200605 10:10:21.341"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.342" starttime="20200605 10:10:21.342"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.343" starttime="20200605 10:10:21.343"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.345" starttime="20200605 10:10:21.344"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.345" starttime="20200605 10:10:21.343"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.345" starttime="20200605 10:10:21.294"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.345" starttime="20200605 10:10:21.293"></status>
</kw>
<kw type="foritem" name="${ID} = 32">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:21.354" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/32</msg>
<msg timestamp="20200605 10:10:21.381" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/32: 0.000415 seconds.</msg>
<msg timestamp="20200605 10:10:21.381" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:21 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:21.381" starttime="20200605 10:10:21.346"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:21.382" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:21.382" starttime="20200605 10:10:21.382"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:21.383" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:21.383" starttime="20200605 10:10:21.382"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:21.384" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:21.384" starttime="20200605 10:10:21.383"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.385" starttime="20200605 10:10:21.384"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.385" starttime="20200605 10:10:21.385"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.386" starttime="20200605 10:10:21.386"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.388" starttime="20200605 10:10:21.387"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.388" starttime="20200605 10:10:21.387"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.388" starttime="20200605 10:10:21.345"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.388" starttime="20200605 10:10:21.345"></status>
</kw>
<kw type="foritem" name="${ID} = 33">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:21.398" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/33</msg>
<msg timestamp="20200605 10:10:21.425" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/33: 0.000407 seconds.</msg>
<msg timestamp="20200605 10:10:21.426" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:21 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:21.426" starttime="20200605 10:10:21.389"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:21.428" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:21.428" starttime="20200605 10:10:21.427"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:21.428" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:21.428" starttime="20200605 10:10:21.428"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:21.429" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:21.429" starttime="20200605 10:10:21.429"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.430" starttime="20200605 10:10:21.429"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.431" starttime="20200605 10:10:21.430"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.431" starttime="20200605 10:10:21.431"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.432" starttime="20200605 10:10:21.432"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.433" starttime="20200605 10:10:21.432"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.433" starttime="20200605 10:10:21.388"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.433" starttime="20200605 10:10:21.388"></status>
</kw>
<kw type="foritem" name="${ID} = 34">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:21.441" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/34</msg>
<msg timestamp="20200605 10:10:21.466" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/34: 0.000358 seconds.</msg>
<msg timestamp="20200605 10:10:21.467" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:21 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:21.467" starttime="20200605 10:10:21.433"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:21.467" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:21.468" starttime="20200605 10:10:21.467"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:21.468" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:21.468" starttime="20200605 10:10:21.468"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:21.469" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:21.469" starttime="20200605 10:10:21.469"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.470" starttime="20200605 10:10:21.469"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.470" starttime="20200605 10:10:21.470"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.471" starttime="20200605 10:10:21.471"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.472" starttime="20200605 10:10:21.472"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.472" starttime="20200605 10:10:21.471"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.472" starttime="20200605 10:10:21.433"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.472" starttime="20200605 10:10:21.433"></status>
</kw>
<kw type="foritem" name="${ID} = 35">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:21.481" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/35</msg>
<msg timestamp="20200605 10:10:21.508" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/35: 0.000370999999999 seconds.</msg>
<msg timestamp="20200605 10:10:21.508" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:21 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:21.508" starttime="20200605 10:10:21.473"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:21.509" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:21.509" starttime="20200605 10:10:21.508"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:21.510" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:21.510" starttime="20200605 10:10:21.509"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:21.510" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:21.510" starttime="20200605 10:10:21.510"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.511" starttime="20200605 10:10:21.511"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.512" starttime="20200605 10:10:21.511"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.512" starttime="20200605 10:10:21.512"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.514" starttime="20200605 10:10:21.513"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.514" starttime="20200605 10:10:21.513"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.514" starttime="20200605 10:10:21.473"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.514" starttime="20200605 10:10:21.473"></status>
</kw>
<kw type="foritem" name="${ID} = 36">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:21.522" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/36</msg>
<msg timestamp="20200605 10:10:21.547" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/36: 0.000382 seconds.</msg>
<msg timestamp="20200605 10:10:21.548" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:21 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:21.548" starttime="20200605 10:10:21.514"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:21.549" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:21.549" starttime="20200605 10:10:21.548"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:21.550" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:21.550" starttime="20200605 10:10:21.549"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:21.550" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:21.550" starttime="20200605 10:10:21.550"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.551" starttime="20200605 10:10:21.551"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.552" starttime="20200605 10:10:21.551"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.553" starttime="20200605 10:10:21.552"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.554" starttime="20200605 10:10:21.554"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.554" starttime="20200605 10:10:21.553"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.555" starttime="20200605 10:10:21.514"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.555" starttime="20200605 10:10:21.514"></status>
</kw>
<kw type="foritem" name="${ID} = 37">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:21.563" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/37</msg>
<msg timestamp="20200605 10:10:21.593" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/37: 0.001011 seconds.</msg>
<msg timestamp="20200605 10:10:21.595" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:21 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:21.595" starttime="20200605 10:10:21.556"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:21.597" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:21.598" starttime="20200605 10:10:21.596"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:21.600" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:21.600" starttime="20200605 10:10:21.598"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:21.602" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:21.602" starttime="20200605 10:10:21.601"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.604" starttime="20200605 10:10:21.603"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.606" starttime="20200605 10:10:21.605"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.609" starttime="20200605 10:10:21.608"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.612" starttime="20200605 10:10:21.611"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.612" starttime="20200605 10:10:21.610"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.613" starttime="20200605 10:10:21.555"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.613" starttime="20200605 10:10:21.555"></status>
</kw>
<kw type="foritem" name="${ID} = 38">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:21.625" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/38</msg>
<msg timestamp="20200605 10:10:21.652" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/38: 0.000358 seconds.</msg>
<msg timestamp="20200605 10:10:21.653" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:21 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:21.653" starttime="20200605 10:10:21.614"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:21.654" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:21.654" starttime="20200605 10:10:21.653"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:21.655" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:21.655" starttime="20200605 10:10:21.654"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:21.655" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:21.655" starttime="20200605 10:10:21.655"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.656" starttime="20200605 10:10:21.656"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.657" starttime="20200605 10:10:21.656"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.658" starttime="20200605 10:10:21.657"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.659" starttime="20200605 10:10:21.659"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.659" starttime="20200605 10:10:21.658"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.660" starttime="20200605 10:10:21.613"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.660" starttime="20200605 10:10:21.613"></status>
</kw>
<kw type="foritem" name="${ID} = 39">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:21.668" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/39</msg>
<msg timestamp="20200605 10:10:21.694" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/39: 0.000432 seconds.</msg>
<msg timestamp="20200605 10:10:21.695" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:21 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:21.695" starttime="20200605 10:10:21.660"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:21.696" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:21.696" starttime="20200605 10:10:21.695"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:21.696" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:21.696" starttime="20200605 10:10:21.696"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:21.697" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:21.697" starttime="20200605 10:10:21.697"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.698" starttime="20200605 10:10:21.698"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.699" starttime="20200605 10:10:21.698"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.700" starttime="20200605 10:10:21.699"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.701" starttime="20200605 10:10:21.701"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.701" starttime="20200605 10:10:21.700"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.702" starttime="20200605 10:10:21.660"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.702" starttime="20200605 10:10:21.660"></status>
</kw>
<kw type="foritem" name="${ID} = 40">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:21.710" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/40</msg>
<msg timestamp="20200605 10:10:21.742" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/40: 0.000463 seconds.</msg>
<msg timestamp="20200605 10:10:21.742" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:21 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:21.743" starttime="20200605 10:10:21.702"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:21.743" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:21.744" starttime="20200605 10:10:21.743"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:21.744" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:21.744" starttime="20200605 10:10:21.744"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:21.745" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:21.745" starttime="20200605 10:10:21.745"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.746" starttime="20200605 10:10:21.745"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.746" starttime="20200605 10:10:21.746"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.747" starttime="20200605 10:10:21.747"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.749" starttime="20200605 10:10:21.748"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.749" starttime="20200605 10:10:21.748"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.749" starttime="20200605 10:10:21.702"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.749" starttime="20200605 10:10:21.702"></status>
</kw>
<kw type="foritem" name="${ID} = 41">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:21.758" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/41</msg>
<msg timestamp="20200605 10:10:21.786" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/41: 0.000519 seconds.</msg>
<msg timestamp="20200605 10:10:21.787" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:21 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:21.787" starttime="20200605 10:10:21.750"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:21.788" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:21.788" starttime="20200605 10:10:21.787"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:21.789" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:21.789" starttime="20200605 10:10:21.788"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:21.790" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:21.790" starttime="20200605 10:10:21.790"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.792" starttime="20200605 10:10:21.790"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.793" starttime="20200605 10:10:21.792"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.794" starttime="20200605 10:10:21.793"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.795" starttime="20200605 10:10:21.795"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.796" starttime="20200605 10:10:21.794"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.796" starttime="20200605 10:10:21.749"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.796" starttime="20200605 10:10:21.749"></status>
</kw>
<kw type="foritem" name="${ID} = 42">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:21.808" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/42</msg>
<msg timestamp="20200605 10:10:21.837" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/42: 0.000509 seconds.</msg>
<msg timestamp="20200605 10:10:21.837" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:21 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:21.837" starttime="20200605 10:10:21.797"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:21.838" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:21.838" starttime="20200605 10:10:21.838"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:21.839" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:21.839" starttime="20200605 10:10:21.839"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:21.840" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:21.840" starttime="20200605 10:10:21.840"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.841" starttime="20200605 10:10:21.840"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.842" starttime="20200605 10:10:21.841"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.843" starttime="20200605 10:10:21.842"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.844" starttime="20200605 10:10:21.844"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.844" starttime="20200605 10:10:21.843"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.844" starttime="20200605 10:10:21.796"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.844" starttime="20200605 10:10:21.796"></status>
</kw>
<kw type="foritem" name="${ID} = 43">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:21.854" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/43</msg>
<msg timestamp="20200605 10:10:21.883" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/43: 0.000421 seconds.</msg>
<msg timestamp="20200605 10:10:21.884" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:21 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:21.884" starttime="20200605 10:10:21.845"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:21.885" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:21.885" starttime="20200605 10:10:21.885"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:21.886" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:21.886" starttime="20200605 10:10:21.885"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:21.887" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:21.887" starttime="20200605 10:10:21.886"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.888" starttime="20200605 10:10:21.887"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.889" starttime="20200605 10:10:21.888"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.890" starttime="20200605 10:10:21.889"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.891" starttime="20200605 10:10:21.891"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.891" starttime="20200605 10:10:21.890"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.891" starttime="20200605 10:10:21.845"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.891" starttime="20200605 10:10:21.844"></status>
</kw>
<kw type="foritem" name="${ID} = 44">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:21.901" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/44</msg>
<msg timestamp="20200605 10:10:21.929" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/44: 0.000421 seconds.</msg>
<msg timestamp="20200605 10:10:21.930" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:21 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:21.930" starttime="20200605 10:10:21.892"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:21.930" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:21.931" starttime="20200605 10:10:21.930"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:21.932" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:21.932" starttime="20200605 10:10:21.931"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:21.933" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:21.933" starttime="20200605 10:10:21.932"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.933" starttime="20200605 10:10:21.933"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.934" starttime="20200605 10:10:21.934"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.935" starttime="20200605 10:10:21.934"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.937" starttime="20200605 10:10:21.936"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.937" starttime="20200605 10:10:21.935"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.937" starttime="20200605 10:10:21.892"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.937" starttime="20200605 10:10:21.891"></status>
</kw>
<kw type="foritem" name="${ID} = 45">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:21.947" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/45</msg>
<msg timestamp="20200605 10:10:21.973" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/45: 0.0005 seconds.</msg>
<msg timestamp="20200605 10:10:21.974" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:21 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:21.974" starttime="20200605 10:10:21.938"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:21.975" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:21.975" starttime="20200605 10:10:21.974"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:21.976" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:21.976" starttime="20200605 10:10:21.975"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:21.977" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:21.977" starttime="20200605 10:10:21.976"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.977" starttime="20200605 10:10:21.977"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.978" starttime="20200605 10:10:21.978"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.979" starttime="20200605 10:10:21.978"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:21.981" starttime="20200605 10:10:21.980"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.981" starttime="20200605 10:10:21.979"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.981" starttime="20200605 10:10:21.937"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:21.981" starttime="20200605 10:10:21.937"></status>
</kw>
<kw type="foritem" name="${ID} = 46">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:21.990" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/46</msg>
<msg timestamp="20200605 10:10:22.016" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/46: 0.000418 seconds.</msg>
<msg timestamp="20200605 10:10:22.017" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:22 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:22.017" starttime="20200605 10:10:21.982"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:22.018" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:22.018" starttime="20200605 10:10:22.017"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:22.019" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:22.019" starttime="20200605 10:10:22.018"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:22.020" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:22.020" starttime="20200605 10:10:22.019"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.020" starttime="20200605 10:10:22.020"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.021" starttime="20200605 10:10:22.021"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.022" starttime="20200605 10:10:22.021"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.023" starttime="20200605 10:10:22.023"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.023" starttime="20200605 10:10:22.022"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.023" starttime="20200605 10:10:21.981"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.023" starttime="20200605 10:10:21.981"></status>
</kw>
<kw type="foritem" name="${ID} = 47">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:22.033" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/47</msg>
<msg timestamp="20200605 10:10:22.063" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/47: 0.000618 seconds.</msg>
<msg timestamp="20200605 10:10:22.064" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:22 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:22.064" starttime="20200605 10:10:22.024"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:22.066" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:22.066" starttime="20200605 10:10:22.065"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:22.067" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:22.067" starttime="20200605 10:10:22.066"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:22.068" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:22.068" starttime="20200605 10:10:22.068"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.069" starttime="20200605 10:10:22.069"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.072" starttime="20200605 10:10:22.071"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.073" starttime="20200605 10:10:22.073"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.076" starttime="20200605 10:10:22.076"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.077" starttime="20200605 10:10:22.075"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.077" starttime="20200605 10:10:22.023"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.077" starttime="20200605 10:10:22.023"></status>
</kw>
<kw type="foritem" name="${ID} = 48">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:22.091" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/48</msg>
<msg timestamp="20200605 10:10:22.120" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/48: 0.000428 seconds.</msg>
<msg timestamp="20200605 10:10:22.121" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:22 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:22.121" starttime="20200605 10:10:22.079"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:22.122" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:22.122" starttime="20200605 10:10:22.121"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:22.123" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:22.123" starttime="20200605 10:10:22.122"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:22.123" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:22.123" starttime="20200605 10:10:22.123"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.124" starttime="20200605 10:10:22.124"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.126" starttime="20200605 10:10:22.125"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.127" starttime="20200605 10:10:22.126"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.129" starttime="20200605 10:10:22.129"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.129" starttime="20200605 10:10:22.128"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.130" starttime="20200605 10:10:22.078"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.130" starttime="20200605 10:10:22.077"></status>
</kw>
<kw type="foritem" name="${ID} = 49">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:22.157" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/49</msg>
<msg timestamp="20200605 10:10:22.184" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/49: 0.000705 seconds.</msg>
<msg timestamp="20200605 10:10:22.185" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:22 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:22.185" starttime="20200605 10:10:22.131"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:22.188" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:22.188" starttime="20200605 10:10:22.187"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:22.189" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:22.190" starttime="20200605 10:10:22.188"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:22.191" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:22.191" starttime="20200605 10:10:22.190"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.193" starttime="20200605 10:10:22.192"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.195" starttime="20200605 10:10:22.194"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.198" starttime="20200605 10:10:22.197"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.203" starttime="20200605 10:10:22.201"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.203" starttime="20200605 10:10:22.200"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.204" starttime="20200605 10:10:22.130"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.204" starttime="20200605 10:10:22.130"></status>
</kw>
<kw type="foritem" name="${ID} = 50">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:22.220" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/50</msg>
<msg timestamp="20200605 10:10:22.263" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/50: 0.001054 seconds.</msg>
<msg timestamp="20200605 10:10:22.264" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:22 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:22.264" starttime="20200605 10:10:22.207"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:22.266" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:22.267" starttime="20200605 10:10:22.265"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:22.269" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:22.269" starttime="20200605 10:10:22.267"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:22.271" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:22.271" starttime="20200605 10:10:22.270"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.273" starttime="20200605 10:10:22.272"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.275" starttime="20200605 10:10:22.274"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.277" starttime="20200605 10:10:22.276"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.281" starttime="20200605 10:10:22.280"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.281" starttime="20200605 10:10:22.278"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.281" starttime="20200605 10:10:22.205"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.281" starttime="20200605 10:10:22.204"></status>
</kw>
<kw type="foritem" name="${ID} = 51">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:22.297" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/51</msg>
<msg timestamp="20200605 10:10:22.327" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/51: 0.000413 seconds.</msg>
<msg timestamp="20200605 10:10:22.327" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:22 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:22.328" starttime="20200605 10:10:22.284"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:22.328" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:22.328" starttime="20200605 10:10:22.328"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:22.329" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:22.329" starttime="20200605 10:10:22.329"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:22.330" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:22.330" starttime="20200605 10:10:22.329"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.331" starttime="20200605 10:10:22.330"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.331" starttime="20200605 10:10:22.331"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.332" starttime="20200605 10:10:22.331"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.333" starttime="20200605 10:10:22.333"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.333" starttime="20200605 10:10:22.332"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.333" starttime="20200605 10:10:22.282"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.333" starttime="20200605 10:10:22.282"></status>
</kw>
<kw type="foritem" name="${ID} = 52">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:22.341" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/52</msg>
<msg timestamp="20200605 10:10:22.367" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/52: 0.000416 seconds.</msg>
<msg timestamp="20200605 10:10:22.367" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:22 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:22.367" starttime="20200605 10:10:22.334"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:22.368" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:22.368" starttime="20200605 10:10:22.368"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:22.369" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:22.369" starttime="20200605 10:10:22.368"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:22.369" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:22.370" starttime="20200605 10:10:22.369"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.370" starttime="20200605 10:10:22.370"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.371" starttime="20200605 10:10:22.371"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.372" starttime="20200605 10:10:22.371"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.373" starttime="20200605 10:10:22.373"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.374" starttime="20200605 10:10:22.372"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.374" starttime="20200605 10:10:22.334"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.374" starttime="20200605 10:10:22.334"></status>
</kw>
<kw type="foritem" name="${ID} = 53">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:22.384" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/53</msg>
<msg timestamp="20200605 10:10:22.409" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/53: 0.000757 seconds.</msg>
<msg timestamp="20200605 10:10:22.410" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:22 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:22.410" starttime="20200605 10:10:22.375"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:22.411" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:22.411" starttime="20200605 10:10:22.410"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:22.412" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:22.412" starttime="20200605 10:10:22.411"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:22.413" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:22.413" starttime="20200605 10:10:22.412"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.414" starttime="20200605 10:10:22.413"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.415" starttime="20200605 10:10:22.414"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.416" starttime="20200605 10:10:22.415"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.418" starttime="20200605 10:10:22.417"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.418" starttime="20200605 10:10:22.416"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.418" starttime="20200605 10:10:22.374"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.418" starttime="20200605 10:10:22.374"></status>
</kw>
<kw type="foritem" name="${ID} = 54">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:22.429" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/54</msg>
<msg timestamp="20200605 10:10:22.457" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/54: 0.000439 seconds.</msg>
<msg timestamp="20200605 10:10:22.458" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:22 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:22.458" starttime="20200605 10:10:22.419"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:22.459" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:22.459" starttime="20200605 10:10:22.458"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:22.459" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:22.459" starttime="20200605 10:10:22.459"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:22.460" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:22.460" starttime="20200605 10:10:22.460"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.461" starttime="20200605 10:10:22.460"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.462" starttime="20200605 10:10:22.461"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.462" starttime="20200605 10:10:22.462"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.464" starttime="20200605 10:10:22.463"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.464" starttime="20200605 10:10:22.463"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.464" starttime="20200605 10:10:22.418"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.464" starttime="20200605 10:10:22.418"></status>
</kw>
<kw type="foritem" name="${ID} = 55">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:22.481" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/55</msg>
<msg timestamp="20200605 10:10:22.511" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/55: 0.000977 seconds.</msg>
<msg timestamp="20200605 10:10:22.512" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:22 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:22.512" starttime="20200605 10:10:22.473"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:22.515" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:22.515" starttime="20200605 10:10:22.514"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:22.517" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:22.517" starttime="20200605 10:10:22.516"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:22.519" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:22.520" starttime="20200605 10:10:22.518"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.522" starttime="20200605 10:10:22.520"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.524" starttime="20200605 10:10:22.523"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.525" starttime="20200605 10:10:22.525"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.531" starttime="20200605 10:10:22.530"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.532" starttime="20200605 10:10:22.526"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.532" starttime="20200605 10:10:22.473"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.532" starttime="20200605 10:10:22.473"></status>
</kw>
<kw type="foritem" name="${ID} = 56">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:22.545" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/56</msg>
<msg timestamp="20200605 10:10:22.572" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/56: 0.000474000000001 seconds.</msg>
<msg timestamp="20200605 10:10:22.573" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:22 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:22.573" starttime="20200605 10:10:22.534"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:22.574" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:22.574" starttime="20200605 10:10:22.573"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:22.575" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:22.575" starttime="20200605 10:10:22.574"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:22.575" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:22.576" starttime="20200605 10:10:22.575"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.576" starttime="20200605 10:10:22.576"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.578" starttime="20200605 10:10:22.577"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.580" starttime="20200605 10:10:22.579"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.581" starttime="20200605 10:10:22.581"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.582" starttime="20200605 10:10:22.580"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.582" starttime="20200605 10:10:22.533"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.582" starttime="20200605 10:10:22.532"></status>
</kw>
<kw type="foritem" name="${ID} = 57">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:22.592" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/57</msg>
<msg timestamp="20200605 10:10:22.617" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/57: 0.000436 seconds.</msg>
<msg timestamp="20200605 10:10:22.618" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:22 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:22.618" starttime="20200605 10:10:22.583"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:22.619" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:22.619" starttime="20200605 10:10:22.618"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:22.620" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:22.620" starttime="20200605 10:10:22.619"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:22.620" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:22.620" starttime="20200605 10:10:22.620"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.621" starttime="20200605 10:10:22.621"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.622" starttime="20200605 10:10:22.622"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.623" starttime="20200605 10:10:22.623"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.625" starttime="20200605 10:10:22.625"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.625" starttime="20200605 10:10:22.624"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.625" starttime="20200605 10:10:22.582"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.625" starttime="20200605 10:10:22.582"></status>
</kw>
<kw type="foritem" name="${ID} = 58">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:22.635" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/58</msg>
<msg timestamp="20200605 10:10:22.663" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/58: 0.000508 seconds.</msg>
<msg timestamp="20200605 10:10:22.664" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:22 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:22.664" starttime="20200605 10:10:22.626"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:22.665" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:22.665" starttime="20200605 10:10:22.664"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:22.672" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:22.672" starttime="20200605 10:10:22.666"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:22.674" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:22.674" starttime="20200605 10:10:22.673"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.676" starttime="20200605 10:10:22.674"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.677" starttime="20200605 10:10:22.676"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.679" starttime="20200605 10:10:22.678"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.683" starttime="20200605 10:10:22.682"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.683" starttime="20200605 10:10:22.680"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.683" starttime="20200605 10:10:22.626"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.683" starttime="20200605 10:10:22.626"></status>
</kw>
<kw type="foritem" name="${ID} = 59">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:22.703" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/59</msg>
<msg timestamp="20200605 10:10:22.734" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/59: 0.000442 seconds.</msg>
<msg timestamp="20200605 10:10:22.735" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:22 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:22.735" starttime="20200605 10:10:22.685"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:22.736" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:22.736" starttime="20200605 10:10:22.735"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:22.737" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:22.737" starttime="20200605 10:10:22.736"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:22.737" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:22.738" starttime="20200605 10:10:22.737"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.738" starttime="20200605 10:10:22.738"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.739" starttime="20200605 10:10:22.739"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.740" starttime="20200605 10:10:22.739"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.741" starttime="20200605 10:10:22.741"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.741" starttime="20200605 10:10:22.740"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.741" starttime="20200605 10:10:22.684"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.741" starttime="20200605 10:10:22.683"></status>
</kw>
<kw type="foritem" name="${ID} = 60">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:22.751" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/60</msg>
<msg timestamp="20200605 10:10:22.804" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/60: 0.001272 seconds.</msg>
<msg timestamp="20200605 10:10:22.806" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:22 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:22.806" starttime="20200605 10:10:22.742"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:22.809" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:22.809" starttime="20200605 10:10:22.807"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:22.811" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:22.812" starttime="20200605 10:10:22.810"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:22.814" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:22.814" starttime="20200605 10:10:22.812"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.816" starttime="20200605 10:10:22.815"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.817" starttime="20200605 10:10:22.816"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.820" starttime="20200605 10:10:22.818"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.823" starttime="20200605 10:10:22.822"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.823" starttime="20200605 10:10:22.821"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.824" starttime="20200605 10:10:22.742"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.824" starttime="20200605 10:10:22.742"></status>
</kw>
<kw type="foritem" name="${ID} = 61">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:22.841" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/61</msg>
<msg timestamp="20200605 10:10:22.869" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/61: 0.000395999999999 seconds.</msg>
<msg timestamp="20200605 10:10:22.869" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:22 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:22.869" starttime="20200605 10:10:22.826"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:22.870" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:22.870" starttime="20200605 10:10:22.870"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:22.871" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:22.871" starttime="20200605 10:10:22.871"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:22.872" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:22.872" starttime="20200605 10:10:22.871"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.872" starttime="20200605 10:10:22.872"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.879" starttime="20200605 10:10:22.873"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.881" starttime="20200605 10:10:22.880"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.885" starttime="20200605 10:10:22.884"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.885" starttime="20200605 10:10:22.882"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.885" starttime="20200605 10:10:22.825"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.886" starttime="20200605 10:10:22.824"></status>
</kw>
<kw type="foritem" name="${ID} = 62">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:22.903" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/62</msg>
<msg timestamp="20200605 10:10:22.932" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/62: 0.000398 seconds.</msg>
<msg timestamp="20200605 10:10:22.933" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:22 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:22.933" starttime="20200605 10:10:22.888"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:22.933" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:22.934" starttime="20200605 10:10:22.933"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:22.934" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:22.934" starttime="20200605 10:10:22.934"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:22.935" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:22.935" starttime="20200605 10:10:22.935"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.936" starttime="20200605 10:10:22.935"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.936" starttime="20200605 10:10:22.936"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.937" starttime="20200605 10:10:22.936"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.938" starttime="20200605 10:10:22.938"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.938" starttime="20200605 10:10:22.937"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.938" starttime="20200605 10:10:22.886"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.938" starttime="20200605 10:10:22.886"></status>
</kw>
<kw type="foritem" name="${ID} = 63">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:22.947" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/63</msg>
<msg timestamp="20200605 10:10:22.974" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/63: 0.000439 seconds.</msg>
<msg timestamp="20200605 10:10:22.974" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:22 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:22.974" starttime="20200605 10:10:22.939"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:22.975" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:22.975" starttime="20200605 10:10:22.975"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:22.976" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:22.976" starttime="20200605 10:10:22.976"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:22.977" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:22.977" starttime="20200605 10:10:22.976"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.978" starttime="20200605 10:10:22.977"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.984" starttime="20200605 10:10:22.978"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.985" starttime="20200605 10:10:22.984"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:22.986" starttime="20200605 10:10:22.986"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.986" starttime="20200605 10:10:22.985"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.986" starttime="20200605 10:10:22.938"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:22.986" starttime="20200605 10:10:22.938"></status>
</kw>
<kw type="foritem" name="${ID} = 64">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:22.995" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/64</msg>
<msg timestamp="20200605 10:10:23.024" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/64: 0.000529 seconds.</msg>
<msg timestamp="20200605 10:10:23.026" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:23 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:23.026" starttime="20200605 10:10:22.987"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:23.027" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:23.027" starttime="20200605 10:10:23.026"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:23.028" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:23.029" starttime="20200605 10:10:23.027"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:23.030" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:23.030" starttime="20200605 10:10:23.029"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:23.031" starttime="20200605 10:10:23.030"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:23.031" starttime="20200605 10:10:23.031"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:23.032" starttime="20200605 10:10:23.031"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:23.033" starttime="20200605 10:10:23.033"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:23.033" starttime="20200605 10:10:23.032"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:23.033" starttime="20200605 10:10:22.987"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:23.034" starttime="20200605 10:10:22.986"></status>
</kw>
<kw type="foritem" name="${ID} = 65">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:23.043" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/65</msg>
<msg timestamp="20200605 10:10:23.084" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/65: 0.000679 seconds.</msg>
<msg timestamp="20200605 10:10:23.085" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:23 GMT
connection Keep-Alive
content-type application/json
content-length 2438


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:23.085" starttime="20200605 10:10:23.034"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:23.086" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:23.087" starttime="20200605 10:10:23.086"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:23.088" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200605 10:10:23.088" starttime="20200605 10:10:23.087"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:23.089" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200605 10:10:23.089" starttime="20200605 10:10:23.088"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:23.090" starttime="20200605 10:10:23.089"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:23.091" starttime="20200605 10:10:23.090"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:23.092" starttime="20200605 10:10:23.091"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:23.094" starttime="20200605 10:10:23.093"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:23.094" starttime="20200605 10:10:23.092"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:23.094" starttime="20200605 10:10:23.034"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:23.094" starttime="20200605 10:10:23.034"></status>
</kw>
<kw type="foritem" name="${ID} = 66">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:23.106" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/66</msg>
<msg timestamp="20200605 10:10:23.138" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/66: 0.000664 seconds.</msg>
<msg timestamp="20200605 10:10:23.139" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:23 GMT
connection Keep-Alive
content-type application/json
content-length 1056


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:23.140" starttime="20200605 10:10:23.095"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:23.141" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:23.141" starttime="20200605 10:10:23.140"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:23.142" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:23.142" starttime="20200605 10:10:23.141"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:23.143" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200605 10:10:23.143" starttime="20200605 10:10:23.142"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:23.144" starttime="20200605 10:10:23.143"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:23.145" starttime="20200605 10:10:23.144"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:23.146" starttime="20200605 10:10:23.145"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:23.148" starttime="20200605 10:10:23.147"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:23.148" starttime="20200605 10:10:23.146"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:23.148" starttime="20200605 10:10:23.094"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:23.148" starttime="20200605 10:10:23.094"></status>
</kw>
<kw type="foritem" name="${ID} = 67">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:23.160" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/67</msg>
<msg timestamp="20200605 10:10:23.191" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/67: 0.000568 seconds.</msg>
<msg timestamp="20200605 10:10:23.192" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:23 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:23.192" starttime="20200605 10:10:23.149"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:23.193" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:23.193" starttime="20200605 10:10:23.193"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:23.194" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:23.194" starttime="20200605 10:10:23.194"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:23.195" level="INFO">${PORT_ID} = SFP port</msg>
<status status="PASS" endtime="20200605 10:10:23.195" starttime="20200605 10:10:23.195"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:23.196" starttime="20200605 10:10:23.195"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:23.197" starttime="20200605 10:10:23.196"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:23.197" starttime="20200605 10:10:23.197"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:23.199" starttime="20200605 10:10:23.198"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:23.199" starttime="20200605 10:10:23.198"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:23.199" starttime="20200605 10:10:23.148"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:23.199" starttime="20200605 10:10:23.148"></status>
</kw>
<kw type="foritem" name="${ID} = 68">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:23.209" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/68</msg>
<msg timestamp="20200605 10:10:23.236" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/68: 0.00044 seconds.</msg>
<msg timestamp="20200605 10:10:23.236" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:23 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:23.236" starttime="20200605 10:10:23.200"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:23.237" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:23.238" starttime="20200605 10:10:23.237"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:23.238" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:23.238" starttime="20200605 10:10:23.238"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:23.239" level="INFO">${PORT_ID} = SFP port</msg>
<status status="PASS" endtime="20200605 10:10:23.239" starttime="20200605 10:10:23.239"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:23.240" starttime="20200605 10:10:23.239"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:23.240" starttime="20200605 10:10:23.240"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:23.241" starttime="20200605 10:10:23.241"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:23.242" starttime="20200605 10:10:23.242"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:23.242" starttime="20200605 10:10:23.241"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:23.242" starttime="20200605 10:10:23.199"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:23.242" starttime="20200605 10:10:23.199"></status>
</kw>
<kw type="foritem" name="${ID} = 69">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:23.251" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/69</msg>
<msg timestamp="20200605 10:10:23.276" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/69: 0.000396 seconds.</msg>
<msg timestamp="20200605 10:10:23.276" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:23 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:23.276" starttime="20200605 10:10:23.243"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:23.277" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:23.277" starttime="20200605 10:10:23.277"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:23.278" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:23.278" starttime="20200605 10:10:23.278"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:23.279" level="INFO">${PORT_ID} = SFP port</msg>
<status status="PASS" endtime="20200605 10:10:23.279" starttime="20200605 10:10:23.278"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:23.280" starttime="20200605 10:10:23.279"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:23.281" starttime="20200605 10:10:23.281"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:23.283" starttime="20200605 10:10:23.282"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:23.284" starttime="20200605 10:10:23.284"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:23.284" starttime="20200605 10:10:23.283"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:23.284" starttime="20200605 10:10:23.243"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:23.284" starttime="20200605 10:10:23.242"></status>
</kw>
<kw type="foritem" name="${ID} = 70">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:23.293" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/70</msg>
<msg timestamp="20200605 10:10:23.324" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/70: 0.000675 seconds.</msg>
<msg timestamp="20200605 10:10:23.325" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:23 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:23.325" starttime="20200605 10:10:23.285"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:23.326" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:23.326" starttime="20200605 10:10:23.325"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:23.327" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:23.327" starttime="20200605 10:10:23.326"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:23.328" level="INFO">${PORT_ID} = SFP port</msg>
<status status="PASS" endtime="20200605 10:10:23.328" starttime="20200605 10:10:23.328"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:23.330" starttime="20200605 10:10:23.329"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:23.332" starttime="20200605 10:10:23.331"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:23.334" starttime="20200605 10:10:23.332"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:23.336" starttime="20200605 10:10:23.335"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:23.336" starttime="20200605 10:10:23.334"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:23.336" starttime="20200605 10:10:23.285"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:23.336" starttime="20200605 10:10:23.285"></status>
</kw>
<kw type="foritem" name="${ID} = 71">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:23.350" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/71</msg>
<msg timestamp="20200605 10:10:23.378" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/71: 0.0004 seconds.</msg>
<msg timestamp="20200605 10:10:23.378" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:23 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:23.378" starttime="20200605 10:10:23.338"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:23.379" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:23.379" starttime="20200605 10:10:23.378"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:23.380" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:23.380" starttime="20200605 10:10:23.379"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:23.380" level="INFO">${PORT_ID} = SFP port</msg>
<status status="PASS" endtime="20200605 10:10:23.381" starttime="20200605 10:10:23.380"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:23.382" starttime="20200605 10:10:23.381"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:23.383" starttime="20200605 10:10:23.382"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:23.384" starttime="20200605 10:10:23.383"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:23.386" starttime="20200605 10:10:23.385"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:23.386" starttime="20200605 10:10:23.384"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:23.386" starttime="20200605 10:10:23.337"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:23.386" starttime="20200605 10:10:23.337"></status>
</kw>
<kw type="foritem" name="${ID} = 72">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:23.395" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/72</msg>
<msg timestamp="20200605 10:10:23.420" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/72: 0.000402 seconds.</msg>
<msg timestamp="20200605 10:10:23.420" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:23 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:23.420" starttime="20200605 10:10:23.387"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:23.421" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:23.421" starttime="20200605 10:10:23.421"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:23.423" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:23.423" starttime="20200605 10:10:23.422"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:23.423" level="INFO">${PORT_ID} = SFP port</msg>
<status status="PASS" endtime="20200605 10:10:23.423" starttime="20200605 10:10:23.423"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:23.425" starttime="20200605 10:10:23.424"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:23.426" starttime="20200605 10:10:23.425"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:23.427" starttime="20200605 10:10:23.426"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:23.430" starttime="20200605 10:10:23.429"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:23.430" starttime="20200605 10:10:23.427"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:23.430" starttime="20200605 10:10:23.386"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:23.430" starttime="20200605 10:10:23.386"></status>
</kw>
<kw type="foritem" name="${ID} = 73">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:23.439" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/73</msg>
<msg timestamp="20200605 10:10:23.468" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/73: 0.000965 seconds.</msg>
<msg timestamp="20200605 10:10:23.469" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:23 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:23.469" starttime="20200605 10:10:23.431"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:23.471" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:23.472" starttime="20200605 10:10:23.470"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:23.474" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:10:23.474" starttime="20200605 10:10:23.472"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:23.476" level="INFO">${PORT_ID} = SFP port</msg>
<status status="PASS" endtime="20200605 10:10:23.476" starttime="20200605 10:10:23.474"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:23.479" starttime="20200605 10:10:23.476"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:23.482" starttime="20200605 10:10:23.480"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:23.485" starttime="20200605 10:10:23.483"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:23.488" starttime="20200605 10:10:23.486"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:23.488" starttime="20200605 10:10:23.485"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:23.488" starttime="20200605 10:10:23.430"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:23.488" starttime="20200605 10:10:23.430"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:23.488" starttime="20200605 10:10:18.977"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:23.488" starttime="20200605 10:10:18.936"></status>
</kw>
<kw name="Test Bal Enable">
<tags>
<tag>Verify_Bal_Enable</tag>
</tags>
<doc>Enable Bal</doc>
<kw type="for" name="${i} IN RANGE [ 1 | 80 ]">
<kw type="foritem" name="${i} = 1">
<kw name="Test Wait Bal Enable">
<tags>
<tag>Verify_Waut_Bal_Enable</tag>
</tags>
<doc>Wait Enable Bal</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:23.491" starttime="20200605 10:10:23.490"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:23.502" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200605 10:10:23.528" level="INFO">Response Time to /redfish/v1/Olt: 0.000487 seconds.</msg>
<msg timestamp="20200605 10:10:23.528" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:23 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200605 10:10:23.528" starttime="20200605 10:10:23.492"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:23.529" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:23.529" starttime="20200605 10:10:23.529"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['BalState']}</arg>
</arguments>
<assign>
<var>${BAL_STATE}</var>
</assign>
<msg timestamp="20200605 10:10:23.530" level="INFO">${BAL_STATE} = up</msg>
<status status="PASS" endtime="20200605 10:10:23.530" starttime="20200605 10:10:23.529"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BAL_STATE}' == 'up'</arg>
<arg>Log to console</arg>
<arg>"####### Up ######"</arg>
<arg>${bal_state} =</arg>
<arg>"up"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Up ######"</arg>
<arg>${bal_state} =</arg>
<arg>"up"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:23.532" starttime="20200605 10:10:23.531"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:23.532" starttime="20200605 10:10:23.530"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200605 10:10:24.534" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200605 10:10:24.535" starttime="20200605 10:10:23.533"></status>
</kw>
<msg timestamp="20200605 10:10:24.536" level="INFO">${result} = up</msg>
<status status="PASS" endtime="20200605 10:10:24.536" starttime="20200605 10:10:23.490"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:24.539" starttime="20200605 10:10:24.537"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${result}' == 'up'</arg>
</arguments>
<msg timestamp="20200605 10:10:24.542" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20200605 10:10:24.543" starttime="20200605 10:10:24.540"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:24.543" starttime="20200605 10:10:23.490"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:24.543" starttime="20200605 10:10:23.489"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${result}</arg>
<arg>up</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:24.545" starttime="20200605 10:10:24.544"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OPT_ENABLE)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 10:10:24.559" level="INFO">${payload} = {u'OltOperateState': True}</msg>
<status status="PASS" endtime="20200605 10:10:24.560" starttime="20200605 10:10:24.546"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:24.572" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200605 10:10:25.402" level="INFO">Response Time to /redfish/v1/Olt: 0.001318 seconds.</msg>
<msg timestamp="20200605 10:10:25.403" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:25 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:10:25.404" starttime="20200605 10:10:24.560"></status>
</kw>
<kw type="for" name="${i} IN RANGE [ 1 | 60 ]">
<kw type="foritem" name="${i} = 1">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:25.408" starttime="20200605 10:10:25.407"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:25.434" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200605 10:10:25.462" level="INFO">Response Time to /redfish/v1/Olt: 0.000618 seconds.</msg>
<msg timestamp="20200605 10:10:25.463" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:25 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200605 10:10:25.463" starttime="20200605 10:10:25.409"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:25.464" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:25.464" starttime="20200605 10:10:25.463"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200605 10:10:25.465" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200605 10:10:25.465" starttime="20200605 10:10:25.464"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:25.466" starttime="20200605 10:10:25.466"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:25.468" starttime="20200605 10:10:25.468"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:25.468" starttime="20200605 10:10:25.467"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200605 10:10:26.482" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200605 10:10:26.483" starttime="20200605 10:10:25.469"></status>
</kw>
<msg timestamp="20200605 10:10:26.484" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200605 10:10:26.484" starttime="20200605 10:10:25.405"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:26.488" starttime="20200605 10:10:26.485"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:26.490" starttime="20200605 10:10:26.489"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:26.490" starttime="20200605 10:10:25.404"></status>
</kw>
<kw type="foritem" name="${i} = 2">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:26.494" starttime="20200605 10:10:26.492"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:26.517" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200605 10:10:26.548" level="INFO">Response Time to /redfish/v1/Olt: 0.001051 seconds.</msg>
<msg timestamp="20200605 10:10:26.550" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:26 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200605 10:10:26.550" starttime="20200605 10:10:26.495"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:26.552" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:26.552" starttime="20200605 10:10:26.551"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200605 10:10:26.554" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200605 10:10:26.554" starttime="20200605 10:10:26.553"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:26.558" starttime="20200605 10:10:26.555"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:26.562" starttime="20200605 10:10:26.560"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:26.562" starttime="20200605 10:10:26.559"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200605 10:10:27.564" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200605 10:10:27.565" starttime="20200605 10:10:26.563"></status>
</kw>
<msg timestamp="20200605 10:10:27.565" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200605 10:10:27.566" starttime="20200605 10:10:26.490"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:27.567" starttime="20200605 10:10:27.566"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:27.569" starttime="20200605 10:10:27.568"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:27.569" starttime="20200605 10:10:26.490"></status>
</kw>
<kw type="foritem" name="${i} = 3">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:27.572" starttime="20200605 10:10:27.571"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:27.593" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200605 10:10:27.613" level="INFO">Response Time to /redfish/v1/Olt: 0.000638 seconds.</msg>
<msg timestamp="20200605 10:10:27.614" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:27 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200605 10:10:27.614" starttime="20200605 10:10:27.573"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:27.616" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:27.616" starttime="20200605 10:10:27.615"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200605 10:10:27.617" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200605 10:10:27.617" starttime="20200605 10:10:27.617"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:27.618" starttime="20200605 10:10:27.618"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:27.620" starttime="20200605 10:10:27.619"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:27.620" starttime="20200605 10:10:27.619"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200605 10:10:28.634" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200605 10:10:28.635" starttime="20200605 10:10:27.620"></status>
</kw>
<msg timestamp="20200605 10:10:28.636" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200605 10:10:28.636" starttime="20200605 10:10:27.570"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:28.640" starttime="20200605 10:10:28.637"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:28.642" starttime="20200605 10:10:28.641"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:28.642" starttime="20200605 10:10:27.570"></status>
</kw>
<kw type="foritem" name="${i} = 4">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:28.647" starttime="20200605 10:10:28.644"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:28.672" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200605 10:10:28.702" level="INFO">Response Time to /redfish/v1/Olt: 0.000934 seconds.</msg>
<msg timestamp="20200605 10:10:28.703" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:28 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200605 10:10:28.703" starttime="20200605 10:10:28.648"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:28.705" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:28.705" starttime="20200605 10:10:28.704"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200605 10:10:28.706" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200605 10:10:28.706" starttime="20200605 10:10:28.705"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:28.707" starttime="20200605 10:10:28.707"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:28.709" starttime="20200605 10:10:28.709"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:28.709" starttime="20200605 10:10:28.708"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200605 10:10:29.711" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200605 10:10:29.711" starttime="20200605 10:10:28.710"></status>
</kw>
<msg timestamp="20200605 10:10:29.712" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200605 10:10:29.712" starttime="20200605 10:10:28.643"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:29.714" starttime="20200605 10:10:29.713"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:29.716" starttime="20200605 10:10:29.715"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:29.716" starttime="20200605 10:10:28.642"></status>
</kw>
<kw type="foritem" name="${i} = 5">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:29.720" starttime="20200605 10:10:29.719"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:29.743" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200605 10:10:29.770" level="INFO">Response Time to /redfish/v1/Olt: 0.000499 seconds.</msg>
<msg timestamp="20200605 10:10:29.771" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:29 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200605 10:10:29.771" starttime="20200605 10:10:29.721"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:29.772" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:29.772" starttime="20200605 10:10:29.771"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200605 10:10:29.773" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200605 10:10:29.773" starttime="20200605 10:10:29.772"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:29.774" starttime="20200605 10:10:29.773"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:29.775" starttime="20200605 10:10:29.775"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:29.775" starttime="20200605 10:10:29.774"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200605 10:10:30.778" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200605 10:10:30.778" starttime="20200605 10:10:29.775"></status>
</kw>
<msg timestamp="20200605 10:10:30.779" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200605 10:10:30.779" starttime="20200605 10:10:29.717"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:30.782" starttime="20200605 10:10:30.780"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:30.784" starttime="20200605 10:10:30.782"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:30.784" starttime="20200605 10:10:29.716"></status>
</kw>
<kw type="foritem" name="${i} = 6">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:30.788" starttime="20200605 10:10:30.787"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:30.812" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200605 10:10:30.840" level="INFO">Response Time to /redfish/v1/Olt: 0.000696 seconds.</msg>
<msg timestamp="20200605 10:10:30.841" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:30 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200605 10:10:30.841" starttime="20200605 10:10:30.789"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:30.842" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:30.842" starttime="20200605 10:10:30.841"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200605 10:10:30.843" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200605 10:10:30.843" starttime="20200605 10:10:30.843"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:30.844" starttime="20200605 10:10:30.844"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:30.846" starttime="20200605 10:10:30.846"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:30.846" starttime="20200605 10:10:30.845"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200605 10:10:31.848" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200605 10:10:31.848" starttime="20200605 10:10:30.846"></status>
</kw>
<msg timestamp="20200605 10:10:31.849" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200605 10:10:31.849" starttime="20200605 10:10:30.784"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:31.851" starttime="20200605 10:10:31.850"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:31.853" starttime="20200605 10:10:31.852"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:31.853" starttime="20200605 10:10:30.784"></status>
</kw>
<kw type="foritem" name="${i} = 7">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:31.856" starttime="20200605 10:10:31.856"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:31.878" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200605 10:10:31.905" level="INFO">Response Time to /redfish/v1/Olt: 0.000621 seconds.</msg>
<msg timestamp="20200605 10:10:31.906" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:31 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200605 10:10:31.906" starttime="20200605 10:10:31.857"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:31.908" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:31.908" starttime="20200605 10:10:31.907"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200605 10:10:31.909" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200605 10:10:31.909" starttime="20200605 10:10:31.908"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:31.910" starttime="20200605 10:10:31.909"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:31.912" starttime="20200605 10:10:31.912"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:31.912" starttime="20200605 10:10:31.911"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200605 10:10:32.914" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200605 10:10:32.914" starttime="20200605 10:10:31.913"></status>
</kw>
<msg timestamp="20200605 10:10:32.915" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200605 10:10:32.915" starttime="20200605 10:10:31.854"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:32.917" starttime="20200605 10:10:32.916"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:32.919" starttime="20200605 10:10:32.918"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:32.919" starttime="20200605 10:10:31.854"></status>
</kw>
<kw type="foritem" name="${i} = 8">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:32.923" starttime="20200605 10:10:32.922"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:32.946" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200605 10:10:32.973" level="INFO">Response Time to /redfish/v1/Olt: 0.000471 seconds.</msg>
<msg timestamp="20200605 10:10:32.974" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:32 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200605 10:10:32.974" starttime="20200605 10:10:32.923"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:32.975" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:32.975" starttime="20200605 10:10:32.974"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200605 10:10:32.976" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200605 10:10:32.976" starttime="20200605 10:10:32.975"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:32.977" starttime="20200605 10:10:32.976"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:32.979" starttime="20200605 10:10:32.978"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:32.979" starttime="20200605 10:10:32.977"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200605 10:10:33.980" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200605 10:10:33.980" starttime="20200605 10:10:32.979"></status>
</kw>
<msg timestamp="20200605 10:10:33.981" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200605 10:10:33.981" starttime="20200605 10:10:32.920"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:33.984" starttime="20200605 10:10:33.982"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:33.987" starttime="20200605 10:10:33.985"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:33.987" starttime="20200605 10:10:32.920"></status>
</kw>
<kw type="foritem" name="${i} = 9">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:33.990" starttime="20200605 10:10:33.989"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:34.014" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200605 10:10:34.041" level="INFO">Response Time to /redfish/v1/Olt: 0.000491999999999 seconds.</msg>
<msg timestamp="20200605 10:10:34.042" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:34 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200605 10:10:34.042" starttime="20200605 10:10:33.991"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:34.043" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:34.043" starttime="20200605 10:10:34.043"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200605 10:10:34.044" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200605 10:10:34.044" starttime="20200605 10:10:34.044"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:34.045" starttime="20200605 10:10:34.045"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:34.047" starttime="20200605 10:10:34.047"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:34.047" starttime="20200605 10:10:34.046"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200605 10:10:35.049" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200605 10:10:35.049" starttime="20200605 10:10:34.048"></status>
</kw>
<msg timestamp="20200605 10:10:35.050" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200605 10:10:35.050" starttime="20200605 10:10:33.987"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:35.052" starttime="20200605 10:10:35.051"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:35.055" starttime="20200605 10:10:35.054"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:35.055" starttime="20200605 10:10:33.987"></status>
</kw>
<kw type="foritem" name="${i} = 10">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:35.058" starttime="20200605 10:10:35.057"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:35.079" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200605 10:10:35.108" level="INFO">Response Time to /redfish/v1/Olt: 0.000636 seconds.</msg>
<msg timestamp="20200605 10:10:35.109" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:35 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200605 10:10:35.109" starttime="20200605 10:10:35.059"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:35.110" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:35.110" starttime="20200605 10:10:35.109"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200605 10:10:35.112" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200605 10:10:35.112" starttime="20200605 10:10:35.111"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:35.113" starttime="20200605 10:10:35.112"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:35.115" starttime="20200605 10:10:35.115"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:35.115" starttime="20200605 10:10:35.114"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200605 10:10:36.117" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200605 10:10:36.118" starttime="20200605 10:10:35.116"></status>
</kw>
<msg timestamp="20200605 10:10:36.119" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200605 10:10:36.119" starttime="20200605 10:10:35.055"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:36.121" starttime="20200605 10:10:36.120"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:36.123" starttime="20200605 10:10:36.122"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:36.123" starttime="20200605 10:10:35.055"></status>
</kw>
<kw type="foritem" name="${i} = 11">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:36.127" starttime="20200605 10:10:36.126"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:36.150" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200605 10:10:36.179" level="INFO">Response Time to /redfish/v1/Olt: 0.000478999999999 seconds.</msg>
<msg timestamp="20200605 10:10:36.180" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:36 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200605 10:10:36.180" starttime="20200605 10:10:36.128"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:36.182" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:36.182" starttime="20200605 10:10:36.181"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200605 10:10:36.183" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200605 10:10:36.183" starttime="20200605 10:10:36.182"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:36.183" starttime="20200605 10:10:36.183"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:36.185" starttime="20200605 10:10:36.185"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:36.185" starttime="20200605 10:10:36.184"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200605 10:10:37.187" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200605 10:10:37.187" starttime="20200605 10:10:36.186"></status>
</kw>
<msg timestamp="20200605 10:10:37.188" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200605 10:10:37.188" starttime="20200605 10:10:36.124"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:37.190" starttime="20200605 10:10:37.189"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:37.193" starttime="20200605 10:10:37.192"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:37.193" starttime="20200605 10:10:36.124"></status>
</kw>
<kw type="foritem" name="${i} = 12">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:37.196" starttime="20200605 10:10:37.195"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:37.219" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200605 10:10:37.247" level="INFO">Response Time to /redfish/v1/Olt: 0.000497 seconds.</msg>
<msg timestamp="20200605 10:10:37.248" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:37 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200605 10:10:37.248" starttime="20200605 10:10:37.197"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:37.249" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:37.249" starttime="20200605 10:10:37.249"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200605 10:10:37.250" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200605 10:10:37.250" starttime="20200605 10:10:37.250"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:37.251" starttime="20200605 10:10:37.251"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:37.253" starttime="20200605 10:10:37.253"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:37.254" starttime="20200605 10:10:37.252"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200605 10:10:38.255" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200605 10:10:38.256" starttime="20200605 10:10:37.254"></status>
</kw>
<msg timestamp="20200605 10:10:38.256" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200605 10:10:38.257" starttime="20200605 10:10:37.194"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:38.259" starttime="20200605 10:10:38.258"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:38.261" starttime="20200605 10:10:38.260"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:38.261" starttime="20200605 10:10:37.193"></status>
</kw>
<kw type="foritem" name="${i} = 13">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:38.264" starttime="20200605 10:10:38.263"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:38.287" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200605 10:10:38.315" level="INFO">Response Time to /redfish/v1/Olt: 0.000569 seconds.</msg>
<msg timestamp="20200605 10:10:38.316" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:38 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200605 10:10:38.316" starttime="20200605 10:10:38.265"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:38.318" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:38.318" starttime="20200605 10:10:38.317"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200605 10:10:38.319" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200605 10:10:38.319" starttime="20200605 10:10:38.318"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:38.320" starttime="20200605 10:10:38.320"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:38.322" starttime="20200605 10:10:38.321"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:38.322" starttime="20200605 10:10:38.321"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200605 10:10:39.323" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200605 10:10:39.324" starttime="20200605 10:10:38.322"></status>
</kw>
<msg timestamp="20200605 10:10:39.324" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200605 10:10:39.325" starttime="20200605 10:10:38.262"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:39.327" starttime="20200605 10:10:39.326"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:39.330" starttime="20200605 10:10:39.328"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:39.330" starttime="20200605 10:10:38.261"></status>
</kw>
<kw type="foritem" name="${i} = 14">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:39.335" starttime="20200605 10:10:39.334"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:39.358" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200605 10:10:39.387" level="INFO">Response Time to /redfish/v1/Olt: 0.000457 seconds.</msg>
<msg timestamp="20200605 10:10:39.387" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:39 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200605 10:10:39.387" starttime="20200605 10:10:39.336"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:39.388" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:39.389" starttime="20200605 10:10:39.388"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200605 10:10:39.389" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200605 10:10:39.389" starttime="20200605 10:10:39.389"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:39.390" starttime="20200605 10:10:39.390"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:39.391" starttime="20200605 10:10:39.391"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:39.392" starttime="20200605 10:10:39.390"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200605 10:10:40.399" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200605 10:10:40.399" starttime="20200605 10:10:39.392"></status>
</kw>
<msg timestamp="20200605 10:10:40.400" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200605 10:10:40.400" starttime="20200605 10:10:39.331"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:40.402" starttime="20200605 10:10:40.401"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:40.404" starttime="20200605 10:10:40.403"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:40.404" starttime="20200605 10:10:39.330"></status>
</kw>
<kw type="foritem" name="${i} = 15">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:40.408" starttime="20200605 10:10:40.407"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:40.431" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200605 10:10:40.457" level="INFO">Response Time to /redfish/v1/Olt: 0.000576 seconds.</msg>
<msg timestamp="20200605 10:10:40.458" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:40 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200605 10:10:40.458" starttime="20200605 10:10:40.409"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:40.459" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:40.460" starttime="20200605 10:10:40.459"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200605 10:10:40.461" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200605 10:10:40.461" starttime="20200605 10:10:40.460"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:40.462" starttime="20200605 10:10:40.461"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:40.463" starttime="20200605 10:10:40.463"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:40.463" starttime="20200605 10:10:40.462"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200605 10:10:41.465" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200605 10:10:41.466" starttime="20200605 10:10:40.464"></status>
</kw>
<msg timestamp="20200605 10:10:41.466" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200605 10:10:41.467" starttime="20200605 10:10:40.405"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:41.469" starttime="20200605 10:10:41.467"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:41.471" starttime="20200605 10:10:41.470"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:41.471" starttime="20200605 10:10:40.405"></status>
</kw>
<kw type="foritem" name="${i} = 16">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:41.474" starttime="20200605 10:10:41.473"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:41.496" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200605 10:10:41.523" level="INFO">Response Time to /redfish/v1/Olt: 0.000582000000001 seconds.</msg>
<msg timestamp="20200605 10:10:41.524" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:41 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200605 10:10:41.524" starttime="20200605 10:10:41.475"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:41.525" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:41.525" starttime="20200605 10:10:41.525"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200605 10:10:41.526" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200605 10:10:41.526" starttime="20200605 10:10:41.526"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:41.527" starttime="20200605 10:10:41.527"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:41.530" starttime="20200605 10:10:41.529"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:41.530" starttime="20200605 10:10:41.528"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200605 10:10:42.532" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200605 10:10:42.532" starttime="20200605 10:10:41.531"></status>
</kw>
<msg timestamp="20200605 10:10:42.533" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200605 10:10:42.534" starttime="20200605 10:10:41.471"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:42.537" starttime="20200605 10:10:42.535"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:42.540" starttime="20200605 10:10:42.539"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:42.541" starttime="20200605 10:10:41.471"></status>
</kw>
<kw type="foritem" name="${i} = 17">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:42.544" starttime="20200605 10:10:42.543"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:42.565" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200605 10:10:43.598" level="INFO">Response Time to /redfish/v1/Olt: 0.001348 seconds.</msg>
<msg timestamp="20200605 10:10:43.601" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:43 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200605 10:10:43.601" starttime="20200605 10:10:42.545"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:43.603" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:43.604" starttime="20200605 10:10:43.602"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200605 10:10:43.606" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200605 10:10:43.606" starttime="20200605 10:10:43.605"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:43.608" starttime="20200605 10:10:43.607"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:43.611" starttime="20200605 10:10:43.611"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:43.611" starttime="20200605 10:10:43.609"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200605 10:10:44.614" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200605 10:10:44.614" starttime="20200605 10:10:43.612"></status>
</kw>
<msg timestamp="20200605 10:10:44.615" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200605 10:10:44.615" starttime="20200605 10:10:42.542"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:44.617" starttime="20200605 10:10:44.616"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:44.619" starttime="20200605 10:10:44.618"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:44.619" starttime="20200605 10:10:42.541"></status>
</kw>
<kw type="foritem" name="${i} = 18">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:44.622" starttime="20200605 10:10:44.622"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:44.647" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200605 10:10:45.680" level="INFO">Response Time to /redfish/v1/Olt: 0.001373 seconds.</msg>
<msg timestamp="20200605 10:10:45.682" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:45 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200605 10:10:45.682" starttime="20200605 10:10:44.623"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:45.685" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:45.685" starttime="20200605 10:10:45.684"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200605 10:10:45.687" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200605 10:10:45.687" starttime="20200605 10:10:45.686"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:45.689" starttime="20200605 10:10:45.688"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:45.693" starttime="20200605 10:10:45.692"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:45.693" starttime="20200605 10:10:45.690"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200605 10:10:46.695" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200605 10:10:46.696" starttime="20200605 10:10:45.694"></status>
</kw>
<msg timestamp="20200605 10:10:46.696" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200605 10:10:46.697" starttime="20200605 10:10:44.620"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:46.699" starttime="20200605 10:10:46.698"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:46.701" starttime="20200605 10:10:46.700"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:46.701" starttime="20200605 10:10:44.620"></status>
</kw>
<kw type="foritem" name="${i} = 19">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:46.704" starttime="20200605 10:10:46.703"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:46.725" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200605 10:10:47.188" level="INFO">Response Time to /redfish/v1/Olt: 0.001194 seconds.</msg>
<msg timestamp="20200605 10:10:47.191" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:47 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200605 10:10:47.191" starttime="20200605 10:10:46.705"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:47.194" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:47.194" starttime="20200605 10:10:47.192"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200605 10:10:47.197" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200605 10:10:47.197" starttime="20200605 10:10:47.195"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:47.200" starttime="20200605 10:10:47.198"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:47.204" starttime="20200605 10:10:47.203"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:47.204" starttime="20200605 10:10:47.201"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200605 10:10:48.206" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200605 10:10:48.207" starttime="20200605 10:10:47.205"></status>
</kw>
<msg timestamp="20200605 10:10:48.208" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200605 10:10:48.208" starttime="20200605 10:10:46.702"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:48.210" starttime="20200605 10:10:48.209"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:48.212" starttime="20200605 10:10:48.211"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:48.212" starttime="20200605 10:10:46.701"></status>
</kw>
<kw type="foritem" name="${i} = 20">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:48.215" starttime="20200605 10:10:48.215"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:48.239" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200605 10:10:48.272" level="INFO">Response Time to /redfish/v1/Olt: 0.001293 seconds.</msg>
<msg timestamp="20200605 10:10:48.274" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:48 GMT
connection Keep-Alive
content-type application/json
content-length 40


{"BalState":"up","OltOperateState":true}</msg>
<status status="PASS" endtime="20200605 10:10:48.274" starttime="20200605 10:10:48.216"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:48.277" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:48.277" starttime="20200605 10:10:48.275"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200605 10:10:48.279" level="INFO">${bal_opt_state} = True</msg>
<status status="PASS" endtime="20200605 10:10:48.279" starttime="20200605 10:10:48.278"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:48.281" starttime="20200605 10:10:48.280"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Up ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:48.312" starttime="20200605 10:10:48.284"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:48.312" starttime="20200605 10:10:48.282"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200605 10:10:49.314" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200605 10:10:49.315" starttime="20200605 10:10:48.313"></status>
</kw>
<msg timestamp="20200605 10:10:49.316" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20200605 10:10:49.316" starttime="20200605 10:10:48.213"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:49.318" starttime="20200605 10:10:49.317"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20200605 10:10:49.320" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20200605 10:10:49.321" starttime="20200605 10:10:49.319"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:49.321" starttime="20200605 10:10:48.212"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:49.321" starttime="20200605 10:10:25.404"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:49.323" starttime="20200605 10:10:49.322"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:49.323" starttime="20200605 10:10:23.489"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200605 10:10:54.325" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20200605 10:10:54.325" starttime="20200605 10:10:49.324"></status>
</kw>
<kw name="Test Port Present">
<tags>
<tag>Test pon_status present</tag>
</tags>
<doc>Test Pon port present function</doc>
<arguments>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:54.350" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200605 10:10:54.391" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.001713 seconds.</msg>
<msg timestamp="20200605 10:10:54.392" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:54 GMT
connection Keep-Alive
content-type application/json
content-length 2398


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:54.392" starttime="20200605 10:10:54.328"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:54.393" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:54.394" starttime="20200605 10:10:54.393"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:10:54.395" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200605 10:10:54.395" starttime="20200605 10:10:54.394"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:10:54.396" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:10:54.397" starttime="20200605 10:10:54.396"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:54.398" starttime="20200605 10:10:54.397"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:54.399" starttime="20200605 10:10:54.398"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${PORT_ENABLE}'</arg>
<arg>'Enabled'</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:54.401" starttime="20200605 10:10:54.400"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:54.401" starttime="20200605 10:10:54.326"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200605 10:10:59.402" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20200605 10:10:59.403" starttime="20200605 10:10:54.401"></status>
</kw>
<kw name="Enable Port">
<tags>
<tag>Enable Port</tag>
</tags>
<doc>Enable port function</doc>
<arguments>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Enable Port ${ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:59.408" starttime="20200605 10:10:59.405"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($ADM_UP)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 10:10:59.424" level="INFO">${payload} = {u'AdministrativeState': u'Up'}</msg>
<status status="PASS" endtime="20200605 10:10:59.424" starttime="20200605 10:10:59.408"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:59.440" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200605 10:10:59.718" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.001553 seconds.</msg>
<msg timestamp="20200605 10:10:59.720" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:59 GMT
connection Keep-Alive
content-type application/json
content-length 2393


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:59.720" starttime="20200605 10:10:59.425"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:59.723" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:59.723" starttime="20200605 10:10:59.721"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:10:59.747" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200605 10:10:59.791" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.001204 seconds.</msg>
<msg timestamp="20200605 10:10:59.793" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:10:59 GMT
connection Keep-Alive
content-type application/json
content-length 2393


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:10:59.793" starttime="20200605 10:10:59.724"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:10:59.795" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:10:59.795" starttime="20200605 10:10:59.794"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['AdministrativeState']}</arg>
</arguments>
<assign>
<var>${ADM_STAT}</var>
</assign>
<msg timestamp="20200605 10:10:59.798" level="INFO">${ADM_STAT} = Up</msg>
<status status="PASS" endtime="20200605 10:10:59.798" starttime="20200605 10:10:59.796"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${ADM_STAT}'</arg>
<arg>'Up'</arg>
</arguments>
<status status="PASS" endtime="20200605 10:10:59.800" starttime="20200605 10:10:59.799"></status>
</kw>
<status status="PASS" endtime="20200605 10:10:59.800" starttime="20200605 10:10:59.404"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200605 10:11:04.802" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20200605 10:11:04.803" starttime="20200605 10:10:59.801"></status>
</kw>
<kw name="Test NNI Port Enable">
<tags>
<tag>Verify_nni_enable</tag>
</tags>
<doc>Verify NNI port enable function</doc>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:11:04.827" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/</msg>
<msg timestamp="20200605 10:11:04.862" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/: 0.000916 seconds.</msg>
<msg timestamp="20200605 10:11:04.863" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:11:04 GMT
connection Keep-Alive
content-type application/json
content-length 4491


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPortCollection.EthernetSwitchPor...</msg>
<status status="PASS" endtime="20200605 10:11:04.863" starttime="20200605 10:11:04.805"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:11:04.865" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:11:04.865" starttime="20200605 10:11:04.864"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200605 10:11:04.867" level="INFO">Length is 74</msg>
<msg timestamp="20200605 10:11:04.867" level="INFO">${item_count} = 74</msg>
<status status="PASS" endtime="20200605 10:11:04.867" starttime="20200605 10:11:04.866"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### num ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:11:04.868" starttime="20200605 10:11:04.867"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PON_TYPE}' == 'GPON'</arg>
<arg>set variable</arg>
<arg>${65}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${17}</arg>
</arguments>
<assign>
<var>${NNI_PORT}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${65}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:11:04.871" starttime="20200605 10:11:04.871"></status>
</kw>
<msg timestamp="20200605 10:11:04.871" level="INFO">${NNI_PORT} = 65</msg>
<status status="PASS" endtime="20200605 10:11:04.871" starttime="20200605 10:11:04.869"></status>
</kw>
<kw name="Test Port Present">
<tags>
<tag>Test pon_status present</tag>
</tags>
<doc>Test Pon port present function</doc>
<arguments>
<arg>${NNI_PORT}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:11:04.902" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/65</msg>
<msg timestamp="20200605 10:11:04.932" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/65: 0.000737 seconds.</msg>
<msg timestamp="20200605 10:11:04.933" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:11:04 GMT
connection Keep-Alive
content-type application/json
content-length 2440


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:11:04.933" starttime="20200605 10:11:04.872"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:11:04.934" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:11:04.935" starttime="20200605 10:11:04.934"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:11:04.936" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200605 10:11:04.936" starttime="20200605 10:11:04.935"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:11:04.937" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200605 10:11:04.937" starttime="20200605 10:11:04.936"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:11:04.938" starttime="20200605 10:11:04.938"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:11:04.940" starttime="20200605 10:11:04.939"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${PORT_ENABLE}'</arg>
<arg>'Enabled'</arg>
</arguments>
<status status="PASS" endtime="20200605 10:11:04.941" starttime="20200605 10:11:04.941"></status>
</kw>
<status status="PASS" endtime="20200605 10:11:04.941" starttime="20200605 10:11:04.872"></status>
</kw>
<kw name="Enable Port">
<tags>
<tag>Enable Port</tag>
</tags>
<doc>Enable port function</doc>
<arguments>
<arg>${NNI_PORT}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Enable Port ${ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:11:04.943" starttime="20200605 10:11:04.943"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($ADM_UP)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 10:11:04.951" level="INFO">${payload} = {u'AdministrativeState': u'Up'}</msg>
<status status="PASS" endtime="20200605 10:11:04.951" starttime="20200605 10:11:04.944"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:11:04.963" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/65</msg>
<msg timestamp="20200605 10:11:05.225" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/65: 0.001384 seconds.</msg>
<msg timestamp="20200605 10:11:05.226" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:11:05 GMT
connection Keep-Alive
content-type application/json
content-length 2440


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:11:05.227" starttime="20200605 10:11:04.952"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:11:05.229" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:11:05.230" starttime="20200605 10:11:05.228"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:11:05.253" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/65</msg>
<msg timestamp="20200605 10:11:05.288" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/65: 0.001311 seconds.</msg>
<msg timestamp="20200605 10:11:05.290" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:11:05 GMT
connection Keep-Alive
content-type application/json
content-length 2440


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:11:05.290" starttime="20200605 10:11:05.230"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:11:05.293" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:11:05.293" starttime="20200605 10:11:05.291"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['AdministrativeState']}</arg>
</arguments>
<assign>
<var>${ADM_STAT}</var>
</assign>
<msg timestamp="20200605 10:11:05.296" level="INFO">${ADM_STAT} = Up</msg>
<status status="PASS" endtime="20200605 10:11:05.296" starttime="20200605 10:11:05.294"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${ADM_STAT}'</arg>
<arg>'Up'</arg>
</arguments>
<status status="PASS" endtime="20200605 10:11:05.298" starttime="20200605 10:11:05.297"></status>
</kw>
<status status="PASS" endtime="20200605 10:11:05.298" starttime="20200605 10:11:04.942"></status>
</kw>
<status status="PASS" endtime="20200605 10:11:05.298" starttime="20200605 10:11:04.803"></status>
</kw>
<status status="PASS" endtime="20200605 10:11:05.299" starttime="20200605 10:10:14.261"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200605 10:11:05.326" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200605 10:11:05.354" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000607 seconds.</msg>
<msg timestamp="20200605 10:11:05.355" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200605 10:11:05.355" starttime="20200605 10:11:05.301"></status>
</kw>
<status status="PASS" endtime="20200605 10:11:05.355" starttime="20200605 10:11:05.300"></status>
</kw>
<doc>Test BAL Restful Status</doc>
<tags>
<tag>Test Bal Restful opertaion test</tag>
</tags>
<status status="PASS" endtime="20200605 10:11:05.355" critical="yes" starttime="20200605 10:10:14.223"></status>
</test>
<test id="s1-s1-t2" name="Verify Restful API for ONU Range Test">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 10:11:05.366" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 10:11:05.397" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000881 seconds.</msg>
<msg timestamp="20200605 10:11:05.398" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 10:11:05.398" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 10:11:05.398" starttime="20200605 10:11:05.357"></status>
</kw>
<status status="PASS" endtime="20200605 10:11:05.398" starttime="20200605 10:11:05.357"></status>
</kw>
<kw name="Test ONU Range">
<tags>
<tag>ONU Range</tag>
</tags>
<doc>ONU Ranging Test</doc>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PON_TYPE}' == 'GPON'</arg>
<arg>set variable</arg>
<arg>${150}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${255}</arg>
</arguments>
<assign>
<var>${ONU_ID_RANGE}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${150}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:11:05.401" starttime="20200605 10:11:05.400"></status>
</kw>
<msg timestamp="20200605 10:11:05.401" level="INFO">${ONU_ID_RANGE} = 150</msg>
<status status="PASS" endtime="20200605 10:11:05.401" starttime="20200605 10:11:05.400"></status>
</kw>
<kw type="for" name="${id} IN RANGE [ 1 | ${ONU_ID_RANGE} | 50 ]">
<kw type="foritem" name="${id} = 1">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200605 10:11:12.403" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200605 10:11:12.403" starttime="20200605 10:11:05.402"></status>
</kw>
<kw name="Test Active ONU">
<tags>
<tag>Test Active ONU</tag>
</tags>
<doc>Test Active ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${SPECIFIC_ID}</arg>
<arg>${SPECIFIC_NUM}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onu_id": ${ONU_ID},</arg>
<arg>"vendor_id": "${VEN_ID}",</arg>
<arg>"vendor_specific":"${VEN_SPEC}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200605 10:11:12.408" level="INFO">${JSTRING} = { "onu_id": 1, "vendor_id": "ISKT", "vendor_specific":"428DA323" }</msg>
<status status="PASS" endtime="20200605 10:11:12.408" starttime="20200605 10:11:12.406"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### active onu ${JSTRING} ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:11:12.412" starttime="20200605 10:11:12.409"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 10:11:12.427" level="INFO">${payload} = {u'onu_id': 1, u'vendor_id': u'ISKT', u'vendor_specific': u'428DA323'}</msg>
<status status="PASS" endtime="20200605 10:11:12.427" starttime="20200605 10:11:12.413"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:11:12.444" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200605 10:11:12.473" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000387 seconds.</msg>
<msg timestamp="20200605 10:11:12.474" level="INFO">${resp} = 201
date Fri, 05 Jun 2020 02:11:12 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:11:12.474" starttime="20200605 10:11:12.427"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200605 10:11:12.475" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:11:12.475" starttime="20200605 10:11:12.475"></status>
</kw>
<status status="PASS" endtime="20200605 10:11:12.475" starttime="20200605 10:11:12.474"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6s</arg>
</arguments>
<msg timestamp="20200605 10:11:18.476" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20200605 10:11:18.477" starttime="20200605 10:11:12.475"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:11:18.501" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200605 10:11:18.527" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000722 seconds.</msg>
<msg timestamp="20200605 10:11:18.528" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:11:18 GMT
connection Keep-Alive
content-type application/json
content-length 405


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200605 10:11:18.528" starttime="20200605 10:11:18.478"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### onu res ${resp} ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:11:18.530" starttime="20200605 10:11:18.529"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200605 10:11:18.532" level="INFO">Length is 1</msg>
<msg timestamp="20200605 10:11:18.533" level="INFO">${item_count} = 1</msg>
<status status="PASS" endtime="20200605 10:11:18.533" starttime="20200605 10:11:18.531"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Onu num ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:11:18.535" starttime="20200605 10:11:18.534"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200605 10:11:18.539" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:11:18.539" starttime="20200605 10:11:18.539"></status>
</kw>
<status status="PASS" endtime="20200605 10:11:18.540" starttime="20200605 10:11:18.536"></status>
</kw>
<status status="PASS" endtime="20200605 10:11:18.540" starttime="20200605 10:11:12.404"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200605 10:11:25.541" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200605 10:11:25.541" starttime="20200605 10:11:18.540"></status>
</kw>
<kw name="Test DeActive ONU">
<tags>
<tag>Test DeActive ONU</tag>
</tags>
<doc>Test DeActive ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Deactive onu ${ONU_ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:11:25.545" starttime="20200605 10:11:25.544"></status>
</kw>
<kw type="for" name="${j} IN RANGE [ 5 ]">
<kw type="foritem" name="${j} = 0">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${j} == 4</arg>
</arguments>
<status status="PASS" endtime="20200605 10:11:25.548" starttime="20200605 10:11:25.546"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:11:25.567" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1</msg>
<msg timestamp="20200605 10:11:26.097" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1: 0.001211 seconds.</msg>
<msg timestamp="20200605 10:11:26.099" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:11:26 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:11:26.099" starttime="20200605 10:11:25.549"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${resp.status} == ${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:11:26.102" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20200605 10:11:26.102" starttime="20200605 10:11:26.100"></status>
</kw>
<status status="PASS" endtime="20200605 10:11:26.102" starttime="20200605 10:11:25.545"></status>
</kw>
<status status="PASS" endtime="20200605 10:11:26.102" starttime="20200605 10:11:25.545"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:11:26.104" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:11:26.105" starttime="20200605 10:11:26.103"></status>
</kw>
<status status="PASS" endtime="20200605 10:11:26.105" starttime="20200605 10:11:25.542"></status>
</kw>
<status status="PASS" endtime="20200605 10:11:26.105" starttime="20200605 10:11:05.401"></status>
</kw>
<kw type="foritem" name="${id} = 51">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200605 10:11:33.107" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200605 10:11:33.108" starttime="20200605 10:11:26.106"></status>
</kw>
<kw name="Test Active ONU">
<tags>
<tag>Test Active ONU</tag>
</tags>
<doc>Test Active ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${SPECIFIC_ID}</arg>
<arg>${SPECIFIC_NUM}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onu_id": ${ONU_ID},</arg>
<arg>"vendor_id": "${VEN_ID}",</arg>
<arg>"vendor_specific":"${VEN_SPEC}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200605 10:11:33.113" level="INFO">${JSTRING} = { "onu_id": 51, "vendor_id": "ISKT", "vendor_specific":"428DA323" }</msg>
<status status="PASS" endtime="20200605 10:11:33.113" starttime="20200605 10:11:33.111"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### active onu ${JSTRING} ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:11:33.116" starttime="20200605 10:11:33.115"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 10:11:33.132" level="INFO">${payload} = {u'onu_id': 51, u'vendor_id': u'ISKT', u'vendor_specific': u'428DA323'}</msg>
<status status="PASS" endtime="20200605 10:11:33.132" starttime="20200605 10:11:33.117"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:11:33.146" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200605 10:11:33.175" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000485 seconds.</msg>
<msg timestamp="20200605 10:11:33.176" level="INFO">${resp} = 201
date Fri, 05 Jun 2020 02:11:33 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:11:33.176" starttime="20200605 10:11:33.133"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200605 10:11:33.177" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:11:33.177" starttime="20200605 10:11:33.177"></status>
</kw>
<status status="PASS" endtime="20200605 10:11:33.178" starttime="20200605 10:11:33.176"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6s</arg>
</arguments>
<msg timestamp="20200605 10:11:39.178" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20200605 10:11:39.179" starttime="20200605 10:11:33.178"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:11:39.204" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200605 10:11:39.234" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000817 seconds.</msg>
<msg timestamp="20200605 10:11:39.235" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:11:39 GMT
connection Keep-Alive
content-type application/json
content-length 406


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200605 10:11:39.235" starttime="20200605 10:11:39.180"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### onu res ${resp} ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:11:39.237" starttime="20200605 10:11:39.236"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200605 10:11:39.239" level="INFO">Length is 1</msg>
<msg timestamp="20200605 10:11:39.239" level="INFO">${item_count} = 1</msg>
<status status="PASS" endtime="20200605 10:11:39.239" starttime="20200605 10:11:39.238"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Onu num ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:11:39.240" starttime="20200605 10:11:39.240"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200605 10:11:39.243" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:11:39.244" starttime="20200605 10:11:39.243"></status>
</kw>
<status status="PASS" endtime="20200605 10:11:39.244" starttime="20200605 10:11:39.241"></status>
</kw>
<status status="PASS" endtime="20200605 10:11:39.244" starttime="20200605 10:11:33.109"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200605 10:11:46.246" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200605 10:11:46.246" starttime="20200605 10:11:39.245"></status>
</kw>
<kw name="Test DeActive ONU">
<tags>
<tag>Test DeActive ONU</tag>
</tags>
<doc>Test DeActive ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Deactive onu ${ONU_ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:11:46.250" starttime="20200605 10:11:46.249"></status>
</kw>
<kw type="for" name="${j} IN RANGE [ 5 ]">
<kw type="foritem" name="${j} = 0">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${j} == 4</arg>
</arguments>
<status status="PASS" endtime="20200605 10:11:46.254" starttime="20200605 10:11:46.252"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:11:46.277" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/51</msg>
<msg timestamp="20200605 10:11:46.807" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/51: 0.001236 seconds.</msg>
<msg timestamp="20200605 10:11:46.809" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:11:46 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:11:46.809" starttime="20200605 10:11:46.255"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${resp.status} == ${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:11:46.812" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20200605 10:11:46.813" starttime="20200605 10:11:46.810"></status>
</kw>
<status status="PASS" endtime="20200605 10:11:46.813" starttime="20200605 10:11:46.251"></status>
</kw>
<status status="PASS" endtime="20200605 10:11:46.813" starttime="20200605 10:11:46.251"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:11:46.815" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:11:46.815" starttime="20200605 10:11:46.814"></status>
</kw>
<status status="PASS" endtime="20200605 10:11:46.816" starttime="20200605 10:11:46.247"></status>
</kw>
<status status="PASS" endtime="20200605 10:11:46.816" starttime="20200605 10:11:26.105"></status>
</kw>
<kw type="foritem" name="${id} = 101">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200605 10:11:53.818" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200605 10:11:53.819" starttime="20200605 10:11:46.817"></status>
</kw>
<kw name="Test Active ONU">
<tags>
<tag>Test Active ONU</tag>
</tags>
<doc>Test Active ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${SPECIFIC_ID}</arg>
<arg>${SPECIFIC_NUM}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onu_id": ${ONU_ID},</arg>
<arg>"vendor_id": "${VEN_ID}",</arg>
<arg>"vendor_specific":"${VEN_SPEC}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200605 10:11:53.823" level="INFO">${JSTRING} = { "onu_id": 101, "vendor_id": "ISKT", "vendor_specific":"428DA323" }</msg>
<status status="PASS" endtime="20200605 10:11:53.824" starttime="20200605 10:11:53.822"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### active onu ${JSTRING} ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:11:53.827" starttime="20200605 10:11:53.825"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 10:11:53.842" level="INFO">${payload} = {u'onu_id': 101, u'vendor_id': u'ISKT', u'vendor_specific': u'428DA323'}</msg>
<status status="PASS" endtime="20200605 10:11:53.842" starttime="20200605 10:11:53.828"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:11:53.859" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200605 10:11:53.886" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000452 seconds.</msg>
<msg timestamp="20200605 10:11:53.887" level="INFO">${resp} = 201
date Fri, 05 Jun 2020 02:11:53 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:11:53.887" starttime="20200605 10:11:53.843"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200605 10:11:53.888" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:11:53.888" starttime="20200605 10:11:53.888"></status>
</kw>
<status status="PASS" endtime="20200605 10:11:53.888" starttime="20200605 10:11:53.887"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6s</arg>
</arguments>
<msg timestamp="20200605 10:11:59.889" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20200605 10:11:59.890" starttime="20200605 10:11:53.889"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:11:59.914" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200605 10:11:59.943" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.001121 seconds.</msg>
<msg timestamp="20200605 10:11:59.945" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:11:59 GMT
connection Keep-Alive
content-type application/json
content-length 407


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200605 10:11:59.945" starttime="20200605 10:11:59.891"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### onu res ${resp} ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:11:59.947" starttime="20200605 10:11:59.946"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200605 10:11:59.949" level="INFO">Length is 1</msg>
<msg timestamp="20200605 10:11:59.950" level="INFO">${item_count} = 1</msg>
<status status="PASS" endtime="20200605 10:11:59.950" starttime="20200605 10:11:59.948"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Onu num ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:11:59.951" starttime="20200605 10:11:59.950"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200605 10:11:59.955" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:11:59.955" starttime="20200605 10:11:59.954"></status>
</kw>
<status status="PASS" endtime="20200605 10:11:59.955" starttime="20200605 10:11:59.952"></status>
</kw>
<status status="PASS" endtime="20200605 10:11:59.956" starttime="20200605 10:11:53.819"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200605 10:12:06.958" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200605 10:12:06.958" starttime="20200605 10:11:59.956"></status>
</kw>
<kw name="Test DeActive ONU">
<tags>
<tag>Test DeActive ONU</tag>
</tags>
<doc>Test DeActive ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Deactive onu ${ONU_ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:12:06.962" starttime="20200605 10:12:06.961"></status>
</kw>
<kw type="for" name="${j} IN RANGE [ 5 ]">
<kw type="foritem" name="${j} = 0">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${j} == 4</arg>
</arguments>
<status status="PASS" endtime="20200605 10:12:06.965" starttime="20200605 10:12:06.964"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:06.987" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/101</msg>
<msg timestamp="20200605 10:12:07.518" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/101: 0.001381 seconds.</msg>
<msg timestamp="20200605 10:12:07.519" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:07 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:07.520" starttime="20200605 10:12:06.966"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${resp.status} == ${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:12:07.523" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20200605 10:12:07.525" starttime="20200605 10:12:07.521"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:07.525" starttime="20200605 10:12:06.963"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:07.525" starttime="20200605 10:12:06.962"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:12:07.528" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:12:07.529" starttime="20200605 10:12:07.526"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:07.530" starttime="20200605 10:12:06.959"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:07.530" starttime="20200605 10:11:46.816"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:07.531" starttime="20200605 10:11:05.401"></status>
</kw>
<kw name="Test Active ONU">
<tags>
<tag>Test Active ONU</tag>
</tags>
<doc>Test Active ONU function</doc>
<arguments>
<arg>256</arg>
<arg>${SPECIFIC_ID}</arg>
<arg>${SPECIFIC_NUM}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>NOTONUID_IN_RANGE</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onu_id": ${ONU_ID},</arg>
<arg>"vendor_id": "${VEN_ID}",</arg>
<arg>"vendor_specific":"${VEN_SPEC}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200605 10:12:07.537" level="INFO">${JSTRING} = { "onu_id": 256, "vendor_id": "ISKT", "vendor_specific":"428DA323" }</msg>
<status status="PASS" endtime="20200605 10:12:07.537" starttime="20200605 10:12:07.534"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### active onu ${JSTRING} ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:12:07.542" starttime="20200605 10:12:07.539"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 10:12:07.558" level="INFO">${payload} = {u'onu_id': 256, u'vendor_id': u'ISKT', u'vendor_specific': u'428DA323'}</msg>
<status status="PASS" endtime="20200605 10:12:07.558" starttime="20200605 10:12:07.544"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:07.570" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200605 10:12:07.595" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000354000000001 seconds.</msg>
<msg timestamp="20200605 10:12:07.595" level="INFO">${resp} = 500
date Fri, 05 Jun 2020 02:12:07 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:07.595" starttime="20200605 10:12:07.558"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200605 10:12:07.597" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:12:07.597" starttime="20200605 10:12:07.596"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:07.597" starttime="20200605 10:12:07.596"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6s</arg>
</arguments>
<msg timestamp="20200605 10:12:13.598" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20200605 10:12:13.599" starttime="20200605 10:12:07.597"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:13.622" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200605 10:12:13.650" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.00052 seconds.</msg>
<msg timestamp="20200605 10:12:13.651" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:13 GMT
connection Keep-Alive
content-type application/json
content-length 344


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200605 10:12:13.651" starttime="20200605 10:12:13.599"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### onu res ${resp} ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:12:13.653" starttime="20200605 10:12:13.651"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200605 10:12:13.654" level="INFO">Length is 0</msg>
<msg timestamp="20200605 10:12:13.654" level="INFO">${item_count} = 0</msg>
<status status="PASS" endtime="20200605 10:12:13.654" starttime="20200605 10:12:13.653"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Onu num ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:12:13.656" starttime="20200605 10:12:13.655"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200605 10:12:13.658" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:12:13.658" starttime="20200605 10:12:13.657"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:13.658" starttime="20200605 10:12:13.656"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:13.658" starttime="20200605 10:12:07.531"></status>
</kw>
<kw name="Test Port Present">
<tags>
<tag>Test pon_status present</tag>
</tags>
<doc>Test Pon port present function</doc>
<arguments>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:13.670" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200605 10:12:13.704" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.00062 seconds.</msg>
<msg timestamp="20200605 10:12:13.705" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:13 GMT
connection Keep-Alive
content-type application/json
content-length 2397


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:12:13.705" starttime="20200605 10:12:13.659"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:12:13.706" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:12:13.706" starttime="20200605 10:12:13.705"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:12:13.707" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200605 10:12:13.707" starttime="20200605 10:12:13.707"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:12:13.709" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:12:13.709" starttime="20200605 10:12:13.708"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:12:13.710" starttime="20200605 10:12:13.709"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:12:13.711" starttime="20200605 10:12:13.710"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${PORT_ENABLE}'</arg>
<arg>'Enabled'</arg>
</arguments>
<status status="PASS" endtime="20200605 10:12:13.712" starttime="20200605 10:12:13.712"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:13.713" starttime="20200605 10:12:13.658"></status>
</kw>
<kw name="Enable Port">
<tags>
<tag>Enable Port</tag>
</tags>
<doc>Enable port function</doc>
<arguments>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Enable Port ${ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:12:13.714" starttime="20200605 10:12:13.714"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($ADM_UP)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 10:12:13.721" level="INFO">${payload} = {u'AdministrativeState': u'Up'}</msg>
<status status="PASS" endtime="20200605 10:12:13.721" starttime="20200605 10:12:13.715"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:13.731" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200605 10:12:13.789" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000363 seconds.</msg>
<msg timestamp="20200605 10:12:13.789" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:13 GMT
connection Keep-Alive
content-type application/json
content-length 2397


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:12:13.789" starttime="20200605 10:12:13.722"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:12:13.790" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:12:13.790" starttime="20200605 10:12:13.790"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:13.797" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200605 10:12:13.828" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000375 seconds.</msg>
<msg timestamp="20200605 10:12:13.828" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:13 GMT
connection Keep-Alive
content-type application/json
content-length 2397


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:12:13.828" starttime="20200605 10:12:13.790"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:12:13.829" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:12:13.829" starttime="20200605 10:12:13.829"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['AdministrativeState']}</arg>
</arguments>
<assign>
<var>${ADM_STAT}</var>
</assign>
<msg timestamp="20200605 10:12:13.830" level="INFO">${ADM_STAT} = Up</msg>
<status status="PASS" endtime="20200605 10:12:13.830" starttime="20200605 10:12:13.830"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${ADM_STAT}'</arg>
<arg>'Up'</arg>
</arguments>
<status status="PASS" endtime="20200605 10:12:13.831" starttime="20200605 10:12:13.830"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:13.831" starttime="20200605 10:12:13.713"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200605 10:12:16.832" level="INFO">Slept 3 seconds</msg>
<status status="PASS" endtime="20200605 10:12:16.832" starttime="20200605 10:12:13.831"></status>
</kw>
<kw name="Test Active ONU">
<tags>
<tag>Test Active ONU</tag>
</tags>
<doc>Test Active ONU function</doc>
<arguments>
<arg>1</arg>
<arg>${SPECIFIC_ID}</arg>
<arg>${SPECIFIC_NUM}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onu_id": ${ONU_ID},</arg>
<arg>"vendor_id": "${VEN_ID}",</arg>
<arg>"vendor_specific":"${VEN_SPEC}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200605 10:12:16.837" level="INFO">${JSTRING} = { "onu_id": 1, "vendor_id": "ISKT", "vendor_specific":"428DA323" }</msg>
<status status="PASS" endtime="20200605 10:12:16.837" starttime="20200605 10:12:16.835"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### active onu ${JSTRING} ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:12:16.839" starttime="20200605 10:12:16.838"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 10:12:16.854" level="INFO">${payload} = {u'onu_id': 1, u'vendor_id': u'ISKT', u'vendor_specific': u'428DA323'}</msg>
<status status="PASS" endtime="20200605 10:12:16.854" starttime="20200605 10:12:16.841"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:16.869" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200605 10:12:16.896" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000401 seconds.</msg>
<msg timestamp="20200605 10:12:16.896" level="INFO">${resp} = 201
date Fri, 05 Jun 2020 02:12:16 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:16.896" starttime="20200605 10:12:16.855"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200605 10:12:16.898" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:12:16.898" starttime="20200605 10:12:16.897"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:16.898" starttime="20200605 10:12:16.897"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6s</arg>
</arguments>
<msg timestamp="20200605 10:12:22.906" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20200605 10:12:22.907" starttime="20200605 10:12:16.899"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:22.931" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200605 10:12:22.962" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.001186 seconds.</msg>
<msg timestamp="20200605 10:12:22.964" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:22 GMT
connection Keep-Alive
content-type application/json
content-length 405


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200605 10:12:22.964" starttime="20200605 10:12:22.908"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### onu res ${resp} ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:12:22.967" starttime="20200605 10:12:22.965"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200605 10:12:22.969" level="INFO">Length is 1</msg>
<msg timestamp="20200605 10:12:22.970" level="INFO">${item_count} = 1</msg>
<status status="PASS" endtime="20200605 10:12:22.970" starttime="20200605 10:12:22.968"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Onu num ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:12:22.972" starttime="20200605 10:12:22.971"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200605 10:12:22.976" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:12:22.976" starttime="20200605 10:12:22.975"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:22.977" starttime="20200605 10:12:22.973"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:22.977" starttime="20200605 10:12:16.833"></status>
</kw>
<kw name="Disable Port">
<tags>
<tag>Enable Port</tag>
</tags>
<doc>Enable port function</doc>
<arguments>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($ADM_DOWN)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 10:12:22.990" level="INFO">${payload} = {u'AdministrativeState': u'Down'}</msg>
<status status="PASS" endtime="20200605 10:12:22.990" starttime="20200605 10:12:22.979"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:23.000" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200605 10:12:23.044" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000536 seconds.</msg>
<msg timestamp="20200605 10:12:23.045" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:23 GMT
connection Keep-Alive
content-type application/json
content-length 2398


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:12:23.045" starttime="20200605 10:12:22.990"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:12:23.046" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:12:23.046" starttime="20200605 10:12:23.045"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:23.055" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200605 10:12:23.123" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.001324 seconds.</msg>
<msg timestamp="20200605 10:12:23.125" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:23 GMT
connection Keep-Alive
content-type application/json
content-length 2398


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:12:23.125" starttime="20200605 10:12:23.046"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:12:23.127" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:12:23.128" starttime="20200605 10:12:23.126"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['AdministrativeState']}</arg>
</arguments>
<assign>
<var>${ADM_STAT}</var>
</assign>
<msg timestamp="20200605 10:12:23.130" level="INFO">${ADM_STAT} = Down</msg>
<status status="PASS" endtime="20200605 10:12:23.130" starttime="20200605 10:12:23.129"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${ADM_STAT}'</arg>
<arg>'Down'</arg>
</arguments>
<status status="PASS" endtime="20200605 10:12:23.132" starttime="20200605 10:12:23.131"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:23.132" starttime="20200605 10:12:22.977"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20200605 10:12:25.134" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20200605 10:12:25.135" starttime="20200605 10:12:23.133"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:25.161" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200605 10:12:25.189" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000607 seconds.</msg>
<msg timestamp="20200605 10:12:25.190" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:25 GMT
connection Keep-Alive
content-type application/json
content-length 344


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200605 10:12:25.190" starttime="20200605 10:12:25.136"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200605 10:12:25.191" level="INFO">Length is 0</msg>
<msg timestamp="20200605 10:12:25.191" level="INFO">${item_count} = 0</msg>
<status status="PASS" endtime="20200605 10:12:25.191" starttime="20200605 10:12:25.190"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200605 10:12:25.192" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:12:25.192" starttime="20200605 10:12:25.192"></status>
</kw>
<kw name="Enable Port">
<tags>
<tag>Enable Port</tag>
</tags>
<doc>Enable port function</doc>
<arguments>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Enable Port ${ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:12:25.194" starttime="20200605 10:12:25.194"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($ADM_UP)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 10:12:25.202" level="INFO">${payload} = {u'AdministrativeState': u'Up'}</msg>
<status status="PASS" endtime="20200605 10:12:25.202" starttime="20200605 10:12:25.195"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:25.212" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200605 10:12:25.451" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.00143 seconds.</msg>
<msg timestamp="20200605 10:12:25.453" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:25 GMT
connection Keep-Alive
content-type application/json
content-length 2396


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:12:25.453" starttime="20200605 10:12:25.203"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:12:25.455" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:12:25.456" starttime="20200605 10:12:25.454"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:25.479" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200605 10:12:25.509" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000937 seconds.</msg>
<msg timestamp="20200605 10:12:25.510" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:25 GMT
connection Keep-Alive
content-type application/json
content-length 2396


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:12:25.510" starttime="20200605 10:12:25.457"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:12:25.512" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:12:25.512" starttime="20200605 10:12:25.511"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['AdministrativeState']}</arg>
</arguments>
<assign>
<var>${ADM_STAT}</var>
</assign>
<msg timestamp="20200605 10:12:25.513" level="INFO">${ADM_STAT} = Up</msg>
<status status="PASS" endtime="20200605 10:12:25.513" starttime="20200605 10:12:25.512"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${ADM_STAT}'</arg>
<arg>'Up'</arg>
</arguments>
<status status="PASS" endtime="20200605 10:12:25.514" starttime="20200605 10:12:25.514"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:25.515" starttime="20200605 10:12:25.192"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200605 10:12:35.516" level="INFO">Slept 10 seconds</msg>
<status status="PASS" endtime="20200605 10:12:35.516" starttime="20200605 10:12:25.515"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:35.524" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200605 10:12:35.549" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000474000000001 seconds.</msg>
<msg timestamp="20200605 10:12:35.550" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:35 GMT
connection Keep-Alive
content-type application/json
content-length 405


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200605 10:12:35.550" starttime="20200605 10:12:35.516"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200605 10:12:35.550" level="INFO">Length is 1</msg>
<msg timestamp="20200605 10:12:35.551" level="INFO">${item_count} = 1</msg>
<status status="PASS" endtime="20200605 10:12:35.551" starttime="20200605 10:12:35.550"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200605 10:12:35.551" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:12:35.551" starttime="20200605 10:12:35.551"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200605 10:12:40.552" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20200605 10:12:40.553" starttime="20200605 10:12:35.552"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:40.553" starttime="20200605 10:11:05.399"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200605 10:12:40.576" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200605 10:12:40.602" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000463 seconds.</msg>
<msg timestamp="20200605 10:12:40.603" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200605 10:12:40.603" starttime="20200605 10:12:40.555"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:40.603" starttime="20200605 10:12:40.554"></status>
</kw>
<doc>Test ONU Range</doc>
<tags>
<tag>Test ONU Rnage test</tag>
</tags>
<status status="PASS" endtime="20200605 10:12:40.603" critical="yes" starttime="20200605 10:11:05.356"></status>
</test>
<test id="s1-s1-t3" name="Verify Restful API for flow add">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 10:12:40.611" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 10:12:40.645" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000494999999999 seconds.</msg>
<msg timestamp="20200605 10:12:40.645" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 10:12:40.645" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 10:12:40.645" starttime="20200605 10:12:40.606"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:40.646" starttime="20200605 10:12:40.605"></status>
</kw>
<kw name="Test US DS Flow Add">
<tags>
<tag>US DS Flow Add/Remove</tag>
</tags>
<doc>Flow Add/Remove</doc>
<kw type="for" name="${flow_id} IN RANGE [ 0 | 2047 | 500 ]">
<kw type="foritem" name="${flow_id} = 0">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200605 10:12:41.647" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200605 10:12:41.647" starttime="20200605 10:12:40.646"></status>
</kw>
<kw name="Test Flow Add">
<tags>
<tag>UP/DOWN stream flow add</tag>
</tags>
<doc>Test Flow Add</doc>
<arguments>
<arg>1</arg>
<arg>${flow_id}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PON_ID} - ${1}</arg>
</arguments>
<assign>
<var>${PON_ID}</var>
</assign>
<msg timestamp="20200605 10:12:41.648" level="INFO">${PON_ID} = 0</msg>
<status status="PASS" endtime="20200605 10:12:41.648" starttime="20200605 10:12:41.648"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024,</arg>
<arg>"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":"BCMOLT_ACTION_CMD_ID_ADD_OUTER_TAG",</arg>
<arg>"ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,"EtherType":0,"IpProto":0,"SrcPort":0,</arg>
<arg>"DstPort":0},"ClassVal":[{"OVid":20,"IVid":0,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200605 10:12:41.649" level="INFO">${JSTRING} = { "onuId":1,"FlowId":0,"PortId":0,"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024, "Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":...</msg>
<status status="PASS" endtime="20200605 10:12:41.649" starttime="20200605 10:12:41.648"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 10:12:41.652" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'single_tag', u'GemportId': 1024, u'FlowId': 0, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 20, u'IPbits': 0, u'IVid': 0, u'O...</msg>
<status status="PASS" endtime="20200605 10:12:41.653" starttime="20200605 10:12:41.649"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:41.659" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200605 10:12:41.694" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000290999999999 seconds.</msg>
<msg timestamp="20200605 10:12:41.694" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:41 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:41.694" starttime="20200605 10:12:41.653"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:12:41.695" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:12:41.695" starttime="20200605 10:12:41.695"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:41.695" starttime="20200605 10:12:41.694"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"downstream","PktTagType":"double_tag",</arg>
<arg>"GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOLT_ACTION_ID_O_VID",</arg>
<arg>"ActionCmd":"BCMOLT_ACTION_CMD_ID_REMOVE_OUTER_TAG","ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,</arg>
<arg>"EtherType":0,"IpProto":0,"SrcPort":0,"DstPort":0},</arg>
<arg>"ClassVal":[{"OVid":10,"IVid":20,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0</arg>
<arg>}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200605 10:12:41.696" level="INFO">${JSTRING} = { "onuId":1,"FlowId":0,"PortId":0,"NniId":0,"FlowType":"downstream","PktTagType":"double_tag", "GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOL...</msg>
<status status="PASS" endtime="20200605 10:12:41.696" starttime="20200605 10:12:41.696"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 10:12:41.700" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'double_tag', u'GemportId': 1024, u'FlowId': 0, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 10, u'IPbits': 0, u'IVid': 20, u'...</msg>
<status status="PASS" endtime="20200605 10:12:41.700" starttime="20200605 10:12:41.696"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:41.706" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200605 10:12:41.732" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000278 seconds.</msg>
<msg timestamp="20200605 10:12:41.733" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:41 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:41.733" starttime="20200605 10:12:41.700"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:12:41.734" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:12:41.734" starttime="20200605 10:12:41.734"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:41.734" starttime="20200605 10:12:41.733"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:41.734" starttime="20200605 10:12:41.647"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200605 10:12:42.735" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200605 10:12:42.735" starttime="20200605 10:12:41.734"></status>
</kw>
<kw name="Test Flow Del">
<tags>
<tag>UP/DOWN stream flow del</tag>
</tags>
<doc>Test Flow Del</doc>
<arguments>
<arg>${flow_id}</arg>
</arguments>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_upstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:42.743" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/0_upstream</msg>
<msg timestamp="20200605 10:12:42.770" level="INFO">Response Time to /redfish/v1/Olt/Flow/0_upstream: 0.000311 seconds.</msg>
<msg timestamp="20200605 10:12:42.770" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:42 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:42.770" starttime="20200605 10:12:42.736"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:12:42.771" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:12:42.771" starttime="20200605 10:12:42.770"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_downstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:42.778" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/0_downstream</msg>
<msg timestamp="20200605 10:12:42.817" level="INFO">Response Time to /redfish/v1/Olt/Flow/0_downstream: 0.000440000000001 seconds.</msg>
<msg timestamp="20200605 10:12:42.818" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:42 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:42.818" starttime="20200605 10:12:42.771"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:12:42.819" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:12:42.819" starttime="20200605 10:12:42.818"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:42.819" starttime="20200605 10:12:42.736"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:42.819" starttime="20200605 10:12:40.646"></status>
</kw>
<kw type="foritem" name="${flow_id} = 500">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200605 10:12:43.820" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200605 10:12:43.820" starttime="20200605 10:12:42.819"></status>
</kw>
<kw name="Test Flow Add">
<tags>
<tag>UP/DOWN stream flow add</tag>
</tags>
<doc>Test Flow Add</doc>
<arguments>
<arg>1</arg>
<arg>${flow_id}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PON_ID} - ${1}</arg>
</arguments>
<assign>
<var>${PON_ID}</var>
</assign>
<msg timestamp="20200605 10:12:43.822" level="INFO">${PON_ID} = 0</msg>
<status status="PASS" endtime="20200605 10:12:43.822" starttime="20200605 10:12:43.821"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024,</arg>
<arg>"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":"BCMOLT_ACTION_CMD_ID_ADD_OUTER_TAG",</arg>
<arg>"ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,"EtherType":0,"IpProto":0,"SrcPort":0,</arg>
<arg>"DstPort":0},"ClassVal":[{"OVid":20,"IVid":0,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200605 10:12:43.822" level="INFO">${JSTRING} = { "onuId":1,"FlowId":500,"PortId":0,"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024, "Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd...</msg>
<status status="PASS" endtime="20200605 10:12:43.822" starttime="20200605 10:12:43.822"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 10:12:43.826" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'single_tag', u'GemportId': 1024, u'FlowId': 500, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 20, u'IPbits': 0, u'IVid': 0, u...</msg>
<status status="PASS" endtime="20200605 10:12:43.827" starttime="20200605 10:12:43.823"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:43.836" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200605 10:12:43.869" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000478000000001 seconds.</msg>
<msg timestamp="20200605 10:12:43.870" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:43 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:43.870" starttime="20200605 10:12:43.827"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:12:43.871" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:12:43.871" starttime="20200605 10:12:43.871"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:43.871" starttime="20200605 10:12:43.870"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"downstream","PktTagType":"double_tag",</arg>
<arg>"GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOLT_ACTION_ID_O_VID",</arg>
<arg>"ActionCmd":"BCMOLT_ACTION_CMD_ID_REMOVE_OUTER_TAG","ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,</arg>
<arg>"EtherType":0,"IpProto":0,"SrcPort":0,"DstPort":0},</arg>
<arg>"ClassVal":[{"OVid":10,"IVid":20,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0</arg>
<arg>}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200605 10:12:43.872" level="INFO">${JSTRING} = { "onuId":1,"FlowId":500,"PortId":0,"NniId":0,"FlowType":"downstream","PktTagType":"double_tag", "GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCM...</msg>
<status status="PASS" endtime="20200605 10:12:43.872" starttime="20200605 10:12:43.872"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 10:12:43.877" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'double_tag', u'GemportId': 1024, u'FlowId': 500, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 10, u'IPbits': 0, u'IVid': 20, ...</msg>
<status status="PASS" endtime="20200605 10:12:43.877" starttime="20200605 10:12:43.872"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:43.884" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200605 10:12:43.912" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000449 seconds.</msg>
<msg timestamp="20200605 10:12:43.912" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:43 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:43.912" starttime="20200605 10:12:43.877"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:12:43.914" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:12:43.915" starttime="20200605 10:12:43.914"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:43.915" starttime="20200605 10:12:43.913"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:43.915" starttime="20200605 10:12:43.820"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200605 10:12:44.931" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200605 10:12:44.931" starttime="20200605 10:12:43.915"></status>
</kw>
<kw name="Test Flow Del">
<tags>
<tag>UP/DOWN stream flow del</tag>
</tags>
<doc>Test Flow Del</doc>
<arguments>
<arg>${flow_id}</arg>
</arguments>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_upstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:44.939" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/500_upstream</msg>
<msg timestamp="20200605 10:12:44.969" level="INFO">Response Time to /redfish/v1/Olt/Flow/500_upstream: 0.000414000000001 seconds.</msg>
<msg timestamp="20200605 10:12:44.969" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:44 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:44.969" starttime="20200605 10:12:44.932"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:12:44.970" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:12:44.970" starttime="20200605 10:12:44.970"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_downstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:44.980" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/500_downstream</msg>
<msg timestamp="20200605 10:12:45.024" level="INFO">Response Time to /redfish/v1/Olt/Flow/500_downstream: 0.000539 seconds.</msg>
<msg timestamp="20200605 10:12:45.024" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:45 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:45.025" starttime="20200605 10:12:44.971"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:12:45.026" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:12:45.026" starttime="20200605 10:12:45.025"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:45.026" starttime="20200605 10:12:44.931"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:45.026" starttime="20200605 10:12:42.819"></status>
</kw>
<kw type="foritem" name="${flow_id} = 1000">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200605 10:12:46.027" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200605 10:12:46.027" starttime="20200605 10:12:45.026"></status>
</kw>
<kw name="Test Flow Add">
<tags>
<tag>UP/DOWN stream flow add</tag>
</tags>
<doc>Test Flow Add</doc>
<arguments>
<arg>1</arg>
<arg>${flow_id}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PON_ID} - ${1}</arg>
</arguments>
<assign>
<var>${PON_ID}</var>
</assign>
<msg timestamp="20200605 10:12:46.029" level="INFO">${PON_ID} = 0</msg>
<status status="PASS" endtime="20200605 10:12:46.029" starttime="20200605 10:12:46.028"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024,</arg>
<arg>"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":"BCMOLT_ACTION_CMD_ID_ADD_OUTER_TAG",</arg>
<arg>"ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,"EtherType":0,"IpProto":0,"SrcPort":0,</arg>
<arg>"DstPort":0},"ClassVal":[{"OVid":20,"IVid":0,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200605 10:12:46.030" level="INFO">${JSTRING} = { "onuId":1,"FlowId":1000,"PortId":0,"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024, "Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCm...</msg>
<status status="PASS" endtime="20200605 10:12:46.030" starttime="20200605 10:12:46.029"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 10:12:46.034" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'single_tag', u'GemportId': 1024, u'FlowId': 1000, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 20, u'IPbits': 0, u'IVid': 0, ...</msg>
<status status="PASS" endtime="20200605 10:12:46.034" starttime="20200605 10:12:46.030"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:46.043" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200605 10:12:46.077" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.00055 seconds.</msg>
<msg timestamp="20200605 10:12:46.078" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:46 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:46.078" starttime="20200605 10:12:46.034"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:12:46.079" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:12:46.079" starttime="20200605 10:12:46.079"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:46.079" starttime="20200605 10:12:46.078"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"downstream","PktTagType":"double_tag",</arg>
<arg>"GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOLT_ACTION_ID_O_VID",</arg>
<arg>"ActionCmd":"BCMOLT_ACTION_CMD_ID_REMOVE_OUTER_TAG","ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,</arg>
<arg>"EtherType":0,"IpProto":0,"SrcPort":0,"DstPort":0},</arg>
<arg>"ClassVal":[{"OVid":10,"IVid":20,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0</arg>
<arg>}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200605 10:12:46.080" level="INFO">${JSTRING} = { "onuId":1,"FlowId":1000,"PortId":0,"NniId":0,"FlowType":"downstream","PktTagType":"double_tag", "GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BC...</msg>
<status status="PASS" endtime="20200605 10:12:46.080" starttime="20200605 10:12:46.079"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 10:12:46.083" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'double_tag', u'GemportId': 1024, u'FlowId': 1000, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 10, u'IPbits': 0, u'IVid': 20,...</msg>
<status status="PASS" endtime="20200605 10:12:46.083" starttime="20200605 10:12:46.080"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:46.091" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200605 10:12:46.116" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000284000000001 seconds.</msg>
<msg timestamp="20200605 10:12:46.116" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:46 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:46.117" starttime="20200605 10:12:46.083"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:12:46.118" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:12:46.118" starttime="20200605 10:12:46.118"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:46.118" starttime="20200605 10:12:46.117"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:46.118" starttime="20200605 10:12:46.027"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200605 10:12:47.119" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200605 10:12:47.120" starttime="20200605 10:12:46.118"></status>
</kw>
<kw name="Test Flow Del">
<tags>
<tag>UP/DOWN stream flow del</tag>
</tags>
<doc>Test Flow Del</doc>
<arguments>
<arg>${flow_id}</arg>
</arguments>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_upstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:47.147" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/1000_upstream</msg>
<msg timestamp="20200605 10:12:47.177" level="INFO">Response Time to /redfish/v1/Olt/Flow/1000_upstream: 0.000707 seconds.</msg>
<msg timestamp="20200605 10:12:47.178" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:47 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:47.178" starttime="20200605 10:12:47.122"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:12:47.180" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:12:47.180" starttime="20200605 10:12:47.179"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_downstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:47.206" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/1000_downstream</msg>
<msg timestamp="20200605 10:12:47.245" level="INFO">Response Time to /redfish/v1/Olt/Flow/1000_downstream: 0.000368000000002 seconds.</msg>
<msg timestamp="20200605 10:12:47.245" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:47 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:47.246" starttime="20200605 10:12:47.181"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:12:47.246" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:12:47.246" starttime="20200605 10:12:47.246"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:47.246" starttime="20200605 10:12:47.120"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:47.246" starttime="20200605 10:12:45.026"></status>
</kw>
<kw type="foritem" name="${flow_id} = 1500">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200605 10:12:48.247" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200605 10:12:48.247" starttime="20200605 10:12:47.247"></status>
</kw>
<kw name="Test Flow Add">
<tags>
<tag>UP/DOWN stream flow add</tag>
</tags>
<doc>Test Flow Add</doc>
<arguments>
<arg>1</arg>
<arg>${flow_id}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PON_ID} - ${1}</arg>
</arguments>
<assign>
<var>${PON_ID}</var>
</assign>
<msg timestamp="20200605 10:12:48.249" level="INFO">${PON_ID} = 0</msg>
<status status="PASS" endtime="20200605 10:12:48.249" starttime="20200605 10:12:48.248"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024,</arg>
<arg>"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":"BCMOLT_ACTION_CMD_ID_ADD_OUTER_TAG",</arg>
<arg>"ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,"EtherType":0,"IpProto":0,"SrcPort":0,</arg>
<arg>"DstPort":0},"ClassVal":[{"OVid":20,"IVid":0,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200605 10:12:48.249" level="INFO">${JSTRING} = { "onuId":1,"FlowId":1500,"PortId":0,"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024, "Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCm...</msg>
<status status="PASS" endtime="20200605 10:12:48.250" starttime="20200605 10:12:48.249"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 10:12:48.253" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'single_tag', u'GemportId': 1024, u'FlowId': 1500, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 20, u'IPbits': 0, u'IVid': 0, ...</msg>
<status status="PASS" endtime="20200605 10:12:48.253" starttime="20200605 10:12:48.250"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:48.262" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200605 10:12:48.296" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000289 seconds.</msg>
<msg timestamp="20200605 10:12:48.296" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:48 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:48.296" starttime="20200605 10:12:48.253"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:12:48.298" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:12:48.298" starttime="20200605 10:12:48.297"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:48.298" starttime="20200605 10:12:48.297"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"downstream","PktTagType":"double_tag",</arg>
<arg>"GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOLT_ACTION_ID_O_VID",</arg>
<arg>"ActionCmd":"BCMOLT_ACTION_CMD_ID_REMOVE_OUTER_TAG","ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,</arg>
<arg>"EtherType":0,"IpProto":0,"SrcPort":0,"DstPort":0},</arg>
<arg>"ClassVal":[{"OVid":10,"IVid":20,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0</arg>
<arg>}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200605 10:12:48.298" level="INFO">${JSTRING} = { "onuId":1,"FlowId":1500,"PortId":0,"NniId":0,"FlowType":"downstream","PktTagType":"double_tag", "GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BC...</msg>
<status status="PASS" endtime="20200605 10:12:48.298" starttime="20200605 10:12:48.298"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 10:12:48.302" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'double_tag', u'GemportId': 1024, u'FlowId': 1500, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 10, u'IPbits': 0, u'IVid': 20,...</msg>
<status status="PASS" endtime="20200605 10:12:48.302" starttime="20200605 10:12:48.298"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:48.308" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200605 10:12:48.335" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000309 seconds.</msg>
<msg timestamp="20200605 10:12:48.336" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:48 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:48.336" starttime="20200605 10:12:48.302"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:12:48.337" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:12:48.337" starttime="20200605 10:12:48.336"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:48.337" starttime="20200605 10:12:48.336"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:48.337" starttime="20200605 10:12:48.248"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200605 10:12:49.338" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200605 10:12:49.338" starttime="20200605 10:12:48.337"></status>
</kw>
<kw name="Test Flow Del">
<tags>
<tag>UP/DOWN stream flow del</tag>
</tags>
<doc>Test Flow Del</doc>
<arguments>
<arg>${flow_id}</arg>
</arguments>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_upstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:49.345" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/1500_upstream</msg>
<msg timestamp="20200605 10:12:49.371" level="INFO">Response Time to /redfish/v1/Olt/Flow/1500_upstream: 0.000452000000001 seconds.</msg>
<msg timestamp="20200605 10:12:49.371" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:49 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:49.371" starttime="20200605 10:12:49.339"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:12:49.372" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:12:49.372" starttime="20200605 10:12:49.372"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_downstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:49.382" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/1500_downstream</msg>
<msg timestamp="20200605 10:12:49.417" level="INFO">Response Time to /redfish/v1/Olt/Flow/1500_downstream: 0.000482 seconds.</msg>
<msg timestamp="20200605 10:12:49.418" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:49 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:49.418" starttime="20200605 10:12:49.373"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:12:49.419" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:12:49.419" starttime="20200605 10:12:49.419"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:49.419" starttime="20200605 10:12:49.338"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:49.419" starttime="20200605 10:12:47.247"></status>
</kw>
<kw type="foritem" name="${flow_id} = 2000">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200605 10:12:50.420" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200605 10:12:50.420" starttime="20200605 10:12:49.420"></status>
</kw>
<kw name="Test Flow Add">
<tags>
<tag>UP/DOWN stream flow add</tag>
</tags>
<doc>Test Flow Add</doc>
<arguments>
<arg>1</arg>
<arg>${flow_id}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PON_ID} - ${1}</arg>
</arguments>
<assign>
<var>${PON_ID}</var>
</assign>
<msg timestamp="20200605 10:12:50.421" level="INFO">${PON_ID} = 0</msg>
<status status="PASS" endtime="20200605 10:12:50.421" starttime="20200605 10:12:50.421"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024,</arg>
<arg>"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":"BCMOLT_ACTION_CMD_ID_ADD_OUTER_TAG",</arg>
<arg>"ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,"EtherType":0,"IpProto":0,"SrcPort":0,</arg>
<arg>"DstPort":0},"ClassVal":[{"OVid":20,"IVid":0,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200605 10:12:50.422" level="INFO">${JSTRING} = { "onuId":1,"FlowId":2000,"PortId":0,"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024, "Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCm...</msg>
<status status="PASS" endtime="20200605 10:12:50.422" starttime="20200605 10:12:50.421"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 10:12:50.425" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'single_tag', u'GemportId': 1024, u'FlowId': 2000, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 20, u'IPbits': 0, u'IVid': 0, ...</msg>
<status status="PASS" endtime="20200605 10:12:50.425" starttime="20200605 10:12:50.422"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:50.431" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200605 10:12:50.462" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000427999999999 seconds.</msg>
<msg timestamp="20200605 10:12:50.463" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:50 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:50.463" starttime="20200605 10:12:50.425"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:12:50.465" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:12:50.465" starttime="20200605 10:12:50.464"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:50.465" starttime="20200605 10:12:50.464"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"downstream","PktTagType":"double_tag",</arg>
<arg>"GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOLT_ACTION_ID_O_VID",</arg>
<arg>"ActionCmd":"BCMOLT_ACTION_CMD_ID_REMOVE_OUTER_TAG","ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,</arg>
<arg>"EtherType":0,"IpProto":0,"SrcPort":0,"DstPort":0},</arg>
<arg>"ClassVal":[{"OVid":10,"IVid":20,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0</arg>
<arg>}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200605 10:12:50.465" level="INFO">${JSTRING} = { "onuId":1,"FlowId":2000,"PortId":0,"NniId":0,"FlowType":"downstream","PktTagType":"double_tag", "GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BC...</msg>
<status status="PASS" endtime="20200605 10:12:50.465" starttime="20200605 10:12:50.465"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 10:12:50.469" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'double_tag', u'GemportId': 1024, u'FlowId': 2000, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 10, u'IPbits': 0, u'IVid': 20,...</msg>
<status status="PASS" endtime="20200605 10:12:50.469" starttime="20200605 10:12:50.465"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:50.478" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200605 10:12:50.505" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000423 seconds.</msg>
<msg timestamp="20200605 10:12:50.505" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:50 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:50.505" starttime="20200605 10:12:50.469"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:12:50.506" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:12:50.506" starttime="20200605 10:12:50.506"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:50.506" starttime="20200605 10:12:50.505"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:50.506" starttime="20200605 10:12:50.420"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200605 10:12:51.507" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200605 10:12:51.507" starttime="20200605 10:12:50.507"></status>
</kw>
<kw name="Test Flow Del">
<tags>
<tag>UP/DOWN stream flow del</tag>
</tags>
<doc>Test Flow Del</doc>
<arguments>
<arg>${flow_id}</arg>
</arguments>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_upstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:51.513" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/2000_upstream</msg>
<msg timestamp="20200605 10:12:51.540" level="INFO">Response Time to /redfish/v1/Olt/Flow/2000_upstream: 0.000289 seconds.</msg>
<msg timestamp="20200605 10:12:51.540" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:51 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:51.540" starttime="20200605 10:12:51.508"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:12:51.541" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:12:51.541" starttime="20200605 10:12:51.541"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_downstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:51.547" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/2000_downstream</msg>
<msg timestamp="20200605 10:12:51.582" level="INFO">Response Time to /redfish/v1/Olt/Flow/2000_downstream: 0.000382 seconds.</msg>
<msg timestamp="20200605 10:12:51.583" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:51 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:51.583" starttime="20200605 10:12:51.541"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:12:51.583" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:12:51.584" starttime="20200605 10:12:51.583"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:51.584" starttime="20200605 10:12:51.507"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:51.584" starttime="20200605 10:12:49.419"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:51.584" starttime="20200605 10:12:40.646"></status>
</kw>
<kw name="Test Flow Add">
<tags>
<tag>UP/DOWN stream flow add</tag>
</tags>
<doc>Test Flow Add</doc>
<arguments>
<arg>1</arg>
<arg>2048</arg>
<arg>${PON_PORT_ID}</arg>
<arg>NOTONUID_IN_RANGE</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PON_ID} - ${1}</arg>
</arguments>
<assign>
<var>${PON_ID}</var>
</assign>
<msg timestamp="20200605 10:12:51.585" level="INFO">${PON_ID} = 0</msg>
<status status="PASS" endtime="20200605 10:12:51.585" starttime="20200605 10:12:51.584"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024,</arg>
<arg>"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":"BCMOLT_ACTION_CMD_ID_ADD_OUTER_TAG",</arg>
<arg>"ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,"EtherType":0,"IpProto":0,"SrcPort":0,</arg>
<arg>"DstPort":0},"ClassVal":[{"OVid":20,"IVid":0,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200605 10:12:51.585" level="INFO">${JSTRING} = { "onuId":1,"FlowId":2048,"PortId":0,"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024, "Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCm...</msg>
<status status="PASS" endtime="20200605 10:12:51.585" starttime="20200605 10:12:51.585"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 10:12:51.589" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'single_tag', u'GemportId': 1024, u'FlowId': 2048, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 20, u'IPbits': 0, u'IVid': 0, ...</msg>
<status status="PASS" endtime="20200605 10:12:51.589" starttime="20200605 10:12:51.586"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:51.595" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200605 10:12:51.620" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000354 seconds.</msg>
<msg timestamp="20200605 10:12:51.620" level="INFO">${resp} = 500
date Fri, 05 Jun 2020 02:12:51 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:51.620" starttime="20200605 10:12:51.589"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:12:51.621" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:12:51.621" starttime="20200605 10:12:51.621"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:51.622" starttime="20200605 10:12:51.621"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"downstream","PktTagType":"double_tag",</arg>
<arg>"GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOLT_ACTION_ID_O_VID",</arg>
<arg>"ActionCmd":"BCMOLT_ACTION_CMD_ID_REMOVE_OUTER_TAG","ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,</arg>
<arg>"EtherType":0,"IpProto":0,"SrcPort":0,"DstPort":0},</arg>
<arg>"ClassVal":[{"OVid":10,"IVid":20,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0</arg>
<arg>}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200605 10:12:51.622" level="INFO">${JSTRING} = { "onuId":1,"FlowId":2048,"PortId":0,"NniId":0,"FlowType":"downstream","PktTagType":"double_tag", "GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BC...</msg>
<status status="PASS" endtime="20200605 10:12:51.622" starttime="20200605 10:12:51.622"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 10:12:51.626" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'double_tag', u'GemportId': 1024, u'FlowId': 2048, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 10, u'IPbits': 0, u'IVid': 20,...</msg>
<status status="PASS" endtime="20200605 10:12:51.626" starttime="20200605 10:12:51.622"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:51.632" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200605 10:12:51.658" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000292 seconds.</msg>
<msg timestamp="20200605 10:12:51.658" level="INFO">${resp} = 500
date Fri, 05 Jun 2020 02:12:51 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:51.658" starttime="20200605 10:12:51.626"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:12:51.659" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:12:51.660" starttime="20200605 10:12:51.659"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:51.660" starttime="20200605 10:12:51.659"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:51.660" starttime="20200605 10:12:51.584"></status>
</kw>
<kw name="Test Flow Add">
<tags>
<tag>UP/DOWN stream flow add</tag>
</tags>
<doc>Test Flow Add</doc>
<arguments>
<arg>1</arg>
<arg>16</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PON_ID} - ${1}</arg>
</arguments>
<assign>
<var>${PON_ID}</var>
</assign>
<msg timestamp="20200605 10:12:51.661" level="INFO">${PON_ID} = 0</msg>
<status status="PASS" endtime="20200605 10:12:51.661" starttime="20200605 10:12:51.660"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024,</arg>
<arg>"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":"BCMOLT_ACTION_CMD_ID_ADD_OUTER_TAG",</arg>
<arg>"ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,"EtherType":0,"IpProto":0,"SrcPort":0,</arg>
<arg>"DstPort":0},"ClassVal":[{"OVid":20,"IVid":0,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200605 10:12:51.661" level="INFO">${JSTRING} = { "onuId":1,"FlowId":16,"PortId":0,"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024, "Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd"...</msg>
<status status="PASS" endtime="20200605 10:12:51.661" starttime="20200605 10:12:51.661"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 10:12:51.665" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'single_tag', u'GemportId': 1024, u'FlowId': 16, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 20, u'IPbits': 0, u'IVid': 0, u'...</msg>
<status status="PASS" endtime="20200605 10:12:51.665" starttime="20200605 10:12:51.661"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:51.671" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200605 10:12:51.701" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000396 seconds.</msg>
<msg timestamp="20200605 10:12:51.702" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:51 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:51.702" starttime="20200605 10:12:51.665"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:12:51.704" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:12:51.704" starttime="20200605 10:12:51.703"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:51.704" starttime="20200605 10:12:51.702"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"downstream","PktTagType":"double_tag",</arg>
<arg>"GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOLT_ACTION_ID_O_VID",</arg>
<arg>"ActionCmd":"BCMOLT_ACTION_CMD_ID_REMOVE_OUTER_TAG","ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,</arg>
<arg>"EtherType":0,"IpProto":0,"SrcPort":0,"DstPort":0},</arg>
<arg>"ClassVal":[{"OVid":10,"IVid":20,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0</arg>
<arg>}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200605 10:12:51.705" level="INFO">${JSTRING} = { "onuId":1,"FlowId":16,"PortId":0,"NniId":0,"FlowType":"downstream","PktTagType":"double_tag", "GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMO...</msg>
<status status="PASS" endtime="20200605 10:12:51.705" starttime="20200605 10:12:51.704"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 10:12:51.709" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'double_tag', u'GemportId': 1024, u'FlowId': 16, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 10, u'IPbits': 0, u'IVid': 20, u...</msg>
<status status="PASS" endtime="20200605 10:12:51.709" starttime="20200605 10:12:51.705"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:51.715" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200605 10:12:51.741" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000309999999999 seconds.</msg>
<msg timestamp="20200605 10:12:51.742" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:51 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:51.742" starttime="20200605 10:12:51.709"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:12:51.743" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:12:51.743" starttime="20200605 10:12:51.743"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:51.743" starttime="20200605 10:12:51.742"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:51.743" starttime="20200605 10:12:51.660"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:51.743" starttime="20200605 10:12:40.646"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200605 10:12:51.749" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200605 10:12:51.775" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000306999999999 seconds.</msg>
<msg timestamp="20200605 10:12:51.775" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200605 10:12:51.776" starttime="20200605 10:12:51.744"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:51.776" starttime="20200605 10:12:51.744"></status>
</kw>
<doc>Test flow add</doc>
<tags>
<tag>Test Flow add</tag>
</tags>
<status status="PASS" endtime="20200605 10:12:51.776" critical="yes" starttime="20200605 10:12:40.604"></status>
</test>
<test id="s1-s1-t4" name="Verify Restful API for omci send">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200605 10:12:51.781" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200605 10:12:51.809" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000621000000001 seconds.</msg>
<msg timestamp="20200605 10:12:51.810" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200605 10:12:51.810" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200605 10:12:51.810" starttime="20200605 10:12:51.777"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:51.810" starttime="20200605 10:12:51.777"></status>
</kw>
<kw name="Test omci send">
<tags>
<tag>omci send</tag>
</tags>
<doc>Send omci raw data</doc>
<kw name="Test Send Omci">
<tags>
<tag>Send Omci function</tag>
</tags>
<doc>Send Omci function</doc>
<arguments>
<arg>1</arg>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OMCI_RAW)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload_}</var>
</assign>
<msg timestamp="20200605 10:12:51.818" level="INFO">${payload_} = {u'raw_data': [{u'Omci': u'00B34F0A00020000000000000000000000000000000000000000000000000000000000000000000000000028'}, {u'Omci': u'00B44F0A0002000000000000000000000000000000000000000000000000000000000...</msg>
<status status="PASS" endtime="20200605 10:12:51.818" starttime="20200605 10:12:51.812"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${payload_["raw_data"]</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200605 10:12:51.819" level="INFO">Length is 22</msg>
<msg timestamp="20200605 10:12:51.819" level="INFO">${length} = 22</msg>
<status status="PASS" endtime="20200605 10:12:51.819" starttime="20200605 10:12:51.819"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>====================length ${length} ================</arg>
</arguments>
<status status="PASS" endtime="20200605 10:12:51.820" starttime="20200605 10:12:51.819"></status>
</kw>
<kw type="for" name="${i} IN RANGE [ 0 | 171 ]">
<kw type="foritem" name="${i} = 0">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:12:51.821" starttime="20200605 10:12:51.820"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:12:52.122" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:12:52.122" starttime="20200605 10:12:51.821"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:52.133" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:12:52.161" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000444999999999 seconds.</msg>
<msg timestamp="20200605 10:12:52.162" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:52 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:52.162" starttime="20200605 10:12:52.123"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:52.162" starttime="20200605 10:12:51.820"></status>
</kw>
<kw type="foritem" name="${i} = 1">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:12:52.163" starttime="20200605 10:12:52.162"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:12:52.464" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:12:52.464" starttime="20200605 10:12:52.163"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:52.479" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:12:52.508" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.001103 seconds.</msg>
<msg timestamp="20200605 10:12:52.509" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:52 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:52.509" starttime="20200605 10:12:52.464"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:52.509" starttime="20200605 10:12:52.162"></status>
</kw>
<kw type="foritem" name="${i} = 2">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:12:52.512" starttime="20200605 10:12:52.511"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:12:52.815" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:12:52.815" starttime="20200605 10:12:52.514"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:52.822" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:12:52.848" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000589 seconds.</msg>
<msg timestamp="20200605 10:12:52.849" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:52 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:52.849" starttime="20200605 10:12:52.815"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:52.849" starttime="20200605 10:12:52.510"></status>
</kw>
<kw type="foritem" name="${i} = 3">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:12:52.850" starttime="20200605 10:12:52.850"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:12:53.151" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:12:53.152" starttime="20200605 10:12:52.851"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:53.159" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:12:53.184" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000316 seconds.</msg>
<msg timestamp="20200605 10:12:53.184" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:53 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:53.184" starttime="20200605 10:12:53.152"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:53.184" starttime="20200605 10:12:52.849"></status>
</kw>
<kw type="foritem" name="${i} = 4">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:12:53.185" starttime="20200605 10:12:53.185"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:12:53.486" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:12:53.486" starttime="20200605 10:12:53.186"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:53.493" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:12:53.522" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.001053 seconds.</msg>
<msg timestamp="20200605 10:12:53.524" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:53 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:53.524" starttime="20200605 10:12:53.486"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:53.524" starttime="20200605 10:12:53.185"></status>
</kw>
<kw type="foritem" name="${i} = 5">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:12:53.527" starttime="20200605 10:12:53.525"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:12:53.832" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:12:53.832" starttime="20200605 10:12:53.530"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:53.838" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:12:53.865" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000350999999998 seconds.</msg>
<msg timestamp="20200605 10:12:53.865" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:53 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:53.866" starttime="20200605 10:12:53.832"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:53.866" starttime="20200605 10:12:53.525"></status>
</kw>
<kw type="foritem" name="${i} = 6">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:12:53.866" starttime="20200605 10:12:53.866"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:12:54.167" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:12:54.167" starttime="20200605 10:12:53.867"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:54.173" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:12:54.198" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000302 seconds.</msg>
<msg timestamp="20200605 10:12:54.199" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:54 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:54.199" starttime="20200605 10:12:54.167"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:54.199" starttime="20200605 10:12:53.866"></status>
</kw>
<kw type="foritem" name="${i} = 7">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:12:54.200" starttime="20200605 10:12:54.199"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:12:54.501" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:12:54.501" starttime="20200605 10:12:54.200"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:54.516" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:12:54.542" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000275999999999 seconds.</msg>
<msg timestamp="20200605 10:12:54.542" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:54 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:54.542" starttime="20200605 10:12:54.502"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:54.542" starttime="20200605 10:12:54.199"></status>
</kw>
<kw type="foritem" name="${i} = 8">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:12:54.543" starttime="20200605 10:12:54.543"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:12:54.844" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:12:54.844" starttime="20200605 10:12:54.543"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:54.850" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:12:54.877" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000289 seconds.</msg>
<msg timestamp="20200605 10:12:54.877" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:54 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:54.877" starttime="20200605 10:12:54.844"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:54.877" starttime="20200605 10:12:54.542"></status>
</kw>
<kw type="foritem" name="${i} = 9">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:12:54.878" starttime="20200605 10:12:54.878"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:12:55.179" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:12:55.179" starttime="20200605 10:12:54.878"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:55.186" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:12:55.210" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000309999999999 seconds.</msg>
<msg timestamp="20200605 10:12:55.211" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:55 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:55.211" starttime="20200605 10:12:55.179"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:55.211" starttime="20200605 10:12:54.877"></status>
</kw>
<kw type="foritem" name="${i} = 10">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:12:55.212" starttime="20200605 10:12:55.211"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:12:55.513" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:12:55.513" starttime="20200605 10:12:55.212"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:55.519" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:12:55.547" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000319000000001 seconds.</msg>
<msg timestamp="20200605 10:12:55.547" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:55 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:55.547" starttime="20200605 10:12:55.513"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:55.547" starttime="20200605 10:12:55.211"></status>
</kw>
<kw type="foritem" name="${i} = 11">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:12:55.548" starttime="20200605 10:12:55.548"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:12:55.849" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:12:55.850" starttime="20200605 10:12:55.549"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:55.855" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:12:55.880" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000286999999998 seconds.</msg>
<msg timestamp="20200605 10:12:55.880" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:55 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:55.880" starttime="20200605 10:12:55.850"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:55.880" starttime="20200605 10:12:55.548"></status>
</kw>
<kw type="foritem" name="${i} = 12">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:12:55.881" starttime="20200605 10:12:55.880"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:12:56.181" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:12:56.182" starttime="20200605 10:12:55.881"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:56.191" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:12:56.218" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000321 seconds.</msg>
<msg timestamp="20200605 10:12:56.218" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:56 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:56.218" starttime="20200605 10:12:56.182"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:56.218" starttime="20200605 10:12:55.880"></status>
</kw>
<kw type="foritem" name="${i} = 13">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:12:56.219" starttime="20200605 10:12:56.219"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:12:56.521" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:12:56.521" starttime="20200605 10:12:56.220"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:56.552" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:12:56.578" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000529999999999 seconds.</msg>
<msg timestamp="20200605 10:12:56.579" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:56 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:56.579" starttime="20200605 10:12:56.522"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:56.579" starttime="20200605 10:12:56.218"></status>
</kw>
<kw type="foritem" name="${i} = 14">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:12:56.581" starttime="20200605 10:12:56.580"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:12:56.888" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:12:56.888" starttime="20200605 10:12:56.582"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:56.909" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:12:56.936" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000340999999999 seconds.</msg>
<msg timestamp="20200605 10:12:56.937" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:56 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:56.937" starttime="20200605 10:12:56.889"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:56.937" starttime="20200605 10:12:56.579"></status>
</kw>
<kw type="foritem" name="${i} = 15">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:12:56.938" starttime="20200605 10:12:56.937"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:12:57.242" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:12:57.243" starttime="20200605 10:12:56.939"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:57.270" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:12:57.297" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000729 seconds.</msg>
<msg timestamp="20200605 10:12:57.298" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:57 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:57.298" starttime="20200605 10:12:57.244"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:57.298" starttime="20200605 10:12:56.937"></status>
</kw>
<kw type="foritem" name="${i} = 16">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:12:57.301" starttime="20200605 10:12:57.299"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:12:57.604" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:12:57.604" starttime="20200605 10:12:57.302"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:57.631" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:12:57.660" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000757 seconds.</msg>
<msg timestamp="20200605 10:12:57.661" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:57 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:57.661" starttime="20200605 10:12:57.605"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:57.661" starttime="20200605 10:12:57.298"></status>
</kw>
<kw type="foritem" name="${i} = 17">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:12:57.663" starttime="20200605 10:12:57.662"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:12:57.968" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:12:57.968" starttime="20200605 10:12:57.664"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:57.994" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:12:58.025" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.001015 seconds.</msg>
<msg timestamp="20200605 10:12:58.026" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:58 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:58.026" starttime="20200605 10:12:57.969"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:58.026" starttime="20200605 10:12:57.661"></status>
</kw>
<kw type="foritem" name="${i} = 18">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:12:58.032" starttime="20200605 10:12:58.029"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:12:58.339" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:12:58.339" starttime="20200605 10:12:58.033"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:58.366" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:12:58.397" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.0011 seconds.</msg>
<msg timestamp="20200605 10:12:58.398" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:58 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:58.398" starttime="20200605 10:12:58.340"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:58.398" starttime="20200605 10:12:58.027"></status>
</kw>
<kw type="foritem" name="${i} = 19">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:12:58.401" starttime="20200605 10:12:58.399"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:12:58.704" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:12:58.704" starttime="20200605 10:12:58.403"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:58.726" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:12:58.753" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000335 seconds.</msg>
<msg timestamp="20200605 10:12:58.753" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:58 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:58.753" starttime="20200605 10:12:58.705"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:58.753" starttime="20200605 10:12:58.398"></status>
</kw>
<kw type="foritem" name="${i} = 20">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:12:58.754" starttime="20200605 10:12:58.754"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:12:59.055" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:12:59.056" starttime="20200605 10:12:58.754"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:59.081" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:12:59.109" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000559000000001 seconds.</msg>
<msg timestamp="20200605 10:12:59.110" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:59 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:59.110" starttime="20200605 10:12:59.057"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:59.110" starttime="20200605 10:12:58.753"></status>
</kw>
<kw type="foritem" name="${i} = 21">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:12:59.112" starttime="20200605 10:12:59.111"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:12:59.413" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:12:59.414" starttime="20200605 10:12:59.112"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:59.439" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:12:59.468" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000806000000001 seconds.</msg>
<msg timestamp="20200605 10:12:59.469" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:59 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:59.469" starttime="20200605 10:12:59.414"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:59.469" starttime="20200605 10:12:59.110"></status>
</kw>
<kw type="foritem" name="${i} = 22">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:12:59.471" starttime="20200605 10:12:59.470"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:12:59.772" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:12:59.773" starttime="20200605 10:12:59.471"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:12:59.799" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:12:59.828" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000748 seconds.</msg>
<msg timestamp="20200605 10:12:59.829" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:12:59 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:12:59.829" starttime="20200605 10:12:59.774"></status>
</kw>
<status status="PASS" endtime="20200605 10:12:59.829" starttime="20200605 10:12:59.469"></status>
</kw>
<kw type="foritem" name="${i} = 23">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:12:59.831" starttime="20200605 10:12:59.830"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:00.133" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:00.133" starttime="20200605 10:12:59.832"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:00.144" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:00.170" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00033 seconds.</msg>
<msg timestamp="20200605 10:13:00.170" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:00 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:00.170" starttime="20200605 10:13:00.133"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:00.170" starttime="20200605 10:12:59.829"></status>
</kw>
<kw type="foritem" name="${i} = 24">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:00.171" starttime="20200605 10:13:00.171"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:00.472" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:00.472" starttime="20200605 10:13:00.171"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:00.478" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:00.500" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000398000000001 seconds.</msg>
<msg timestamp="20200605 10:13:00.501" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:00 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:00.501" starttime="20200605 10:13:00.472"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:00.501" starttime="20200605 10:13:00.170"></status>
</kw>
<kw type="foritem" name="${i} = 25">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:00.502" starttime="20200605 10:13:00.501"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:00.802" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:00.803" starttime="20200605 10:13:00.502"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:00.813" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:00.839" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000488000000001 seconds.</msg>
<msg timestamp="20200605 10:13:00.839" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:00 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:00.840" starttime="20200605 10:13:00.803"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:00.840" starttime="20200605 10:13:00.501"></status>
</kw>
<kw type="foritem" name="${i} = 26">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:00.841" starttime="20200605 10:13:00.840"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:01.142" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:01.142" starttime="20200605 10:13:00.841"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:01.151" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:01.178" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000429 seconds.</msg>
<msg timestamp="20200605 10:13:01.178" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:01 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:01.178" starttime="20200605 10:13:01.142"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:01.178" starttime="20200605 10:13:00.840"></status>
</kw>
<kw type="foritem" name="${i} = 27">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:01.180" starttime="20200605 10:13:01.179"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:01.482" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:01.483" starttime="20200605 10:13:01.180"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:01.489" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:01.516" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000265000000001 seconds.</msg>
<msg timestamp="20200605 10:13:01.516" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:01 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:01.516" starttime="20200605 10:13:01.483"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:01.516" starttime="20200605 10:13:01.178"></status>
</kw>
<kw type="foritem" name="${i} = 28">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:01.518" starttime="20200605 10:13:01.517"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:01.828" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:01.828" starttime="20200605 10:13:01.518"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:01.835" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:01.862" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00028 seconds.</msg>
<msg timestamp="20200605 10:13:01.862" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:01 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:01.862" starttime="20200605 10:13:01.828"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:01.862" starttime="20200605 10:13:01.516"></status>
</kw>
<kw type="foritem" name="${i} = 29">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:01.863" starttime="20200605 10:13:01.862"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:02.164" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:02.164" starttime="20200605 10:13:01.864"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:02.171" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:02.197" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000295000000001 seconds.</msg>
<msg timestamp="20200605 10:13:02.198" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:02 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:02.198" starttime="20200605 10:13:02.165"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:02.198" starttime="20200605 10:13:01.862"></status>
</kw>
<kw type="foritem" name="${i} = 30">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:02.198" starttime="20200605 10:13:02.198"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:02.499" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:02.499" starttime="20200605 10:13:02.199"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:02.510" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:02.537" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000493000000001 seconds.</msg>
<msg timestamp="20200605 10:13:02.538" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:02 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:02.538" starttime="20200605 10:13:02.500"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:02.538" starttime="20200605 10:13:02.198"></status>
</kw>
<kw type="foritem" name="${i} = 31">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:02.539" starttime="20200605 10:13:02.539"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:02.840" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:02.841" starttime="20200605 10:13:02.540"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:02.847" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:02.873" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000333000000001 seconds.</msg>
<msg timestamp="20200605 10:13:02.874" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:02 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:02.874" starttime="20200605 10:13:02.841"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:02.874" starttime="20200605 10:13:02.538"></status>
</kw>
<kw type="foritem" name="${i} = 32">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:02.875" starttime="20200605 10:13:02.874"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:03.177" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:03.178" starttime="20200605 10:13:02.875"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:03.185" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:03.210" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000268 seconds.</msg>
<msg timestamp="20200605 10:13:03.210" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:03 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:03.210" starttime="20200605 10:13:03.178"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:03.210" starttime="20200605 10:13:02.874"></status>
</kw>
<kw type="foritem" name="${i} = 33">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:03.212" starttime="20200605 10:13:03.211"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:03.525" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:03.525" starttime="20200605 10:13:03.212"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:03.536" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:03.563" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000979000000001 seconds.</msg>
<msg timestamp="20200605 10:13:03.564" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:03 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:03.565" starttime="20200605 10:13:03.526"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:03.565" starttime="20200605 10:13:03.211"></status>
</kw>
<kw type="foritem" name="${i} = 34">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:03.569" starttime="20200605 10:13:03.566"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:03.874" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:03.875" starttime="20200605 10:13:03.570"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:03.887" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:03.913" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000372 seconds.</msg>
<msg timestamp="20200605 10:13:03.913" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:03 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:03.913" starttime="20200605 10:13:03.875"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:03.913" starttime="20200605 10:13:03.565"></status>
</kw>
<kw type="foritem" name="${i} = 35">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:03.915" starttime="20200605 10:13:03.914"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:04.218" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:04.218" starttime="20200605 10:13:03.915"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:04.227" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:04.253" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000361 seconds.</msg>
<msg timestamp="20200605 10:13:04.253" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:04 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:04.253" starttime="20200605 10:13:04.218"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:04.253" starttime="20200605 10:13:03.913"></status>
</kw>
<kw type="foritem" name="${i} = 36">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:04.255" starttime="20200605 10:13:04.254"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:04.557" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:04.558" starttime="20200605 10:13:04.255"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:04.565" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:04.590" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000294999999999 seconds.</msg>
<msg timestamp="20200605 10:13:04.591" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:04 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:04.591" starttime="20200605 10:13:04.558"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:04.591" starttime="20200605 10:13:04.253"></status>
</kw>
<kw type="foritem" name="${i} = 37">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:04.592" starttime="20200605 10:13:04.591"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:04.893" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:04.893" starttime="20200605 10:13:04.592"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:04.899" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:04.925" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000301 seconds.</msg>
<msg timestamp="20200605 10:13:04.925" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:04 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:04.926" starttime="20200605 10:13:04.893"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:04.926" starttime="20200605 10:13:04.591"></status>
</kw>
<kw type="foritem" name="${i} = 38">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:04.926" starttime="20200605 10:13:04.926"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:05.227" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:05.228" starttime="20200605 10:13:04.927"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:05.253" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:05.280" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000554999999999 seconds.</msg>
<msg timestamp="20200605 10:13:05.280" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:05 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:05.280" starttime="20200605 10:13:05.229"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:05.281" starttime="20200605 10:13:04.926"></status>
</kw>
<kw type="foritem" name="${i} = 39">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:05.282" starttime="20200605 10:13:05.281"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:05.584" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:05.584" starttime="20200605 10:13:05.282"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:05.607" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:05.636" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000578000000001 seconds.</msg>
<msg timestamp="20200605 10:13:05.637" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:05 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:05.637" starttime="20200605 10:13:05.585"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:05.637" starttime="20200605 10:13:05.281"></status>
</kw>
<kw type="foritem" name="${i} = 40">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:05.639" starttime="20200605 10:13:05.638"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:05.941" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:05.941" starttime="20200605 10:13:05.639"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:05.965" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:06.004" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000749000000001 seconds.</msg>
<msg timestamp="20200605 10:13:06.005" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:06 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:06.005" starttime="20200605 10:13:05.942"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:06.005" starttime="20200605 10:13:05.637"></status>
</kw>
<kw type="foritem" name="${i} = 41">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:06.007" starttime="20200605 10:13:06.006"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:06.309" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:06.309" starttime="20200605 10:13:06.007"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:06.323" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:06.349" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000372 seconds.</msg>
<msg timestamp="20200605 10:13:06.349" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:06 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:06.350" starttime="20200605 10:13:06.310"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:06.350" starttime="20200605 10:13:06.005"></status>
</kw>
<kw type="foritem" name="${i} = 42">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:06.351" starttime="20200605 10:13:06.350"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:06.652" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:06.652" starttime="20200605 10:13:06.351"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:06.676" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:06.708" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.001131 seconds.</msg>
<msg timestamp="20200605 10:13:06.709" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:06 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:06.710" starttime="20200605 10:13:06.653"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:06.710" starttime="20200605 10:13:06.350"></status>
</kw>
<kw type="foritem" name="${i} = 43">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:06.713" starttime="20200605 10:13:06.711"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:07.015" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:07.015" starttime="20200605 10:13:06.713"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:07.039" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:07.063" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000392 seconds.</msg>
<msg timestamp="20200605 10:13:07.064" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:07 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:07.064" starttime="20200605 10:13:07.016"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:07.064" starttime="20200605 10:13:06.710"></status>
</kw>
<kw type="foritem" name="${i} = 44">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:07.066" starttime="20200605 10:13:07.065"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:07.368" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:07.368" starttime="20200605 10:13:07.066"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:07.394" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:07.423" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000691 seconds.</msg>
<msg timestamp="20200605 10:13:07.423" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:07 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:07.424" starttime="20200605 10:13:07.369"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:07.424" starttime="20200605 10:13:07.064"></status>
</kw>
<kw type="foritem" name="${i} = 45">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:07.427" starttime="20200605 10:13:07.425"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:07.738" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:07.739" starttime="20200605 10:13:07.428"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:07.765" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:07.791" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000535000000001 seconds.</msg>
<msg timestamp="20200605 10:13:07.792" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:07 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:07.792" starttime="20200605 10:13:07.739"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:07.792" starttime="20200605 10:13:07.424"></status>
</kw>
<kw type="foritem" name="${i} = 46">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:07.795" starttime="20200605 10:13:07.793"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:08.097" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:08.097" starttime="20200605 10:13:07.795"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:08.124" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:08.149" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000391 seconds.</msg>
<msg timestamp="20200605 10:13:08.150" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:08 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:08.150" starttime="20200605 10:13:08.098"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:08.150" starttime="20200605 10:13:07.792"></status>
</kw>
<kw type="foritem" name="${i} = 47">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:08.151" starttime="20200605 10:13:08.151"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:08.454" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:08.454" starttime="20200605 10:13:08.152"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:08.464" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:08.489" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000427 seconds.</msg>
<msg timestamp="20200605 10:13:08.489" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:08 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:08.489" starttime="20200605 10:13:08.455"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:08.489" starttime="20200605 10:13:08.150"></status>
</kw>
<kw type="foritem" name="${i} = 48">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:08.490" starttime="20200605 10:13:08.490"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:08.791" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:08.792" starttime="20200605 10:13:08.491"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:08.803" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:08.830" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00062 seconds.</msg>
<msg timestamp="20200605 10:13:08.831" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:08 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:08.831" starttime="20200605 10:13:08.792"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:08.831" starttime="20200605 10:13:08.489"></status>
</kw>
<kw type="foritem" name="${i} = 49">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:08.832" starttime="20200605 10:13:08.831"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:09.133" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:09.133" starttime="20200605 10:13:08.833"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:09.140" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:09.163" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000335000000002 seconds.</msg>
<msg timestamp="20200605 10:13:09.163" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:09 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:09.164" starttime="20200605 10:13:09.133"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:09.164" starttime="20200605 10:13:08.831"></status>
</kw>
<kw type="foritem" name="${i} = 50">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:09.165" starttime="20200605 10:13:09.164"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:09.465" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:09.466" starttime="20200605 10:13:09.165"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:09.472" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:09.498" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000475999999999 seconds.</msg>
<msg timestamp="20200605 10:13:09.499" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:09 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:09.499" starttime="20200605 10:13:09.466"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:09.499" starttime="20200605 10:13:09.164"></status>
</kw>
<kw type="foritem" name="${i} = 51">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:09.500" starttime="20200605 10:13:09.499"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:09.801" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:09.801" starttime="20200605 10:13:09.500"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:09.808" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:09.833" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000301 seconds.</msg>
<msg timestamp="20200605 10:13:09.834" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:09 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:09.834" starttime="20200605 10:13:09.801"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:09.834" starttime="20200605 10:13:09.499"></status>
</kw>
<kw type="foritem" name="${i} = 52">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:09.835" starttime="20200605 10:13:09.834"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:10.137" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:10.138" starttime="20200605 10:13:09.835"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:10.144" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:10.168" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000402999999999 seconds.</msg>
<msg timestamp="20200605 10:13:10.168" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:10 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:10.168" starttime="20200605 10:13:10.138"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:10.168" starttime="20200605 10:13:09.834"></status>
</kw>
<kw type="foritem" name="${i} = 53">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:10.169" starttime="20200605 10:13:10.169"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:10.470" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:10.470" starttime="20200605 10:13:10.169"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:10.476" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:10.503" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000303000000001 seconds.</msg>
<msg timestamp="20200605 10:13:10.503" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:10 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:10.503" starttime="20200605 10:13:10.470"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:10.503" starttime="20200605 10:13:10.168"></status>
</kw>
<kw type="foritem" name="${i} = 54">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:10.504" starttime="20200605 10:13:10.504"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:10.808" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:10.808" starttime="20200605 10:13:10.504"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:10.833" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:10.861" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000332999999999 seconds.</msg>
<msg timestamp="20200605 10:13:10.862" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:10 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:10.862" starttime="20200605 10:13:10.809"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:10.862" starttime="20200605 10:13:10.503"></status>
</kw>
<kw type="foritem" name="${i} = 55">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:10.864" starttime="20200605 10:13:10.862"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:11.175" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:11.175" starttime="20200605 10:13:10.864"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:11.183" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:11.209" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000427 seconds.</msg>
<msg timestamp="20200605 10:13:11.209" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:11 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:11.209" starttime="20200605 10:13:11.176"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:11.209" starttime="20200605 10:13:10.862"></status>
</kw>
<kw type="foritem" name="${i} = 56">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:11.211" starttime="20200605 10:13:11.210"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:11.516" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:11.516" starttime="20200605 10:13:11.211"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:11.524" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:11.549" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000310000000001 seconds.</msg>
<msg timestamp="20200605 10:13:11.550" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:11 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:11.550" starttime="20200605 10:13:11.517"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:11.550" starttime="20200605 10:13:11.210"></status>
</kw>
<kw type="foritem" name="${i} = 57">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:11.552" starttime="20200605 10:13:11.550"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:11.852" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:11.852" starttime="20200605 10:13:11.552"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:11.860" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:11.888" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000283000000001 seconds.</msg>
<msg timestamp="20200605 10:13:11.888" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:11 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:11.888" starttime="20200605 10:13:11.853"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:11.888" starttime="20200605 10:13:11.550"></status>
</kw>
<kw type="foritem" name="${i} = 58">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:11.890" starttime="20200605 10:13:11.889"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:12.190" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:12.191" starttime="20200605 10:13:11.890"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:12.197" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:12.222" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000271 seconds.</msg>
<msg timestamp="20200605 10:13:12.223" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:12 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:12.223" starttime="20200605 10:13:12.191"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:12.223" starttime="20200605 10:13:11.888"></status>
</kw>
<kw type="foritem" name="${i} = 59">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:12.224" starttime="20200605 10:13:12.223"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:12.525" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:12.525" starttime="20200605 10:13:12.224"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:12.535" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:12.560" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000357000000001 seconds.</msg>
<msg timestamp="20200605 10:13:12.560" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:12 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:12.560" starttime="20200605 10:13:12.525"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:12.561" starttime="20200605 10:13:12.223"></status>
</kw>
<kw type="foritem" name="${i} = 60">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:12.562" starttime="20200605 10:13:12.561"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:12.863" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:12.863" starttime="20200605 10:13:12.562"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:12.870" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:12.898" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000283000000001 seconds.</msg>
<msg timestamp="20200605 10:13:12.898" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:12 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:12.898" starttime="20200605 10:13:12.864"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:12.898" starttime="20200605 10:13:12.561"></status>
</kw>
<kw type="foritem" name="${i} = 61">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:12.899" starttime="20200605 10:13:12.899"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:13.201" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:13.201" starttime="20200605 10:13:12.899"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:13.207" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:13.231" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000301 seconds.</msg>
<msg timestamp="20200605 10:13:13.232" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:13 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:13.232" starttime="20200605 10:13:13.201"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:13.232" starttime="20200605 10:13:12.898"></status>
</kw>
<kw type="foritem" name="${i} = 62">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:13.233" starttime="20200605 10:13:13.232"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:13.539" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:13.539" starttime="20200605 10:13:13.233"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:13.546" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:13.571" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000272000000001 seconds.</msg>
<msg timestamp="20200605 10:13:13.571" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:13 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:13.571" starttime="20200605 10:13:13.539"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:13.572" starttime="20200605 10:13:13.232"></status>
</kw>
<kw type="foritem" name="${i} = 63">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:13.572" starttime="20200605 10:13:13.572"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:13.877" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:13.878" starttime="20200605 10:13:13.573"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:13.884" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:13.910" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000304 seconds.</msg>
<msg timestamp="20200605 10:13:13.910" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:13 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:13.910" starttime="20200605 10:13:13.878"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:13.910" starttime="20200605 10:13:13.572"></status>
</kw>
<kw type="foritem" name="${i} = 64">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:13.911" starttime="20200605 10:13:13.910"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:14.211" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:14.212" starttime="20200605 10:13:13.911"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:14.219" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:14.239" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000322000000001 seconds.</msg>
<msg timestamp="20200605 10:13:14.239" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:14 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:14.239" starttime="20200605 10:13:14.212"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:14.239" starttime="20200605 10:13:13.910"></status>
</kw>
<kw type="foritem" name="${i} = 65">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:14.240" starttime="20200605 10:13:14.239"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:14.544" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:14.545" starttime="20200605 10:13:14.241"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:14.551" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:14.576" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000275 seconds.</msg>
<msg timestamp="20200605 10:13:14.576" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:14 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:14.577" starttime="20200605 10:13:14.545"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:14.577" starttime="20200605 10:13:14.239"></status>
</kw>
<kw type="foritem" name="${i} = 66">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:14.578" starttime="20200605 10:13:14.577"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:14.879" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:14.880" starttime="20200605 10:13:14.578"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:14.886" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:14.913" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000296000000001 seconds.</msg>
<msg timestamp="20200605 10:13:14.913" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:14 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:14.913" starttime="20200605 10:13:14.880"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:14.913" starttime="20200605 10:13:14.577"></status>
</kw>
<kw type="foritem" name="${i} = 67">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:14.914" starttime="20200605 10:13:14.914"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:15.215" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:15.215" starttime="20200605 10:13:14.915"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:15.223" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:15.252" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00029 seconds.</msg>
<msg timestamp="20200605 10:13:15.252" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:15 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:15.252" starttime="20200605 10:13:15.216"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:15.252" starttime="20200605 10:13:14.913"></status>
</kw>
<kw type="foritem" name="${i} = 68">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:15.253" starttime="20200605 10:13:15.253"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:15.554" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:15.554" starttime="20200605 10:13:15.254"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:15.561" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:15.586" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000293999999998 seconds.</msg>
<msg timestamp="20200605 10:13:15.587" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:15 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:15.587" starttime="20200605 10:13:15.555"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:15.587" starttime="20200605 10:13:15.252"></status>
</kw>
<kw type="foritem" name="${i} = 69">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:15.588" starttime="20200605 10:13:15.587"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:15.897" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:15.898" starttime="20200605 10:13:15.589"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:15.904" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:15.926" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000291000000001 seconds.</msg>
<msg timestamp="20200605 10:13:15.926" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:15 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:15.926" starttime="20200605 10:13:15.898"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:15.926" starttime="20200605 10:13:15.587"></status>
</kw>
<kw type="foritem" name="${i} = 70">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:15.927" starttime="20200605 10:13:15.927"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:16.228" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:16.228" starttime="20200605 10:13:15.927"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:16.238" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:16.272" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000292 seconds.</msg>
<msg timestamp="20200605 10:13:16.272" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:16 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:16.272" starttime="20200605 10:13:16.229"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:16.272" starttime="20200605 10:13:15.926"></status>
</kw>
<kw type="foritem" name="${i} = 71">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:16.273" starttime="20200605 10:13:16.272"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:16.577" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:16.578" starttime="20200605 10:13:16.273"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:16.584" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:16.610" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000290999999999 seconds.</msg>
<msg timestamp="20200605 10:13:16.610" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:16 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:16.610" starttime="20200605 10:13:16.578"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:16.610" starttime="20200605 10:13:16.272"></status>
</kw>
<kw type="foritem" name="${i} = 72">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:16.611" starttime="20200605 10:13:16.610"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:16.917" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:16.918" starttime="20200605 10:13:16.611"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:16.924" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:16.950" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000334000000001 seconds.</msg>
<msg timestamp="20200605 10:13:16.950" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:16 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:16.951" starttime="20200605 10:13:16.918"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:16.951" starttime="20200605 10:13:16.610"></status>
</kw>
<kw type="foritem" name="${i} = 73">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:16.951" starttime="20200605 10:13:16.951"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:17.272" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:17.272" starttime="20200605 10:13:16.952"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:17.279" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:17.306" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000278000000002 seconds.</msg>
<msg timestamp="20200605 10:13:17.306" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:17 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:17.306" starttime="20200605 10:13:17.272"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:17.306" starttime="20200605 10:13:16.951"></status>
</kw>
<kw type="foritem" name="${i} = 74">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:17.307" starttime="20200605 10:13:17.307"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:17.708" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:17.709" starttime="20200605 10:13:17.307"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:17.715" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:17.740" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000294 seconds.</msg>
<msg timestamp="20200605 10:13:17.741" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:17 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:17.741" starttime="20200605 10:13:17.709"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:17.741" starttime="20200605 10:13:17.306"></status>
</kw>
<kw type="foritem" name="${i} = 75">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:17.742" starttime="20200605 10:13:17.741"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:18.043" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:18.043" starttime="20200605 10:13:17.742"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:18.049" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:18.074" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000290999999999 seconds.</msg>
<msg timestamp="20200605 10:13:18.074" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:18 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:18.074" starttime="20200605 10:13:18.043"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:18.074" starttime="20200605 10:13:17.741"></status>
</kw>
<kw type="foritem" name="${i} = 76">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:18.076" starttime="20200605 10:13:18.075"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:18.377" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:18.377" starttime="20200605 10:13:18.076"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:18.397" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:18.425" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000961 seconds.</msg>
<msg timestamp="20200605 10:13:18.426" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:18 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:18.427" starttime="20200605 10:13:18.378"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:18.427" starttime="20200605 10:13:18.074"></status>
</kw>
<kw type="foritem" name="${i} = 77">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:18.431" starttime="20200605 10:13:18.428"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:18.732" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:18.732" starttime="20200605 10:13:18.431"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:18.739" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:18.765" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000275 seconds.</msg>
<msg timestamp="20200605 10:13:18.765" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:18 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:18.765" starttime="20200605 10:13:18.733"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:18.766" starttime="20200605 10:13:18.427"></status>
</kw>
<kw type="foritem" name="${i} = 78">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:18.767" starttime="20200605 10:13:18.766"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:19.067" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:19.068" starttime="20200605 10:13:18.767"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:19.074" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:19.098" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000291000000001 seconds.</msg>
<msg timestamp="20200605 10:13:19.099" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:19 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:19.099" starttime="20200605 10:13:19.068"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:19.099" starttime="20200605 10:13:18.766"></status>
</kw>
<kw type="foritem" name="${i} = 79">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:19.100" starttime="20200605 10:13:19.099"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:19.401" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:19.401" starttime="20200605 10:13:19.101"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:19.408" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:19.433" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000302 seconds.</msg>
<msg timestamp="20200605 10:13:19.433" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:19 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:19.433" starttime="20200605 10:13:19.401"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:19.433" starttime="20200605 10:13:19.099"></status>
</kw>
<kw type="foritem" name="${i} = 80">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:19.434" starttime="20200605 10:13:19.433"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:19.735" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:19.735" starttime="20200605 10:13:19.435"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:19.742" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:19.769" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000285 seconds.</msg>
<msg timestamp="20200605 10:13:19.769" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:19 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:19.769" starttime="20200605 10:13:19.736"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:19.769" starttime="20200605 10:13:19.433"></status>
</kw>
<kw type="foritem" name="${i} = 81">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:19.770" starttime="20200605 10:13:19.769"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:20.071" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:20.071" starttime="20200605 10:13:19.770"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:20.077" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:20.105" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00043 seconds.</msg>
<msg timestamp="20200605 10:13:20.105" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:20 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:20.106" starttime="20200605 10:13:20.071"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:20.106" starttime="20200605 10:13:19.769"></status>
</kw>
<kw type="foritem" name="${i} = 82">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:20.107" starttime="20200605 10:13:20.106"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:20.408" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:20.408" starttime="20200605 10:13:20.108"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:20.418" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:20.444" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000332999999999 seconds.</msg>
<msg timestamp="20200605 10:13:20.445" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:20 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:20.445" starttime="20200605 10:13:20.409"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:20.445" starttime="20200605 10:13:20.106"></status>
</kw>
<kw type="foritem" name="${i} = 83">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:20.446" starttime="20200605 10:13:20.445"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:20.746" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:20.747" starttime="20200605 10:13:20.446"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:20.753" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:20.779" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000364000000001 seconds.</msg>
<msg timestamp="20200605 10:13:20.780" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:20 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:20.780" starttime="20200605 10:13:20.747"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:20.780" starttime="20200605 10:13:20.445"></status>
</kw>
<kw type="foritem" name="${i} = 84">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:20.782" starttime="20200605 10:13:20.781"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:21.082" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:21.083" starttime="20200605 10:13:20.782"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:21.092" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:21.117" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00042 seconds.</msg>
<msg timestamp="20200605 10:13:21.117" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:21 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:21.118" starttime="20200605 10:13:21.083"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:21.118" starttime="20200605 10:13:20.780"></status>
</kw>
<kw type="foritem" name="${i} = 85">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:21.119" starttime="20200605 10:13:21.118"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:21.420" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:21.420" starttime="20200605 10:13:21.120"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:21.431" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:21.455" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000445000000001 seconds.</msg>
<msg timestamp="20200605 10:13:21.456" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:21 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:21.456" starttime="20200605 10:13:21.421"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:21.456" starttime="20200605 10:13:21.118"></status>
</kw>
<kw type="foritem" name="${i} = 86">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:21.457" starttime="20200605 10:13:21.457"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:21.758" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:21.758" starttime="20200605 10:13:21.458"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:21.764" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:21.790" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000326000000001 seconds.</msg>
<msg timestamp="20200605 10:13:21.790" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:21 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:21.790" starttime="20200605 10:13:21.759"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:21.790" starttime="20200605 10:13:21.456"></status>
</kw>
<kw type="foritem" name="${i} = 87">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:21.791" starttime="20200605 10:13:21.791"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:22.092" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:22.092" starttime="20200605 10:13:21.792"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:22.099" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:22.125" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000286000000001 seconds.</msg>
<msg timestamp="20200605 10:13:22.126" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:22 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:22.126" starttime="20200605 10:13:22.093"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:22.126" starttime="20200605 10:13:21.791"></status>
</kw>
<kw type="foritem" name="${i} = 88">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:22.127" starttime="20200605 10:13:22.126"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:22.427" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:22.427" starttime="20200605 10:13:22.127"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:22.438" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:22.459" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000741 seconds.</msg>
<msg timestamp="20200605 10:13:22.459" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:22 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:22.459" starttime="20200605 10:13:22.428"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:22.460" starttime="20200605 10:13:22.126"></status>
</kw>
<kw type="foritem" name="${i} = 89">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:22.461" starttime="20200605 10:13:22.460"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:22.766" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:22.766" starttime="20200605 10:13:22.461"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:22.772" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:22.798" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000292999999999 seconds.</msg>
<msg timestamp="20200605 10:13:22.799" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:22 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:22.799" starttime="20200605 10:13:22.766"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:22.799" starttime="20200605 10:13:22.460"></status>
</kw>
<kw type="foritem" name="${i} = 90">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:22.801" starttime="20200605 10:13:22.799"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:23.102" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:23.103" starttime="20200605 10:13:22.801"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:23.110" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:23.137" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000323 seconds.</msg>
<msg timestamp="20200605 10:13:23.137" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:23 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:23.137" starttime="20200605 10:13:23.103"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:23.137" starttime="20200605 10:13:22.799"></status>
</kw>
<kw type="foritem" name="${i} = 91">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:23.138" starttime="20200605 10:13:23.138"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:23.440" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:23.440" starttime="20200605 10:13:23.139"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:23.446" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:23.473" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000307000000001 seconds.</msg>
<msg timestamp="20200605 10:13:23.474" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:23 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:23.474" starttime="20200605 10:13:23.440"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:23.474" starttime="20200605 10:13:23.138"></status>
</kw>
<kw type="foritem" name="${i} = 92">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:23.475" starttime="20200605 10:13:23.474"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:23.776" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:23.776" starttime="20200605 10:13:23.475"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:23.783" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:23.810" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000293000000001 seconds.</msg>
<msg timestamp="20200605 10:13:23.810" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:23 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:23.810" starttime="20200605 10:13:23.777"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:23.810" starttime="20200605 10:13:23.474"></status>
</kw>
<kw type="foritem" name="${i} = 93">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:23.811" starttime="20200605 10:13:23.811"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:24.112" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:24.112" starttime="20200605 10:13:23.812"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:24.119" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:24.144" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000299999999999 seconds.</msg>
<msg timestamp="20200605 10:13:24.144" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:24 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:24.144" starttime="20200605 10:13:24.113"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:24.145" starttime="20200605 10:13:23.810"></status>
</kw>
<kw type="foritem" name="${i} = 94">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:24.145" starttime="20200605 10:13:24.145"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:24.446" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:24.446" starttime="20200605 10:13:24.146"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:24.453" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:24.477" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000304999999999 seconds.</msg>
<msg timestamp="20200605 10:13:24.478" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:24 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:24.478" starttime="20200605 10:13:24.446"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:24.478" starttime="20200605 10:13:24.145"></status>
</kw>
<kw type="foritem" name="${i} = 95">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:24.479" starttime="20200605 10:13:24.478"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:24.779" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:24.779" starttime="20200605 10:13:24.479"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:24.786" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:24.811" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000295000000001 seconds.</msg>
<msg timestamp="20200605 10:13:24.811" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:24 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:24.811" starttime="20200605 10:13:24.780"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:24.812" starttime="20200605 10:13:24.478"></status>
</kw>
<kw type="foritem" name="${i} = 96">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:24.812" starttime="20200605 10:13:24.812"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:25.113" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:25.114" starttime="20200605 10:13:24.813"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:25.138" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:25.166" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000726999999999 seconds.</msg>
<msg timestamp="20200605 10:13:25.167" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:25 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:25.167" starttime="20200605 10:13:25.115"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:25.167" starttime="20200605 10:13:24.812"></status>
</kw>
<kw type="foritem" name="${i} = 97">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:25.169" starttime="20200605 10:13:25.168"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:25.471" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:25.471" starttime="20200605 10:13:25.170"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:25.479" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:25.507" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000359 seconds.</msg>
<msg timestamp="20200605 10:13:25.508" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:25 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:25.508" starttime="20200605 10:13:25.471"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:25.508" starttime="20200605 10:13:25.167"></status>
</kw>
<kw type="foritem" name="${i} = 98">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:25.509" starttime="20200605 10:13:25.508"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:25.810" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:25.811" starttime="20200605 10:13:25.509"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:25.834" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:25.863" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000719999999999 seconds.</msg>
<msg timestamp="20200605 10:13:25.864" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:25 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:25.864" starttime="20200605 10:13:25.811"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:25.864" starttime="20200605 10:13:25.508"></status>
</kw>
<kw type="foritem" name="${i} = 99">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:25.866" starttime="20200605 10:13:25.865"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:26.168" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:26.168" starttime="20200605 10:13:25.867"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:26.174" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:26.201" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000427999999999 seconds.</msg>
<msg timestamp="20200605 10:13:26.201" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:26 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:26.201" starttime="20200605 10:13:26.168"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:26.201" starttime="20200605 10:13:25.864"></status>
</kw>
<kw type="foritem" name="${i} = 100">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:26.203" starttime="20200605 10:13:26.202"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:26.505" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:26.505" starttime="20200605 10:13:26.203"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:26.512" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:26.549" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000485999999999 seconds.</msg>
<msg timestamp="20200605 10:13:26.549" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:26 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:26.549" starttime="20200605 10:13:26.506"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:26.549" starttime="20200605 10:13:26.201"></status>
</kw>
<kw type="foritem" name="${i} = 101">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:26.551" starttime="20200605 10:13:26.550"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:26.851" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:26.852" starttime="20200605 10:13:26.551"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:26.859" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:26.884" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000330999999999 seconds.</msg>
<msg timestamp="20200605 10:13:26.885" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:26 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:26.885" starttime="20200605 10:13:26.852"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:26.885" starttime="20200605 10:13:26.549"></status>
</kw>
<kw type="foritem" name="${i} = 102">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:26.886" starttime="20200605 10:13:26.885"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:27.187" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:27.188" starttime="20200605 10:13:26.886"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:27.197" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:27.223" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000580999999999 seconds.</msg>
<msg timestamp="20200605 10:13:27.224" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:27 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:27.224" starttime="20200605 10:13:27.188"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:27.224" starttime="20200605 10:13:26.885"></status>
</kw>
<kw type="foritem" name="${i} = 103">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:27.226" starttime="20200605 10:13:27.225"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:27.527" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:27.527" starttime="20200605 10:13:27.226"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:27.537" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:27.563" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000377 seconds.</msg>
<msg timestamp="20200605 10:13:27.563" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:27 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:27.563" starttime="20200605 10:13:27.528"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:27.563" starttime="20200605 10:13:27.224"></status>
</kw>
<kw type="foritem" name="${i} = 104">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:27.564" starttime="20200605 10:13:27.564"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:27.865" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:27.865" starttime="20200605 10:13:27.565"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:27.872" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:27.898" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000322000000001 seconds.</msg>
<msg timestamp="20200605 10:13:27.898" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:27 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:27.898" starttime="20200605 10:13:27.866"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:27.898" starttime="20200605 10:13:27.563"></status>
</kw>
<kw type="foritem" name="${i} = 105">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:27.899" starttime="20200605 10:13:27.899"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:28.201" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:28.202" starttime="20200605 10:13:27.900"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:28.225" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:28.252" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000746000000001 seconds.</msg>
<msg timestamp="20200605 10:13:28.253" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:28 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:28.253" starttime="20200605 10:13:28.202"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:28.254" starttime="20200605 10:13:27.899"></status>
</kw>
<kw type="foritem" name="${i} = 106">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:28.256" starttime="20200605 10:13:28.254"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:28.557" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:28.557" starttime="20200605 10:13:28.256"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:28.569" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:28.595" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000399 seconds.</msg>
<msg timestamp="20200605 10:13:28.595" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:28 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:28.595" starttime="20200605 10:13:28.558"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:28.595" starttime="20200605 10:13:28.254"></status>
</kw>
<kw type="foritem" name="${i} = 107">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:28.597" starttime="20200605 10:13:28.596"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:28.898" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:28.898" starttime="20200605 10:13:28.597"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:28.904" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:28.930" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000482 seconds.</msg>
<msg timestamp="20200605 10:13:28.930" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:28 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:28.930" starttime="20200605 10:13:28.898"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:28.930" starttime="20200605 10:13:28.595"></status>
</kw>
<kw type="foritem" name="${i} = 108">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:28.931" starttime="20200605 10:13:28.931"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:29.234" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:29.234" starttime="20200605 10:13:28.931"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:29.241" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:29.265" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000344 seconds.</msg>
<msg timestamp="20200605 10:13:29.266" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:29 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:29.266" starttime="20200605 10:13:29.234"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:29.266" starttime="20200605 10:13:28.930"></status>
</kw>
<kw type="foritem" name="${i} = 109">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:29.267" starttime="20200605 10:13:29.266"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:29.583" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:29.583" starttime="20200605 10:13:29.268"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:29.590" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:29.616" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000294999999999 seconds.</msg>
<msg timestamp="20200605 10:13:29.616" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:29 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:29.616" starttime="20200605 10:13:29.583"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:29.617" starttime="20200605 10:13:29.266"></status>
</kw>
<kw type="foritem" name="${i} = 110">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:29.617" starttime="20200605 10:13:29.617"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:29.919" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:29.919" starttime="20200605 10:13:29.618"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:29.925" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:29.951" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000285 seconds.</msg>
<msg timestamp="20200605 10:13:29.952" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:29 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:29.952" starttime="20200605 10:13:29.919"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:29.952" starttime="20200605 10:13:29.617"></status>
</kw>
<kw type="foritem" name="${i} = 111">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:29.953" starttime="20200605 10:13:29.952"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:30.255" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:30.255" starttime="20200605 10:13:29.953"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:30.261" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:30.289" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000266000000002 seconds.</msg>
<msg timestamp="20200605 10:13:30.289" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:30 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:30.289" starttime="20200605 10:13:30.255"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:30.289" starttime="20200605 10:13:29.952"></status>
</kw>
<kw type="foritem" name="${i} = 112">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:30.290" starttime="20200605 10:13:30.289"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:30.590" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:30.591" starttime="20200605 10:13:30.290"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:30.598" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:30.625" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000311 seconds.</msg>
<msg timestamp="20200605 10:13:30.625" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:30 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:30.625" starttime="20200605 10:13:30.591"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:30.625" starttime="20200605 10:13:30.289"></status>
</kw>
<kw type="foritem" name="${i} = 113">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:30.626" starttime="20200605 10:13:30.626"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:30.927" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:30.928" starttime="20200605 10:13:30.627"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:30.934" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:30.960" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000306 seconds.</msg>
<msg timestamp="20200605 10:13:30.960" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:30 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:30.960" starttime="20200605 10:13:30.928"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:30.960" starttime="20200605 10:13:30.625"></status>
</kw>
<kw type="foritem" name="${i} = 114">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:30.961" starttime="20200605 10:13:30.961"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:31.267" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:31.268" starttime="20200605 10:13:30.961"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:31.273" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:31.299" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000308 seconds.</msg>
<msg timestamp="20200605 10:13:31.299" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:31 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:31.299" starttime="20200605 10:13:31.268"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:31.299" starttime="20200605 10:13:30.960"></status>
</kw>
<kw type="foritem" name="${i} = 115">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:31.300" starttime="20200605 10:13:31.300"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:31.606" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:31.606" starttime="20200605 10:13:31.300"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:31.613" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:31.639" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000341000000001 seconds.</msg>
<msg timestamp="20200605 10:13:31.640" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:31 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:31.640" starttime="20200605 10:13:31.606"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:31.640" starttime="20200605 10:13:31.299"></status>
</kw>
<kw type="foritem" name="${i} = 116">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:31.641" starttime="20200605 10:13:31.640"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:31.947" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:31.947" starttime="20200605 10:13:31.641"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:31.957" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:31.983" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000449999999999 seconds.</msg>
<msg timestamp="20200605 10:13:31.983" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:31 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:31.983" starttime="20200605 10:13:31.947"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:31.983" starttime="20200605 10:13:31.640"></status>
</kw>
<kw type="foritem" name="${i} = 117">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:31.984" starttime="20200605 10:13:31.984"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:32.285" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:32.285" starttime="20200605 10:13:31.985"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:32.293" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:32.320" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00046 seconds.</msg>
<msg timestamp="20200605 10:13:32.320" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:32 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:32.320" starttime="20200605 10:13:32.286"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:32.320" starttime="20200605 10:13:31.983"></status>
</kw>
<kw type="foritem" name="${i} = 118">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:32.322" starttime="20200605 10:13:32.321"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:32.627" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:32.627" starttime="20200605 10:13:32.322"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:32.634" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:32.659" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00029 seconds.</msg>
<msg timestamp="20200605 10:13:32.660" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:32 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:32.660" starttime="20200605 10:13:32.628"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:32.660" starttime="20200605 10:13:32.321"></status>
</kw>
<kw type="foritem" name="${i} = 119">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:32.661" starttime="20200605 10:13:32.660"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:32.961" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:32.962" starttime="20200605 10:13:32.661"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:32.972" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:32.998" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000353 seconds.</msg>
<msg timestamp="20200605 10:13:32.999" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:33 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:32.999" starttime="20200605 10:13:32.962"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:32.999" starttime="20200605 10:13:32.660"></status>
</kw>
<kw type="foritem" name="${i} = 120">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:33.000" starttime="20200605 10:13:32.999"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:33.305" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:33.305" starttime="20200605 10:13:33.000"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:33.311" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:33.337" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000349 seconds.</msg>
<msg timestamp="20200605 10:13:33.338" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:33 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:33.338" starttime="20200605 10:13:33.305"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:33.338" starttime="20200605 10:13:32.999"></status>
</kw>
<kw type="foritem" name="${i} = 121">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:33.339" starttime="20200605 10:13:33.338"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:33.641" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:33.641" starttime="20200605 10:13:33.339"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:33.648" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:33.673" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000311999999999 seconds.</msg>
<msg timestamp="20200605 10:13:33.673" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:33 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:33.673" starttime="20200605 10:13:33.642"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:33.674" starttime="20200605 10:13:33.338"></status>
</kw>
<kw type="foritem" name="${i} = 122">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:33.674" starttime="20200605 10:13:33.674"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:33.998" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:33.999" starttime="20200605 10:13:33.675"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:34.005" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:34.031" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000255000000001 seconds.</msg>
<msg timestamp="20200605 10:13:34.032" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:34 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:34.032" starttime="20200605 10:13:33.999"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:34.032" starttime="20200605 10:13:33.674"></status>
</kw>
<kw type="foritem" name="${i} = 123">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:34.033" starttime="20200605 10:13:34.032"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:34.336" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:34.336" starttime="20200605 10:13:34.033"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:34.342" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:34.369" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000304 seconds.</msg>
<msg timestamp="20200605 10:13:34.369" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:34 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:34.369" starttime="20200605 10:13:34.336"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:34.369" starttime="20200605 10:13:34.032"></status>
</kw>
<kw type="foritem" name="${i} = 124">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:34.370" starttime="20200605 10:13:34.369"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:34.671" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:34.671" starttime="20200605 10:13:34.370"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:34.678" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:34.703" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000287999999999 seconds.</msg>
<msg timestamp="20200605 10:13:34.704" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:34 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:34.704" starttime="20200605 10:13:34.671"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:34.704" starttime="20200605 10:13:34.369"></status>
</kw>
<kw type="foritem" name="${i} = 125">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:34.705" starttime="20200605 10:13:34.704"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:35.007" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:35.007" starttime="20200605 10:13:34.705"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:35.014" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:35.039" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000302 seconds.</msg>
<msg timestamp="20200605 10:13:35.039" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:35 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:35.040" starttime="20200605 10:13:35.008"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:35.040" starttime="20200605 10:13:34.704"></status>
</kw>
<kw type="foritem" name="${i} = 126">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:35.041" starttime="20200605 10:13:35.040"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:35.346" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:35.346" starttime="20200605 10:13:35.041"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:35.353" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:35.376" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000323 seconds.</msg>
<msg timestamp="20200605 10:13:35.377" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:35 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:35.377" starttime="20200605 10:13:35.346"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:35.377" starttime="20200605 10:13:35.040"></status>
</kw>
<kw type="foritem" name="${i} = 127">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:35.378" starttime="20200605 10:13:35.377"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:35.698" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:35.698" starttime="20200605 10:13:35.378"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:35.705" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:35.730" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000271999999999 seconds.</msg>
<msg timestamp="20200605 10:13:35.731" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:35 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:35.731" starttime="20200605 10:13:35.699"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:35.731" starttime="20200605 10:13:35.377"></status>
</kw>
<kw type="foritem" name="${i} = 128">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:35.732" starttime="20200605 10:13:35.731"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:36.032" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:36.033" starttime="20200605 10:13:35.732"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:36.039" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:36.065" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000328 seconds.</msg>
<msg timestamp="20200605 10:13:36.066" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:36 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:36.066" starttime="20200605 10:13:36.033"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:36.066" starttime="20200605 10:13:35.731"></status>
</kw>
<kw type="foritem" name="${i} = 129">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:36.067" starttime="20200605 10:13:36.066"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:36.368" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:36.368" starttime="20200605 10:13:36.068"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:36.375" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:36.401" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000299 seconds.</msg>
<msg timestamp="20200605 10:13:36.401" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:36 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:36.401" starttime="20200605 10:13:36.369"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:36.401" starttime="20200605 10:13:36.066"></status>
</kw>
<kw type="foritem" name="${i} = 130">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:36.402" starttime="20200605 10:13:36.402"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:36.703" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:36.703" starttime="20200605 10:13:36.403"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:36.712" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:36.740" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000290000000001 seconds.</msg>
<msg timestamp="20200605 10:13:36.740" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:36 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:36.740" starttime="20200605 10:13:36.703"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:36.740" starttime="20200605 10:13:36.401"></status>
</kw>
<kw type="foritem" name="${i} = 131">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:36.742" starttime="20200605 10:13:36.741"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:37.042" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:37.043" starttime="20200605 10:13:36.742"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:37.049" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:37.073" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000281999999999 seconds.</msg>
<msg timestamp="20200605 10:13:37.074" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:37 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:37.074" starttime="20200605 10:13:37.043"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:37.074" starttime="20200605 10:13:36.740"></status>
</kw>
<kw type="foritem" name="${i} = 132">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:37.075" starttime="20200605 10:13:37.074"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:37.376" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:37.376" starttime="20200605 10:13:37.076"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:37.383" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:37.408" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000285999999999 seconds.</msg>
<msg timestamp="20200605 10:13:37.408" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:37 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:37.408" starttime="20200605 10:13:37.377"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:37.408" starttime="20200605 10:13:37.074"></status>
</kw>
<kw type="foritem" name="${i} = 133">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:37.410" starttime="20200605 10:13:37.409"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:37.710" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:37.711" starttime="20200605 10:13:37.410"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:37.718" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:37.742" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000291000000001 seconds.</msg>
<msg timestamp="20200605 10:13:37.743" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:37 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:37.743" starttime="20200605 10:13:37.711"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:37.743" starttime="20200605 10:13:37.408"></status>
</kw>
<kw type="foritem" name="${i} = 134">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:37.744" starttime="20200605 10:13:37.743"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:38.047" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:38.048" starttime="20200605 10:13:37.745"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:38.068" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:38.096" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000923 seconds.</msg>
<msg timestamp="20200605 10:13:38.098" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:38 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:38.098" starttime="20200605 10:13:38.048"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:38.098" starttime="20200605 10:13:37.743"></status>
</kw>
<kw type="foritem" name="${i} = 135">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:38.101" starttime="20200605 10:13:38.099"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:38.407" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:38.407" starttime="20200605 10:13:38.102"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:38.413" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:38.438" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000283 seconds.</msg>
<msg timestamp="20200605 10:13:38.438" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:38 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:38.438" starttime="20200605 10:13:38.408"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:38.438" starttime="20200605 10:13:38.098"></status>
</kw>
<kw type="foritem" name="${i} = 136">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:38.439" starttime="20200605 10:13:38.438"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:38.747" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:38.748" starttime="20200605 10:13:38.439"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:38.754" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:38.781" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000299 seconds.</msg>
<msg timestamp="20200605 10:13:38.781" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:38 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:38.781" starttime="20200605 10:13:38.748"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:38.781" starttime="20200605 10:13:38.438"></status>
</kw>
<kw type="foritem" name="${i} = 137">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:38.782" starttime="20200605 10:13:38.782"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:39.083" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:39.084" starttime="20200605 10:13:38.783"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:39.090" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:39.117" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000319000000001 seconds.</msg>
<msg timestamp="20200605 10:13:39.118" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:39 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:39.118" starttime="20200605 10:13:39.084"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:39.118" starttime="20200605 10:13:38.782"></status>
</kw>
<kw type="foritem" name="${i} = 138">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:39.119" starttime="20200605 10:13:39.118"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:39.420" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:39.420" starttime="20200605 10:13:39.119"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:39.427" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:39.453" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000285 seconds.</msg>
<msg timestamp="20200605 10:13:39.454" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:39 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:39.454" starttime="20200605 10:13:39.420"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:39.454" starttime="20200605 10:13:39.118"></status>
</kw>
<kw type="foritem" name="${i} = 139">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:39.455" starttime="20200605 10:13:39.454"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:39.756" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:39.756" starttime="20200605 10:13:39.455"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:39.762" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:39.790" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000286000000001 seconds.</msg>
<msg timestamp="20200605 10:13:39.791" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:39 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:39.791" starttime="20200605 10:13:39.756"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:39.791" starttime="20200605 10:13:39.454"></status>
</kw>
<kw type="foritem" name="${i} = 140">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:39.792" starttime="20200605 10:13:39.791"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:40.092" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:40.092" starttime="20200605 10:13:39.792"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:40.099" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:40.126" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000414000000001 seconds.</msg>
<msg timestamp="20200605 10:13:40.127" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:40 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:40.127" starttime="20200605 10:13:40.093"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:40.127" starttime="20200605 10:13:39.791"></status>
</kw>
<kw type="foritem" name="${i} = 141">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:40.128" starttime="20200605 10:13:40.128"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:40.436" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:40.436" starttime="20200605 10:13:40.129"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:40.443" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:40.481" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000501 seconds.</msg>
<msg timestamp="20200605 10:13:40.481" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:40 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:40.481" starttime="20200605 10:13:40.437"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:40.481" starttime="20200605 10:13:40.127"></status>
</kw>
<kw type="foritem" name="${i} = 142">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:40.482" starttime="20200605 10:13:40.482"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:40.783" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:40.783" starttime="20200605 10:13:40.483"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:40.791" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:40.817" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000351 seconds.</msg>
<msg timestamp="20200605 10:13:40.818" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:40 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:40.818" starttime="20200605 10:13:40.784"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:40.818" starttime="20200605 10:13:40.481"></status>
</kw>
<kw type="foritem" name="${i} = 143">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:40.819" starttime="20200605 10:13:40.818"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:41.127" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:41.127" starttime="20200605 10:13:40.819"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:41.134" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:41.159" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000264 seconds.</msg>
<msg timestamp="20200605 10:13:41.160" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:41 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:41.160" starttime="20200605 10:13:41.128"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:41.160" starttime="20200605 10:13:40.818"></status>
</kw>
<kw type="foritem" name="${i} = 144">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:41.160" starttime="20200605 10:13:41.160"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:41.467" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:41.467" starttime="20200605 10:13:41.161"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:41.474" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:41.500" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000400000000001 seconds.</msg>
<msg timestamp="20200605 10:13:41.500" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:41 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:41.500" starttime="20200605 10:13:41.468"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:41.500" starttime="20200605 10:13:41.160"></status>
</kw>
<kw type="foritem" name="${i} = 145">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:41.501" starttime="20200605 10:13:41.501"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:41.807" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:41.807" starttime="20200605 10:13:41.502"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:41.814" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:41.840" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000299999999999 seconds.</msg>
<msg timestamp="20200605 10:13:41.840" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:41 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:41.840" starttime="20200605 10:13:41.808"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:41.840" starttime="20200605 10:13:41.501"></status>
</kw>
<kw type="foritem" name="${i} = 146">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:41.841" starttime="20200605 10:13:41.841"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:42.142" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:42.142" starttime="20200605 10:13:41.841"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:42.149" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:42.173" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000455000000001 seconds.</msg>
<msg timestamp="20200605 10:13:42.174" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:42 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:42.174" starttime="20200605 10:13:42.142"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:42.174" starttime="20200605 10:13:41.840"></status>
</kw>
<kw type="foritem" name="${i} = 147">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:42.175" starttime="20200605 10:13:42.174"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:42.493" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:42.493" starttime="20200605 10:13:42.175"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:42.499" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:42.526" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000425999999999 seconds.</msg>
<msg timestamp="20200605 10:13:42.527" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:42 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:42.527" starttime="20200605 10:13:42.493"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:42.527" starttime="20200605 10:13:42.174"></status>
</kw>
<kw type="foritem" name="${i} = 148">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:42.529" starttime="20200605 10:13:42.528"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:42.837" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:42.837" starttime="20200605 10:13:42.530"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:42.843" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:42.869" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000254 seconds.</msg>
<msg timestamp="20200605 10:13:42.869" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:42 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:42.869" starttime="20200605 10:13:42.838"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:42.869" starttime="20200605 10:13:42.527"></status>
</kw>
<kw type="foritem" name="${i} = 149">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:42.870" starttime="20200605 10:13:42.870"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:43.175" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:43.175" starttime="20200605 10:13:42.870"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:43.185" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:43.211" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000430000000001 seconds.</msg>
<msg timestamp="20200605 10:13:43.211" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:43 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:43.211" starttime="20200605 10:13:43.176"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:43.211" starttime="20200605 10:13:42.870"></status>
</kw>
<kw type="foritem" name="${i} = 150">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:43.212" starttime="20200605 10:13:43.212"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:43.514" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:43.514" starttime="20200605 10:13:43.213"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:43.521" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:43.545" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000325999999999 seconds.</msg>
<msg timestamp="20200605 10:13:43.545" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:43 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:43.545" starttime="20200605 10:13:43.514"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:43.545" starttime="20200605 10:13:43.211"></status>
</kw>
<kw type="foritem" name="${i} = 151">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:43.546" starttime="20200605 10:13:43.546"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:43.911" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:43.911" starttime="20200605 10:13:43.547"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:43.918" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:43.944" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000283000000001 seconds.</msg>
<msg timestamp="20200605 10:13:43.944" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:43 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:43.944" starttime="20200605 10:13:43.911"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:43.944" starttime="20200605 10:13:43.546"></status>
</kw>
<kw type="foritem" name="${i} = 152">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:43.945" starttime="20200605 10:13:43.945"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:44.251" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:44.251" starttime="20200605 10:13:43.945"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:44.257" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:44.282" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000306999999999 seconds.</msg>
<msg timestamp="20200605 10:13:44.282" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:44 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:44.282" starttime="20200605 10:13:44.251"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:44.282" starttime="20200605 10:13:43.944"></status>
</kw>
<kw type="foritem" name="${i} = 153">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:44.283" starttime="20200605 10:13:44.283"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:44.587" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:44.587" starttime="20200605 10:13:44.283"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:44.594" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:44.621" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000332999999999 seconds.</msg>
<msg timestamp="20200605 10:13:44.621" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:44 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:44.621" starttime="20200605 10:13:44.588"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:44.621" starttime="20200605 10:13:44.282"></status>
</kw>
<kw type="foritem" name="${i} = 154">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:44.622" starttime="20200605 10:13:44.622"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:44.950" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:44.950" starttime="20200605 10:13:44.622"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:44.956" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:44.982" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000273 seconds.</msg>
<msg timestamp="20200605 10:13:44.982" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:44 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:44.982" starttime="20200605 10:13:44.950"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:44.982" starttime="20200605 10:13:44.621"></status>
</kw>
<kw type="foritem" name="${i} = 155">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:44.983" starttime="20200605 10:13:44.983"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:45.284" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:45.284" starttime="20200605 10:13:44.983"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:45.291" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:45.314" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000261 seconds.</msg>
<msg timestamp="20200605 10:13:45.315" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:45 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:45.315" starttime="20200605 10:13:45.285"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:45.315" starttime="20200605 10:13:44.982"></status>
</kw>
<kw type="foritem" name="${i} = 156">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:45.315" starttime="20200605 10:13:45.315"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:45.617" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:45.617" starttime="20200605 10:13:45.316"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:45.624" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:45.648" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000379000000001 seconds.</msg>
<msg timestamp="20200605 10:13:45.648" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:45 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:45.648" starttime="20200605 10:13:45.618"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:45.648" starttime="20200605 10:13:45.315"></status>
</kw>
<kw type="foritem" name="${i} = 157">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:45.649" starttime="20200605 10:13:45.649"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:45.957" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:45.957" starttime="20200605 10:13:45.649"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:45.964" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:45.989" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000283 seconds.</msg>
<msg timestamp="20200605 10:13:45.990" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:45 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:45.990" starttime="20200605 10:13:45.958"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:45.990" starttime="20200605 10:13:45.648"></status>
</kw>
<kw type="foritem" name="${i} = 158">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:45.991" starttime="20200605 10:13:45.990"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:46.292" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:46.293" starttime="20200605 10:13:45.991"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:46.299" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:46.323" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000313 seconds.</msg>
<msg timestamp="20200605 10:13:46.324" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:46 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:46.324" starttime="20200605 10:13:46.293"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:46.324" starttime="20200605 10:13:45.990"></status>
</kw>
<kw type="foritem" name="${i} = 159">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:46.325" starttime="20200605 10:13:46.324"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:46.627" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:46.627" starttime="20200605 10:13:46.325"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:46.634" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:46.662" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000259999999999 seconds.</msg>
<msg timestamp="20200605 10:13:46.663" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:46 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:46.663" starttime="20200605 10:13:46.628"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:46.663" starttime="20200605 10:13:46.324"></status>
</kw>
<kw type="foritem" name="${i} = 160">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:46.663" starttime="20200605 10:13:46.663"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:46.982" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:46.982" starttime="20200605 10:13:46.664"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:46.988" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:47.016" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000448 seconds.</msg>
<msg timestamp="20200605 10:13:47.016" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:47 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:47.016" starttime="20200605 10:13:46.982"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:47.016" starttime="20200605 10:13:46.663"></status>
</kw>
<kw type="foritem" name="${i} = 161">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:47.018" starttime="20200605 10:13:47.017"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:47.320" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:47.320" starttime="20200605 10:13:47.018"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:47.330" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:47.354" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000440999999999 seconds.</msg>
<msg timestamp="20200605 10:13:47.355" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:47 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:47.355" starttime="20200605 10:13:47.320"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:47.355" starttime="20200605 10:13:47.017"></status>
</kw>
<kw type="foritem" name="${i} = 162">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:47.356" starttime="20200605 10:13:47.356"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:47.657" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:47.658" starttime="20200605 10:13:47.357"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:47.667" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:47.693" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000437 seconds.</msg>
<msg timestamp="20200605 10:13:47.694" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:47 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:47.694" starttime="20200605 10:13:47.658"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:47.694" starttime="20200605 10:13:47.355"></status>
</kw>
<kw type="foritem" name="${i} = 163">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:47.695" starttime="20200605 10:13:47.695"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:47.996" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:47.996" starttime="20200605 10:13:47.696"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:48.003" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:48.031" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000297999999999 seconds.</msg>
<msg timestamp="20200605 10:13:48.032" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:48 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:48.032" starttime="20200605 10:13:47.997"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:48.032" starttime="20200605 10:13:47.694"></status>
</kw>
<kw type="foritem" name="${i} = 164">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:48.033" starttime="20200605 10:13:48.032"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:48.333" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:48.334" starttime="20200605 10:13:48.033"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:48.340" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:48.366" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000311000000002 seconds.</msg>
<msg timestamp="20200605 10:13:48.366" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:48 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:48.366" starttime="20200605 10:13:48.334"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:48.366" starttime="20200605 10:13:48.032"></status>
</kw>
<kw type="foritem" name="${i} = 165">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:48.367" starttime="20200605 10:13:48.367"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:48.668" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:48.669" starttime="20200605 10:13:48.368"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:48.675" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:48.703" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000310000000001 seconds.</msg>
<msg timestamp="20200605 10:13:48.703" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:48 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:48.703" starttime="20200605 10:13:48.669"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:48.703" starttime="20200605 10:13:48.366"></status>
</kw>
<kw type="foritem" name="${i} = 166">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:48.704" starttime="20200605 10:13:48.704"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:49.008" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:49.009" starttime="20200605 10:13:48.704"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:49.015" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:49.043" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000275999999999 seconds.</msg>
<msg timestamp="20200605 10:13:49.043" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:49 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:49.043" starttime="20200605 10:13:49.009"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:49.043" starttime="20200605 10:13:48.703"></status>
</kw>
<kw type="foritem" name="${i} = 167">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:49.044" starttime="20200605 10:13:49.043"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:49.345" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:49.345" starttime="20200605 10:13:49.044"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:49.352" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:49.378" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000328000000001 seconds.</msg>
<msg timestamp="20200605 10:13:49.378" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:49 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:49.378" starttime="20200605 10:13:49.345"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:49.378" starttime="20200605 10:13:49.043"></status>
</kw>
<kw type="foritem" name="${i} = 168">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:49.379" starttime="20200605 10:13:49.379"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:49.680" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:49.680" starttime="20200605 10:13:49.379"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:49.686" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:49.713" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000458 seconds.</msg>
<msg timestamp="20200605 10:13:49.714" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:49 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:49.714" starttime="20200605 10:13:49.680"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:49.714" starttime="20200605 10:13:49.378"></status>
</kw>
<kw type="foritem" name="${i} = 169">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:49.715" starttime="20200605 10:13:49.714"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:50.016" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:50.016" starttime="20200605 10:13:49.715"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:50.022" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:50.047" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000309 seconds.</msg>
<msg timestamp="20200605 10:13:50.048" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:50 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:50.048" starttime="20200605 10:13:50.016"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:50.048" starttime="20200605 10:13:49.714"></status>
</kw>
<kw type="foritem" name="${i} = 170">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.049" starttime="20200605 10:13:50.048"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200605 10:13:50.351" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200605 10:13:50.351" starttime="20200605 10:13:50.049"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:50.358" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200605 10:13:50.382" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000274000000001 seconds.</msg>
<msg timestamp="20200605 10:13:50.382" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:50 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200605 10:13:50.382" starttime="20200605 10:13:50.351"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:50.383" starttime="20200605 10:13:50.048"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:50.383" starttime="20200605 10:12:51.820"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:50.383" starttime="20200605 10:12:51.811"></status>
</kw>
<kw name="Enable All Tx Port">
<tags>
<tag>Enable Pon Port Tx</tag>
</tags>
<doc>Enable all port function</doc>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:50.389" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/</msg>
<msg timestamp="20200605 10:13:50.421" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/: 0.000541999999999 seconds.</msg>
<msg timestamp="20200605 10:13:50.421" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:50 GMT
connection Keep-Alive
content-type application/json
content-length 4491


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPortCollection.EthernetSwitchPor...</msg>
<status status="PASS" endtime="20200605 10:13:50.421" starttime="20200605 10:13:50.383"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200605 10:13:50.422" level="INFO">Length is 74</msg>
<msg timestamp="20200605 10:13:50.422" level="INFO">${item_count} = 74</msg>
<status status="PASS" endtime="20200605 10:13:50.422" starttime="20200605 10:13:50.421"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Enable All Pon Port Tx ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.423" starttime="20200605 10:13:50.422"></status>
</kw>
<kw type="for" name="${ID} IN RANGE [ 1 | ${item_count} ]">
<kw type="foritem" name="${ID} = 1">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:50.430" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200605 10:13:50.464" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000502000000001 seconds.</msg>
<msg timestamp="20200605 10:13:50.464" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:50 GMT
connection Keep-Alive
content-type application/json
content-length 2396


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:50.464" starttime="20200605 10:13:50.423"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:50.465" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:50.465" starttime="20200605 10:13:50.464"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:50.465" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200605 10:13:50.465" starttime="20200605 10:13:50.465"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:50.466" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:50.466" starttime="20200605 10:13:50.466"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.466" starttime="20200605 10:13:50.466"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.467" starttime="20200605 10:13:50.467"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.468" starttime="20200605 10:13:50.467"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
</arguments>
<kw name="Test Tx Op Up">
<tags>
<tag>Test tx_disable</tag>
</tags>
<doc>Test SFP port tx disable function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OP_UP)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 10:13:50.472" level="INFO">${payload} = {u'OperationalState': u'Up'}</msg>
<status status="PASS" endtime="20200605 10:13:50.472" starttime="20200605 10:13:50.469"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<msg timestamp="20200605 10:13:50.480" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200605 10:13:50.518" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000411999999999 seconds.</msg>
<status status="PASS" endtime="20200605 10:13:50.518" starttime="20200605 10:13:50.473"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:50.518" starttime="20200605 10:13:50.469"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:50.518" starttime="20200605 10:13:50.469"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:50.518" starttime="20200605 10:13:50.468"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:50.518" starttime="20200605 10:13:50.423"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:50.518" starttime="20200605 10:13:50.423"></status>
</kw>
<kw type="foritem" name="${ID} = 2">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:50.525" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/2</msg>
<msg timestamp="20200605 10:13:50.555" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/2: 0.000380000000002 seconds.</msg>
<msg timestamp="20200605 10:13:50.555" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:50 GMT
connection Keep-Alive
content-type application/json
content-length 2406


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:50.555" starttime="20200605 10:13:50.519"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:50.556" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:50.556" starttime="20200605 10:13:50.556"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:50.557" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200605 10:13:50.557" starttime="20200605 10:13:50.557"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:50.558" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:50.558" starttime="20200605 10:13:50.557"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.558" starttime="20200605 10:13:50.558"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.559" starttime="20200605 10:13:50.558"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.559" starttime="20200605 10:13:50.559"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
</arguments>
<kw name="Test Tx Op Up">
<tags>
<tag>Test tx_disable</tag>
</tags>
<doc>Test SFP port tx disable function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OP_UP)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200605 10:13:50.564" level="INFO">${payload} = {u'OperationalState': u'Up'}</msg>
<status status="PASS" endtime="20200605 10:13:50.564" starttime="20200605 10:13:50.561"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<msg timestamp="20200605 10:13:50.571" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/2</msg>
<msg timestamp="20200605 10:13:50.609" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/2: 0.000416 seconds.</msg>
<status status="PASS" endtime="20200605 10:13:50.610" starttime="20200605 10:13:50.564"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:50.610" starttime="20200605 10:13:50.561"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:50.610" starttime="20200605 10:13:50.560"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:50.610" starttime="20200605 10:13:50.560"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:50.610" starttime="20200605 10:13:50.519"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:50.610" starttime="20200605 10:13:50.519"></status>
</kw>
<kw type="foritem" name="${ID} = 3">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:50.617" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/3</msg>
<msg timestamp="20200605 10:13:50.641" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/3: 0.00028 seconds.</msg>
<msg timestamp="20200605 10:13:50.642" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:50 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:50.642" starttime="20200605 10:13:50.611"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:50.642" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:50.642" starttime="20200605 10:13:50.642"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:50.643" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:50.643" starttime="20200605 10:13:50.643"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:50.644" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:50.644" starttime="20200605 10:13:50.643"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.645" starttime="20200605 10:13:50.644"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.645" starttime="20200605 10:13:50.645"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.646" starttime="20200605 10:13:50.645"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.647" starttime="20200605 10:13:50.647"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:50.647" starttime="20200605 10:13:50.646"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:50.647" starttime="20200605 10:13:50.610"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:50.647" starttime="20200605 10:13:50.610"></status>
</kw>
<kw type="foritem" name="${ID} = 4">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:50.653" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/4</msg>
<msg timestamp="20200605 10:13:50.680" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/4: 0.000298000000001 seconds.</msg>
<msg timestamp="20200605 10:13:50.680" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:50 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:50.680" starttime="20200605 10:13:50.648"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:50.681" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:50.681" starttime="20200605 10:13:50.681"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:50.682" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:50.682" starttime="20200605 10:13:50.681"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:50.682" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:50.682" starttime="20200605 10:13:50.682"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.683" starttime="20200605 10:13:50.683"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.684" starttime="20200605 10:13:50.683"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.684" starttime="20200605 10:13:50.684"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.685" starttime="20200605 10:13:50.685"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:50.685" starttime="20200605 10:13:50.685"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:50.686" starttime="20200605 10:13:50.647"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:50.686" starttime="20200605 10:13:50.647"></status>
</kw>
<kw type="foritem" name="${ID} = 5">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:50.692" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/5</msg>
<msg timestamp="20200605 10:13:50.716" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/5: 0.000306 seconds.</msg>
<msg timestamp="20200605 10:13:50.717" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:50 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:50.717" starttime="20200605 10:13:50.686"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:50.717" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:50.717" starttime="20200605 10:13:50.717"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:50.718" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:50.718" starttime="20200605 10:13:50.718"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:50.719" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:50.719" starttime="20200605 10:13:50.718"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.719" starttime="20200605 10:13:50.719"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.720" starttime="20200605 10:13:50.719"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.721" starttime="20200605 10:13:50.720"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.721" starttime="20200605 10:13:50.721"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:50.721" starttime="20200605 10:13:50.721"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:50.722" starttime="20200605 10:13:50.686"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:50.722" starttime="20200605 10:13:50.686"></status>
</kw>
<kw type="foritem" name="${ID} = 6">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:50.728" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/6</msg>
<msg timestamp="20200605 10:13:50.753" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/6: 0.000414000000001 seconds.</msg>
<msg timestamp="20200605 10:13:50.754" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:50 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:50.754" starttime="20200605 10:13:50.722"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:50.754" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:50.754" starttime="20200605 10:13:50.754"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:50.755" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:50.755" starttime="20200605 10:13:50.755"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:50.756" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:50.756" starttime="20200605 10:13:50.755"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.756" starttime="20200605 10:13:50.756"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.757" starttime="20200605 10:13:50.756"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.757" starttime="20200605 10:13:50.757"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.758" starttime="20200605 10:13:50.758"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:50.759" starttime="20200605 10:13:50.758"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:50.759" starttime="20200605 10:13:50.722"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:50.759" starttime="20200605 10:13:50.722"></status>
</kw>
<kw type="foritem" name="${ID} = 7">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:50.765" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/7</msg>
<msg timestamp="20200605 10:13:50.789" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/7: 0.000294 seconds.</msg>
<msg timestamp="20200605 10:13:50.790" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:50 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:50.790" starttime="20200605 10:13:50.759"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:50.791" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:50.791" starttime="20200605 10:13:50.790"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:50.791" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:50.791" starttime="20200605 10:13:50.791"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:50.792" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:50.792" starttime="20200605 10:13:50.792"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.793" starttime="20200605 10:13:50.792"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.793" starttime="20200605 10:13:50.793"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.794" starttime="20200605 10:13:50.793"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.795" starttime="20200605 10:13:50.794"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:50.795" starttime="20200605 10:13:50.794"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:50.795" starttime="20200605 10:13:50.759"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:50.795" starttime="20200605 10:13:50.759"></status>
</kw>
<kw type="foritem" name="${ID} = 8">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:50.805" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/8</msg>
<msg timestamp="20200605 10:13:50.832" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/8: 0.000496 seconds.</msg>
<msg timestamp="20200605 10:13:50.832" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:50 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:50.832" starttime="20200605 10:13:50.795"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:50.833" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:50.834" starttime="20200605 10:13:50.833"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:50.834" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:50.834" starttime="20200605 10:13:50.834"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:50.836" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:50.836" starttime="20200605 10:13:50.835"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.836" starttime="20200605 10:13:50.836"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.837" starttime="20200605 10:13:50.837"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.839" starttime="20200605 10:13:50.838"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.840" starttime="20200605 10:13:50.840"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:50.840" starttime="20200605 10:13:50.839"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:50.841" starttime="20200605 10:13:50.795"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:50.841" starttime="20200605 10:13:50.795"></status>
</kw>
<kw type="foritem" name="${ID} = 9">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:50.848" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/9</msg>
<msg timestamp="20200605 10:13:50.873" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/9: 0.000366 seconds.</msg>
<msg timestamp="20200605 10:13:50.874" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:50 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:50.874" starttime="20200605 10:13:50.842"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:50.874" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:50.874" starttime="20200605 10:13:50.874"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:50.875" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:50.875" starttime="20200605 10:13:50.875"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:50.875" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:50.875" starttime="20200605 10:13:50.875"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.876" starttime="20200605 10:13:50.876"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.876" starttime="20200605 10:13:50.876"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.877" starttime="20200605 10:13:50.877"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.878" starttime="20200605 10:13:50.878"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:50.879" starttime="20200605 10:13:50.878"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:50.879" starttime="20200605 10:13:50.841"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:50.879" starttime="20200605 10:13:50.841"></status>
</kw>
<kw type="foritem" name="${ID} = 10">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:50.885" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/10</msg>
<msg timestamp="20200605 10:13:50.911" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/10: 0.000326000000001 seconds.</msg>
<msg timestamp="20200605 10:13:50.911" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:50 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:50.911" starttime="20200605 10:13:50.879"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:50.912" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:50.912" starttime="20200605 10:13:50.912"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:50.913" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:50.913" starttime="20200605 10:13:50.913"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:50.913" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:50.913" starttime="20200605 10:13:50.913"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.914" starttime="20200605 10:13:50.914"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.915" starttime="20200605 10:13:50.914"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.915" starttime="20200605 10:13:50.915"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.916" starttime="20200605 10:13:50.916"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:50.917" starttime="20200605 10:13:50.916"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:50.917" starttime="20200605 10:13:50.879"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:50.917" starttime="20200605 10:13:50.879"></status>
</kw>
<kw type="foritem" name="${ID} = 11">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:50.923" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/11</msg>
<msg timestamp="20200605 10:13:50.950" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/11: 0.000288000000001 seconds.</msg>
<msg timestamp="20200605 10:13:50.950" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:50 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:50.950" starttime="20200605 10:13:50.917"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:50.952" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:50.952" starttime="20200605 10:13:50.951"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:50.952" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:50.952" starttime="20200605 10:13:50.952"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:50.953" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:50.953" starttime="20200605 10:13:50.953"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.953" starttime="20200605 10:13:50.953"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.954" starttime="20200605 10:13:50.954"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.955" starttime="20200605 10:13:50.954"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.956" starttime="20200605 10:13:50.956"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:50.956" starttime="20200605 10:13:50.955"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:50.956" starttime="20200605 10:13:50.917"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:50.956" starttime="20200605 10:13:50.917"></status>
</kw>
<kw type="foritem" name="${ID} = 12">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:50.962" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/12</msg>
<msg timestamp="20200605 10:13:50.991" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/12: 0.000496 seconds.</msg>
<msg timestamp="20200605 10:13:50.991" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:50 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:50.991" starttime="20200605 10:13:50.957"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:50.992" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:50.992" starttime="20200605 10:13:50.992"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:50.993" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:50.993" starttime="20200605 10:13:50.993"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:50.994" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:50.994" starttime="20200605 10:13:50.994"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.995" starttime="20200605 10:13:50.994"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.996" starttime="20200605 10:13:50.995"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:50.999" starttime="20200605 10:13:50.998"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.000" starttime="20200605 10:13:51.000"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.000" starttime="20200605 10:13:50.999"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.001" starttime="20200605 10:13:50.956"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.001" starttime="20200605 10:13:50.956"></status>
</kw>
<kw type="foritem" name="${ID} = 13">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:51.011" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/13</msg>
<msg timestamp="20200605 10:13:51.037" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/13: 0.000479 seconds.</msg>
<msg timestamp="20200605 10:13:51.037" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:51 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:51.037" starttime="20200605 10:13:51.002"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:51.038" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:51.038" starttime="20200605 10:13:51.038"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:51.039" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:51.039" starttime="20200605 10:13:51.039"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:51.040" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:51.040" starttime="20200605 10:13:51.039"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.041" starttime="20200605 10:13:51.040"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.042" starttime="20200605 10:13:51.041"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.043" starttime="20200605 10:13:51.042"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.045" starttime="20200605 10:13:51.044"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.045" starttime="20200605 10:13:51.044"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.045" starttime="20200605 10:13:51.001"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.045" starttime="20200605 10:13:51.001"></status>
</kw>
<kw type="foritem" name="${ID} = 14">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:51.056" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/14</msg>
<msg timestamp="20200605 10:13:51.083" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/14: 0.000534 seconds.</msg>
<msg timestamp="20200605 10:13:51.084" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:51 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:51.084" starttime="20200605 10:13:51.046"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:51.085" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:51.085" starttime="20200605 10:13:51.084"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:51.085" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:51.085" starttime="20200605 10:13:51.085"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:51.086" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:51.086" starttime="20200605 10:13:51.085"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.086" starttime="20200605 10:13:51.086"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.087" starttime="20200605 10:13:51.086"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.088" starttime="20200605 10:13:51.087"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.089" starttime="20200605 10:13:51.089"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.089" starttime="20200605 10:13:51.088"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.089" starttime="20200605 10:13:51.045"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.089" starttime="20200605 10:13:51.045"></status>
</kw>
<kw type="foritem" name="${ID} = 15">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:51.096" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/15</msg>
<msg timestamp="20200605 10:13:51.121" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/15: 0.000292999999999 seconds.</msg>
<msg timestamp="20200605 10:13:51.122" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:51 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:51.122" starttime="20200605 10:13:51.090"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:51.122" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:51.123" starttime="20200605 10:13:51.122"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:51.123" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:51.123" starttime="20200605 10:13:51.123"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:51.124" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:51.124" starttime="20200605 10:13:51.123"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.124" starttime="20200605 10:13:51.124"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.125" starttime="20200605 10:13:51.125"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.126" starttime="20200605 10:13:51.125"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.127" starttime="20200605 10:13:51.127"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.127" starttime="20200605 10:13:51.126"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.127" starttime="20200605 10:13:51.089"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.127" starttime="20200605 10:13:51.089"></status>
</kw>
<kw type="foritem" name="${ID} = 16">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:51.134" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/16</msg>
<msg timestamp="20200605 10:13:51.162" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/16: 0.000268 seconds.</msg>
<msg timestamp="20200605 10:13:51.163" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:51 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:51.163" starttime="20200605 10:13:51.128"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:51.163" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:51.164" starttime="20200605 10:13:51.163"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:51.164" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:51.164" starttime="20200605 10:13:51.164"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:51.165" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:51.165" starttime="20200605 10:13:51.164"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.165" starttime="20200605 10:13:51.165"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.166" starttime="20200605 10:13:51.165"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.167" starttime="20200605 10:13:51.166"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.168" starttime="20200605 10:13:51.168"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.168" starttime="20200605 10:13:51.167"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.168" starttime="20200605 10:13:51.128"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.168" starttime="20200605 10:13:51.128"></status>
</kw>
<kw type="foritem" name="${ID} = 17">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:51.175" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/17</msg>
<msg timestamp="20200605 10:13:51.202" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/17: 0.000285 seconds.</msg>
<msg timestamp="20200605 10:13:51.203" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:51 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:51.203" starttime="20200605 10:13:51.169"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:51.203" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:51.203" starttime="20200605 10:13:51.203"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:51.204" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:51.204" starttime="20200605 10:13:51.204"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:51.204" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:51.204" starttime="20200605 10:13:51.204"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.205" starttime="20200605 10:13:51.205"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.206" starttime="20200605 10:13:51.205"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.207" starttime="20200605 10:13:51.206"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.208" starttime="20200605 10:13:51.208"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.208" starttime="20200605 10:13:51.207"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.208" starttime="20200605 10:13:51.169"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.208" starttime="20200605 10:13:51.168"></status>
</kw>
<kw type="foritem" name="${ID} = 18">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:51.215" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/18</msg>
<msg timestamp="20200605 10:13:51.240" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/18: 0.000332 seconds.</msg>
<msg timestamp="20200605 10:13:51.241" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:51 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:51.241" starttime="20200605 10:13:51.209"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:51.242" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:51.242" starttime="20200605 10:13:51.241"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:51.242" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:51.242" starttime="20200605 10:13:51.242"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:51.243" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:51.243" starttime="20200605 10:13:51.242"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.243" starttime="20200605 10:13:51.243"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.244" starttime="20200605 10:13:51.243"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.245" starttime="20200605 10:13:51.245"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.246" starttime="20200605 10:13:51.246"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.246" starttime="20200605 10:13:51.245"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.246" starttime="20200605 10:13:51.209"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.246" starttime="20200605 10:13:51.209"></status>
</kw>
<kw type="foritem" name="${ID} = 19">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:51.253" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/19</msg>
<msg timestamp="20200605 10:13:51.282" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/19: 0.000261999999999 seconds.</msg>
<msg timestamp="20200605 10:13:51.282" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:51 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:51.282" starttime="20200605 10:13:51.247"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:51.283" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:51.283" starttime="20200605 10:13:51.282"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:51.283" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:51.283" starttime="20200605 10:13:51.283"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:51.284" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:51.284" starttime="20200605 10:13:51.284"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.285" starttime="20200605 10:13:51.284"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.286" starttime="20200605 10:13:51.285"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.286" starttime="20200605 10:13:51.286"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.288" starttime="20200605 10:13:51.287"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.288" starttime="20200605 10:13:51.287"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.288" starttime="20200605 10:13:51.247"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.288" starttime="20200605 10:13:51.247"></status>
</kw>
<kw type="foritem" name="${ID} = 20">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:51.295" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/20</msg>
<msg timestamp="20200605 10:13:51.319" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/20: 0.000281000000001 seconds.</msg>
<msg timestamp="20200605 10:13:51.320" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:51 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:51.320" starttime="20200605 10:13:51.289"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:51.321" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:51.321" starttime="20200605 10:13:51.320"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:51.321" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:51.321" starttime="20200605 10:13:51.321"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:51.322" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:51.322" starttime="20200605 10:13:51.321"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.322" starttime="20200605 10:13:51.322"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.323" starttime="20200605 10:13:51.322"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.324" starttime="20200605 10:13:51.323"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.325" starttime="20200605 10:13:51.325"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.325" starttime="20200605 10:13:51.324"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.325" starttime="20200605 10:13:51.289"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.325" starttime="20200605 10:13:51.288"></status>
</kw>
<kw type="foritem" name="${ID} = 21">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:51.332" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/21</msg>
<msg timestamp="20200605 10:13:51.357" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/21: 0.000310000000001 seconds.</msg>
<msg timestamp="20200605 10:13:51.357" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:51 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:51.357" starttime="20200605 10:13:51.326"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:51.358" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:51.358" starttime="20200605 10:13:51.358"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:51.359" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:51.359" starttime="20200605 10:13:51.358"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:51.359" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:51.359" starttime="20200605 10:13:51.359"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.359" starttime="20200605 10:13:51.359"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.360" starttime="20200605 10:13:51.360"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.361" starttime="20200605 10:13:51.361"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.362" starttime="20200605 10:13:51.362"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.362" starttime="20200605 10:13:51.362"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.363" starttime="20200605 10:13:51.326"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.363" starttime="20200605 10:13:51.326"></status>
</kw>
<kw type="foritem" name="${ID} = 22">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:51.370" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/22</msg>
<msg timestamp="20200605 10:13:51.395" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/22: 0.000363 seconds.</msg>
<msg timestamp="20200605 10:13:51.396" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:51 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:51.396" starttime="20200605 10:13:51.364"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:51.398" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:51.398" starttime="20200605 10:13:51.396"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:51.399" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:51.399" starttime="20200605 10:13:51.399"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:51.399" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:51.400" starttime="20200605 10:13:51.399"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.401" starttime="20200605 10:13:51.400"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.401" starttime="20200605 10:13:51.401"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.402" starttime="20200605 10:13:51.402"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.403" starttime="20200605 10:13:51.403"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.404" starttime="20200605 10:13:51.403"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.404" starttime="20200605 10:13:51.363"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.404" starttime="20200605 10:13:51.363"></status>
</kw>
<kw type="foritem" name="${ID} = 23">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:51.410" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/23</msg>
<msg timestamp="20200605 10:13:51.436" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/23: 0.000352000000001 seconds.</msg>
<msg timestamp="20200605 10:13:51.436" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:51 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:51.436" starttime="20200605 10:13:51.405"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:51.437" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:51.437" starttime="20200605 10:13:51.437"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:51.438" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:51.438" starttime="20200605 10:13:51.437"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:51.438" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:51.438" starttime="20200605 10:13:51.438"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.439" starttime="20200605 10:13:51.438"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.440" starttime="20200605 10:13:51.439"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.441" starttime="20200605 10:13:51.440"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.442" starttime="20200605 10:13:51.442"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.442" starttime="20200605 10:13:51.441"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.442" starttime="20200605 10:13:51.404"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.442" starttime="20200605 10:13:51.404"></status>
</kw>
<kw type="foritem" name="${ID} = 24">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:51.449" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/24</msg>
<msg timestamp="20200605 10:13:51.473" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/24: 0.000365 seconds.</msg>
<msg timestamp="20200605 10:13:51.474" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:51 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:51.474" starttime="20200605 10:13:51.443"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:51.474" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:51.474" starttime="20200605 10:13:51.474"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:51.475" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:51.475" starttime="20200605 10:13:51.475"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:51.475" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:51.475" starttime="20200605 10:13:51.475"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.476" starttime="20200605 10:13:51.476"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.477" starttime="20200605 10:13:51.477"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.478" starttime="20200605 10:13:51.477"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.479" starttime="20200605 10:13:51.479"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.479" starttime="20200605 10:13:51.478"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.479" starttime="20200605 10:13:51.442"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.479" starttime="20200605 10:13:51.442"></status>
</kw>
<kw type="foritem" name="${ID} = 25">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:51.486" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/25</msg>
<msg timestamp="20200605 10:13:51.515" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/25: 0.000302999999999 seconds.</msg>
<msg timestamp="20200605 10:13:51.516" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:51 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:51.516" starttime="20200605 10:13:51.480"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:51.516" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:51.517" starttime="20200605 10:13:51.516"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:51.517" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:51.518" starttime="20200605 10:13:51.517"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:51.518" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:51.518" starttime="20200605 10:13:51.518"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.519" starttime="20200605 10:13:51.518"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.520" starttime="20200605 10:13:51.519"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.521" starttime="20200605 10:13:51.520"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.522" starttime="20200605 10:13:51.521"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.522" starttime="20200605 10:13:51.521"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.522" starttime="20200605 10:13:51.480"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.522" starttime="20200605 10:13:51.480"></status>
</kw>
<kw type="foritem" name="${ID} = 26">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:51.529" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/26</msg>
<msg timestamp="20200605 10:13:51.558" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/26: 0.000273 seconds.</msg>
<msg timestamp="20200605 10:13:51.558" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:51 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:51.558" starttime="20200605 10:13:51.523"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:51.559" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:51.559" starttime="20200605 10:13:51.558"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:51.559" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:51.559" starttime="20200605 10:13:51.559"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:51.560" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:51.560" starttime="20200605 10:13:51.560"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.560" starttime="20200605 10:13:51.560"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.561" starttime="20200605 10:13:51.561"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.562" starttime="20200605 10:13:51.562"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.563" starttime="20200605 10:13:51.563"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.563" starttime="20200605 10:13:51.562"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.563" starttime="20200605 10:13:51.522"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.563" starttime="20200605 10:13:51.522"></status>
</kw>
<kw type="foritem" name="${ID} = 27">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:51.570" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/27</msg>
<msg timestamp="20200605 10:13:51.596" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/27: 0.000328999999999 seconds.</msg>
<msg timestamp="20200605 10:13:51.598" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:51 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:51.598" starttime="20200605 10:13:51.564"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:51.599" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:51.599" starttime="20200605 10:13:51.598"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:51.599" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:51.599" starttime="20200605 10:13:51.599"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:51.600" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:51.600" starttime="20200605 10:13:51.600"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.601" starttime="20200605 10:13:51.600"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.601" starttime="20200605 10:13:51.601"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.602" starttime="20200605 10:13:51.602"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.603" starttime="20200605 10:13:51.603"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.604" starttime="20200605 10:13:51.603"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.604" starttime="20200605 10:13:51.564"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.604" starttime="20200605 10:13:51.563"></status>
</kw>
<kw type="foritem" name="${ID} = 28">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:51.611" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/28</msg>
<msg timestamp="20200605 10:13:51.638" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/28: 0.000345999999999 seconds.</msg>
<msg timestamp="20200605 10:13:51.638" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:51 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:51.638" starttime="20200605 10:13:51.605"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:51.639" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:51.639" starttime="20200605 10:13:51.639"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:51.640" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:51.640" starttime="20200605 10:13:51.639"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:51.640" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:51.640" starttime="20200605 10:13:51.640"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.641" starttime="20200605 10:13:51.640"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.642" starttime="20200605 10:13:51.641"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.642" starttime="20200605 10:13:51.642"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.644" starttime="20200605 10:13:51.643"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.644" starttime="20200605 10:13:51.643"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.644" starttime="20200605 10:13:51.604"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.644" starttime="20200605 10:13:51.604"></status>
</kw>
<kw type="foritem" name="${ID} = 29">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:51.651" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/29</msg>
<msg timestamp="20200605 10:13:51.676" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/29: 0.000307999999999 seconds.</msg>
<msg timestamp="20200605 10:13:51.676" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:51 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:51.676" starttime="20200605 10:13:51.645"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:51.677" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:51.677" starttime="20200605 10:13:51.677"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:51.678" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:51.678" starttime="20200605 10:13:51.677"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:51.678" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:51.678" starttime="20200605 10:13:51.678"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.679" starttime="20200605 10:13:51.678"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.680" starttime="20200605 10:13:51.679"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.680" starttime="20200605 10:13:51.680"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.682" starttime="20200605 10:13:51.681"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.682" starttime="20200605 10:13:51.681"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.682" starttime="20200605 10:13:51.644"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.682" starttime="20200605 10:13:51.644"></status>
</kw>
<kw type="foritem" name="${ID} = 30">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:51.689" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/30</msg>
<msg timestamp="20200605 10:13:51.715" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/30: 0.000339 seconds.</msg>
<msg timestamp="20200605 10:13:51.715" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:51 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:51.715" starttime="20200605 10:13:51.683"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:51.716" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:51.716" starttime="20200605 10:13:51.716"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:51.717" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:51.717" starttime="20200605 10:13:51.716"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:51.717" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:51.717" starttime="20200605 10:13:51.717"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.718" starttime="20200605 10:13:51.717"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.719" starttime="20200605 10:13:51.718"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.719" starttime="20200605 10:13:51.719"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.721" starttime="20200605 10:13:51.720"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.721" starttime="20200605 10:13:51.720"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.721" starttime="20200605 10:13:51.682"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.721" starttime="20200605 10:13:51.682"></status>
</kw>
<kw type="foritem" name="${ID} = 31">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:51.728" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/31</msg>
<msg timestamp="20200605 10:13:51.755" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/31: 0.000299999999999 seconds.</msg>
<msg timestamp="20200605 10:13:51.755" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:51 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:51.755" starttime="20200605 10:13:51.721"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:51.756" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:51.756" starttime="20200605 10:13:51.756"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:51.757" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:51.757" starttime="20200605 10:13:51.756"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:51.757" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:51.757" starttime="20200605 10:13:51.757"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.758" starttime="20200605 10:13:51.757"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.759" starttime="20200605 10:13:51.758"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.760" starttime="20200605 10:13:51.759"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.761" starttime="20200605 10:13:51.760"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.761" starttime="20200605 10:13:51.760"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.761" starttime="20200605 10:13:51.721"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.761" starttime="20200605 10:13:51.721"></status>
</kw>
<kw type="foritem" name="${ID} = 32">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:51.768" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/32</msg>
<msg timestamp="20200605 10:13:51.794" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/32: 0.000304999999999 seconds.</msg>
<msg timestamp="20200605 10:13:51.794" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:51 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:51.794" starttime="20200605 10:13:51.762"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:51.795" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:51.795" starttime="20200605 10:13:51.795"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:51.796" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:51.796" starttime="20200605 10:13:51.795"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:51.796" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:51.796" starttime="20200605 10:13:51.796"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.797" starttime="20200605 10:13:51.796"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.798" starttime="20200605 10:13:51.797"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.798" starttime="20200605 10:13:51.798"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.799" starttime="20200605 10:13:51.799"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.799" starttime="20200605 10:13:51.798"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.800" starttime="20200605 10:13:51.761"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.800" starttime="20200605 10:13:51.761"></status>
</kw>
<kw type="foritem" name="${ID} = 33">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:51.806" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/33</msg>
<msg timestamp="20200605 10:13:51.831" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/33: 0.000302999999999 seconds.</msg>
<msg timestamp="20200605 10:13:51.832" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:51 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:51.832" starttime="20200605 10:13:51.800"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:51.833" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:51.833" starttime="20200605 10:13:51.832"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:51.833" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:51.833" starttime="20200605 10:13:51.833"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:51.834" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:51.834" starttime="20200605 10:13:51.833"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.834" starttime="20200605 10:13:51.834"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.835" starttime="20200605 10:13:51.834"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.835" starttime="20200605 10:13:51.835"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.836" starttime="20200605 10:13:51.836"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.836" starttime="20200605 10:13:51.835"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.836" starttime="20200605 10:13:51.800"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.836" starttime="20200605 10:13:51.800"></status>
</kw>
<kw type="foritem" name="${ID} = 34">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:51.843" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/34</msg>
<msg timestamp="20200605 10:13:51.870" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/34: 0.000355000000001 seconds.</msg>
<msg timestamp="20200605 10:13:51.870" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:51 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:51.871" starttime="20200605 10:13:51.837"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:51.871" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:51.871" starttime="20200605 10:13:51.871"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:51.872" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:51.872" starttime="20200605 10:13:51.871"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:51.872" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:51.872" starttime="20200605 10:13:51.872"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.873" starttime="20200605 10:13:51.873"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.873" starttime="20200605 10:13:51.873"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.874" starttime="20200605 10:13:51.873"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.875" starttime="20200605 10:13:51.874"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.875" starttime="20200605 10:13:51.874"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.875" starttime="20200605 10:13:51.836"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.875" starttime="20200605 10:13:51.836"></status>
</kw>
<kw type="foritem" name="${ID} = 35">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:51.881" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/35</msg>
<msg timestamp="20200605 10:13:51.907" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/35: 0.000264 seconds.</msg>
<msg timestamp="20200605 10:13:51.907" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:51 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:51.907" starttime="20200605 10:13:51.875"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:51.908" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:51.908" starttime="20200605 10:13:51.907"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:51.909" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:51.909" starttime="20200605 10:13:51.908"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:51.909" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:51.909" starttime="20200605 10:13:51.909"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.909" starttime="20200605 10:13:51.909"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.910" starttime="20200605 10:13:51.910"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.910" starttime="20200605 10:13:51.910"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.911" starttime="20200605 10:13:51.911"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.911" starttime="20200605 10:13:51.911"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.911" starttime="20200605 10:13:51.875"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.912" starttime="20200605 10:13:51.875"></status>
</kw>
<kw type="foritem" name="${ID} = 36">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:51.918" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/36</msg>
<msg timestamp="20200605 10:13:51.945" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/36: 0.00027 seconds.</msg>
<msg timestamp="20200605 10:13:51.945" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:51 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:51.946" starttime="20200605 10:13:51.912"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:51.946" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:51.946" starttime="20200605 10:13:51.946"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:51.947" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:51.947" starttime="20200605 10:13:51.946"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:51.947" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:51.947" starttime="20200605 10:13:51.947"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.948" starttime="20200605 10:13:51.948"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.949" starttime="20200605 10:13:51.948"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.949" starttime="20200605 10:13:51.949"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.950" starttime="20200605 10:13:51.950"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.950" starttime="20200605 10:13:51.949"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.950" starttime="20200605 10:13:51.912"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.950" starttime="20200605 10:13:51.912"></status>
</kw>
<kw type="foritem" name="${ID} = 37">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:51.956" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/37</msg>
<msg timestamp="20200605 10:13:51.980" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/37: 0.000272000000001 seconds.</msg>
<msg timestamp="20200605 10:13:51.981" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:51 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:51.981" starttime="20200605 10:13:51.951"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:51.981" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:51.982" starttime="20200605 10:13:51.981"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:51.982" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:51.982" starttime="20200605 10:13:51.982"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:51.983" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:51.983" starttime="20200605 10:13:51.982"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.983" starttime="20200605 10:13:51.983"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.983" starttime="20200605 10:13:51.983"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.984" starttime="20200605 10:13:51.984"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:51.985" starttime="20200605 10:13:51.985"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.985" starttime="20200605 10:13:51.984"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.985" starttime="20200605 10:13:51.950"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:51.985" starttime="20200605 10:13:51.950"></status>
</kw>
<kw type="foritem" name="${ID} = 38">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:51.991" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/38</msg>
<msg timestamp="20200605 10:13:52.018" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/38: 0.000317000000001 seconds.</msg>
<msg timestamp="20200605 10:13:52.018" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:52 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:52.018" starttime="20200605 10:13:51.986"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:52.019" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:52.019" starttime="20200605 10:13:52.019"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:52.020" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:52.020" starttime="20200605 10:13:52.019"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:52.020" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:52.020" starttime="20200605 10:13:52.020"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.021" starttime="20200605 10:13:52.020"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.021" starttime="20200605 10:13:52.021"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.021" starttime="20200605 10:13:52.021"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.022" starttime="20200605 10:13:52.022"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.022" starttime="20200605 10:13:52.022"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.022" starttime="20200605 10:13:51.985"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.022" starttime="20200605 10:13:51.985"></status>
</kw>
<kw type="foritem" name="${ID} = 39">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:52.029" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/39</msg>
<msg timestamp="20200605 10:13:52.056" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/39: 0.000289 seconds.</msg>
<msg timestamp="20200605 10:13:52.056" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:52 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:52.056" starttime="20200605 10:13:52.023"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:52.057" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:52.057" starttime="20200605 10:13:52.057"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:52.058" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:52.058" starttime="20200605 10:13:52.057"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:52.058" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:52.059" starttime="20200605 10:13:52.058"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.059" starttime="20200605 10:13:52.059"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.059" starttime="20200605 10:13:52.059"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.060" starttime="20200605 10:13:52.059"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.061" starttime="20200605 10:13:52.060"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.061" starttime="20200605 10:13:52.060"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.061" starttime="20200605 10:13:52.023"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.061" starttime="20200605 10:13:52.022"></status>
</kw>
<kw type="foritem" name="${ID} = 40">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:52.067" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/40</msg>
<msg timestamp="20200605 10:13:52.094" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/40: 0.000309 seconds.</msg>
<msg timestamp="20200605 10:13:52.095" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:52 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:52.095" starttime="20200605 10:13:52.061"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:52.095" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:52.095" starttime="20200605 10:13:52.095"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:52.096" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:52.096" starttime="20200605 10:13:52.096"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:52.097" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:52.097" starttime="20200605 10:13:52.096"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.097" starttime="20200605 10:13:52.097"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.098" starttime="20200605 10:13:52.097"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.098" starttime="20200605 10:13:52.098"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.099" starttime="20200605 10:13:52.099"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.099" starttime="20200605 10:13:52.098"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.099" starttime="20200605 10:13:52.061"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.099" starttime="20200605 10:13:52.061"></status>
</kw>
<kw type="foritem" name="${ID} = 41">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:52.105" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/41</msg>
<msg timestamp="20200605 10:13:52.131" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/41: 0.000304 seconds.</msg>
<msg timestamp="20200605 10:13:52.131" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:52 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:52.131" starttime="20200605 10:13:52.100"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:52.132" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:52.132" starttime="20200605 10:13:52.131"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:52.132" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:52.132" starttime="20200605 10:13:52.132"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:52.133" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:52.133" starttime="20200605 10:13:52.133"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.133" starttime="20200605 10:13:52.133"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.134" starttime="20200605 10:13:52.133"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.134" starttime="20200605 10:13:52.134"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.135" starttime="20200605 10:13:52.135"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.135" starttime="20200605 10:13:52.134"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.135" starttime="20200605 10:13:52.099"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.135" starttime="20200605 10:13:52.099"></status>
</kw>
<kw type="foritem" name="${ID} = 42">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:52.142" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/42</msg>
<msg timestamp="20200605 10:13:52.166" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/42: 0.000323 seconds.</msg>
<msg timestamp="20200605 10:13:52.167" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:52 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:52.167" starttime="20200605 10:13:52.136"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:52.168" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:52.168" starttime="20200605 10:13:52.167"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:52.168" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:52.168" starttime="20200605 10:13:52.168"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:52.169" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:52.169" starttime="20200605 10:13:52.169"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.169" starttime="20200605 10:13:52.169"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.170" starttime="20200605 10:13:52.169"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.170" starttime="20200605 10:13:52.170"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.171" starttime="20200605 10:13:52.171"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.171" starttime="20200605 10:13:52.170"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.171" starttime="20200605 10:13:52.135"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.171" starttime="20200605 10:13:52.135"></status>
</kw>
<kw type="foritem" name="${ID} = 43">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:52.178" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/43</msg>
<msg timestamp="20200605 10:13:52.203" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/43: 0.000286999999998 seconds.</msg>
<msg timestamp="20200605 10:13:52.203" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:52 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:52.203" starttime="20200605 10:13:52.172"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:52.204" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:52.204" starttime="20200605 10:13:52.204"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:52.205" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:52.205" starttime="20200605 10:13:52.204"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:52.205" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:52.205" starttime="20200605 10:13:52.205"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.206" starttime="20200605 10:13:52.205"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.206" starttime="20200605 10:13:52.206"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.207" starttime="20200605 10:13:52.206"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.208" starttime="20200605 10:13:52.207"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.208" starttime="20200605 10:13:52.207"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.208" starttime="20200605 10:13:52.171"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.208" starttime="20200605 10:13:52.171"></status>
</kw>
<kw type="foritem" name="${ID} = 44">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:52.214" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/44</msg>
<msg timestamp="20200605 10:13:52.240" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/44: 0.000302000000001 seconds.</msg>
<msg timestamp="20200605 10:13:52.241" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:52 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:52.241" starttime="20200605 10:13:52.208"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:52.242" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:52.242" starttime="20200605 10:13:52.241"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:52.242" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:52.242" starttime="20200605 10:13:52.242"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:52.243" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:52.243" starttime="20200605 10:13:52.242"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.243" starttime="20200605 10:13:52.243"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.244" starttime="20200605 10:13:52.243"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.244" starttime="20200605 10:13:52.244"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.245" starttime="20200605 10:13:52.245"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.245" starttime="20200605 10:13:52.244"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.245" starttime="20200605 10:13:52.208"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.245" starttime="20200605 10:13:52.208"></status>
</kw>
<kw type="foritem" name="${ID} = 45">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:52.252" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/45</msg>
<msg timestamp="20200605 10:13:52.278" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/45: 0.000314999999999 seconds.</msg>
<msg timestamp="20200605 10:13:52.279" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:52 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:52.279" starttime="20200605 10:13:52.246"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:52.279" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:52.279" starttime="20200605 10:13:52.279"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:52.280" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:52.280" starttime="20200605 10:13:52.280"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:52.280" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:52.280" starttime="20200605 10:13:52.280"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.281" starttime="20200605 10:13:52.281"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.281" starttime="20200605 10:13:52.281"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.282" starttime="20200605 10:13:52.281"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.283" starttime="20200605 10:13:52.282"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.283" starttime="20200605 10:13:52.282"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.283" starttime="20200605 10:13:52.245"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.283" starttime="20200605 10:13:52.245"></status>
</kw>
<kw type="foritem" name="${ID} = 46">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:52.289" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/46</msg>
<msg timestamp="20200605 10:13:52.315" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/46: 0.000273 seconds.</msg>
<msg timestamp="20200605 10:13:52.316" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:52 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:52.316" starttime="20200605 10:13:52.283"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:52.316" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:52.317" starttime="20200605 10:13:52.316"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:52.317" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:52.317" starttime="20200605 10:13:52.317"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:52.318" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:52.318" starttime="20200605 10:13:52.317"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.318" starttime="20200605 10:13:52.318"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.318" starttime="20200605 10:13:52.318"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.319" starttime="20200605 10:13:52.319"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.320" starttime="20200605 10:13:52.320"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.320" starttime="20200605 10:13:52.319"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.320" starttime="20200605 10:13:52.283"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.320" starttime="20200605 10:13:52.283"></status>
</kw>
<kw type="foritem" name="${ID} = 47">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:52.326" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/47</msg>
<msg timestamp="20200605 10:13:52.350" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/47: 0.000318999999999 seconds.</msg>
<msg timestamp="20200605 10:13:52.351" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:52 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:52.351" starttime="20200605 10:13:52.320"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:52.351" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:52.352" starttime="20200605 10:13:52.351"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:52.352" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:52.352" starttime="20200605 10:13:52.352"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:52.353" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:52.353" starttime="20200605 10:13:52.352"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.353" starttime="20200605 10:13:52.353"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.353" starttime="20200605 10:13:52.353"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.354" starttime="20200605 10:13:52.354"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.356" starttime="20200605 10:13:52.355"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.356" starttime="20200605 10:13:52.355"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.356" starttime="20200605 10:13:52.320"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.356" starttime="20200605 10:13:52.320"></status>
</kw>
<kw type="foritem" name="${ID} = 48">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:52.362" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/48</msg>
<msg timestamp="20200605 10:13:52.386" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/48: 0.000345000000001 seconds.</msg>
<msg timestamp="20200605 10:13:52.387" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:52 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:52.387" starttime="20200605 10:13:52.357"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:52.388" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:52.388" starttime="20200605 10:13:52.387"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:52.388" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:52.388" starttime="20200605 10:13:52.388"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:52.389" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:52.389" starttime="20200605 10:13:52.388"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.389" starttime="20200605 10:13:52.389"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.390" starttime="20200605 10:13:52.389"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.390" starttime="20200605 10:13:52.390"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.391" starttime="20200605 10:13:52.391"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.391" starttime="20200605 10:13:52.390"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.391" starttime="20200605 10:13:52.356"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.391" starttime="20200605 10:13:52.356"></status>
</kw>
<kw type="foritem" name="${ID} = 49">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:52.402" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/49</msg>
<msg timestamp="20200605 10:13:52.430" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/49: 0.00033 seconds.</msg>
<msg timestamp="20200605 10:13:52.431" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:52 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:52.431" starttime="20200605 10:13:52.392"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:52.431" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:52.431" starttime="20200605 10:13:52.431"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:52.432" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:52.432" starttime="20200605 10:13:52.432"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:52.433" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:52.433" starttime="20200605 10:13:52.432"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.433" starttime="20200605 10:13:52.433"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.434" starttime="20200605 10:13:52.433"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.434" starttime="20200605 10:13:52.434"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.435" starttime="20200605 10:13:52.435"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.435" starttime="20200605 10:13:52.435"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.435" starttime="20200605 10:13:52.391"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.436" starttime="20200605 10:13:52.391"></status>
</kw>
<kw type="foritem" name="${ID} = 50">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:52.442" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/50</msg>
<msg timestamp="20200605 10:13:52.469" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/50: 0.000386000000001 seconds.</msg>
<msg timestamp="20200605 10:13:52.470" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:52 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:52.470" starttime="20200605 10:13:52.436"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:52.471" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:52.471" starttime="20200605 10:13:52.470"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:52.471" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:52.471" starttime="20200605 10:13:52.471"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:52.472" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:52.472" starttime="20200605 10:13:52.471"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.472" starttime="20200605 10:13:52.472"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.473" starttime="20200605 10:13:52.473"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.474" starttime="20200605 10:13:52.473"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.475" starttime="20200605 10:13:52.475"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.475" starttime="20200605 10:13:52.474"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.475" starttime="20200605 10:13:52.436"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.475" starttime="20200605 10:13:52.436"></status>
</kw>
<kw type="foritem" name="${ID} = 51">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:52.481" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/51</msg>
<msg timestamp="20200605 10:13:52.507" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/51: 0.000379000000001 seconds.</msg>
<msg timestamp="20200605 10:13:52.508" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:52 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:52.508" starttime="20200605 10:13:52.476"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:52.509" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:52.509" starttime="20200605 10:13:52.508"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:52.509" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:52.509" starttime="20200605 10:13:52.509"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:52.510" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:52.510" starttime="20200605 10:13:52.509"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.510" starttime="20200605 10:13:52.510"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.511" starttime="20200605 10:13:52.510"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.511" starttime="20200605 10:13:52.511"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.512" starttime="20200605 10:13:52.512"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.512" starttime="20200605 10:13:52.511"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.512" starttime="20200605 10:13:52.475"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.512" starttime="20200605 10:13:52.475"></status>
</kw>
<kw type="foritem" name="${ID} = 52">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:52.519" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/52</msg>
<msg timestamp="20200605 10:13:52.545" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/52: 0.000349 seconds.</msg>
<msg timestamp="20200605 10:13:52.546" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:52 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:52.546" starttime="20200605 10:13:52.513"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:52.546" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:52.546" starttime="20200605 10:13:52.546"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:52.547" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:52.547" starttime="20200605 10:13:52.547"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:52.548" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:52.548" starttime="20200605 10:13:52.548"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.548" starttime="20200605 10:13:52.548"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.549" starttime="20200605 10:13:52.549"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.550" starttime="20200605 10:13:52.549"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.551" starttime="20200605 10:13:52.551"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.551" starttime="20200605 10:13:52.550"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.551" starttime="20200605 10:13:52.513"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.551" starttime="20200605 10:13:52.512"></status>
</kw>
<kw type="foritem" name="${ID} = 53">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:52.559" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/53</msg>
<msg timestamp="20200605 10:13:52.584" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/53: 0.00028 seconds.</msg>
<msg timestamp="20200605 10:13:52.585" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:52 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:52.585" starttime="20200605 10:13:52.552"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:52.585" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:52.585" starttime="20200605 10:13:52.585"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:52.586" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:52.586" starttime="20200605 10:13:52.586"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:52.587" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:52.587" starttime="20200605 10:13:52.586"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.587" starttime="20200605 10:13:52.587"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.588" starttime="20200605 10:13:52.587"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.588" starttime="20200605 10:13:52.588"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.589" starttime="20200605 10:13:52.589"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.589" starttime="20200605 10:13:52.588"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.589" starttime="20200605 10:13:52.552"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.589" starttime="20200605 10:13:52.551"></status>
</kw>
<kw type="foritem" name="${ID} = 54">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:52.596" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/54</msg>
<msg timestamp="20200605 10:13:52.623" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/54: 0.000345999999999 seconds.</msg>
<msg timestamp="20200605 10:13:52.624" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:52 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:52.624" starttime="20200605 10:13:52.590"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:52.624" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:52.624" starttime="20200605 10:13:52.624"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:52.625" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:52.625" starttime="20200605 10:13:52.625"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:52.625" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:52.625" starttime="20200605 10:13:52.625"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.626" starttime="20200605 10:13:52.625"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.626" starttime="20200605 10:13:52.626"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.627" starttime="20200605 10:13:52.626"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.628" starttime="20200605 10:13:52.628"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.628" starttime="20200605 10:13:52.627"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.628" starttime="20200605 10:13:52.590"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.628" starttime="20200605 10:13:52.589"></status>
</kw>
<kw type="foritem" name="${ID} = 55">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:52.634" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/55</msg>
<msg timestamp="20200605 10:13:52.660" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/55: 0.000314999999999 seconds.</msg>
<msg timestamp="20200605 10:13:52.660" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:52 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:52.660" starttime="20200605 10:13:52.629"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:52.661" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:52.661" starttime="20200605 10:13:52.661"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:52.662" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:52.662" starttime="20200605 10:13:52.661"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:52.662" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:52.662" starttime="20200605 10:13:52.662"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.663" starttime="20200605 10:13:52.662"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.663" starttime="20200605 10:13:52.663"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.664" starttime="20200605 10:13:52.663"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.664" starttime="20200605 10:13:52.664"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.665" starttime="20200605 10:13:52.664"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.665" starttime="20200605 10:13:52.628"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.665" starttime="20200605 10:13:52.628"></status>
</kw>
<kw type="foritem" name="${ID} = 56">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:52.672" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/56</msg>
<msg timestamp="20200605 10:13:52.696" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/56: 0.000336999999998 seconds.</msg>
<msg timestamp="20200605 10:13:52.697" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:52 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:52.697" starttime="20200605 10:13:52.665"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:52.698" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:52.698" starttime="20200605 10:13:52.697"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:52.698" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:52.698" starttime="20200605 10:13:52.698"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:52.699" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:52.699" starttime="20200605 10:13:52.699"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.699" starttime="20200605 10:13:52.699"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.700" starttime="20200605 10:13:52.699"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.700" starttime="20200605 10:13:52.700"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.701" starttime="20200605 10:13:52.701"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.701" starttime="20200605 10:13:52.700"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.701" starttime="20200605 10:13:52.665"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.701" starttime="20200605 10:13:52.665"></status>
</kw>
<kw type="foritem" name="${ID} = 57">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:52.707" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/57</msg>
<msg timestamp="20200605 10:13:52.729" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/57: 0.000345999999999 seconds.</msg>
<msg timestamp="20200605 10:13:52.730" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:52 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:52.730" starttime="20200605 10:13:52.702"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:52.730" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:52.730" starttime="20200605 10:13:52.730"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:52.731" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:52.731" starttime="20200605 10:13:52.731"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:52.731" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:52.732" starttime="20200605 10:13:52.731"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.732" starttime="20200605 10:13:52.732"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.732" starttime="20200605 10:13:52.732"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.733" starttime="20200605 10:13:52.733"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.734" starttime="20200605 10:13:52.734"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.734" starttime="20200605 10:13:52.733"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.734" starttime="20200605 10:13:52.701"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.734" starttime="20200605 10:13:52.701"></status>
</kw>
<kw type="foritem" name="${ID} = 58">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:52.740" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/58</msg>
<msg timestamp="20200605 10:13:52.765" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/58: 0.000301 seconds.</msg>
<msg timestamp="20200605 10:13:52.765" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:52 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:52.766" starttime="20200605 10:13:52.734"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:52.766" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:52.766" starttime="20200605 10:13:52.766"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:52.767" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:52.767" starttime="20200605 10:13:52.767"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:52.768" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:52.768" starttime="20200605 10:13:52.767"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.768" starttime="20200605 10:13:52.768"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.769" starttime="20200605 10:13:52.768"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.769" starttime="20200605 10:13:52.769"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.770" starttime="20200605 10:13:52.770"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.770" starttime="20200605 10:13:52.769"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.770" starttime="20200605 10:13:52.734"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.770" starttime="20200605 10:13:52.734"></status>
</kw>
<kw type="foritem" name="${ID} = 59">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:52.777" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/59</msg>
<msg timestamp="20200605 10:13:52.803" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/59: 0.000263 seconds.</msg>
<msg timestamp="20200605 10:13:52.803" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:52 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:52.803" starttime="20200605 10:13:52.771"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:52.804" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:52.804" starttime="20200605 10:13:52.804"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:52.805" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:52.805" starttime="20200605 10:13:52.804"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:52.805" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:52.805" starttime="20200605 10:13:52.805"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.806" starttime="20200605 10:13:52.805"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.806" starttime="20200605 10:13:52.806"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.807" starttime="20200605 10:13:52.806"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.808" starttime="20200605 10:13:52.807"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.808" starttime="20200605 10:13:52.807"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.808" starttime="20200605 10:13:52.770"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.808" starttime="20200605 10:13:52.770"></status>
</kw>
<kw type="foritem" name="${ID} = 60">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:52.814" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/60</msg>
<msg timestamp="20200605 10:13:52.840" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/60: 0.000335 seconds.</msg>
<msg timestamp="20200605 10:13:52.841" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:52 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:52.841" starttime="20200605 10:13:52.809"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:52.842" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:52.842" starttime="20200605 10:13:52.841"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:52.842" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:52.842" starttime="20200605 10:13:52.842"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:52.843" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:52.843" starttime="20200605 10:13:52.842"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.843" starttime="20200605 10:13:52.843"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.843" starttime="20200605 10:13:52.843"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.844" starttime="20200605 10:13:52.844"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.845" starttime="20200605 10:13:52.845"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.845" starttime="20200605 10:13:52.844"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.845" starttime="20200605 10:13:52.808"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.845" starttime="20200605 10:13:52.808"></status>
</kw>
<kw type="foritem" name="${ID} = 61">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:52.852" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/61</msg>
<msg timestamp="20200605 10:13:52.878" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/61: 0.000325999999999 seconds.</msg>
<msg timestamp="20200605 10:13:52.878" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:52 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:52.878" starttime="20200605 10:13:52.846"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:52.879" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:52.879" starttime="20200605 10:13:52.879"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:52.880" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:52.880" starttime="20200605 10:13:52.879"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:52.880" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:52.880" starttime="20200605 10:13:52.880"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.881" starttime="20200605 10:13:52.880"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.881" starttime="20200605 10:13:52.881"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.882" starttime="20200605 10:13:52.881"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.883" starttime="20200605 10:13:52.882"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.883" starttime="20200605 10:13:52.882"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.883" starttime="20200605 10:13:52.845"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.883" starttime="20200605 10:13:52.845"></status>
</kw>
<kw type="foritem" name="${ID} = 62">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:52.890" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/62</msg>
<msg timestamp="20200605 10:13:52.916" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/62: 0.000272000000001 seconds.</msg>
<msg timestamp="20200605 10:13:52.916" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:52 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:52.916" starttime="20200605 10:13:52.884"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:52.917" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:52.917" starttime="20200605 10:13:52.917"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:52.918" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:52.918" starttime="20200605 10:13:52.917"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:52.918" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:52.918" starttime="20200605 10:13:52.918"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.919" starttime="20200605 10:13:52.918"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.919" starttime="20200605 10:13:52.919"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.919" starttime="20200605 10:13:52.919"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.920" starttime="20200605 10:13:52.920"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.920" starttime="20200605 10:13:52.920"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.920" starttime="20200605 10:13:52.883"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.920" starttime="20200605 10:13:52.883"></status>
</kw>
<kw type="foritem" name="${ID} = 63">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:52.927" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/63</msg>
<msg timestamp="20200605 10:13:52.955" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/63: 0.000332 seconds.</msg>
<msg timestamp="20200605 10:13:52.956" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:52 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:52.956" starttime="20200605 10:13:52.921"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:52.957" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:52.957" starttime="20200605 10:13:52.956"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:52.957" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:52.957" starttime="20200605 10:13:52.957"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:52.958" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:52.958" starttime="20200605 10:13:52.957"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.958" starttime="20200605 10:13:52.958"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.959" starttime="20200605 10:13:52.958"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.959" starttime="20200605 10:13:52.959"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.960" starttime="20200605 10:13:52.960"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.960" starttime="20200605 10:13:52.959"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.960" starttime="20200605 10:13:52.921"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.960" starttime="20200605 10:13:52.921"></status>
</kw>
<kw type="foritem" name="${ID} = 64">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:52.967" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/64</msg>
<msg timestamp="20200605 10:13:52.992" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/64: 0.000280999999999 seconds.</msg>
<msg timestamp="20200605 10:13:52.992" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:52 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:52.992" starttime="20200605 10:13:52.961"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:52.993" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:52.993" starttime="20200605 10:13:52.993"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:52.994" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:52.994" starttime="20200605 10:13:52.993"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:52.994" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200605 10:13:52.994" starttime="20200605 10:13:52.994"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.995" starttime="20200605 10:13:52.994"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.995" starttime="20200605 10:13:52.995"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.996" starttime="20200605 10:13:52.995"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:52.999" starttime="20200605 10:13:52.999"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.999" starttime="20200605 10:13:52.996"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:52.999" starttime="20200605 10:13:52.960"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:53.000" starttime="20200605 10:13:52.960"></status>
</kw>
<kw type="foritem" name="${ID} = 65">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:53.006" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/65</msg>
<msg timestamp="20200605 10:13:53.031" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/65: 0.000359999999999 seconds.</msg>
<msg timestamp="20200605 10:13:53.032" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:53 GMT
connection Keep-Alive
content-type application/json
content-length 2444


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:53.032" starttime="20200605 10:13:53.000"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:53.033" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:53.033" starttime="20200605 10:13:53.032"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:53.033" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200605 10:13:53.033" starttime="20200605 10:13:53.033"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:53.034" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200605 10:13:53.034" starttime="20200605 10:13:53.034"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:53.034" starttime="20200605 10:13:53.034"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:53.035" starttime="20200605 10:13:53.035"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:53.035" starttime="20200605 10:13:53.035"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:53.036" starttime="20200605 10:13:53.036"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:53.036" starttime="20200605 10:13:53.036"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:53.036" starttime="20200605 10:13:53.000"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:53.036" starttime="20200605 10:13:53.000"></status>
</kw>
<kw type="foritem" name="${ID} = 66">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:53.043" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/66</msg>
<msg timestamp="20200605 10:13:53.071" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/66: 0.000294999999999 seconds.</msg>
<msg timestamp="20200605 10:13:53.071" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:53 GMT
connection Keep-Alive
content-type application/json
content-length 1056


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:53.072" starttime="20200605 10:13:53.037"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:53.072" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:53.072" starttime="20200605 10:13:53.072"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:53.073" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:53.073" starttime="20200605 10:13:53.073"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:53.073" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200605 10:13:53.073" starttime="20200605 10:13:53.073"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:53.074" starttime="20200605 10:13:53.074"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:53.074" starttime="20200605 10:13:53.074"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:53.075" starttime="20200605 10:13:53.074"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:53.076" starttime="20200605 10:13:53.075"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:53.076" starttime="20200605 10:13:53.075"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:53.076" starttime="20200605 10:13:53.037"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:53.076" starttime="20200605 10:13:53.037"></status>
</kw>
<kw type="foritem" name="${ID} = 67">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:53.082" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/67</msg>
<msg timestamp="20200605 10:13:53.109" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/67: 0.000272000000001 seconds.</msg>
<msg timestamp="20200605 10:13:53.110" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:53 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:53.110" starttime="20200605 10:13:53.076"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:53.110" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:53.110" starttime="20200605 10:13:53.110"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:53.111" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:53.111" starttime="20200605 10:13:53.111"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:53.112" level="INFO">${PORT_ID} = SFP port</msg>
<status status="PASS" endtime="20200605 10:13:53.112" starttime="20200605 10:13:53.112"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:53.112" starttime="20200605 10:13:53.112"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:53.113" starttime="20200605 10:13:53.112"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:53.113" starttime="20200605 10:13:53.113"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:53.114" starttime="20200605 10:13:53.114"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:53.114" starttime="20200605 10:13:53.113"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:53.114" starttime="20200605 10:13:53.076"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:53.114" starttime="20200605 10:13:53.076"></status>
</kw>
<kw type="foritem" name="${ID} = 68">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:53.121" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/68</msg>
<msg timestamp="20200605 10:13:53.148" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/68: 0.000280999999999 seconds.</msg>
<msg timestamp="20200605 10:13:53.149" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:53 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:53.149" starttime="20200605 10:13:53.115"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:53.150" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:53.150" starttime="20200605 10:13:53.149"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:53.150" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:53.150" starttime="20200605 10:13:53.150"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:53.151" level="INFO">${PORT_ID} = SFP port</msg>
<status status="PASS" endtime="20200605 10:13:53.151" starttime="20200605 10:13:53.151"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:53.151" starttime="20200605 10:13:53.151"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:53.152" starttime="20200605 10:13:53.152"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:53.152" starttime="20200605 10:13:53.152"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:53.153" starttime="20200605 10:13:53.153"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:53.153" starttime="20200605 10:13:53.153"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:53.153" starttime="20200605 10:13:53.114"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:53.153" starttime="20200605 10:13:53.114"></status>
</kw>
<kw type="foritem" name="${ID} = 69">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:53.160" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/69</msg>
<msg timestamp="20200605 10:13:53.185" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/69: 0.000332999999999 seconds.</msg>
<msg timestamp="20200605 10:13:53.186" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:53 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:53.186" starttime="20200605 10:13:53.154"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:53.187" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:53.187" starttime="20200605 10:13:53.186"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:53.187" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:53.187" starttime="20200605 10:13:53.187"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:53.188" level="INFO">${PORT_ID} = SFP port</msg>
<status status="PASS" endtime="20200605 10:13:53.188" starttime="20200605 10:13:53.188"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:53.189" starttime="20200605 10:13:53.188"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:53.189" starttime="20200605 10:13:53.189"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:53.190" starttime="20200605 10:13:53.189"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:53.190" starttime="20200605 10:13:53.190"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:53.190" starttime="20200605 10:13:53.190"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:53.191" starttime="20200605 10:13:53.154"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:53.191" starttime="20200605 10:13:53.153"></status>
</kw>
<kw type="foritem" name="${ID} = 70">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:53.200" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/70</msg>
<msg timestamp="20200605 10:13:53.222" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/70: 0.00029 seconds.</msg>
<msg timestamp="20200605 10:13:53.223" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:53 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:53.223" starttime="20200605 10:13:53.191"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:53.224" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:53.224" starttime="20200605 10:13:53.223"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:53.224" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:53.224" starttime="20200605 10:13:53.224"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:53.225" level="INFO">${PORT_ID} = SFP port</msg>
<status status="PASS" endtime="20200605 10:13:53.225" starttime="20200605 10:13:53.225"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:53.226" starttime="20200605 10:13:53.225"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:53.227" starttime="20200605 10:13:53.226"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:53.228" starttime="20200605 10:13:53.227"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:53.230" starttime="20200605 10:13:53.229"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:53.230" starttime="20200605 10:13:53.228"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:53.230" starttime="20200605 10:13:53.191"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:53.230" starttime="20200605 10:13:53.191"></status>
</kw>
<kw type="foritem" name="${ID} = 71">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:53.237" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/71</msg>
<msg timestamp="20200605 10:13:53.265" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/71: 0.000285999999999 seconds.</msg>
<msg timestamp="20200605 10:13:53.266" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:53 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:53.266" starttime="20200605 10:13:53.230"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:53.266" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:53.266" starttime="20200605 10:13:53.266"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:53.267" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:53.267" starttime="20200605 10:13:53.267"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:53.267" level="INFO">${PORT_ID} = SFP port</msg>
<status status="PASS" endtime="20200605 10:13:53.268" starttime="20200605 10:13:53.267"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:53.269" starttime="20200605 10:13:53.268"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:53.270" starttime="20200605 10:13:53.269"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:53.271" starttime="20200605 10:13:53.270"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:53.272" starttime="20200605 10:13:53.271"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:53.272" starttime="20200605 10:13:53.271"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:53.272" starttime="20200605 10:13:53.230"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:53.272" starttime="20200605 10:13:53.230"></status>
</kw>
<kw type="foritem" name="${ID} = 72">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:53.279" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/72</msg>
<msg timestamp="20200605 10:13:53.304" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/72: 0.00033 seconds.</msg>
<msg timestamp="20200605 10:13:53.304" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:53 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:53.304" starttime="20200605 10:13:53.273"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:53.305" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:53.305" starttime="20200605 10:13:53.305"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:53.306" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:53.306" starttime="20200605 10:13:53.305"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:53.306" level="INFO">${PORT_ID} = SFP port</msg>
<status status="PASS" endtime="20200605 10:13:53.306" starttime="20200605 10:13:53.306"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:53.307" starttime="20200605 10:13:53.306"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:53.308" starttime="20200605 10:13:53.307"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:53.308" starttime="20200605 10:13:53.308"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:53.309" starttime="20200605 10:13:53.309"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:53.309" starttime="20200605 10:13:53.309"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:53.309" starttime="20200605 10:13:53.272"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:53.309" starttime="20200605 10:13:53.272"></status>
</kw>
<kw type="foritem" name="${ID} = 73">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200605 10:13:53.316" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/73</msg>
<msg timestamp="20200605 10:13:53.341" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/73: 0.000285 seconds.</msg>
<msg timestamp="20200605 10:13:53.341" level="INFO">${resp} = 200
date Fri, 05 Jun 2020 02:13:53 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200605 10:13:53.341" starttime="20200605 10:13:53.310"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200605 10:13:53.342" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200605 10:13:53.342" starttime="20200605 10:13:53.341"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200605 10:13:53.342" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200605 10:13:53.342" starttime="20200605 10:13:53.342"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200605 10:13:53.343" level="INFO">${PORT_ID} = SFP port</msg>
<status status="PASS" endtime="20200605 10:13:53.343" starttime="20200605 10:13:53.343"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:53.343" starttime="20200605 10:13:53.343"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:53.344" starttime="20200605 10:13:53.344"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:53.344" starttime="20200605 10:13:53.344"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200605 10:13:53.345" starttime="20200605 10:13:53.345"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:53.345" starttime="20200605 10:13:53.345"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:53.345" starttime="20200605 10:13:53.310"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:53.346" starttime="20200605 10:13:53.309"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:53.346" starttime="20200605 10:13:50.423"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:53.346" starttime="20200605 10:13:50.383"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:53.346" starttime="20200605 10:12:51.811"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200605 10:13:53.351" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200605 10:13:53.375" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000302 seconds.</msg>
<msg timestamp="20200605 10:13:53.375" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200605 10:13:53.376" starttime="20200605 10:13:53.346"></status>
</kw>
<status status="PASS" endtime="20200605 10:13:53.376" starttime="20200605 10:13:53.346"></status>
</kw>
<doc>Test omci send</doc>
<tags>
<tag>Test omci send</tag>
</tags>
<status status="PASS" endtime="20200605 10:13:53.376" critical="yes" starttime="20200605 10:12:51.776"></status>
</test>
<doc>Test BAL Rstful functionality.</doc>
<status status="PASS" endtime="20200605 10:13:53.377" starttime="20200605 10:10:12.540"></status>
</suite>
<status status="PASS" endtime="20200605 10:13:53.379" starttime="20200605 10:10:12.479"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="4">Critical Tests</stat>
<stat fail="0" pass="4">All Tests</stat>
</total>
<tag>
<stat fail="0" pass="1">Test Bal Restful opertaion test</stat>
<stat fail="0" pass="1">Test Flow add</stat>
<stat fail="0" pass="1">Test omci send</stat>
<stat fail="0" pass="1">Test ONU Rnage test</stat>
</tag>
<suite>
<stat fail="0" id="s1" name="Bal Test" pass="4">Bal Test</stat>
<stat fail="0" id="s1-s1" name="Test Bal" pass="4">Bal Test.Test Bal</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
