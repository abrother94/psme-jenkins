<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200601 13:20:12.066" generator="Robot 3.1.1 (Python 2.7.12 on linux2)">
<suite source="/home/voltha/workspace/XGSPON/6_Bal_Resf_API_Test/RF_Auto_Test/bal_test" id="s1" name="Bal Test">
<suite source="/home/voltha/workspace/XGSPON/6_Bal_Resf_API_Test/RF_Auto_Test/bal_test/test_bal.robot" id="s1-s1" name="Test Bal">
<test id="s1-s1-t1" name="Verify Restful API for BAL Test">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200601 13:20:13.156" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200601 13:20:13.181" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.00047 seconds.</msg>
<msg timestamp="20200601 13:20:13.181" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200601 13:20:13.181" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200601 13:20:13.182" starttime="20200601 13:20:13.151"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:13.182" starttime="20200601 13:20:13.150"></status>
</kw>
<kw name="Test Bal Component">
<tags>
<tag>Bal_Component</tag>
</tags>
<doc>Do basic test 1.Enable All PON MAC PON NNI port enable/disable.</doc>
<kw name="Disable All Tx Port">
<tags>
<tag>Disable Pon Port Tx</tag>
</tags>
<doc>Disable all port function</doc>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:13.189" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/</msg>
<msg timestamp="20200601 13:20:13.329" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/: 0.000481 seconds.</msg>
<msg timestamp="20200601 13:20:13.330" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:14 GMT
connection Keep-Alive
content-type application/json
content-length 1467


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPortCollection.EthernetSwitchPor...</msg>
<status status="PASS" endtime="20200601 13:20:13.330" starttime="20200601 13:20:13.183"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200601 13:20:13.331" level="INFO">Length is 20</msg>
<msg timestamp="20200601 13:20:13.331" level="INFO">${item_count} = 20</msg>
<status status="PASS" endtime="20200601 13:20:13.331" starttime="20200601 13:20:13.330"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable All Pon Port ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.331" starttime="20200601 13:20:13.331"></status>
</kw>
<kw type="for" name="${ID} IN RANGE [ 1 | ${item_count} ]">
<kw type="foritem" name="${ID} = 1">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:13.338" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200601 13:20:13.468" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000449 seconds.</msg>
<msg timestamp="20200601 13:20:13.468" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:14 GMT
connection Keep-Alive
content-type application/json
content-length 2326


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 13:20:13.469" starttime="20200601 13:20:13.332"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:20:13.469" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:20:13.469" starttime="20200601 13:20:13.469"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 13:20:13.470" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200601 13:20:13.470" starttime="20200601 13:20:13.470"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 13:20:13.470" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 13:20:13.471" starttime="20200601 13:20:13.470"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.471" starttime="20200601 13:20:13.471"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.472" starttime="20200601 13:20:13.471"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.473" starttime="20200601 13:20:13.472"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
</arguments>
<kw name="Test Tx Op Down">
<tags>
<tag>Test tx_disable</tag>
</tags>
<doc>Test SFP port tx disable function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OP_DOWN)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200601 13:20:13.478" level="INFO">${payload} = {u'OperationalState': u'Down'}</msg>
<status status="PASS" endtime="20200601 13:20:13.478" starttime="20200601 13:20:13.474"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<msg timestamp="20200601 13:20:13.486" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200601 13:20:13.519" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000492 seconds.</msg>
<status status="PASS" endtime="20200601 13:20:13.520" starttime="20200601 13:20:13.478"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:13.520" starttime="20200601 13:20:13.474"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:13.520" starttime="20200601 13:20:13.474"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:13.520" starttime="20200601 13:20:13.473"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:13.520" starttime="20200601 13:20:13.332"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:13.520" starttime="20200601 13:20:13.332"></status>
</kw>
<kw type="foritem" name="${ID} = 2">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:13.527" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/2</msg>
<msg timestamp="20200601 13:20:13.551" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/2: 0.000274 seconds.</msg>
<msg timestamp="20200601 13:20:13.551" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:14 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 13:20:13.551" starttime="20200601 13:20:13.521"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:20:13.552" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:20:13.552" starttime="20200601 13:20:13.552"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 13:20:13.553" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 13:20:13.553" starttime="20200601 13:20:13.552"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 13:20:13.553" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 13:20:13.553" starttime="20200601 13:20:13.553"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.554" starttime="20200601 13:20:13.553"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.558" starttime="20200601 13:20:13.554"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.559" starttime="20200601 13:20:13.559"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.560" starttime="20200601 13:20:13.560"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:13.560" starttime="20200601 13:20:13.559"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:13.560" starttime="20200601 13:20:13.521"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:13.560" starttime="20200601 13:20:13.520"></status>
</kw>
<kw type="foritem" name="${ID} = 3">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:13.567" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/3</msg>
<msg timestamp="20200601 13:20:13.592" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/3: 0.000311 seconds.</msg>
<msg timestamp="20200601 13:20:13.593" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:14 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 13:20:13.593" starttime="20200601 13:20:13.561"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:20:13.593" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:20:13.594" starttime="20200601 13:20:13.593"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 13:20:13.594" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 13:20:13.594" starttime="20200601 13:20:13.594"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 13:20:13.595" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 13:20:13.595" starttime="20200601 13:20:13.594"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.595" starttime="20200601 13:20:13.595"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.596" starttime="20200601 13:20:13.595"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.597" starttime="20200601 13:20:13.596"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.598" starttime="20200601 13:20:13.597"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:13.598" starttime="20200601 13:20:13.597"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:13.598" starttime="20200601 13:20:13.561"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:13.598" starttime="20200601 13:20:13.560"></status>
</kw>
<kw type="foritem" name="${ID} = 4">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:13.605" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/4</msg>
<msg timestamp="20200601 13:20:13.625" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/4: 0.000277 seconds.</msg>
<msg timestamp="20200601 13:20:13.626" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:14 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 13:20:13.626" starttime="20200601 13:20:13.598"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:20:13.626" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:20:13.627" starttime="20200601 13:20:13.626"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 13:20:13.627" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 13:20:13.627" starttime="20200601 13:20:13.627"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 13:20:13.628" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 13:20:13.628" starttime="20200601 13:20:13.627"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.628" starttime="20200601 13:20:13.628"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.629" starttime="20200601 13:20:13.628"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.630" starttime="20200601 13:20:13.629"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.631" starttime="20200601 13:20:13.631"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:13.631" starttime="20200601 13:20:13.631"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:13.631" starttime="20200601 13:20:13.598"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:13.632" starttime="20200601 13:20:13.598"></status>
</kw>
<kw type="foritem" name="${ID} = 5">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:13.638" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/5</msg>
<msg timestamp="20200601 13:20:13.660" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/5: 0.000276 seconds.</msg>
<msg timestamp="20200601 13:20:13.660" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:14 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 13:20:13.660" starttime="20200601 13:20:13.632"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:20:13.661" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:20:13.661" starttime="20200601 13:20:13.661"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 13:20:13.662" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 13:20:13.662" starttime="20200601 13:20:13.661"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 13:20:13.662" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 13:20:13.662" starttime="20200601 13:20:13.662"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.663" starttime="20200601 13:20:13.662"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.663" starttime="20200601 13:20:13.663"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.664" starttime="20200601 13:20:13.663"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.665" starttime="20200601 13:20:13.665"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:13.665" starttime="20200601 13:20:13.664"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:13.665" starttime="20200601 13:20:13.632"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:13.665" starttime="20200601 13:20:13.632"></status>
</kw>
<kw type="foritem" name="${ID} = 6">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:13.672" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/6</msg>
<msg timestamp="20200601 13:20:13.695" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/6: 0.000276 seconds.</msg>
<msg timestamp="20200601 13:20:13.695" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:15 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 13:20:13.695" starttime="20200601 13:20:13.666"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:20:13.696" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:20:13.696" starttime="20200601 13:20:13.695"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 13:20:13.696" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 13:20:13.696" starttime="20200601 13:20:13.696"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 13:20:13.697" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 13:20:13.697" starttime="20200601 13:20:13.696"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.697" starttime="20200601 13:20:13.697"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.698" starttime="20200601 13:20:13.698"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.700" starttime="20200601 13:20:13.698"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.701" starttime="20200601 13:20:13.700"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:13.701" starttime="20200601 13:20:13.700"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:13.701" starttime="20200601 13:20:13.665"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:13.701" starttime="20200601 13:20:13.665"></status>
</kw>
<kw type="foritem" name="${ID} = 7">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:13.707" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/7</msg>
<msg timestamp="20200601 13:20:13.727" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/7: 0.00044 seconds.</msg>
<msg timestamp="20200601 13:20:13.728" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:15 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 13:20:13.728" starttime="20200601 13:20:13.701"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:20:13.730" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:20:13.730" starttime="20200601 13:20:13.729"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 13:20:13.731" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 13:20:13.731" starttime="20200601 13:20:13.730"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 13:20:13.732" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 13:20:13.732" starttime="20200601 13:20:13.731"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.732" starttime="20200601 13:20:13.732"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.733" starttime="20200601 13:20:13.733"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.734" starttime="20200601 13:20:13.734"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.736" starttime="20200601 13:20:13.735"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:13.736" starttime="20200601 13:20:13.735"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:13.736" starttime="20200601 13:20:13.701"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:13.736" starttime="20200601 13:20:13.701"></status>
</kw>
<kw type="foritem" name="${ID} = 8">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:13.747" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/8</msg>
<msg timestamp="20200601 13:20:13.771" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/8: 0.000428 seconds.</msg>
<msg timestamp="20200601 13:20:13.772" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:15 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 13:20:13.772" starttime="20200601 13:20:13.737"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:20:13.773" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:20:13.773" starttime="20200601 13:20:13.773"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 13:20:13.774" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 13:20:13.774" starttime="20200601 13:20:13.774"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 13:20:13.775" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 13:20:13.775" starttime="20200601 13:20:13.775"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.776" starttime="20200601 13:20:13.775"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.777" starttime="20200601 13:20:13.776"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.778" starttime="20200601 13:20:13.777"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.779" starttime="20200601 13:20:13.779"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:13.779" starttime="20200601 13:20:13.778"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:13.779" starttime="20200601 13:20:13.736"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:13.779" starttime="20200601 13:20:13.736"></status>
</kw>
<kw type="foritem" name="${ID} = 9">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:13.791" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/9</msg>
<msg timestamp="20200601 13:20:13.814" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/9: 0.000457 seconds.</msg>
<msg timestamp="20200601 13:20:13.815" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:15 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 13:20:13.815" starttime="20200601 13:20:13.780"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:20:13.816" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:20:13.816" starttime="20200601 13:20:13.815"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 13:20:13.817" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 13:20:13.817" starttime="20200601 13:20:13.816"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 13:20:13.818" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 13:20:13.818" starttime="20200601 13:20:13.817"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.820" starttime="20200601 13:20:13.819"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.820" starttime="20200601 13:20:13.820"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.822" starttime="20200601 13:20:13.821"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.823" starttime="20200601 13:20:13.823"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:13.823" starttime="20200601 13:20:13.822"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:13.824" starttime="20200601 13:20:13.780"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:13.824" starttime="20200601 13:20:13.780"></status>
</kw>
<kw type="foritem" name="${ID} = 10">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:13.834" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/10</msg>
<msg timestamp="20200601 13:20:13.859" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/10: 0.000329 seconds.</msg>
<msg timestamp="20200601 13:20:13.859" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:15 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 13:20:13.860" starttime="20200601 13:20:13.825"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:20:13.860" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:20:13.860" starttime="20200601 13:20:13.860"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 13:20:13.861" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 13:20:13.861" starttime="20200601 13:20:13.860"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 13:20:13.861" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 13:20:13.861" starttime="20200601 13:20:13.861"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.862" starttime="20200601 13:20:13.861"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.862" starttime="20200601 13:20:13.862"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.863" starttime="20200601 13:20:13.863"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.864" starttime="20200601 13:20:13.864"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:13.865" starttime="20200601 13:20:13.864"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:13.865" starttime="20200601 13:20:13.824"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:13.865" starttime="20200601 13:20:13.824"></status>
</kw>
<kw type="foritem" name="${ID} = 11">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:13.871" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/11</msg>
<msg timestamp="20200601 13:20:13.895" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/11: 0.000289 seconds.</msg>
<msg timestamp="20200601 13:20:13.895" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:15 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 13:20:13.895" starttime="20200601 13:20:13.866"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:20:13.896" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:20:13.896" starttime="20200601 13:20:13.896"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 13:20:13.897" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 13:20:13.897" starttime="20200601 13:20:13.896"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 13:20:13.897" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 13:20:13.897" starttime="20200601 13:20:13.897"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.898" starttime="20200601 13:20:13.897"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.898" starttime="20200601 13:20:13.898"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.900" starttime="20200601 13:20:13.899"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.901" starttime="20200601 13:20:13.901"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:13.901" starttime="20200601 13:20:13.900"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:13.901" starttime="20200601 13:20:13.865"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:13.901" starttime="20200601 13:20:13.865"></status>
</kw>
<kw type="foritem" name="${ID} = 12">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:13.908" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/12</msg>
<msg timestamp="20200601 13:20:13.924" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/12: 0.000278 seconds.</msg>
<msg timestamp="20200601 13:20:13.924" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:15 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 13:20:13.924" starttime="20200601 13:20:13.902"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:20:13.925" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:20:13.925" starttime="20200601 13:20:13.925"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 13:20:13.926" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 13:20:13.926" starttime="20200601 13:20:13.925"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 13:20:13.926" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 13:20:13.926" starttime="20200601 13:20:13.926"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.927" starttime="20200601 13:20:13.926"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.927" starttime="20200601 13:20:13.927"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.928" starttime="20200601 13:20:13.928"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.930" starttime="20200601 13:20:13.930"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:13.930" starttime="20200601 13:20:13.929"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:13.930" starttime="20200601 13:20:13.902"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:13.930" starttime="20200601 13:20:13.901"></status>
</kw>
<kw type="foritem" name="${ID} = 13">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:13.937" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/13</msg>
<msg timestamp="20200601 13:20:13.956" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/13: 0.000304 seconds.</msg>
<msg timestamp="20200601 13:20:13.956" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:15 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 13:20:13.956" starttime="20200601 13:20:13.931"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:20:13.957" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:20:13.957" starttime="20200601 13:20:13.956"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 13:20:13.957" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 13:20:13.957" starttime="20200601 13:20:13.957"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 13:20:13.958" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 13:20:13.958" starttime="20200601 13:20:13.957"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.958" starttime="20200601 13:20:13.958"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.959" starttime="20200601 13:20:13.958"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.960" starttime="20200601 13:20:13.959"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.961" starttime="20200601 13:20:13.960"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:13.961" starttime="20200601 13:20:13.960"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:13.961" starttime="20200601 13:20:13.930"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:13.961" starttime="20200601 13:20:13.930"></status>
</kw>
<kw type="foritem" name="${ID} = 14">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:13.967" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/14</msg>
<msg timestamp="20200601 13:20:13.992" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/14: 0.000321 seconds.</msg>
<msg timestamp="20200601 13:20:13.992" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:15 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 13:20:13.992" starttime="20200601 13:20:13.961"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:20:13.993" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:20:13.993" starttime="20200601 13:20:13.993"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 13:20:13.994" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 13:20:13.994" starttime="20200601 13:20:13.993"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 13:20:13.994" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 13:20:13.994" starttime="20200601 13:20:13.994"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.995" starttime="20200601 13:20:13.994"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.995" starttime="20200601 13:20:13.995"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.996" starttime="20200601 13:20:13.996"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:13.997" starttime="20200601 13:20:13.997"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:13.997" starttime="20200601 13:20:13.996"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:13.997" starttime="20200601 13:20:13.961"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:13.997" starttime="20200601 13:20:13.961"></status>
</kw>
<kw type="foritem" name="${ID} = 15">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:14.004" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/15</msg>
<msg timestamp="20200601 13:20:14.023" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/15: 0.00027 seconds.</msg>
<msg timestamp="20200601 13:20:14.024" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:15 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 13:20:14.024" starttime="20200601 13:20:13.998"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:20:14.024" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:20:14.024" starttime="20200601 13:20:14.024"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 13:20:14.026" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 13:20:14.026" starttime="20200601 13:20:14.025"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 13:20:14.027" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 13:20:14.027" starttime="20200601 13:20:14.026"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:14.027" starttime="20200601 13:20:14.027"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:14.028" starttime="20200601 13:20:14.028"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:14.029" starttime="20200601 13:20:14.028"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:14.031" starttime="20200601 13:20:14.030"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:14.031" starttime="20200601 13:20:14.029"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:14.031" starttime="20200601 13:20:13.998"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:14.031" starttime="20200601 13:20:13.997"></status>
</kw>
<kw type="foritem" name="${ID} = 16">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:14.038" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/16</msg>
<msg timestamp="20200601 13:20:14.063" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/16: 0.000273 seconds.</msg>
<msg timestamp="20200601 13:20:14.064" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:15 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 13:20:14.064" starttime="20200601 13:20:14.031"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:20:14.065" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:20:14.065" starttime="20200601 13:20:14.064"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 13:20:14.065" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 13:20:14.065" starttime="20200601 13:20:14.065"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 13:20:14.066" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 13:20:14.066" starttime="20200601 13:20:14.065"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:14.066" starttime="20200601 13:20:14.066"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:14.067" starttime="20200601 13:20:14.066"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:14.067" starttime="20200601 13:20:14.067"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:14.068" starttime="20200601 13:20:14.068"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:14.069" starttime="20200601 13:20:14.068"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:14.069" starttime="20200601 13:20:14.031"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:14.069" starttime="20200601 13:20:14.031"></status>
</kw>
<kw type="foritem" name="${ID} = 17">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:14.075" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/17</msg>
<msg timestamp="20200601 13:20:14.096" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/17: 0.000406 seconds.</msg>
<msg timestamp="20200601 13:20:14.096" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:15 GMT
connection Keep-Alive
content-type application/json
content-length 2440


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 13:20:14.096" starttime="20200601 13:20:14.069"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:20:14.097" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:20:14.097" starttime="20200601 13:20:14.097"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 13:20:14.098" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200601 13:20:14.098" starttime="20200601 13:20:14.097"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 13:20:14.098" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200601 13:20:14.098" starttime="20200601 13:20:14.098"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:14.100" starttime="20200601 13:20:14.099"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:14.101" starttime="20200601 13:20:14.100"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:14.101" starttime="20200601 13:20:14.101"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:14.102" starttime="20200601 13:20:14.102"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:14.102" starttime="20200601 13:20:14.102"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:14.102" starttime="20200601 13:20:14.069"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:14.102" starttime="20200601 13:20:14.069"></status>
</kw>
<kw type="foritem" name="${ID} = 18">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:14.109" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/18</msg>
<msg timestamp="20200601 13:20:14.132" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/18: 0.000268 seconds.</msg>
<msg timestamp="20200601 13:20:14.132" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:15 GMT
connection Keep-Alive
content-type application/json
content-length 1056


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 13:20:14.132" starttime="20200601 13:20:14.103"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:20:14.133" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:20:14.133" starttime="20200601 13:20:14.132"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 13:20:14.133" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 13:20:14.133" starttime="20200601 13:20:14.133"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 13:20:14.134" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200601 13:20:14.134" starttime="20200601 13:20:14.134"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:14.134" starttime="20200601 13:20:14.134"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:14.135" starttime="20200601 13:20:14.135"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:14.136" starttime="20200601 13:20:14.135"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:14.137" starttime="20200601 13:20:14.136"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:14.137" starttime="20200601 13:20:14.136"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:14.137" starttime="20200601 13:20:14.103"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:14.137" starttime="20200601 13:20:14.103"></status>
</kw>
<kw type="foritem" name="${ID} = 19">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:14.144" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/19</msg>
<msg timestamp="20200601 13:20:14.163" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/19: 0.000277 seconds.</msg>
<msg timestamp="20200601 13:20:14.163" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:15 GMT
connection Keep-Alive
content-type application/json
content-length 1056


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 13:20:14.163" starttime="20200601 13:20:14.137"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:20:14.164" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:20:14.164" starttime="20200601 13:20:14.163"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 13:20:14.164" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 13:20:14.164" starttime="20200601 13:20:14.164"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 13:20:14.165" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200601 13:20:14.165" starttime="20200601 13:20:14.165"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:14.165" starttime="20200601 13:20:14.165"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:14.166" starttime="20200601 13:20:14.166"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:14.167" starttime="20200601 13:20:14.166"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:14.168" starttime="20200601 13:20:14.167"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:14.168" starttime="20200601 13:20:14.167"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:14.168" starttime="20200601 13:20:14.137"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:14.168" starttime="20200601 13:20:14.137"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:14.168" starttime="20200601 13:20:13.332"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:14.168" starttime="20200601 13:20:13.182"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PON_TYPE}' == 'GPON'</arg>
<arg>Log to console</arg>
<arg>"####### GPON TESTING ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### XGSPON TESTING ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### XGSPON TESTING ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:14.169" starttime="20200601 13:20:14.169"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:14.169" starttime="20200601 13:20:14.168"></status>
</kw>
<kw name="Test Bal Enable">
<tags>
<tag>Verify_Bal_Enable</tag>
</tags>
<doc>Enable Bal</doc>
<kw type="for" name="${i} IN RANGE [ 1 | 80 ]">
<kw type="foritem" name="${i} = 1">
<kw name="Test Wait Bal Enable">
<tags>
<tag>Verify_Waut_Bal_Enable</tag>
</tags>
<doc>Wait Enable Bal</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:14.170" starttime="20200601 13:20:14.170"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:14.176" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200601 13:20:14.197" level="INFO">Response Time to /redfish/v1/Olt: 0.000328 seconds.</msg>
<msg timestamp="20200601 13:20:14.197" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:15 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200601 13:20:14.197" starttime="20200601 13:20:14.170"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:20:14.198" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:20:14.198" starttime="20200601 13:20:14.198"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['BalState']}</arg>
</arguments>
<assign>
<var>${BAL_STATE}</var>
</assign>
<msg timestamp="20200601 13:20:14.199" level="INFO">${BAL_STATE} = up</msg>
<status status="PASS" endtime="20200601 13:20:14.199" starttime="20200601 13:20:14.198"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BAL_STATE}' == 'up'</arg>
<arg>Log to console</arg>
<arg>"####### Up ######"</arg>
<arg>${bal_state} =</arg>
<arg>"up"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Up ######"</arg>
<arg>${bal_state} =</arg>
<arg>"up"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:14.200" starttime="20200601 13:20:14.199"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:14.200" starttime="20200601 13:20:14.199"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 13:20:15.202" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 13:20:15.202" starttime="20200601 13:20:14.200"></status>
</kw>
<msg timestamp="20200601 13:20:15.202" level="INFO">${result} = up</msg>
<status status="PASS" endtime="20200601 13:20:15.202" starttime="20200601 13:20:14.169"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:15.203" starttime="20200601 13:20:15.203"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${result}' == 'up'</arg>
</arguments>
<msg timestamp="20200601 13:20:15.204" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20200601 13:20:15.204" starttime="20200601 13:20:15.204"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:15.205" starttime="20200601 13:20:14.169"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:15.205" starttime="20200601 13:20:14.169"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${result}</arg>
<arg>up</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:15.205" starttime="20200601 13:20:15.205"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OPT_ENABLE)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200601 13:20:15.208" level="INFO">${payload} = {u'OltOperateState': True}</msg>
<status status="PASS" endtime="20200601 13:20:15.208" starttime="20200601 13:20:15.205"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:15.214" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200601 13:20:16.842" level="INFO">Response Time to /redfish/v1/Olt: 0.000349 seconds.</msg>
<msg timestamp="20200601 13:20:16.843" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:18 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:20:16.843" starttime="20200601 13:20:15.209"></status>
</kw>
<kw type="for" name="${i} IN RANGE [ 1 | 60 ]">
<kw type="foritem" name="${i} = 1">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:16.844" starttime="20200601 13:20:16.844"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:16.851" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200601 13:20:16.875" level="INFO">Response Time to /redfish/v1/Olt: 0.000314 seconds.</msg>
<msg timestamp="20200601 13:20:16.875" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:18 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200601 13:20:16.875" starttime="20200601 13:20:16.845"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:20:16.876" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:20:16.876" starttime="20200601 13:20:16.876"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200601 13:20:16.877" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200601 13:20:16.877" starttime="20200601 13:20:16.876"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:16.877" starttime="20200601 13:20:16.877"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:16.878" starttime="20200601 13:20:16.878"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:16.879" starttime="20200601 13:20:16.878"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 13:20:17.879" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 13:20:17.880" starttime="20200601 13:20:16.879"></status>
</kw>
<msg timestamp="20200601 13:20:17.880" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200601 13:20:17.880" starttime="20200601 13:20:16.843"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:17.880" starttime="20200601 13:20:17.880"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:17.881" starttime="20200601 13:20:17.881"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:17.881" starttime="20200601 13:20:16.843"></status>
</kw>
<kw type="foritem" name="${i} = 2">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:17.882" starttime="20200601 13:20:17.882"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:17.889" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200601 13:20:17.912" level="INFO">Response Time to /redfish/v1/Olt: 0.000304 seconds.</msg>
<msg timestamp="20200601 13:20:17.913" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:19 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200601 13:20:17.913" starttime="20200601 13:20:17.883"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:20:17.914" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:20:17.914" starttime="20200601 13:20:17.913"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200601 13:20:17.914" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200601 13:20:17.914" starttime="20200601 13:20:17.914"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:17.915" starttime="20200601 13:20:17.915"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:17.916" starttime="20200601 13:20:17.916"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:17.917" starttime="20200601 13:20:17.916"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 13:20:18.917" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 13:20:18.918" starttime="20200601 13:20:17.917"></status>
</kw>
<msg timestamp="20200601 13:20:18.918" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200601 13:20:18.918" starttime="20200601 13:20:17.882"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:18.918" starttime="20200601 13:20:18.918"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:18.919" starttime="20200601 13:20:18.919"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:18.919" starttime="20200601 13:20:17.882"></status>
</kw>
<kw type="foritem" name="${i} = 3">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:18.920" starttime="20200601 13:20:18.920"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:18.927" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200601 13:20:18.949" level="INFO">Response Time to /redfish/v1/Olt: 0.00028 seconds.</msg>
<msg timestamp="20200601 13:20:18.949" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:20 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200601 13:20:18.949" starttime="20200601 13:20:18.921"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:20:18.950" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:20:18.950" starttime="20200601 13:20:18.950"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200601 13:20:18.951" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200601 13:20:18.951" starttime="20200601 13:20:18.950"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:18.951" starttime="20200601 13:20:18.951"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:18.952" starttime="20200601 13:20:18.952"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:18.953" starttime="20200601 13:20:18.952"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 13:20:19.953" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 13:20:19.953" starttime="20200601 13:20:18.953"></status>
</kw>
<msg timestamp="20200601 13:20:19.954" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200601 13:20:19.954" starttime="20200601 13:20:18.920"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:19.954" starttime="20200601 13:20:19.954"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:19.955" starttime="20200601 13:20:19.955"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:19.955" starttime="20200601 13:20:18.919"></status>
</kw>
<kw type="foritem" name="${i} = 4">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:19.956" starttime="20200601 13:20:19.956"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:19.963" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200601 13:20:19.987" level="INFO">Response Time to /redfish/v1/Olt: 0.000405 seconds.</msg>
<msg timestamp="20200601 13:20:19.987" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:21 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200601 13:20:19.987" starttime="20200601 13:20:19.957"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:20:19.988" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:20:19.988" starttime="20200601 13:20:19.988"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200601 13:20:19.989" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200601 13:20:19.989" starttime="20200601 13:20:19.989"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:19.989" starttime="20200601 13:20:19.989"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:19.991" starttime="20200601 13:20:19.990"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:19.991" starttime="20200601 13:20:19.990"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 13:20:20.999" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 13:20:20.999" starttime="20200601 13:20:19.991"></status>
</kw>
<msg timestamp="20200601 13:20:21.000" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200601 13:20:21.000" starttime="20200601 13:20:19.956"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:21.000" starttime="20200601 13:20:21.000"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:21.001" starttime="20200601 13:20:21.001"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:21.001" starttime="20200601 13:20:19.955"></status>
</kw>
<kw type="foritem" name="${i} = 5">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:21.002" starttime="20200601 13:20:21.001"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:21.008" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200601 13:20:21.028" level="INFO">Response Time to /redfish/v1/Olt: 0.00032 seconds.</msg>
<msg timestamp="20200601 13:20:21.029" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:22 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200601 13:20:21.029" starttime="20200601 13:20:21.002"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:20:21.030" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:20:21.030" starttime="20200601 13:20:21.029"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200601 13:20:21.030" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200601 13:20:21.030" starttime="20200601 13:20:21.030"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:21.031" starttime="20200601 13:20:21.030"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:21.032" starttime="20200601 13:20:21.031"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:21.032" starttime="20200601 13:20:21.031"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 13:20:22.032" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 13:20:22.033" starttime="20200601 13:20:21.032"></status>
</kw>
<msg timestamp="20200601 13:20:22.033" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200601 13:20:22.033" starttime="20200601 13:20:21.001"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:22.034" starttime="20200601 13:20:22.034"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:22.035" starttime="20200601 13:20:22.035"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:22.035" starttime="20200601 13:20:21.001"></status>
</kw>
<kw type="foritem" name="${i} = 6">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:22.036" starttime="20200601 13:20:22.036"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:22.044" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200601 13:20:22.067" level="INFO">Response Time to /redfish/v1/Olt: 0.000309 seconds.</msg>
<msg timestamp="20200601 13:20:22.068" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:23 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200601 13:20:22.068" starttime="20200601 13:20:22.037"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:20:22.068" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:20:22.068" starttime="20200601 13:20:22.068"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200601 13:20:22.069" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200601 13:20:22.069" starttime="20200601 13:20:22.069"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:22.070" starttime="20200601 13:20:22.069"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:22.071" starttime="20200601 13:20:22.071"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:22.072" starttime="20200601 13:20:22.071"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 13:20:23.072" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 13:20:23.072" starttime="20200601 13:20:22.072"></status>
</kw>
<msg timestamp="20200601 13:20:23.073" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200601 13:20:23.073" starttime="20200601 13:20:22.036"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:23.073" starttime="20200601 13:20:23.073"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:23.074" starttime="20200601 13:20:23.074"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:23.075" starttime="20200601 13:20:22.036"></status>
</kw>
<kw type="foritem" name="${i} = 7">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:23.075" starttime="20200601 13:20:23.075"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:23.082" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200601 13:20:23.107" level="INFO">Response Time to /redfish/v1/Olt: 0.000305 seconds.</msg>
<msg timestamp="20200601 13:20:23.108" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:24 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200601 13:20:23.108" starttime="20200601 13:20:23.076"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:20:23.108" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:20:23.108" starttime="20200601 13:20:23.108"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200601 13:20:23.109" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200601 13:20:23.109" starttime="20200601 13:20:23.109"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:23.110" starttime="20200601 13:20:23.109"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:23.111" starttime="20200601 13:20:23.111"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:23.111" starttime="20200601 13:20:23.110"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 13:20:24.112" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 13:20:24.112" starttime="20200601 13:20:23.112"></status>
</kw>
<msg timestamp="20200601 13:20:24.113" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200601 13:20:24.113" starttime="20200601 13:20:23.075"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:24.113" starttime="20200601 13:20:24.113"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:24.114" starttime="20200601 13:20:24.114"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:24.114" starttime="20200601 13:20:23.075"></status>
</kw>
<kw type="foritem" name="${i} = 8">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:24.115" starttime="20200601 13:20:24.115"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:24.121" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200601 13:20:24.145" level="INFO">Response Time to /redfish/v1/Olt: 0.000329 seconds.</msg>
<msg timestamp="20200601 13:20:24.146" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:25 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200601 13:20:24.146" starttime="20200601 13:20:24.115"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:20:24.147" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:20:24.147" starttime="20200601 13:20:24.146"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200601 13:20:24.147" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200601 13:20:24.147" starttime="20200601 13:20:24.147"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:24.148" starttime="20200601 13:20:24.148"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:24.149" starttime="20200601 13:20:24.149"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:24.150" starttime="20200601 13:20:24.149"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 13:20:25.150" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 13:20:25.150" starttime="20200601 13:20:24.150"></status>
</kw>
<msg timestamp="20200601 13:20:25.151" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200601 13:20:25.151" starttime="20200601 13:20:24.114"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:25.151" starttime="20200601 13:20:25.151"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:25.152" starttime="20200601 13:20:25.152"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:25.152" starttime="20200601 13:20:24.114"></status>
</kw>
<kw type="foritem" name="${i} = 9">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:25.153" starttime="20200601 13:20:25.153"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:25.160" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200601 13:20:25.183" level="INFO">Response Time to /redfish/v1/Olt: 0.000315 seconds.</msg>
<msg timestamp="20200601 13:20:25.184" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:26 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200601 13:20:25.184" starttime="20200601 13:20:25.154"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:20:25.185" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:20:25.185" starttime="20200601 13:20:25.184"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200601 13:20:25.185" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200601 13:20:25.185" starttime="20200601 13:20:25.185"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:25.186" starttime="20200601 13:20:25.186"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:25.187" starttime="20200601 13:20:25.187"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:25.188" starttime="20200601 13:20:25.187"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 13:20:26.189" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 13:20:26.189" starttime="20200601 13:20:25.188"></status>
</kw>
<msg timestamp="20200601 13:20:26.189" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200601 13:20:26.189" starttime="20200601 13:20:25.153"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:26.190" starttime="20200601 13:20:26.190"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:26.191" starttime="20200601 13:20:26.191"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:26.191" starttime="20200601 13:20:25.153"></status>
</kw>
<kw type="foritem" name="${i} = 10">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:26.192" starttime="20200601 13:20:26.192"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:26.199" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200601 13:20:26.220" level="INFO">Response Time to /redfish/v1/Olt: 0.000405 seconds.</msg>
<msg timestamp="20200601 13:20:26.220" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:27 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200601 13:20:26.220" starttime="20200601 13:20:26.193"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:20:26.221" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:20:26.221" starttime="20200601 13:20:26.220"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200601 13:20:26.222" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200601 13:20:26.222" starttime="20200601 13:20:26.221"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:26.222" starttime="20200601 13:20:26.222"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:26.224" starttime="20200601 13:20:26.223"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:26.224" starttime="20200601 13:20:26.223"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 13:20:27.225" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 13:20:27.225" starttime="20200601 13:20:26.224"></status>
</kw>
<msg timestamp="20200601 13:20:27.225" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200601 13:20:27.225" starttime="20200601 13:20:26.191"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:27.226" starttime="20200601 13:20:27.226"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:27.227" starttime="20200601 13:20:27.227"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:27.227" starttime="20200601 13:20:26.191"></status>
</kw>
<kw type="foritem" name="${i} = 11">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:27.228" starttime="20200601 13:20:27.227"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:27.234" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200601 13:20:27.259" level="INFO">Response Time to /redfish/v1/Olt: 0.000362 seconds.</msg>
<msg timestamp="20200601 13:20:27.259" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:28 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200601 13:20:27.259" starttime="20200601 13:20:27.228"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:20:27.260" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:20:27.260" starttime="20200601 13:20:27.260"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200601 13:20:27.260" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200601 13:20:27.261" starttime="20200601 13:20:27.260"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:27.261" starttime="20200601 13:20:27.261"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:27.262" starttime="20200601 13:20:27.262"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:27.263" starttime="20200601 13:20:27.262"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 13:20:28.263" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 13:20:28.263" starttime="20200601 13:20:27.263"></status>
</kw>
<msg timestamp="20200601 13:20:28.264" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200601 13:20:28.264" starttime="20200601 13:20:27.227"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:28.264" starttime="20200601 13:20:28.264"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:28.265" starttime="20200601 13:20:28.265"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:28.266" starttime="20200601 13:20:27.227"></status>
</kw>
<kw type="foritem" name="${i} = 12">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:28.266" starttime="20200601 13:20:28.266"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:28.273" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200601 13:20:28.295" level="INFO">Response Time to /redfish/v1/Olt: 0.000362 seconds.</msg>
<msg timestamp="20200601 13:20:28.295" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:29 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200601 13:20:28.295" starttime="20200601 13:20:28.267"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:20:28.296" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:20:28.296" starttime="20200601 13:20:28.296"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200601 13:20:28.297" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200601 13:20:28.297" starttime="20200601 13:20:28.297"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:28.297" starttime="20200601 13:20:28.297"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:28.299" starttime="20200601 13:20:28.299"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:28.299" starttime="20200601 13:20:28.298"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 13:20:29.300" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 13:20:29.300" starttime="20200601 13:20:28.299"></status>
</kw>
<msg timestamp="20200601 13:20:29.300" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200601 13:20:29.300" starttime="20200601 13:20:28.266"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:29.301" starttime="20200601 13:20:29.301"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:29.302" starttime="20200601 13:20:29.302"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:29.302" starttime="20200601 13:20:28.266"></status>
</kw>
<kw type="foritem" name="${i} = 13">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:29.303" starttime="20200601 13:20:29.303"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:29.309" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200601 13:20:29.332" level="INFO">Response Time to /redfish/v1/Olt: 0.000312 seconds.</msg>
<msg timestamp="20200601 13:20:29.332" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:30 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200601 13:20:29.333" starttime="20200601 13:20:29.303"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:20:29.333" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:20:29.333" starttime="20200601 13:20:29.333"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200601 13:20:29.334" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200601 13:20:29.334" starttime="20200601 13:20:29.334"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:29.334" starttime="20200601 13:20:29.334"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:29.336" starttime="20200601 13:20:29.336"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:29.336" starttime="20200601 13:20:29.335"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 13:20:30.337" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 13:20:30.337" starttime="20200601 13:20:29.337"></status>
</kw>
<msg timestamp="20200601 13:20:30.337" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200601 13:20:30.337" starttime="20200601 13:20:29.302"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:30.339" starttime="20200601 13:20:30.338"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:30.339" starttime="20200601 13:20:30.339"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:30.339" starttime="20200601 13:20:29.302"></status>
</kw>
<kw type="foritem" name="${i} = 14">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:30.340" starttime="20200601 13:20:30.340"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:30.347" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200601 13:20:30.369" level="INFO">Response Time to /redfish/v1/Olt: 0.00034 seconds.</msg>
<msg timestamp="20200601 13:20:30.369" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:31 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200601 13:20:30.369" starttime="20200601 13:20:30.341"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:20:30.370" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:20:30.370" starttime="20200601 13:20:30.370"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200601 13:20:30.371" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200601 13:20:30.371" starttime="20200601 13:20:30.370"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:30.371" starttime="20200601 13:20:30.371"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:30.372" starttime="20200601 13:20:30.372"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:30.373" starttime="20200601 13:20:30.372"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 13:20:31.373" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 13:20:31.374" starttime="20200601 13:20:30.373"></status>
</kw>
<msg timestamp="20200601 13:20:31.374" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200601 13:20:31.374" starttime="20200601 13:20:30.340"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:31.374" starttime="20200601 13:20:31.374"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:31.375" starttime="20200601 13:20:31.375"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:31.375" starttime="20200601 13:20:30.339"></status>
</kw>
<kw type="foritem" name="${i} = 15">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:31.377" starttime="20200601 13:20:31.376"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:31.384" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200601 13:20:31.409" level="INFO">Response Time to /redfish/v1/Olt: 0.000287 seconds.</msg>
<msg timestamp="20200601 13:20:31.409" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:32 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200601 13:20:31.409" starttime="20200601 13:20:31.377"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:20:31.410" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:20:31.410" starttime="20200601 13:20:31.410"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200601 13:20:31.411" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200601 13:20:31.411" starttime="20200601 13:20:31.410"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:31.411" starttime="20200601 13:20:31.411"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:31.413" starttime="20200601 13:20:31.412"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:31.413" starttime="20200601 13:20:31.412"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 13:20:32.417" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 13:20:32.417" starttime="20200601 13:20:31.413"></status>
</kw>
<msg timestamp="20200601 13:20:32.417" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200601 13:20:32.417" starttime="20200601 13:20:31.376"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:32.418" starttime="20200601 13:20:32.418"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:32.419" starttime="20200601 13:20:32.419"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:32.419" starttime="20200601 13:20:31.376"></status>
</kw>
<kw type="foritem" name="${i} = 16">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:32.420" starttime="20200601 13:20:32.420"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:32.430" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200601 13:20:32.453" level="INFO">Response Time to /redfish/v1/Olt: 0.000504 seconds.</msg>
<msg timestamp="20200601 13:20:32.454" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:33 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200601 13:20:32.454" starttime="20200601 13:20:32.421"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:20:32.455" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:20:32.455" starttime="20200601 13:20:32.454"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200601 13:20:32.456" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200601 13:20:32.456" starttime="20200601 13:20:32.455"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:32.457" starttime="20200601 13:20:32.456"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:32.459" starttime="20200601 13:20:32.458"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:32.459" starttime="20200601 13:20:32.457"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 13:20:33.460" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 13:20:33.460" starttime="20200601 13:20:32.460"></status>
</kw>
<msg timestamp="20200601 13:20:33.461" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200601 13:20:33.461" starttime="20200601 13:20:32.419"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:33.461" starttime="20200601 13:20:33.461"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:33.462" starttime="20200601 13:20:33.462"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:33.462" starttime="20200601 13:20:32.419"></status>
</kw>
<kw type="foritem" name="${i} = 17">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:33.463" starttime="20200601 13:20:33.463"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:33.470" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200601 13:20:34.500" level="INFO">Response Time to /redfish/v1/Olt: 0.000387 seconds.</msg>
<msg timestamp="20200601 13:20:34.501" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:35 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200601 13:20:34.501" starttime="20200601 13:20:33.464"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:20:34.501" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:20:34.501" starttime="20200601 13:20:34.501"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200601 13:20:34.502" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200601 13:20:34.502" starttime="20200601 13:20:34.502"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:34.502" starttime="20200601 13:20:34.502"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:34.504" starttime="20200601 13:20:34.504"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:34.505" starttime="20200601 13:20:34.503"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 13:20:35.505" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 13:20:35.506" starttime="20200601 13:20:34.505"></status>
</kw>
<msg timestamp="20200601 13:20:35.506" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200601 13:20:35.506" starttime="20200601 13:20:33.463"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:35.506" starttime="20200601 13:20:35.506"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:35.507" starttime="20200601 13:20:35.507"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:35.507" starttime="20200601 13:20:33.462"></status>
</kw>
<kw type="foritem" name="${i} = 18">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:35.509" starttime="20200601 13:20:35.508"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:35.515" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200601 13:20:35.533" level="INFO">Response Time to /redfish/v1/Olt: 0.000292 seconds.</msg>
<msg timestamp="20200601 13:20:35.534" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:36 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200601 13:20:35.534" starttime="20200601 13:20:35.509"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:20:35.534" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:20:35.534" starttime="20200601 13:20:35.534"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200601 13:20:35.535" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200601 13:20:35.535" starttime="20200601 13:20:35.535"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:35.536" starttime="20200601 13:20:35.535"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:35.537" starttime="20200601 13:20:35.537"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:35.537" starttime="20200601 13:20:35.536"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 13:20:36.538" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 13:20:36.538" starttime="20200601 13:20:35.537"></status>
</kw>
<msg timestamp="20200601 13:20:36.538" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200601 13:20:36.538" starttime="20200601 13:20:35.508"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:36.539" starttime="20200601 13:20:36.539"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:36.541" starttime="20200601 13:20:36.540"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:36.541" starttime="20200601 13:20:35.507"></status>
</kw>
<kw type="foritem" name="${i} = 19">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:36.544" starttime="20200601 13:20:36.542"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:36.551" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200601 13:20:36.572" level="INFO">Response Time to /redfish/v1/Olt: 0.000367 seconds.</msg>
<msg timestamp="20200601 13:20:36.572" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:37 GMT
connection Keep-Alive
content-type application/json
content-length 40


{"BalState":"up","OltOperateState":true}</msg>
<status status="PASS" endtime="20200601 13:20:36.572" starttime="20200601 13:20:36.544"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:20:36.573" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:20:36.573" starttime="20200601 13:20:36.573"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200601 13:20:36.574" level="INFO">${bal_opt_state} = True</msg>
<status status="PASS" endtime="20200601 13:20:36.574" starttime="20200601 13:20:36.573"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:36.574" starttime="20200601 13:20:36.574"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Up ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:36.576" starttime="20200601 13:20:36.575"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:36.576" starttime="20200601 13:20:36.575"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 13:20:37.577" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 13:20:37.577" starttime="20200601 13:20:36.576"></status>
</kw>
<msg timestamp="20200601 13:20:37.577" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20200601 13:20:37.577" starttime="20200601 13:20:36.542"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:37.578" starttime="20200601 13:20:37.577"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20200601 13:20:37.578" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20200601 13:20:37.578" starttime="20200601 13:20:37.578"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:37.578" starttime="20200601 13:20:36.541"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:37.578" starttime="20200601 13:20:16.843"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:37.579" starttime="20200601 13:20:37.579"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:37.579" starttime="20200601 13:20:14.169"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200601 13:20:42.580" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20200601 13:20:42.580" starttime="20200601 13:20:37.579"></status>
</kw>
<kw name="Test Port Present">
<tags>
<tag>Test pon_status present</tag>
</tags>
<doc>Test Pon port present function</doc>
<arguments>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:42.586" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0</msg>
<msg timestamp="20200601 13:20:42.608" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0: 0.000353 seconds.</msg>
<msg timestamp="20200601 13:20:42.608" level="INFO">${resp} = 404
date Mon, 01 Jun 2020 05:20:43 GMT
connection Keep-Alive
content-type application/json
content-length 448


{"error":{"code":"Base.1.0.ResourceMissingAtURI","message":"The resource at the URI /red...</msg>
<status status="PASS" endtime="20200601 13:20:42.608" starttime="20200601 13:20:42.581"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:20:42.609" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200601 13:20:42.609" level="FAIL">404 != 200</msg>
<status status="FAIL" endtime="20200601 13:20:42.609" starttime="20200601 13:20:42.609"></status>
</kw>
<status status="FAIL" endtime="20200601 13:20:42.610" starttime="20200601 13:20:42.580"></status>
</kw>
<status status="FAIL" endtime="20200601 13:20:42.610" starttime="20200601 13:20:13.182"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200601 13:20:42.616" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200601 13:20:42.641" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000292 seconds.</msg>
<msg timestamp="20200601 13:20:42.641" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200601 13:20:42.641" starttime="20200601 13:20:42.610"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:42.641" starttime="20200601 13:20:42.610"></status>
</kw>
<doc>Test BAL Restful Status</doc>
<tags>
<tag>Test Bal Restful opertaion test</tag>
</tags>
<status status="FAIL" endtime="20200601 13:20:42.641" critical="yes" starttime="20200601 13:20:13.149">404 != 200</status>
</test>
<test id="s1-s1-t2" name="Verify Restful API for ONU Range Test">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200601 13:20:42.648" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200601 13:20:42.674" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000464 seconds.</msg>
<msg timestamp="20200601 13:20:42.674" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200601 13:20:42.674" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200601 13:20:42.674" starttime="20200601 13:20:42.643"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:42.674" starttime="20200601 13:20:42.643"></status>
</kw>
<kw name="Test ONU Range">
<tags>
<tag>ONU Range</tag>
</tags>
<doc>ONU Ranging Test</doc>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PON_TYPE}' == 'GPON'</arg>
<arg>set variable</arg>
<arg>${150}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${255}</arg>
</arguments>
<assign>
<var>${ONU_ID_RANGE}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${255}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:42.676" starttime="20200601 13:20:42.676"></status>
</kw>
<msg timestamp="20200601 13:20:42.676" level="INFO">${ONU_ID_RANGE} = 255</msg>
<status status="PASS" endtime="20200601 13:20:42.676" starttime="20200601 13:20:42.675"></status>
</kw>
<kw type="for" name="${id} IN RANGE [ 1 | ${ONU_ID_RANGE} | 50 ]">
<kw type="foritem" name="${id} = 1">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200601 13:20:49.677" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200601 13:20:49.677" starttime="20200601 13:20:42.677"></status>
</kw>
<kw name="Test Active ONU">
<tags>
<tag>Test Active ONU</tag>
</tags>
<doc>Test Active ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${SPECIFIC_ID}</arg>
<arg>${SPECIFIC_NUM}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onu_id": ${ONU_ID},</arg>
<arg>"vendor_id": "${VEN_ID}",</arg>
<arg>"vendor_specific":"${VEN_SPEC}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200601 13:20:49.678" level="INFO">${JSTRING} = { "onu_id": 1, "vendor_id": "ISKT", "vendor_specific":"71E83268" }</msg>
<status status="PASS" endtime="20200601 13:20:49.679" starttime="20200601 13:20:49.678"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### active onu ${JSTRING} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:49.679" starttime="20200601 13:20:49.679"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200601 13:20:49.683" level="INFO">${payload} = {u'onu_id': 1, u'vendor_id': u'ISKT', u'vendor_specific': u'71E83268'}</msg>
<status status="PASS" endtime="20200601 13:20:49.684" starttime="20200601 13:20:49.679"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:49.690" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs</msg>
<msg timestamp="20200601 13:20:49.715" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs: 0.000383 seconds.</msg>
<msg timestamp="20200601 13:20:49.715" level="INFO">${resp} = 500
date Mon, 01 Jun 2020 05:20:51 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:20:49.716" starttime="20200601 13:20:49.684"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200601 13:20:49.717" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200601 13:20:49.717" level="FAIL">500 != 201</msg>
<status status="FAIL" endtime="20200601 13:20:49.717" starttime="20200601 13:20:49.717"></status>
</kw>
<status status="FAIL" endtime="20200601 13:20:49.717" starttime="20200601 13:20:49.716"></status>
</kw>
<status status="FAIL" endtime="20200601 13:20:49.717" starttime="20200601 13:20:49.677"></status>
</kw>
<status status="FAIL" endtime="20200601 13:20:49.717" starttime="20200601 13:20:42.676"></status>
</kw>
<status status="FAIL" endtime="20200601 13:20:49.718" starttime="20200601 13:20:42.676"></status>
</kw>
<status status="FAIL" endtime="20200601 13:20:49.718" starttime="20200601 13:20:42.675"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200601 13:20:49.725" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200601 13:20:49.746" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000381 seconds.</msg>
<msg timestamp="20200601 13:20:49.747" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200601 13:20:49.747" starttime="20200601 13:20:49.718"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:49.747" starttime="20200601 13:20:49.718"></status>
</kw>
<doc>Test ONU Range</doc>
<tags>
<tag>Test ONU Rnage test</tag>
</tags>
<status status="FAIL" endtime="20200601 13:20:49.747" critical="yes" starttime="20200601 13:20:42.642">500 != 201</status>
</test>
<test id="s1-s1-t3" name="Verify Restful API for flow add">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200601 13:20:49.754" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200601 13:20:49.778" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000617 seconds.</msg>
<msg timestamp="20200601 13:20:49.779" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200601 13:20:49.779" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200601 13:20:49.779" starttime="20200601 13:20:49.749"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:49.779" starttime="20200601 13:20:49.749"></status>
</kw>
<kw name="Test US DS Flow Add">
<tags>
<tag>US DS Flow Add/Remove</tag>
</tags>
<doc>Flow Add/Remove</doc>
<kw type="for" name="${flow_id} IN RANGE [ 0 | 2047 | 500 ]">
<kw type="foritem" name="${flow_id} = 0">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 13:20:50.781" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 13:20:50.781" starttime="20200601 13:20:49.780"></status>
</kw>
<kw name="Test Flow Add">
<tags>
<tag>UP/DOWN stream flow add</tag>
</tags>
<doc>Test Flow Add</doc>
<arguments>
<arg>1</arg>
<arg>${flow_id}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PON_ID} - ${1}</arg>
</arguments>
<assign>
<var>${PON_ID}</var>
</assign>
<msg timestamp="20200601 13:20:50.782" level="INFO">${PON_ID} = -1</msg>
<status status="PASS" endtime="20200601 13:20:50.782" starttime="20200601 13:20:50.782"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024,</arg>
<arg>"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":"BCMOLT_ACTION_CMD_ID_ADD_OUTER_TAG",</arg>
<arg>"ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,"EtherType":0,"IpProto":0,"SrcPort":0,</arg>
<arg>"DstPort":0},"ClassVal":[{"OVid":20,"IVid":0,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200601 13:20:50.783" level="INFO">${JSTRING} = { "onuId":1,"FlowId":0,"PortId":-1,"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024, "Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd"...</msg>
<status status="PASS" endtime="20200601 13:20:50.783" starttime="20200601 13:20:50.783"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200601 13:20:50.787" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': -1, u'PktTagType': u'single_tag', u'GemportId': 1024, u'FlowId': 0, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 20, u'IPbits': 0, u'IVid': 0, u'...</msg>
<status status="PASS" endtime="20200601 13:20:50.787" starttime="20200601 13:20:50.783"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:50.793" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200601 13:20:50.815" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000362 seconds.</msg>
<msg timestamp="20200601 13:20:50.816" level="INFO">${resp} = 500
date Mon, 01 Jun 2020 05:20:52 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:20:50.816" starttime="20200601 13:20:50.787"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:20:50.817" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200601 13:20:50.818" level="FAIL">500 != 200</msg>
<status status="FAIL" endtime="20200601 13:20:50.818" starttime="20200601 13:20:50.817"></status>
</kw>
<status status="FAIL" endtime="20200601 13:20:50.818" starttime="20200601 13:20:50.816"></status>
</kw>
<status status="FAIL" endtime="20200601 13:20:50.818" starttime="20200601 13:20:50.781"></status>
</kw>
<status status="FAIL" endtime="20200601 13:20:50.818" starttime="20200601 13:20:49.780"></status>
</kw>
<status status="FAIL" endtime="20200601 13:20:50.818" starttime="20200601 13:20:49.780"></status>
</kw>
<status status="FAIL" endtime="20200601 13:20:50.818" starttime="20200601 13:20:49.779"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200601 13:20:50.825" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200601 13:20:50.846" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.00031 seconds.</msg>
<msg timestamp="20200601 13:20:50.847" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200601 13:20:50.847" starttime="20200601 13:20:50.819"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:50.847" starttime="20200601 13:20:50.818"></status>
</kw>
<doc>Test flow add</doc>
<tags>
<tag>Test Flow add</tag>
</tags>
<status status="FAIL" endtime="20200601 13:20:50.847" critical="yes" starttime="20200601 13:20:49.748">500 != 200</status>
</test>
<test id="s1-s1-t4" name="Verify Restful API for omci send">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200601 13:20:50.853" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200601 13:20:50.873" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000425 seconds.</msg>
<msg timestamp="20200601 13:20:50.873" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200601 13:20:50.874" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200601 13:20:50.874" starttime="20200601 13:20:50.849"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:50.874" starttime="20200601 13:20:50.848"></status>
</kw>
<kw name="Test omci send">
<tags>
<tag>omci send</tag>
</tags>
<doc>Send omci raw data</doc>
<kw name="Test Send Omci">
<tags>
<tag>Send Omci function</tag>
</tags>
<doc>Send Omci function</doc>
<arguments>
<arg>1</arg>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OMCI_RAW)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload_}</var>
</assign>
<msg timestamp="20200601 13:20:50.879" level="INFO">${payload_} = {u'raw_data': [{u'Omci': u'00B34F0A00020000000000000000000000000000000000000000000000000000000000000000000000000028'}, {u'Omci': u'00B44F0A0002000000000000000000000000000000000000000000000000000000000...</msg>
<status status="PASS" endtime="20200601 13:20:50.879" starttime="20200601 13:20:50.875"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${payload_["raw_data"]</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200601 13:20:50.879" level="INFO">Length is 22</msg>
<msg timestamp="20200601 13:20:50.879" level="INFO">${length} = 22</msg>
<status status="PASS" endtime="20200601 13:20:50.879" starttime="20200601 13:20:50.879"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>====================length ${length} ================</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:50.880" starttime="20200601 13:20:50.880"></status>
</kw>
<kw type="for" name="${i} IN RANGE [ 0 | 171 ]">
<kw type="foritem" name="${i} = 0">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:50.881" starttime="20200601 13:20:50.880"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:20:51.181" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:20:51.182" starttime="20200601 13:20:50.881"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:51.188" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:20:51.209" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.00034 seconds.</msg>
<msg timestamp="20200601 13:20:51.209" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:52 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:20:51.210" starttime="20200601 13:20:51.182"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:51.210" starttime="20200601 13:20:50.880"></status>
</kw>
<kw type="foritem" name="${i} = 1">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:51.210" starttime="20200601 13:20:51.210"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:20:51.511" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:20:51.511" starttime="20200601 13:20:51.211"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:51.518" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:20:51.538" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.00031 seconds.</msg>
<msg timestamp="20200601 13:20:51.539" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:52 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:20:51.539" starttime="20200601 13:20:51.511"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:51.539" starttime="20200601 13:20:51.210"></status>
</kw>
<kw type="foritem" name="${i} = 2">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:51.540" starttime="20200601 13:20:51.539"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:20:51.841" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:20:51.841" starttime="20200601 13:20:51.540"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:51.847" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:20:51.868" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000267 seconds.</msg>
<msg timestamp="20200601 13:20:51.868" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:53 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:20:51.869" starttime="20200601 13:20:51.841"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:51.869" starttime="20200601 13:20:51.539"></status>
</kw>
<kw type="foritem" name="${i} = 3">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:51.870" starttime="20200601 13:20:51.869"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:20:52.170" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:20:52.170" starttime="20200601 13:20:51.870"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:52.176" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:20:52.200" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000302 seconds.</msg>
<msg timestamp="20200601 13:20:52.200" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:53 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:20:52.201" starttime="20200601 13:20:52.171"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:52.201" starttime="20200601 13:20:51.869"></status>
</kw>
<kw type="foritem" name="${i} = 4">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:52.202" starttime="20200601 13:20:52.201"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:20:52.503" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:20:52.503" starttime="20200601 13:20:52.202"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:52.510" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:20:52.533" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000311 seconds.</msg>
<msg timestamp="20200601 13:20:52.534" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:53 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:20:52.534" starttime="20200601 13:20:52.503"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:52.534" starttime="20200601 13:20:52.201"></status>
</kw>
<kw type="foritem" name="${i} = 5">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:52.535" starttime="20200601 13:20:52.534"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:20:52.836" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:20:52.836" starttime="20200601 13:20:52.535"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:52.842" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:20:52.866" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000304 seconds.</msg>
<msg timestamp="20200601 13:20:52.867" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:54 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:20:52.867" starttime="20200601 13:20:52.836"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:52.867" starttime="20200601 13:20:52.534"></status>
</kw>
<kw type="foritem" name="${i} = 6">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:52.868" starttime="20200601 13:20:52.867"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:20:53.169" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:20:53.169" starttime="20200601 13:20:52.868"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:53.175" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:20:53.198" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.00033 seconds.</msg>
<msg timestamp="20200601 13:20:53.199" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:54 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:20:53.199" starttime="20200601 13:20:53.169"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:53.199" starttime="20200601 13:20:52.867"></status>
</kw>
<kw type="foritem" name="${i} = 7">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:53.200" starttime="20200601 13:20:53.199"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:20:53.501" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:20:53.501" starttime="20200601 13:20:53.200"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:53.511" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:20:53.532" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000391 seconds.</msg>
<msg timestamp="20200601 13:20:53.533" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:54 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:20:53.533" starttime="20200601 13:20:53.501"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:53.533" starttime="20200601 13:20:53.199"></status>
</kw>
<kw type="foritem" name="${i} = 8">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:53.534" starttime="20200601 13:20:53.533"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:20:53.835" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:20:53.835" starttime="20200601 13:20:53.535"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:53.843" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:20:53.866" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000369 seconds.</msg>
<msg timestamp="20200601 13:20:53.867" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:55 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:20:53.867" starttime="20200601 13:20:53.836"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:53.867" starttime="20200601 13:20:53.533"></status>
</kw>
<kw type="foritem" name="${i} = 9">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:53.868" starttime="20200601 13:20:53.867"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:20:54.169" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:20:54.169" starttime="20200601 13:20:53.868"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:54.176" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:20:54.196" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000308 seconds.</msg>
<msg timestamp="20200601 13:20:54.196" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:55 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:20:54.196" starttime="20200601 13:20:54.170"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:54.196" starttime="20200601 13:20:53.867"></status>
</kw>
<kw type="foritem" name="${i} = 10">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:54.197" starttime="20200601 13:20:54.197"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:20:54.498" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:20:54.498" starttime="20200601 13:20:54.198"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:54.504" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:20:54.525" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000292 seconds.</msg>
<msg timestamp="20200601 13:20:54.526" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:55 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:20:54.526" starttime="20200601 13:20:54.498"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:54.526" starttime="20200601 13:20:54.197"></status>
</kw>
<kw type="foritem" name="${i} = 11">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:54.527" starttime="20200601 13:20:54.526"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:20:54.827" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:20:54.827" starttime="20200601 13:20:54.527"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:54.834" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:20:54.858" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000322 seconds.</msg>
<msg timestamp="20200601 13:20:54.858" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:56 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:20:54.858" starttime="20200601 13:20:54.828"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:54.858" starttime="20200601 13:20:54.526"></status>
</kw>
<kw type="foritem" name="${i} = 12">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:54.859" starttime="20200601 13:20:54.859"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:20:55.160" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:20:55.161" starttime="20200601 13:20:54.860"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:55.169" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:20:55.193" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000403 seconds.</msg>
<msg timestamp="20200601 13:20:55.193" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:56 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:20:55.193" starttime="20200601 13:20:55.161"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:55.193" starttime="20200601 13:20:54.859"></status>
</kw>
<kw type="foritem" name="${i} = 13">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:55.194" starttime="20200601 13:20:55.194"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:20:55.495" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:20:55.495" starttime="20200601 13:20:55.195"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:55.504" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:20:55.527" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.00037 seconds.</msg>
<msg timestamp="20200601 13:20:55.528" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:56 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:20:55.528" starttime="20200601 13:20:55.496"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:55.528" starttime="20200601 13:20:55.193"></status>
</kw>
<kw type="foritem" name="${i} = 14">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:55.529" starttime="20200601 13:20:55.529"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:20:55.830" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:20:55.830" starttime="20200601 13:20:55.530"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:55.837" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:20:55.860" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000299 seconds.</msg>
<msg timestamp="20200601 13:20:55.860" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:57 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:20:55.860" starttime="20200601 13:20:55.831"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:55.860" starttime="20200601 13:20:55.528"></status>
</kw>
<kw type="foritem" name="${i} = 15">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:55.861" starttime="20200601 13:20:55.860"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:20:56.162" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:20:56.162" starttime="20200601 13:20:55.861"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:56.171" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:20:56.194" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000373 seconds.</msg>
<msg timestamp="20200601 13:20:56.195" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:57 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:20:56.195" starttime="20200601 13:20:56.162"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:56.195" starttime="20200601 13:20:55.860"></status>
</kw>
<kw type="foritem" name="${i} = 16">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:56.196" starttime="20200601 13:20:56.195"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:20:56.497" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:20:56.497" starttime="20200601 13:20:56.196"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:56.504" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:20:56.527" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000381 seconds.</msg>
<msg timestamp="20200601 13:20:56.528" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:57 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:20:56.528" starttime="20200601 13:20:56.497"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:56.528" starttime="20200601 13:20:56.195"></status>
</kw>
<kw type="foritem" name="${i} = 17">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:56.529" starttime="20200601 13:20:56.529"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:20:56.830" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:20:56.831" starttime="20200601 13:20:56.530"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:56.839" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:20:56.862" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000388 seconds.</msg>
<msg timestamp="20200601 13:20:56.863" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:58 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:20:56.863" starttime="20200601 13:20:56.831"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:56.863" starttime="20200601 13:20:56.528"></status>
</kw>
<kw type="foritem" name="${i} = 18">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:56.864" starttime="20200601 13:20:56.863"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:20:57.165" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:20:57.165" starttime="20200601 13:20:56.864"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:57.173" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:20:57.198" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000377 seconds.</msg>
<msg timestamp="20200601 13:20:57.199" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:58 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:20:57.199" starttime="20200601 13:20:57.165"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:57.199" starttime="20200601 13:20:56.863"></status>
</kw>
<kw type="foritem" name="${i} = 19">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:57.200" starttime="20200601 13:20:57.200"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:20:57.502" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:20:57.502" starttime="20200601 13:20:57.201"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:57.509" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:20:57.529" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000339 seconds.</msg>
<msg timestamp="20200601 13:20:57.529" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:58 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:20:57.529" starttime="20200601 13:20:57.503"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:57.529" starttime="20200601 13:20:57.199"></status>
</kw>
<kw type="foritem" name="${i} = 20">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:57.530" starttime="20200601 13:20:57.530"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:20:57.831" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:20:57.831" starttime="20200601 13:20:57.530"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:57.838" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:20:57.860" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000316 seconds.</msg>
<msg timestamp="20200601 13:20:57.861" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:59 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:20:57.861" starttime="20200601 13:20:57.831"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:57.861" starttime="20200601 13:20:57.529"></status>
</kw>
<kw type="foritem" name="${i} = 21">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:57.862" starttime="20200601 13:20:57.861"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:20:58.163" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:20:58.163" starttime="20200601 13:20:57.862"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:58.171" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:20:58.194" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000375 seconds.</msg>
<msg timestamp="20200601 13:20:58.195" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:59 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:20:58.195" starttime="20200601 13:20:58.163"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:58.195" starttime="20200601 13:20:57.861"></status>
</kw>
<kw type="foritem" name="${i} = 22">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:58.196" starttime="20200601 13:20:58.196"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:20:58.498" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:20:58.498" starttime="20200601 13:20:58.197"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:58.506" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:20:58.526" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000308 seconds.</msg>
<msg timestamp="20200601 13:20:58.527" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:20:59 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:20:58.527" starttime="20200601 13:20:58.499"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:58.527" starttime="20200601 13:20:58.195"></status>
</kw>
<kw type="foritem" name="${i} = 23">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:58.528" starttime="20200601 13:20:58.527"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:20:58.855" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:20:58.856" starttime="20200601 13:20:58.529"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:58.864" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:20:58.889" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.0003 seconds.</msg>
<msg timestamp="20200601 13:20:58.889" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:00 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:20:58.890" starttime="20200601 13:20:58.856"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:58.890" starttime="20200601 13:20:58.527"></status>
</kw>
<kw type="foritem" name="${i} = 24">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:58.891" starttime="20200601 13:20:58.890"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:20:59.199" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:20:59.199" starttime="20200601 13:20:58.891"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:59.206" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:20:59.228" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000332 seconds.</msg>
<msg timestamp="20200601 13:20:59.229" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:00 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:20:59.229" starttime="20200601 13:20:59.200"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:59.229" starttime="20200601 13:20:58.890"></status>
</kw>
<kw type="foritem" name="${i} = 25">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:59.230" starttime="20200601 13:20:59.229"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:20:59.539" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:20:59.540" starttime="20200601 13:20:59.230"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:59.563" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:20:59.588" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000877 seconds.</msg>
<msg timestamp="20200601 13:20:59.589" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:00 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:20:59.589" starttime="20200601 13:20:59.540"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:59.589" starttime="20200601 13:20:59.229"></status>
</kw>
<kw type="foritem" name="${i} = 26">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:59.592" starttime="20200601 13:20:59.591"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:20:59.899" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:20:59.899" starttime="20200601 13:20:59.593"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:20:59.907" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:20:59.930" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000317 seconds.</msg>
<msg timestamp="20200601 13:20:59.930" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:01 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:20:59.931" starttime="20200601 13:20:59.900"></status>
</kw>
<status status="PASS" endtime="20200601 13:20:59.931" starttime="20200601 13:20:59.590"></status>
</kw>
<kw type="foritem" name="${i} = 27">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:20:59.933" starttime="20200601 13:20:59.931"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:00.235" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:00.236" starttime="20200601 13:20:59.933"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:00.242" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:00.265" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000281 seconds.</msg>
<msg timestamp="20200601 13:21:00.266" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:01 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:00.266" starttime="20200601 13:21:00.236"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:00.266" starttime="20200601 13:20:59.931"></status>
</kw>
<kw type="foritem" name="${i} = 28">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:00.267" starttime="20200601 13:21:00.266"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:00.568" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:00.568" starttime="20200601 13:21:00.267"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:00.575" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:00.598" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000378 seconds.</msg>
<msg timestamp="20200601 13:21:00.598" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:01 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:00.598" starttime="20200601 13:21:00.568"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:00.598" starttime="20200601 13:21:00.266"></status>
</kw>
<kw type="foritem" name="${i} = 29">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:00.599" starttime="20200601 13:21:00.599"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:00.902" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:00.902" starttime="20200601 13:21:00.600"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:00.908" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:00.931" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000285 seconds.</msg>
<msg timestamp="20200601 13:21:00.931" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:02 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:00.931" starttime="20200601 13:21:00.902"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:00.931" starttime="20200601 13:21:00.598"></status>
</kw>
<kw type="foritem" name="${i} = 30">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:00.932" starttime="20200601 13:21:00.931"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:01.233" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:01.233" starttime="20200601 13:21:00.933"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:01.242" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:01.264" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000327 seconds.</msg>
<msg timestamp="20200601 13:21:01.265" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:02 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:01.265" starttime="20200601 13:21:01.234"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:01.265" starttime="20200601 13:21:00.931"></status>
</kw>
<kw type="foritem" name="${i} = 31">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:01.266" starttime="20200601 13:21:01.265"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:01.567" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:01.567" starttime="20200601 13:21:01.266"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:01.573" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:01.596" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000309 seconds.</msg>
<msg timestamp="20200601 13:21:01.596" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:02 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:01.596" starttime="20200601 13:21:01.567"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:01.596" starttime="20200601 13:21:01.265"></status>
</kw>
<kw type="foritem" name="${i} = 32">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:01.597" starttime="20200601 13:21:01.597"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:01.898" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:01.899" starttime="20200601 13:21:01.598"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:01.906" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:01.930" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000349 seconds.</msg>
<msg timestamp="20200601 13:21:01.930" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:03 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:01.930" starttime="20200601 13:21:01.899"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:01.930" starttime="20200601 13:21:01.597"></status>
</kw>
<kw type="foritem" name="${i} = 33">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:01.931" starttime="20200601 13:21:01.931"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:02.232" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:02.233" starttime="20200601 13:21:01.932"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:02.241" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:02.262" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000393 seconds.</msg>
<msg timestamp="20200601 13:21:02.262" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:03 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:02.263" starttime="20200601 13:21:02.233"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:02.263" starttime="20200601 13:21:01.930"></status>
</kw>
<kw type="foritem" name="${i} = 34">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:02.264" starttime="20200601 13:21:02.263"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:02.569" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:02.569" starttime="20200601 13:21:02.264"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:02.581" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:02.606" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000385 seconds.</msg>
<msg timestamp="20200601 13:21:02.606" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:03 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:02.606" starttime="20200601 13:21:02.569"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:02.607" starttime="20200601 13:21:02.263"></status>
</kw>
<kw type="foritem" name="${i} = 35">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:02.608" starttime="20200601 13:21:02.607"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:02.910" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:02.910" starttime="20200601 13:21:02.609"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:02.919" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:02.945" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000304 seconds.</msg>
<msg timestamp="20200601 13:21:02.945" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:04 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:02.945" starttime="20200601 13:21:02.910"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:02.945" starttime="20200601 13:21:02.607"></status>
</kw>
<kw type="foritem" name="${i} = 36">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:02.946" starttime="20200601 13:21:02.946"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:03.247" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:03.248" starttime="20200601 13:21:02.947"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:03.255" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:03.278" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000364 seconds.</msg>
<msg timestamp="20200601 13:21:03.279" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:04 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:03.279" starttime="20200601 13:21:03.248"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:03.279" starttime="20200601 13:21:02.946"></status>
</kw>
<kw type="foritem" name="${i} = 37">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:03.280" starttime="20200601 13:21:03.279"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:03.581" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:03.581" starttime="20200601 13:21:03.280"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:03.587" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:03.611" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.00031 seconds.</msg>
<msg timestamp="20200601 13:21:03.611" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:04 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:03.611" starttime="20200601 13:21:03.581"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:03.611" starttime="20200601 13:21:03.279"></status>
</kw>
<kw type="foritem" name="${i} = 38">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:03.612" starttime="20200601 13:21:03.612"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:03.916" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:03.916" starttime="20200601 13:21:03.613"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:03.923" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:03.944" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000328 seconds.</msg>
<msg timestamp="20200601 13:21:03.944" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:05 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:03.944" starttime="20200601 13:21:03.916"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:03.944" starttime="20200601 13:21:03.611"></status>
</kw>
<kw type="foritem" name="${i} = 39">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:03.946" starttime="20200601 13:21:03.945"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:04.247" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:04.247" starttime="20200601 13:21:03.946"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:04.255" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:04.277" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000398 seconds.</msg>
<msg timestamp="20200601 13:21:04.277" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:05 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:04.278" starttime="20200601 13:21:04.247"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:04.278" starttime="20200601 13:21:03.945"></status>
</kw>
<kw type="foritem" name="${i} = 40">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:04.279" starttime="20200601 13:21:04.278"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:04.580" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:04.580" starttime="20200601 13:21:04.279"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:04.588" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:04.615" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000361 seconds.</msg>
<msg timestamp="20200601 13:21:04.615" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:05 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:04.615" starttime="20200601 13:21:04.580"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:04.615" starttime="20200601 13:21:04.278"></status>
</kw>
<kw type="foritem" name="${i} = 41">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:04.616" starttime="20200601 13:21:04.616"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:04.917" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:04.918" starttime="20200601 13:21:04.617"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:04.924" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:04.946" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000334 seconds.</msg>
<msg timestamp="20200601 13:21:04.946" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:06 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:04.946" starttime="20200601 13:21:04.918"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:04.946" starttime="20200601 13:21:04.615"></status>
</kw>
<kw type="foritem" name="${i} = 42">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:04.947" starttime="20200601 13:21:04.947"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:05.248" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:05.248" starttime="20200601 13:21:04.947"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:05.255" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:05.279" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000326 seconds.</msg>
<msg timestamp="20200601 13:21:05.280" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:06 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:05.280" starttime="20200601 13:21:05.249"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:05.280" starttime="20200601 13:21:04.946"></status>
</kw>
<kw type="foritem" name="${i} = 43">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:05.281" starttime="20200601 13:21:05.280"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:05.582" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:05.582" starttime="20200601 13:21:05.281"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:05.590" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:05.614" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000396 seconds.</msg>
<msg timestamp="20200601 13:21:05.615" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:06 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:05.615" starttime="20200601 13:21:05.582"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:05.615" starttime="20200601 13:21:05.280"></status>
</kw>
<kw type="foritem" name="${i} = 44">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:05.616" starttime="20200601 13:21:05.616"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:05.917" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:05.918" starttime="20200601 13:21:05.617"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:05.926" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:05.947" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000372 seconds.</msg>
<msg timestamp="20200601 13:21:05.948" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:07 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:05.948" starttime="20200601 13:21:05.918"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:05.948" starttime="20200601 13:21:05.615"></status>
</kw>
<kw type="foritem" name="${i} = 45">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:05.949" starttime="20200601 13:21:05.949"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:06.250" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:06.251" starttime="20200601 13:21:05.950"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:06.258" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:06.282" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000299 seconds.</msg>
<msg timestamp="20200601 13:21:06.283" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:07 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:06.283" starttime="20200601 13:21:06.251"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:06.283" starttime="20200601 13:21:05.948"></status>
</kw>
<kw type="foritem" name="${i} = 46">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:06.284" starttime="20200601 13:21:06.283"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:06.584" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:06.585" starttime="20200601 13:21:06.284"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:06.593" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:06.614" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000294 seconds.</msg>
<msg timestamp="20200601 13:21:06.615" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:07 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:06.615" starttime="20200601 13:21:06.585"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:06.615" starttime="20200601 13:21:06.283"></status>
</kw>
<kw type="foritem" name="${i} = 47">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:06.616" starttime="20200601 13:21:06.615"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:06.917" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:06.917" starttime="20200601 13:21:06.616"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:06.925" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:06.950" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000345 seconds.</msg>
<msg timestamp="20200601 13:21:06.951" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:08 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:06.951" starttime="20200601 13:21:06.917"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:06.951" starttime="20200601 13:21:06.615"></status>
</kw>
<kw type="foritem" name="${i} = 48">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:06.952" starttime="20200601 13:21:06.952"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:07.253" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:07.253" starttime="20200601 13:21:06.953"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:07.264" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:07.286" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000482 seconds.</msg>
<msg timestamp="20200601 13:21:07.287" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:08 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:07.287" starttime="20200601 13:21:07.254"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:07.287" starttime="20200601 13:21:06.951"></status>
</kw>
<kw type="foritem" name="${i} = 49">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:07.288" starttime="20200601 13:21:07.288"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:07.590" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:07.591" starttime="20200601 13:21:07.290"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:07.602" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:07.624" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000497 seconds.</msg>
<msg timestamp="20200601 13:21:07.625" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:08 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:07.625" starttime="20200601 13:21:07.591"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:07.625" starttime="20200601 13:21:07.287"></status>
</kw>
<kw type="foritem" name="${i} = 50">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:07.626" starttime="20200601 13:21:07.626"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:07.927" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:07.928" starttime="20200601 13:21:07.627"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:07.936" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:07.958" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000564 seconds.</msg>
<msg timestamp="20200601 13:21:07.959" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:09 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:07.959" starttime="20200601 13:21:07.928"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:07.959" starttime="20200601 13:21:07.625"></status>
</kw>
<kw type="foritem" name="${i} = 51">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:07.960" starttime="20200601 13:21:07.960"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:08.261" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:08.261" starttime="20200601 13:21:07.960"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:08.269" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:08.292" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000335 seconds.</msg>
<msg timestamp="20200601 13:21:08.292" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:09 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:08.292" starttime="20200601 13:21:08.261"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:08.292" starttime="20200601 13:21:07.959"></status>
</kw>
<kw type="foritem" name="${i} = 52">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:08.293" starttime="20200601 13:21:08.293"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:08.594" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:08.594" starttime="20200601 13:21:08.294"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:08.601" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:08.619" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000367 seconds.</msg>
<msg timestamp="20200601 13:21:08.620" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:09 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:08.620" starttime="20200601 13:21:08.594"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:08.620" starttime="20200601 13:21:08.293"></status>
</kw>
<kw type="foritem" name="${i} = 53">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:08.621" starttime="20200601 13:21:08.621"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:08.922" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:08.922" starttime="20200601 13:21:08.622"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:08.928" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:08.952" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.00031 seconds.</msg>
<msg timestamp="20200601 13:21:08.952" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:10 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:08.952" starttime="20200601 13:21:08.923"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:08.952" starttime="20200601 13:21:08.620"></status>
</kw>
<kw type="foritem" name="${i} = 54">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:08.953" starttime="20200601 13:21:08.953"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:09.254" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:09.254" starttime="20200601 13:21:08.953"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:09.261" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:09.286" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.00033 seconds.</msg>
<msg timestamp="20200601 13:21:09.286" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:10 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:09.286" starttime="20200601 13:21:09.254"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:09.286" starttime="20200601 13:21:08.952"></status>
</kw>
<kw type="foritem" name="${i} = 55">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:09.287" starttime="20200601 13:21:09.287"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:09.588" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:09.588" starttime="20200601 13:21:09.287"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:09.596" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:09.619" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000389 seconds.</msg>
<msg timestamp="20200601 13:21:09.619" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:10 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:09.619" starttime="20200601 13:21:09.588"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:09.619" starttime="20200601 13:21:09.286"></status>
</kw>
<kw type="foritem" name="${i} = 56">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:09.620" starttime="20200601 13:21:09.620"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:09.921" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:09.922" starttime="20200601 13:21:09.621"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:09.930" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:09.951" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000376 seconds.</msg>
<msg timestamp="20200601 13:21:09.952" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:11 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:09.952" starttime="20200601 13:21:09.922"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:09.952" starttime="20200601 13:21:09.619"></status>
</kw>
<kw type="foritem" name="${i} = 57">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:09.953" starttime="20200601 13:21:09.952"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:10.254" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:10.254" starttime="20200601 13:21:09.953"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:10.260" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:10.282" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.0003 seconds.</msg>
<msg timestamp="20200601 13:21:10.283" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:11 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:10.283" starttime="20200601 13:21:10.254"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:10.283" starttime="20200601 13:21:09.952"></status>
</kw>
<kw type="foritem" name="${i} = 58">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:10.284" starttime="20200601 13:21:10.283"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:10.584" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:10.585" starttime="20200601 13:21:10.284"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:10.592" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:10.615" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000363 seconds.</msg>
<msg timestamp="20200601 13:21:10.615" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:11 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:10.615" starttime="20200601 13:21:10.585"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:10.615" starttime="20200601 13:21:10.283"></status>
</kw>
<kw type="foritem" name="${i} = 59">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:10.616" starttime="20200601 13:21:10.616"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:10.917" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:10.917" starttime="20200601 13:21:10.617"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:10.925" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:10.949" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000399 seconds.</msg>
<msg timestamp="20200601 13:21:10.950" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:12 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:10.950" starttime="20200601 13:21:10.918"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:10.950" starttime="20200601 13:21:10.615"></status>
</kw>
<kw type="foritem" name="${i} = 60">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:10.951" starttime="20200601 13:21:10.950"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:11.252" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:11.252" starttime="20200601 13:21:10.951"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:11.260" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:11.286" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.00038 seconds.</msg>
<msg timestamp="20200601 13:21:11.286" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:12 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:11.286" starttime="20200601 13:21:11.252"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:11.286" starttime="20200601 13:21:10.950"></status>
</kw>
<kw type="foritem" name="${i} = 61">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:11.287" starttime="20200601 13:21:11.287"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:11.588" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:11.588" starttime="20200601 13:21:11.288"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:11.594" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:11.618" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000282 seconds.</msg>
<msg timestamp="20200601 13:21:11.619" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:12 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:11.619" starttime="20200601 13:21:11.589"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:11.619" starttime="20200601 13:21:11.286"></status>
</kw>
<kw type="foritem" name="${i} = 62">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:11.620" starttime="20200601 13:21:11.619"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:11.921" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:11.921" starttime="20200601 13:21:11.620"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:11.933" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:11.956" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000638 seconds.</msg>
<msg timestamp="20200601 13:21:11.957" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:13 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:11.957" starttime="20200601 13:21:11.922"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:11.957" starttime="20200601 13:21:11.619"></status>
</kw>
<kw type="foritem" name="${i} = 63">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:11.959" starttime="20200601 13:21:11.957"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:12.265" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:12.265" starttime="20200601 13:21:11.959"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:12.276" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:12.299" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000467 seconds.</msg>
<msg timestamp="20200601 13:21:12.300" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:13 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:12.300" starttime="20200601 13:21:12.266"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:12.300" starttime="20200601 13:21:11.957"></status>
</kw>
<kw type="foritem" name="${i} = 64">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:12.301" starttime="20200601 13:21:12.300"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:12.604" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:12.604" starttime="20200601 13:21:12.301"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:12.615" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:12.639" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000466 seconds.</msg>
<msg timestamp="20200601 13:21:12.639" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:13 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:12.640" starttime="20200601 13:21:12.604"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:12.640" starttime="20200601 13:21:12.300"></status>
</kw>
<kw type="foritem" name="${i} = 65">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:12.641" starttime="20200601 13:21:12.640"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:12.943" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:12.944" starttime="20200601 13:21:12.641"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:12.952" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:12.975" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.00038 seconds.</msg>
<msg timestamp="20200601 13:21:12.976" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:14 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:12.976" starttime="20200601 13:21:12.944"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:12.976" starttime="20200601 13:21:12.640"></status>
</kw>
<kw type="foritem" name="${i} = 66">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:12.977" starttime="20200601 13:21:12.976"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:13.280" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:13.281" starttime="20200601 13:21:12.980"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:13.286" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:13.309" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000282 seconds.</msg>
<msg timestamp="20200601 13:21:13.310" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:14 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:13.310" starttime="20200601 13:21:13.281"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:13.310" starttime="20200601 13:21:12.976"></status>
</kw>
<kw type="foritem" name="${i} = 67">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:13.311" starttime="20200601 13:21:13.310"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:13.613" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:13.613" starttime="20200601 13:21:13.311"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:13.619" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:13.640" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000379 seconds.</msg>
<msg timestamp="20200601 13:21:13.641" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:14 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:13.641" starttime="20200601 13:21:13.613"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:13.641" starttime="20200601 13:21:13.310"></status>
</kw>
<kw type="foritem" name="${i} = 68">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:13.642" starttime="20200601 13:21:13.641"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:13.944" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:13.944" starttime="20200601 13:21:13.642"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:13.951" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:13.974" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000265 seconds.</msg>
<msg timestamp="20200601 13:21:13.975" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:15 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:13.975" starttime="20200601 13:21:13.944"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:13.975" starttime="20200601 13:21:13.641"></status>
</kw>
<kw type="foritem" name="${i} = 69">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:13.975" starttime="20200601 13:21:13.975"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:14.277" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:14.277" starttime="20200601 13:21:13.976"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:14.285" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:14.309" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000334 seconds.</msg>
<msg timestamp="20200601 13:21:14.309" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:15 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:14.310" starttime="20200601 13:21:14.278"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:14.310" starttime="20200601 13:21:13.975"></status>
</kw>
<kw type="foritem" name="${i} = 70">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:14.312" starttime="20200601 13:21:14.310"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:14.616" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:14.616" starttime="20200601 13:21:14.312"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:14.624" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:14.647" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000365 seconds.</msg>
<msg timestamp="20200601 13:21:14.647" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:15 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:14.648" starttime="20200601 13:21:14.616"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:14.648" starttime="20200601 13:21:14.310"></status>
</kw>
<kw type="foritem" name="${i} = 71">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:14.649" starttime="20200601 13:21:14.648"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:14.950" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:14.950" starttime="20200601 13:21:14.649"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:14.959" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:14.983" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000399 seconds.</msg>
<msg timestamp="20200601 13:21:14.983" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:16 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:14.983" starttime="20200601 13:21:14.950"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:14.983" starttime="20200601 13:21:14.648"></status>
</kw>
<kw type="foritem" name="${i} = 72">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:14.985" starttime="20200601 13:21:14.984"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:15.286" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:15.286" starttime="20200601 13:21:14.986"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:15.293" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:15.316" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000314 seconds.</msg>
<msg timestamp="20200601 13:21:15.317" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:16 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:15.317" starttime="20200601 13:21:15.287"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:15.317" starttime="20200601 13:21:14.983"></status>
</kw>
<kw type="foritem" name="${i} = 73">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:15.318" starttime="20200601 13:21:15.317"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:15.618" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:15.618" starttime="20200601 13:21:15.318"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:15.626" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:15.649" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000357 seconds.</msg>
<msg timestamp="20200601 13:21:15.650" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:16 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:15.650" starttime="20200601 13:21:15.619"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:15.650" starttime="20200601 13:21:15.317"></status>
</kw>
<kw type="foritem" name="${i} = 74">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:15.651" starttime="20200601 13:21:15.650"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:15.953" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:15.953" starttime="20200601 13:21:15.651"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:15.960" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:15.982" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000323 seconds.</msg>
<msg timestamp="20200601 13:21:15.983" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:17 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:15.983" starttime="20200601 13:21:15.953"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:15.983" starttime="20200601 13:21:15.650"></status>
</kw>
<kw type="foritem" name="${i} = 75">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:15.984" starttime="20200601 13:21:15.983"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:16.284" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:16.285" starttime="20200601 13:21:15.984"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:16.293" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:16.315" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000415 seconds.</msg>
<msg timestamp="20200601 13:21:16.316" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:17 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:16.316" starttime="20200601 13:21:16.285"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:16.316" starttime="20200601 13:21:15.983"></status>
</kw>
<kw type="foritem" name="${i} = 76">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:16.318" starttime="20200601 13:21:16.316"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:16.618" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:16.619" starttime="20200601 13:21:16.318"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:16.626" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:16.651" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000359 seconds.</msg>
<msg timestamp="20200601 13:21:16.651" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:17 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:16.652" starttime="20200601 13:21:16.619"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:16.652" starttime="20200601 13:21:16.316"></status>
</kw>
<kw type="foritem" name="${i} = 77">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:16.653" starttime="20200601 13:21:16.652"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:16.954" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:16.954" starttime="20200601 13:21:16.654"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:16.963" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:16.985" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000444 seconds.</msg>
<msg timestamp="20200601 13:21:16.986" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:18 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:16.986" starttime="20200601 13:21:16.955"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:16.986" starttime="20200601 13:21:16.652"></status>
</kw>
<kw type="foritem" name="${i} = 78">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:16.987" starttime="20200601 13:21:16.986"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:17.288" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:17.288" starttime="20200601 13:21:16.987"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:17.296" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:17.319" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000357 seconds.</msg>
<msg timestamp="20200601 13:21:17.319" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:18 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:17.319" starttime="20200601 13:21:17.288"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:17.319" starttime="20200601 13:21:16.986"></status>
</kw>
<kw type="foritem" name="${i} = 79">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:17.321" starttime="20200601 13:21:17.320"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:17.622" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:17.622" starttime="20200601 13:21:17.321"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:17.628" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:17.650" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000279 seconds.</msg>
<msg timestamp="20200601 13:21:17.650" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:18 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:17.650" starttime="20200601 13:21:17.622"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:17.650" starttime="20200601 13:21:17.319"></status>
</kw>
<kw type="foritem" name="${i} = 80">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:17.651" starttime="20200601 13:21:17.650"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:17.952" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:17.952" starttime="20200601 13:21:17.652"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:17.961" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:17.984" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000341 seconds.</msg>
<msg timestamp="20200601 13:21:17.984" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:19 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:17.984" starttime="20200601 13:21:17.953"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:17.984" starttime="20200601 13:21:17.650"></status>
</kw>
<kw type="foritem" name="${i} = 81">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:17.986" starttime="20200601 13:21:17.985"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:18.289" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:18.289" starttime="20200601 13:21:17.986"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:18.298" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:18.320" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000402 seconds.</msg>
<msg timestamp="20200601 13:21:18.320" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:19 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:18.320" starttime="20200601 13:21:18.289"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:18.320" starttime="20200601 13:21:17.984"></status>
</kw>
<kw type="foritem" name="${i} = 82">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:18.322" starttime="20200601 13:21:18.321"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:18.623" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:18.623" starttime="20200601 13:21:18.322"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:18.632" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:18.657" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000379 seconds.</msg>
<msg timestamp="20200601 13:21:18.658" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:19 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:18.658" starttime="20200601 13:21:18.623"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:18.658" starttime="20200601 13:21:18.321"></status>
</kw>
<kw type="foritem" name="${i} = 83">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:18.660" starttime="20200601 13:21:18.658"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:18.961" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:18.961" starttime="20200601 13:21:18.660"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:18.969" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:18.992" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.00038 seconds.</msg>
<msg timestamp="20200601 13:21:18.993" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:20 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:18.993" starttime="20200601 13:21:18.961"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:18.993" starttime="20200601 13:21:18.658"></status>
</kw>
<kw type="foritem" name="${i} = 84">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:18.995" starttime="20200601 13:21:18.993"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:19.296" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:19.296" starttime="20200601 13:21:18.995"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:19.303" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:19.326" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.00027 seconds.</msg>
<msg timestamp="20200601 13:21:19.326" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:20 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:19.327" starttime="20200601 13:21:19.296"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:19.327" starttime="20200601 13:21:18.993"></status>
</kw>
<kw type="foritem" name="${i} = 85">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:19.328" starttime="20200601 13:21:19.327"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:19.629" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:19.629" starttime="20200601 13:21:19.328"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:19.636" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:19.660" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000324 seconds.</msg>
<msg timestamp="20200601 13:21:19.660" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:20 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:19.660" starttime="20200601 13:21:19.629"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:19.661" starttime="20200601 13:21:19.327"></status>
</kw>
<kw type="foritem" name="${i} = 86">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:19.662" starttime="20200601 13:21:19.661"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:19.963" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:19.963" starttime="20200601 13:21:19.662"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:19.972" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:19.997" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000375 seconds.</msg>
<msg timestamp="20200601 13:21:19.997" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:21 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:19.998" starttime="20200601 13:21:19.963"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:19.998" starttime="20200601 13:21:19.661"></status>
</kw>
<kw type="foritem" name="${i} = 87">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:19.999" starttime="20200601 13:21:19.998"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:20.306" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:20.306" starttime="20200601 13:21:19.999"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:20.314" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:20.336" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000354 seconds.</msg>
<msg timestamp="20200601 13:21:20.337" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:21 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:20.337" starttime="20200601 13:21:20.306"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:20.337" starttime="20200601 13:21:19.998"></status>
</kw>
<kw type="foritem" name="${i} = 88">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:20.338" starttime="20200601 13:21:20.337"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:20.643" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:20.643" starttime="20200601 13:21:20.338"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:20.651" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:20.675" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000305 seconds.</msg>
<msg timestamp="20200601 13:21:20.675" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:22 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:20.675" starttime="20200601 13:21:20.643"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:20.675" starttime="20200601 13:21:20.337"></status>
</kw>
<kw type="foritem" name="${i} = 89">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:20.676" starttime="20200601 13:21:20.676"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:20.979" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:20.979" starttime="20200601 13:21:20.677"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:20.985" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:21.004" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000287 seconds.</msg>
<msg timestamp="20200601 13:21:21.004" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:22 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:21.004" starttime="20200601 13:21:20.979"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:21.005" starttime="20200601 13:21:20.675"></status>
</kw>
<kw type="foritem" name="${i} = 90">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:21.006" starttime="20200601 13:21:21.005"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:21.306" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:21.307" starttime="20200601 13:21:21.006"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:21.315" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:21.339" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000327 seconds.</msg>
<msg timestamp="20200601 13:21:21.339" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:22 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:21.339" starttime="20200601 13:21:21.307"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:21.339" starttime="20200601 13:21:21.005"></status>
</kw>
<kw type="foritem" name="${i} = 91">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:21.340" starttime="20200601 13:21:21.340"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:21.655" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:21.655" starttime="20200601 13:21:21.341"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:21.663" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:21.686" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000427 seconds.</msg>
<msg timestamp="20200601 13:21:21.687" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:23 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:21.687" starttime="20200601 13:21:21.655"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:21.687" starttime="20200601 13:21:21.339"></status>
</kw>
<kw type="foritem" name="${i} = 92">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:21.688" starttime="20200601 13:21:21.687"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:21.990" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:21.990" starttime="20200601 13:21:21.689"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:21.999" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:22.015" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000369 seconds.</msg>
<msg timestamp="20200601 13:21:22.016" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:23 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:22.016" starttime="20200601 13:21:21.991"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:22.016" starttime="20200601 13:21:21.687"></status>
</kw>
<kw type="foritem" name="${i} = 93">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:22.017" starttime="20200601 13:21:22.016"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:22.318" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:22.318" starttime="20200601 13:21:22.017"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:22.324" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:22.347" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000284 seconds.</msg>
<msg timestamp="20200601 13:21:22.347" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:23 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:22.347" starttime="20200601 13:21:22.318"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:22.347" starttime="20200601 13:21:22.016"></status>
</kw>
<kw type="foritem" name="${i} = 94">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:22.348" starttime="20200601 13:21:22.348"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:22.649" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:22.649" starttime="20200601 13:21:22.348"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:22.656" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:22.678" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000274 seconds.</msg>
<msg timestamp="20200601 13:21:22.679" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:24 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:22.679" starttime="20200601 13:21:22.649"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:22.679" starttime="20200601 13:21:22.347"></status>
</kw>
<kw type="foritem" name="${i} = 95">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:22.680" starttime="20200601 13:21:22.679"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:22.981" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:22.981" starttime="20200601 13:21:22.681"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:22.989" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:23.012" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000287 seconds.</msg>
<msg timestamp="20200601 13:21:23.013" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:24 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:23.013" starttime="20200601 13:21:22.982"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:23.013" starttime="20200601 13:21:22.679"></status>
</kw>
<kw type="foritem" name="${i} = 96">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:23.014" starttime="20200601 13:21:23.013"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:23.315" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:23.315" starttime="20200601 13:21:23.014"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:23.322" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:23.345" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000349 seconds.</msg>
<msg timestamp="20200601 13:21:23.345" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:24 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:23.345" starttime="20200601 13:21:23.315"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:23.345" starttime="20200601 13:21:23.013"></status>
</kw>
<kw type="foritem" name="${i} = 97">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:23.347" starttime="20200601 13:21:23.346"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:23.649" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:23.649" starttime="20200601 13:21:23.347"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:23.656" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:23.680" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.0003 seconds.</msg>
<msg timestamp="20200601 13:21:23.680" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:25 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:23.680" starttime="20200601 13:21:23.650"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:23.680" starttime="20200601 13:21:23.346"></status>
</kw>
<kw type="foritem" name="${i} = 98">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:23.681" starttime="20200601 13:21:23.681"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:23.983" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:23.983" starttime="20200601 13:21:23.682"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:23.992" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:24.013" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000375 seconds.</msg>
<msg timestamp="20200601 13:21:24.014" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:25 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:24.014" starttime="20200601 13:21:23.984"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:24.014" starttime="20200601 13:21:23.680"></status>
</kw>
<kw type="foritem" name="${i} = 99">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:24.015" starttime="20200601 13:21:24.014"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:24.316" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:24.316" starttime="20200601 13:21:24.015"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:24.325" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:24.345" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000371 seconds.</msg>
<msg timestamp="20200601 13:21:24.346" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:25 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:24.346" starttime="20200601 13:21:24.316"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:24.346" starttime="20200601 13:21:24.014"></status>
</kw>
<kw type="foritem" name="${i} = 100">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:24.348" starttime="20200601 13:21:24.346"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:24.648" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:24.648" starttime="20200601 13:21:24.348"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:24.655" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:24.679" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000303 seconds.</msg>
<msg timestamp="20200601 13:21:24.679" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:26 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:24.679" starttime="20200601 13:21:24.649"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:24.680" starttime="20200601 13:21:24.346"></status>
</kw>
<kw type="foritem" name="${i} = 101">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:24.681" starttime="20200601 13:21:24.680"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:24.982" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:24.982" starttime="20200601 13:21:24.681"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:24.989" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:25.009" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000284 seconds.</msg>
<msg timestamp="20200601 13:21:25.010" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:26 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:25.010" starttime="20200601 13:21:24.982"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:25.010" starttime="20200601 13:21:24.680"></status>
</kw>
<kw type="foritem" name="${i} = 102">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:25.011" starttime="20200601 13:21:25.010"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:25.312" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:25.313" starttime="20200601 13:21:25.012"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:25.328" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:25.354" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.001052 seconds.</msg>
<msg timestamp="20200601 13:21:25.356" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:26 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:25.356" starttime="20200601 13:21:25.313"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:25.356" starttime="20200601 13:21:25.010"></status>
</kw>
<kw type="foritem" name="${i} = 103">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:25.359" starttime="20200601 13:21:25.357"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:25.664" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:25.664" starttime="20200601 13:21:25.361"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:25.670" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:25.694" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.00032 seconds.</msg>
<msg timestamp="20200601 13:21:25.694" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:27 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:25.694" starttime="20200601 13:21:25.664"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:25.694" starttime="20200601 13:21:25.357"></status>
</kw>
<kw type="foritem" name="${i} = 104">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:25.695" starttime="20200601 13:21:25.695"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:25.999" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:25.999" starttime="20200601 13:21:25.695"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:26.009" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:26.031" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000297 seconds.</msg>
<msg timestamp="20200601 13:21:26.032" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:27 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:26.032" starttime="20200601 13:21:26.000"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:26.032" starttime="20200601 13:21:25.694"></status>
</kw>
<kw type="foritem" name="${i} = 105">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:26.033" starttime="20200601 13:21:26.032"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:26.334" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:26.334" starttime="20200601 13:21:26.033"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:26.340" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:26.361" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000293 seconds.</msg>
<msg timestamp="20200601 13:21:26.361" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:27 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:26.361" starttime="20200601 13:21:26.334"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:26.362" starttime="20200601 13:21:26.032"></status>
</kw>
<kw type="foritem" name="${i} = 106">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:26.362" starttime="20200601 13:21:26.362"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:26.663" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:26.663" starttime="20200601 13:21:26.363"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:26.669" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:26.688" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000361 seconds.</msg>
<msg timestamp="20200601 13:21:26.689" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:28 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:26.689" starttime="20200601 13:21:26.664"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:26.689" starttime="20200601 13:21:26.362"></status>
</kw>
<kw type="foritem" name="${i} = 107">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:26.690" starttime="20200601 13:21:26.689"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:26.991" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:26.991" starttime="20200601 13:21:26.690"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:26.998" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:27.021" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000392 seconds.</msg>
<msg timestamp="20200601 13:21:27.021" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:28 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:27.021" starttime="20200601 13:21:26.991"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:27.021" starttime="20200601 13:21:26.689"></status>
</kw>
<kw type="foritem" name="${i} = 108">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:27.023" starttime="20200601 13:21:27.022"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:27.324" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:27.324" starttime="20200601 13:21:27.023"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:27.330" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:27.354" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000266 seconds.</msg>
<msg timestamp="20200601 13:21:27.354" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:28 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:27.354" starttime="20200601 13:21:27.324"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:27.354" starttime="20200601 13:21:27.021"></status>
</kw>
<kw type="foritem" name="${i} = 109">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:27.356" starttime="20200601 13:21:27.355"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:27.657" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:27.657" starttime="20200601 13:21:27.356"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:27.664" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:27.686" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000366 seconds.</msg>
<msg timestamp="20200601 13:21:27.686" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:29 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:27.686" starttime="20200601 13:21:27.657"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:27.686" starttime="20200601 13:21:27.354"></status>
</kw>
<kw type="foritem" name="${i} = 110">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:27.687" starttime="20200601 13:21:27.687"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:27.994" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:27.994" starttime="20200601 13:21:27.688"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:28.000" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:28.030" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000344 seconds.</msg>
<msg timestamp="20200601 13:21:28.030" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:29 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:28.030" starttime="20200601 13:21:27.994"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:28.030" starttime="20200601 13:21:27.686"></status>
</kw>
<kw type="foritem" name="${i} = 111">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:28.031" starttime="20200601 13:21:28.031"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:28.339" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:28.339" starttime="20200601 13:21:28.031"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:28.346" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:28.368" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000307 seconds.</msg>
<msg timestamp="20200601 13:21:28.368" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:29 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:28.368" starttime="20200601 13:21:28.340"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:28.368" starttime="20200601 13:21:28.030"></status>
</kw>
<kw type="foritem" name="${i} = 112">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:28.369" starttime="20200601 13:21:28.369"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:28.679" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:28.679" starttime="20200601 13:21:28.369"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:28.688" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:28.711" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000364 seconds.</msg>
<msg timestamp="20200601 13:21:28.712" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:30 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:28.712" starttime="20200601 13:21:28.680"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:28.712" starttime="20200601 13:21:28.368"></status>
</kw>
<kw type="foritem" name="${i} = 113">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:28.713" starttime="20200601 13:21:28.713"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:29.015" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:29.015" starttime="20200601 13:21:28.714"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:29.023" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:29.047" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.00031 seconds.</msg>
<msg timestamp="20200601 13:21:29.048" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:30 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:29.048" starttime="20200601 13:21:29.016"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:29.048" starttime="20200601 13:21:28.712"></status>
</kw>
<kw type="foritem" name="${i} = 114">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:29.049" starttime="20200601 13:21:29.048"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:29.359" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:29.359" starttime="20200601 13:21:29.049"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:29.369" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:29.390" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000465 seconds.</msg>
<msg timestamp="20200601 13:21:29.391" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:30 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:29.391" starttime="20200601 13:21:29.360"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:29.391" starttime="20200601 13:21:29.048"></status>
</kw>
<kw type="foritem" name="${i} = 115">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:29.392" starttime="20200601 13:21:29.392"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:29.693" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:29.693" starttime="20200601 13:21:29.393"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:29.703" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:29.724" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000324 seconds.</msg>
<msg timestamp="20200601 13:21:29.724" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:31 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:29.724" starttime="20200601 13:21:29.694"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:29.725" starttime="20200601 13:21:29.391"></status>
</kw>
<kw type="foritem" name="${i} = 116">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:29.725" starttime="20200601 13:21:29.725"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:30.028" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:30.028" starttime="20200601 13:21:29.726"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:30.034" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:30.057" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000307 seconds.</msg>
<msg timestamp="20200601 13:21:30.058" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:31 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:30.058" starttime="20200601 13:21:30.028"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:30.058" starttime="20200601 13:21:29.725"></status>
</kw>
<kw type="foritem" name="${i} = 117">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:30.059" starttime="20200601 13:21:30.058"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:30.362" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:30.362" starttime="20200601 13:21:30.059"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:30.369" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:30.391" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000307 seconds.</msg>
<msg timestamp="20200601 13:21:30.391" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:31 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:30.391" starttime="20200601 13:21:30.363"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:30.391" starttime="20200601 13:21:30.058"></status>
</kw>
<kw type="foritem" name="${i} = 118">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:30.392" starttime="20200601 13:21:30.392"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:30.699" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:30.699" starttime="20200601 13:21:30.393"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:30.708" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:30.731" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.00039 seconds.</msg>
<msg timestamp="20200601 13:21:30.731" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:32 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:30.731" starttime="20200601 13:21:30.700"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:30.731" starttime="20200601 13:21:30.391"></status>
</kw>
<kw type="foritem" name="${i} = 119">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:30.732" starttime="20200601 13:21:30.732"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:31.033" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:31.034" starttime="20200601 13:21:30.733"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:31.040" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:31.063" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000282 seconds.</msg>
<msg timestamp="20200601 13:21:31.063" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:32 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:31.063" starttime="20200601 13:21:31.034"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:31.063" starttime="20200601 13:21:30.731"></status>
</kw>
<kw type="foritem" name="${i} = 120">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:31.064" starttime="20200601 13:21:31.064"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:31.365" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:31.365" starttime="20200601 13:21:31.065"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:31.373" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:31.396" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000341 seconds.</msg>
<msg timestamp="20200601 13:21:31.396" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:32 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:31.397" starttime="20200601 13:21:31.366"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:31.397" starttime="20200601 13:21:31.063"></status>
</kw>
<kw type="foritem" name="${i} = 121">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:31.398" starttime="20200601 13:21:31.397"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:31.699" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:31.699" starttime="20200601 13:21:31.398"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:31.706" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:31.730" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000376 seconds.</msg>
<msg timestamp="20200601 13:21:31.730" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:33 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:31.730" starttime="20200601 13:21:31.699"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:31.730" starttime="20200601 13:21:31.397"></status>
</kw>
<kw type="foritem" name="${i} = 122">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:31.732" starttime="20200601 13:21:31.731"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:32.035" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:32.035" starttime="20200601 13:21:31.732"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:32.042" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:32.065" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.00032 seconds.</msg>
<msg timestamp="20200601 13:21:32.065" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:33 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:32.065" starttime="20200601 13:21:32.035"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:32.065" starttime="20200601 13:21:31.731"></status>
</kw>
<kw type="foritem" name="${i} = 123">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:32.066" starttime="20200601 13:21:32.066"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:32.375" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:32.375" starttime="20200601 13:21:32.067"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:32.384" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:32.406" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000361 seconds.</msg>
<msg timestamp="20200601 13:21:32.406" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:33 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:32.406" starttime="20200601 13:21:32.376"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:32.407" starttime="20200601 13:21:32.066"></status>
</kw>
<kw type="foritem" name="${i} = 124">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:32.408" starttime="20200601 13:21:32.407"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:32.709" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:32.709" starttime="20200601 13:21:32.408"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:32.716" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:32.741" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000587 seconds.</msg>
<msg timestamp="20200601 13:21:32.742" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:34 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:32.742" starttime="20200601 13:21:32.709"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:32.742" starttime="20200601 13:21:32.407"></status>
</kw>
<kw type="foritem" name="${i} = 125">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:32.743" starttime="20200601 13:21:32.742"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:33.044" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:33.045" starttime="20200601 13:21:32.744"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:33.052" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:33.074" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000273 seconds.</msg>
<msg timestamp="20200601 13:21:33.074" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:34 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:33.075" starttime="20200601 13:21:33.045"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:33.075" starttime="20200601 13:21:32.742"></status>
</kw>
<kw type="foritem" name="${i} = 126">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:33.076" starttime="20200601 13:21:33.075"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:33.376" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:33.377" starttime="20200601 13:21:33.076"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:33.383" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:33.407" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000295 seconds.</msg>
<msg timestamp="20200601 13:21:33.407" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:34 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:33.407" starttime="20200601 13:21:33.377"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:33.407" starttime="20200601 13:21:33.075"></status>
</kw>
<kw type="foritem" name="${i} = 127">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:33.408" starttime="20200601 13:21:33.407"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:33.709" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:33.709" starttime="20200601 13:21:33.409"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:33.716" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:33.739" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000306 seconds.</msg>
<msg timestamp="20200601 13:21:33.739" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:35 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:33.740" starttime="20200601 13:21:33.709"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:33.740" starttime="20200601 13:21:33.407"></status>
</kw>
<kw type="foritem" name="${i} = 128">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:33.741" starttime="20200601 13:21:33.740"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:34.045" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:34.046" starttime="20200601 13:21:33.741"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:34.052" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:34.073" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000313 seconds.</msg>
<msg timestamp="20200601 13:21:34.073" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:35 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:34.073" starttime="20200601 13:21:34.046"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:34.074" starttime="20200601 13:21:33.740"></status>
</kw>
<kw type="foritem" name="${i} = 129">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:34.074" starttime="20200601 13:21:34.074"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:34.375" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:34.376" starttime="20200601 13:21:34.075"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:34.384" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:34.407" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000361 seconds.</msg>
<msg timestamp="20200601 13:21:34.407" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:35 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:34.408" starttime="20200601 13:21:34.376"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:34.408" starttime="20200601 13:21:34.074"></status>
</kw>
<kw type="foritem" name="${i} = 130">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:34.409" starttime="20200601 13:21:34.408"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:34.710" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:34.710" starttime="20200601 13:21:34.409"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:34.718" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:34.738" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000309 seconds.</msg>
<msg timestamp="20200601 13:21:34.739" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:36 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:34.739" starttime="20200601 13:21:34.710"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:34.739" starttime="20200601 13:21:34.408"></status>
</kw>
<kw type="foritem" name="${i} = 131">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:34.740" starttime="20200601 13:21:34.739"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:35.041" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:35.041" starttime="20200601 13:21:34.740"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:35.049" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:35.070" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.00032 seconds.</msg>
<msg timestamp="20200601 13:21:35.070" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:36 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:35.070" starttime="20200601 13:21:35.041"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:35.070" starttime="20200601 13:21:34.739"></status>
</kw>
<kw type="foritem" name="${i} = 132">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:35.071" starttime="20200601 13:21:35.070"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:35.372" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:35.372" starttime="20200601 13:21:35.071"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:35.380" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:35.406" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000373 seconds.</msg>
<msg timestamp="20200601 13:21:35.406" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:36 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:35.406" starttime="20200601 13:21:35.373"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:35.406" starttime="20200601 13:21:35.070"></status>
</kw>
<kw type="foritem" name="${i} = 133">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:35.407" starttime="20200601 13:21:35.407"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:35.708" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:35.708" starttime="20200601 13:21:35.408"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:35.715" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:35.737" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000315 seconds.</msg>
<msg timestamp="20200601 13:21:35.737" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:37 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:35.737" starttime="20200601 13:21:35.709"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:35.737" starttime="20200601 13:21:35.406"></status>
</kw>
<kw type="foritem" name="${i} = 134">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:35.738" starttime="20200601 13:21:35.738"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:36.039" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:36.040" starttime="20200601 13:21:35.739"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:36.046" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:36.067" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000318 seconds.</msg>
<msg timestamp="20200601 13:21:36.068" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:37 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:36.068" starttime="20200601 13:21:36.040"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:36.068" starttime="20200601 13:21:35.738"></status>
</kw>
<kw type="foritem" name="${i} = 135">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:36.069" starttime="20200601 13:21:36.068"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:36.370" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:36.370" starttime="20200601 13:21:36.069"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:36.378" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:36.403" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000376 seconds.</msg>
<msg timestamp="20200601 13:21:36.404" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:37 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:36.404" starttime="20200601 13:21:36.370"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:36.404" starttime="20200601 13:21:36.068"></status>
</kw>
<kw type="foritem" name="${i} = 136">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:36.405" starttime="20200601 13:21:36.404"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:36.706" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:36.706" starttime="20200601 13:21:36.406"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:36.714" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:36.738" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000329 seconds.</msg>
<msg timestamp="20200601 13:21:36.738" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:38 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:36.738" starttime="20200601 13:21:36.707"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:36.738" starttime="20200601 13:21:36.404"></status>
</kw>
<kw type="foritem" name="${i} = 137">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:36.740" starttime="20200601 13:21:36.739"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:37.040" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:37.041" starttime="20200601 13:21:36.740"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:37.047" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:37.070" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000272 seconds.</msg>
<msg timestamp="20200601 13:21:37.071" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:38 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:37.071" starttime="20200601 13:21:37.041"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:37.071" starttime="20200601 13:21:36.738"></status>
</kw>
<kw type="foritem" name="${i} = 138">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:37.072" starttime="20200601 13:21:37.071"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:37.373" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:37.373" starttime="20200601 13:21:37.072"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:37.380" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:37.403" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000316 seconds.</msg>
<msg timestamp="20200601 13:21:37.403" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:38 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:37.403" starttime="20200601 13:21:37.373"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:37.403" starttime="20200601 13:21:37.071"></status>
</kw>
<kw type="foritem" name="${i} = 139">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:37.405" starttime="20200601 13:21:37.404"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:37.712" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:37.712" starttime="20200601 13:21:37.405"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:37.721" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:37.746" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000391 seconds.</msg>
<msg timestamp="20200601 13:21:37.747" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:39 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:37.747" starttime="20200601 13:21:37.712"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:37.747" starttime="20200601 13:21:37.404"></status>
</kw>
<kw type="foritem" name="${i} = 140">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:37.748" starttime="20200601 13:21:37.747"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:38.049" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:38.049" starttime="20200601 13:21:37.748"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:38.059" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:38.081" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000343 seconds.</msg>
<msg timestamp="20200601 13:21:38.081" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:39 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:38.081" starttime="20200601 13:21:38.050"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:38.081" starttime="20200601 13:21:37.747"></status>
</kw>
<kw type="foritem" name="${i} = 141">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:38.082" starttime="20200601 13:21:38.082"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:38.391" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:38.391" starttime="20200601 13:21:38.083"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:38.397" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:38.419" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.00028 seconds.</msg>
<msg timestamp="20200601 13:21:38.419" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:39 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:38.419" starttime="20200601 13:21:38.392"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:38.419" starttime="20200601 13:21:38.082"></status>
</kw>
<kw type="foritem" name="${i} = 142">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:38.420" starttime="20200601 13:21:38.420"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:38.724" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:38.724" starttime="20200601 13:21:38.420"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:38.730" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:38.754" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000264 seconds.</msg>
<msg timestamp="20200601 13:21:38.754" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:40 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:38.754" starttime="20200601 13:21:38.725"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:38.754" starttime="20200601 13:21:38.419"></status>
</kw>
<kw type="foritem" name="${i} = 143">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:38.755" starttime="20200601 13:21:38.754"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:39.059" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:39.060" starttime="20200601 13:21:38.755"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:39.070" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:39.093" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000469 seconds.</msg>
<msg timestamp="20200601 13:21:39.093" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:40 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:39.093" starttime="20200601 13:21:39.060"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:39.093" starttime="20200601 13:21:38.754"></status>
</kw>
<kw type="foritem" name="${i} = 144">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:39.094" starttime="20200601 13:21:39.094"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:39.396" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:39.397" starttime="20200601 13:21:39.095"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:39.410" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:39.434" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000365 seconds.</msg>
<msg timestamp="20200601 13:21:39.434" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:40 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:39.435" starttime="20200601 13:21:39.397"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:39.435" starttime="20200601 13:21:39.093"></status>
</kw>
<kw type="foritem" name="${i} = 145">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:39.436" starttime="20200601 13:21:39.435"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:39.749" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:39.750" starttime="20200601 13:21:39.436"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:39.758" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:39.782" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000347 seconds.</msg>
<msg timestamp="20200601 13:21:39.782" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:41 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:39.782" starttime="20200601 13:21:39.750"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:39.782" starttime="20200601 13:21:39.435"></status>
</kw>
<kw type="foritem" name="${i} = 146">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:39.783" starttime="20200601 13:21:39.783"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:40.084" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:40.084" starttime="20200601 13:21:39.783"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:40.093" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:40.115" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000327 seconds.</msg>
<msg timestamp="20200601 13:21:40.115" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:41 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:40.115" starttime="20200601 13:21:40.085"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:40.115" starttime="20200601 13:21:39.782"></status>
</kw>
<kw type="foritem" name="${i} = 147">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:40.116" starttime="20200601 13:21:40.116"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:40.419" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:40.419" starttime="20200601 13:21:40.116"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:40.426" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:40.447" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000285 seconds.</msg>
<msg timestamp="20200601 13:21:40.447" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:41 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:40.447" starttime="20200601 13:21:40.420"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:40.447" starttime="20200601 13:21:40.115"></status>
</kw>
<kw type="foritem" name="${i} = 148">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:40.449" starttime="20200601 13:21:40.448"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:40.775" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:40.775" starttime="20200601 13:21:40.449"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:40.782" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:40.803" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.00031 seconds.</msg>
<msg timestamp="20200601 13:21:40.803" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:42 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:40.803" starttime="20200601 13:21:40.775"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:40.803" starttime="20200601 13:21:40.448"></status>
</kw>
<kw type="foritem" name="${i} = 149">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:40.804" starttime="20200601 13:21:40.804"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:41.107" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:41.107" starttime="20200601 13:21:40.805"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:41.115" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:41.136" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000378 seconds.</msg>
<msg timestamp="20200601 13:21:41.137" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:42 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:41.137" starttime="20200601 13:21:41.107"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:41.137" starttime="20200601 13:21:40.804"></status>
</kw>
<kw type="foritem" name="${i} = 150">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:41.138" starttime="20200601 13:21:41.137"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:41.443" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:41.443" starttime="20200601 13:21:41.138"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:41.451" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:41.475" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.00037 seconds.</msg>
<msg timestamp="20200601 13:21:41.476" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:42 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:41.476" starttime="20200601 13:21:41.443"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:41.476" starttime="20200601 13:21:41.137"></status>
</kw>
<kw type="foritem" name="${i} = 151">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:41.477" starttime="20200601 13:21:41.477"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:41.779" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:41.779" starttime="20200601 13:21:41.478"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:41.786" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:41.807" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.00029 seconds.</msg>
<msg timestamp="20200601 13:21:41.807" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:43 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:41.807" starttime="20200601 13:21:41.780"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:41.808" starttime="20200601 13:21:41.476"></status>
</kw>
<kw type="foritem" name="${i} = 152">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:41.808" starttime="20200601 13:21:41.808"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:42.119" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:42.119" starttime="20200601 13:21:41.809"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:42.127" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:42.149" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000328 seconds.</msg>
<msg timestamp="20200601 13:21:42.150" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:43 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:42.150" starttime="20200601 13:21:42.120"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:42.150" starttime="20200601 13:21:41.808"></status>
</kw>
<kw type="foritem" name="${i} = 153">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:42.151" starttime="20200601 13:21:42.150"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:42.457" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:42.457" starttime="20200601 13:21:42.151"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:42.466" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:42.490" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000393 seconds.</msg>
<msg timestamp="20200601 13:21:42.491" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:43 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:42.491" starttime="20200601 13:21:42.458"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:42.491" starttime="20200601 13:21:42.150"></status>
</kw>
<kw type="foritem" name="${i} = 154">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:42.493" starttime="20200601 13:21:42.491"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:42.793" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:42.794" starttime="20200601 13:21:42.493"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:42.803" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:42.827" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000388 seconds.</msg>
<msg timestamp="20200601 13:21:42.827" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:44 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:42.827" starttime="20200601 13:21:42.794"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:42.827" starttime="20200601 13:21:42.491"></status>
</kw>
<kw type="foritem" name="${i} = 155">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:42.829" starttime="20200601 13:21:42.828"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:43.130" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:43.130" starttime="20200601 13:21:42.829"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:43.137" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:43.159" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000288 seconds.</msg>
<msg timestamp="20200601 13:21:43.159" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:44 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:43.159" starttime="20200601 13:21:43.130"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:43.159" starttime="20200601 13:21:42.827"></status>
</kw>
<kw type="foritem" name="${i} = 156">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:43.160" starttime="20200601 13:21:43.160"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:43.472" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:43.472" starttime="20200601 13:21:43.160"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:43.480" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:43.502" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000313 seconds.</msg>
<msg timestamp="20200601 13:21:43.502" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:44 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:43.502" starttime="20200601 13:21:43.473"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:43.502" starttime="20200601 13:21:43.159"></status>
</kw>
<kw type="foritem" name="${i} = 157">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:43.503" starttime="20200601 13:21:43.503"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:43.809" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:43.809" starttime="20200601 13:21:43.504"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:43.816" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:43.839" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000328 seconds.</msg>
<msg timestamp="20200601 13:21:43.839" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:45 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:43.839" starttime="20200601 13:21:43.810"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:43.839" starttime="20200601 13:21:43.502"></status>
</kw>
<kw type="foritem" name="${i} = 158">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:43.840" starttime="20200601 13:21:43.840"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:44.141" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:44.142" starttime="20200601 13:21:43.841"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:44.149" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:44.171" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000309 seconds.</msg>
<msg timestamp="20200601 13:21:44.172" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:45 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:44.172" starttime="20200601 13:21:44.142"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:44.172" starttime="20200601 13:21:43.840"></status>
</kw>
<kw type="foritem" name="${i} = 159">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:44.173" starttime="20200601 13:21:44.172"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:44.479" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:44.479" starttime="20200601 13:21:44.174"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:44.488" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:44.511" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000361 seconds.</msg>
<msg timestamp="20200601 13:21:44.511" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:45 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:44.511" starttime="20200601 13:21:44.480"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:44.511" starttime="20200601 13:21:44.172"></status>
</kw>
<kw type="foritem" name="${i} = 160">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:44.512" starttime="20200601 13:21:44.512"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:44.819" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:44.819" starttime="20200601 13:21:44.513"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:44.826" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:44.847" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000287 seconds.</msg>
<msg timestamp="20200601 13:21:44.848" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:46 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:44.848" starttime="20200601 13:21:44.819"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:44.848" starttime="20200601 13:21:44.511"></status>
</kw>
<kw type="foritem" name="${i} = 161">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:44.849" starttime="20200601 13:21:44.848"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:45.149" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:45.150" starttime="20200601 13:21:44.849"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:45.156" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:45.179" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000339 seconds.</msg>
<msg timestamp="20200601 13:21:45.180" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:46 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:45.180" starttime="20200601 13:21:45.150"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:45.180" starttime="20200601 13:21:44.848"></status>
</kw>
<kw type="foritem" name="${i} = 162">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:45.181" starttime="20200601 13:21:45.180"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:45.487" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:45.487" starttime="20200601 13:21:45.182"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:45.494" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:45.515" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000313 seconds.</msg>
<msg timestamp="20200601 13:21:45.516" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:46 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:45.516" starttime="20200601 13:21:45.487"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:45.516" starttime="20200601 13:21:45.180"></status>
</kw>
<kw type="foritem" name="${i} = 163">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:45.517" starttime="20200601 13:21:45.516"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:45.819" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:45.819" starttime="20200601 13:21:45.517"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:45.825" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:45.850" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000297 seconds.</msg>
<msg timestamp="20200601 13:21:45.851" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:47 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:45.851" starttime="20200601 13:21:45.820"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:45.851" starttime="20200601 13:21:45.516"></status>
</kw>
<kw type="foritem" name="${i} = 164">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:45.852" starttime="20200601 13:21:45.851"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:46.159" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:46.159" starttime="20200601 13:21:45.852"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:46.166" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:46.188" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000305 seconds.</msg>
<msg timestamp="20200601 13:21:46.188" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:47 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:46.188" starttime="20200601 13:21:46.160"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:46.188" starttime="20200601 13:21:45.851"></status>
</kw>
<kw type="foritem" name="${i} = 165">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:46.189" starttime="20200601 13:21:46.189"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:46.500" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:46.500" starttime="20200601 13:21:46.189"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:46.509" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:46.532" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000365 seconds.</msg>
<msg timestamp="20200601 13:21:46.532" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:47 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:46.532" starttime="20200601 13:21:46.501"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:46.532" starttime="20200601 13:21:46.188"></status>
</kw>
<kw type="foritem" name="${i} = 166">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:46.533" starttime="20200601 13:21:46.533"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:46.839" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:46.840" starttime="20200601 13:21:46.534"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:46.847" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:46.870" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000315 seconds.</msg>
<msg timestamp="20200601 13:21:46.870" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:48 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:46.870" starttime="20200601 13:21:46.840"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:46.870" starttime="20200601 13:21:46.532"></status>
</kw>
<kw type="foritem" name="${i} = 167">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:46.871" starttime="20200601 13:21:46.871"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:47.179" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:47.179" starttime="20200601 13:21:46.871"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:47.185" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:47.206" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000328 seconds.</msg>
<msg timestamp="20200601 13:21:47.207" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:48 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:47.207" starttime="20200601 13:21:47.180"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:47.207" starttime="20200601 13:21:46.870"></status>
</kw>
<kw type="foritem" name="${i} = 168">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:47.208" starttime="20200601 13:21:47.207"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:47.509" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:47.509" starttime="20200601 13:21:47.208"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:47.517" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:47.538" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000308 seconds.</msg>
<msg timestamp="20200601 13:21:47.538" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:48 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:47.538" starttime="20200601 13:21:47.509"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:47.538" starttime="20200601 13:21:47.207"></status>
</kw>
<kw type="foritem" name="${i} = 169">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:47.539" starttime="20200601 13:21:47.539"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:47.847" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:47.847" starttime="20200601 13:21:47.540"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:47.861" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:47.883" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000544000000001 seconds.</msg>
<msg timestamp="20200601 13:21:47.884" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:49 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:47.884" starttime="20200601 13:21:47.848"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:47.884" starttime="20200601 13:21:47.539"></status>
</kw>
<kw type="foritem" name="${i} = 170">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:47.885" starttime="20200601 13:21:47.885"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 13:21:48.189" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 13:21:48.190" starttime="20200601 13:21:47.886"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:48.203" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci</msg>
<msg timestamp="20200601 13:21:48.226" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/0/ONUs/1/Omci: 0.000575 seconds.</msg>
<msg timestamp="20200601 13:21:48.226" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:49 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 13:21:48.226" starttime="20200601 13:21:48.190"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.226" starttime="20200601 13:21:47.884"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.226" starttime="20200601 13:20:50.880"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.227" starttime="20200601 13:20:50.874"></status>
</kw>
<kw name="Enable All Tx Port">
<tags>
<tag>Enable Pon Port Tx</tag>
</tags>
<doc>Enable all port function</doc>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:48.237" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/</msg>
<msg timestamp="20200601 13:21:48.266" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/: 0.000586 seconds.</msg>
<msg timestamp="20200601 13:21:48.266" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:49 GMT
connection Keep-Alive
content-type application/json
content-length 1467


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPortCollection.EthernetSwitchPor...</msg>
<status status="PASS" endtime="20200601 13:21:48.266" starttime="20200601 13:21:48.228"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200601 13:21:48.267" level="INFO">Length is 20</msg>
<msg timestamp="20200601 13:21:48.268" level="INFO">${item_count} = 20</msg>
<status status="PASS" endtime="20200601 13:21:48.268" starttime="20200601 13:21:48.267"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Enable All Pon Port Tx ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.269" starttime="20200601 13:21:48.268"></status>
</kw>
<kw type="for" name="${ID} IN RANGE [ 1 | ${item_count} ]">
<kw type="foritem" name="${ID} = 1">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:48.281" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200601 13:21:48.310" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000614000000001 seconds.</msg>
<msg timestamp="20200601 13:21:48.311" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:49 GMT
connection Keep-Alive
content-type application/json
content-length 2419


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 13:21:48.311" starttime="20200601 13:21:48.270"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:21:48.312" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:21:48.312" starttime="20200601 13:21:48.311"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 13:21:48.313" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200601 13:21:48.313" starttime="20200601 13:21:48.313"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 13:21:48.314" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 13:21:48.314" starttime="20200601 13:21:48.313"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.314" starttime="20200601 13:21:48.314"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.315" starttime="20200601 13:21:48.315"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.316" starttime="20200601 13:21:48.316"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
</arguments>
<kw name="Test Tx Op Up">
<tags>
<tag>Test tx_disable</tag>
</tags>
<doc>Test SFP port tx disable function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OP_UP)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200601 13:21:48.323" level="INFO">${payload} = {u'OperationalState': u'Up'}</msg>
<status status="PASS" endtime="20200601 13:21:48.323" starttime="20200601 13:21:48.318"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<msg timestamp="20200601 13:21:48.332" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200601 13:21:48.365" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000379 seconds.</msg>
<status status="PASS" endtime="20200601 13:21:48.365" starttime="20200601 13:21:48.323"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.365" starttime="20200601 13:21:48.318"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.366" starttime="20200601 13:21:48.317"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.366" starttime="20200601 13:21:48.317"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.366" starttime="20200601 13:21:48.269"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.366" starttime="20200601 13:21:48.269"></status>
</kw>
<kw type="foritem" name="${ID} = 2">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:48.372" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/2</msg>
<msg timestamp="20200601 13:21:48.393" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/2: 0.000341 seconds.</msg>
<msg timestamp="20200601 13:21:48.393" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:49 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 13:21:48.393" starttime="20200601 13:21:48.366"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:21:48.394" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:21:48.394" starttime="20200601 13:21:48.393"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 13:21:48.394" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 13:21:48.394" starttime="20200601 13:21:48.394"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 13:21:48.395" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 13:21:48.395" starttime="20200601 13:21:48.394"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.396" starttime="20200601 13:21:48.395"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.396" starttime="20200601 13:21:48.396"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.397" starttime="20200601 13:21:48.397"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.398" starttime="20200601 13:21:48.398"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.398" starttime="20200601 13:21:48.397"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.398" starttime="20200601 13:21:48.366"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.398" starttime="20200601 13:21:48.366"></status>
</kw>
<kw type="foritem" name="${ID} = 3">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:48.405" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/3</msg>
<msg timestamp="20200601 13:21:48.426" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/3: 0.000312 seconds.</msg>
<msg timestamp="20200601 13:21:48.426" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:49 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 13:21:48.426" starttime="20200601 13:21:48.399"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:21:48.427" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:21:48.427" starttime="20200601 13:21:48.427"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 13:21:48.428" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 13:21:48.428" starttime="20200601 13:21:48.427"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 13:21:48.428" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 13:21:48.428" starttime="20200601 13:21:48.428"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.429" starttime="20200601 13:21:48.429"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.430" starttime="20200601 13:21:48.429"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.430" starttime="20200601 13:21:48.430"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.432" starttime="20200601 13:21:48.431"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.432" starttime="20200601 13:21:48.431"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.432" starttime="20200601 13:21:48.399"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.432" starttime="20200601 13:21:48.399"></status>
</kw>
<kw type="foritem" name="${ID} = 4">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:48.438" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/4</msg>
<msg timestamp="20200601 13:21:48.454" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/4: 0.000274 seconds.</msg>
<msg timestamp="20200601 13:21:48.454" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:49 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 13:21:48.455" starttime="20200601 13:21:48.432"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:21:48.455" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:21:48.455" starttime="20200601 13:21:48.455"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 13:21:48.456" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 13:21:48.456" starttime="20200601 13:21:48.455"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 13:21:48.456" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 13:21:48.456" starttime="20200601 13:21:48.456"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.457" starttime="20200601 13:21:48.457"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.458" starttime="20200601 13:21:48.457"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.459" starttime="20200601 13:21:48.458"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.460" starttime="20200601 13:21:48.460"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.460" starttime="20200601 13:21:48.459"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.460" starttime="20200601 13:21:48.432"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.460" starttime="20200601 13:21:48.432"></status>
</kw>
<kw type="foritem" name="${ID} = 5">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:48.466" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/5</msg>
<msg timestamp="20200601 13:21:48.486" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/5: 0.000291 seconds.</msg>
<msg timestamp="20200601 13:21:48.487" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:49 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 13:21:48.487" starttime="20200601 13:21:48.461"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:21:48.487" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:21:48.487" starttime="20200601 13:21:48.487"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 13:21:48.488" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 13:21:48.488" starttime="20200601 13:21:48.488"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 13:21:48.489" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 13:21:48.489" starttime="20200601 13:21:48.488"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.489" starttime="20200601 13:21:48.489"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.490" starttime="20200601 13:21:48.490"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.491" starttime="20200601 13:21:48.490"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.492" starttime="20200601 13:21:48.492"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.492" starttime="20200601 13:21:48.491"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.492" starttime="20200601 13:21:48.460"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.492" starttime="20200601 13:21:48.460"></status>
</kw>
<kw type="foritem" name="${ID} = 6">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:48.499" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/6</msg>
<msg timestamp="20200601 13:21:48.519" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/6: 0.000321 seconds.</msg>
<msg timestamp="20200601 13:21:48.520" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:49 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 13:21:48.520" starttime="20200601 13:21:48.493"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:21:48.520" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:21:48.520" starttime="20200601 13:21:48.520"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 13:21:48.522" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 13:21:48.522" starttime="20200601 13:21:48.521"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 13:21:48.523" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 13:21:48.523" starttime="20200601 13:21:48.522"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.523" starttime="20200601 13:21:48.523"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.524" starttime="20200601 13:21:48.524"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.525" starttime="20200601 13:21:48.525"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.526" starttime="20200601 13:21:48.526"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.526" starttime="20200601 13:21:48.525"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.526" starttime="20200601 13:21:48.492"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.526" starttime="20200601 13:21:48.492"></status>
</kw>
<kw type="foritem" name="${ID} = 7">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:48.533" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/7</msg>
<msg timestamp="20200601 13:21:48.560" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/7: 0.000345 seconds.</msg>
<msg timestamp="20200601 13:21:48.560" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:49 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 13:21:48.560" starttime="20200601 13:21:48.527"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:21:48.561" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:21:48.561" starttime="20200601 13:21:48.561"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 13:21:48.562" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 13:21:48.562" starttime="20200601 13:21:48.561"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 13:21:48.563" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 13:21:48.563" starttime="20200601 13:21:48.562"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.563" starttime="20200601 13:21:48.563"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.564" starttime="20200601 13:21:48.564"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.565" starttime="20200601 13:21:48.565"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.566" starttime="20200601 13:21:48.566"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.566" starttime="20200601 13:21:48.565"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.566" starttime="20200601 13:21:48.527"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.567" starttime="20200601 13:21:48.526"></status>
</kw>
<kw type="foritem" name="${ID} = 8">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:48.573" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/8</msg>
<msg timestamp="20200601 13:21:48.596" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/8: 0.000354000000001 seconds.</msg>
<msg timestamp="20200601 13:21:48.596" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:49 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 13:21:48.596" starttime="20200601 13:21:48.567"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:21:48.597" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:21:48.598" starttime="20200601 13:21:48.597"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 13:21:48.598" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 13:21:48.598" starttime="20200601 13:21:48.598"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 13:21:48.599" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 13:21:48.599" starttime="20200601 13:21:48.598"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.599" starttime="20200601 13:21:48.599"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.600" starttime="20200601 13:21:48.600"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.601" starttime="20200601 13:21:48.600"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.603" starttime="20200601 13:21:48.602"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.603" starttime="20200601 13:21:48.601"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.603" starttime="20200601 13:21:48.567"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.603" starttime="20200601 13:21:48.567"></status>
</kw>
<kw type="foritem" name="${ID} = 9">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:48.609" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/9</msg>
<msg timestamp="20200601 13:21:48.633" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/9: 0.000309 seconds.</msg>
<msg timestamp="20200601 13:21:48.634" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:49 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 13:21:48.634" starttime="20200601 13:21:48.603"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:21:48.635" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:21:48.635" starttime="20200601 13:21:48.634"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 13:21:48.635" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 13:21:48.635" starttime="20200601 13:21:48.635"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 13:21:48.636" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 13:21:48.636" starttime="20200601 13:21:48.635"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.636" starttime="20200601 13:21:48.636"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.637" starttime="20200601 13:21:48.637"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.638" starttime="20200601 13:21:48.638"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.639" starttime="20200601 13:21:48.639"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.639" starttime="20200601 13:21:48.638"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.640" starttime="20200601 13:21:48.603"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.640" starttime="20200601 13:21:48.603"></status>
</kw>
<kw type="foritem" name="${ID} = 10">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:48.647" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/10</msg>
<msg timestamp="20200601 13:21:48.671" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/10: 0.000333 seconds.</msg>
<msg timestamp="20200601 13:21:48.671" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:50 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 13:21:48.671" starttime="20200601 13:21:48.641"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:21:48.672" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:21:48.673" starttime="20200601 13:21:48.672"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 13:21:48.673" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 13:21:48.673" starttime="20200601 13:21:48.673"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 13:21:48.674" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 13:21:48.674" starttime="20200601 13:21:48.673"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.674" starttime="20200601 13:21:48.674"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.675" starttime="20200601 13:21:48.675"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.676" starttime="20200601 13:21:48.675"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.677" starttime="20200601 13:21:48.677"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.677" starttime="20200601 13:21:48.676"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.677" starttime="20200601 13:21:48.640"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.677" starttime="20200601 13:21:48.640"></status>
</kw>
<kw type="foritem" name="${ID} = 11">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:48.684" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/11</msg>
<msg timestamp="20200601 13:21:48.705" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/11: 0.000302 seconds.</msg>
<msg timestamp="20200601 13:21:48.706" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:50 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 13:21:48.706" starttime="20200601 13:21:48.678"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:21:48.707" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:21:48.707" starttime="20200601 13:21:48.706"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 13:21:48.707" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 13:21:48.707" starttime="20200601 13:21:48.707"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 13:21:48.708" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 13:21:48.708" starttime="20200601 13:21:48.707"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.708" starttime="20200601 13:21:48.708"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.709" starttime="20200601 13:21:48.709"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.710" starttime="20200601 13:21:48.709"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.711" starttime="20200601 13:21:48.711"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.711" starttime="20200601 13:21:48.710"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.711" starttime="20200601 13:21:48.678"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.711" starttime="20200601 13:21:48.677"></status>
</kw>
<kw type="foritem" name="${ID} = 12">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:48.718" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/12</msg>
<msg timestamp="20200601 13:21:48.739" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/12: 0.000302 seconds.</msg>
<msg timestamp="20200601 13:21:48.740" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:50 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 13:21:48.740" starttime="20200601 13:21:48.712"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:21:48.741" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:21:48.741" starttime="20200601 13:21:48.740"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 13:21:48.742" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 13:21:48.742" starttime="20200601 13:21:48.741"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 13:21:48.742" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 13:21:48.742" starttime="20200601 13:21:48.742"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.743" starttime="20200601 13:21:48.742"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.744" starttime="20200601 13:21:48.743"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.745" starttime="20200601 13:21:48.744"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.746" starttime="20200601 13:21:48.746"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.746" starttime="20200601 13:21:48.745"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.746" starttime="20200601 13:21:48.712"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.746" starttime="20200601 13:21:48.711"></status>
</kw>
<kw type="foritem" name="${ID} = 13">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:48.753" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/13</msg>
<msg timestamp="20200601 13:21:48.777" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/13: 0.000347000000001 seconds.</msg>
<msg timestamp="20200601 13:21:48.777" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:50 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 13:21:48.777" starttime="20200601 13:21:48.747"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:21:48.778" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:21:48.778" starttime="20200601 13:21:48.778"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 13:21:48.779" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 13:21:48.779" starttime="20200601 13:21:48.778"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 13:21:48.779" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 13:21:48.779" starttime="20200601 13:21:48.779"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.780" starttime="20200601 13:21:48.779"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.781" starttime="20200601 13:21:48.780"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.781" starttime="20200601 13:21:48.781"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.782" starttime="20200601 13:21:48.782"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.783" starttime="20200601 13:21:48.782"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.783" starttime="20200601 13:21:48.746"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.783" starttime="20200601 13:21:48.746"></status>
</kw>
<kw type="foritem" name="${ID} = 14">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:48.789" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/14</msg>
<msg timestamp="20200601 13:21:48.814" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/14: 0.000332 seconds.</msg>
<msg timestamp="20200601 13:21:48.814" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:50 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 13:21:48.814" starttime="20200601 13:21:48.783"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:21:48.815" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:21:48.815" starttime="20200601 13:21:48.815"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 13:21:48.816" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 13:21:48.816" starttime="20200601 13:21:48.815"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 13:21:48.816" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 13:21:48.816" starttime="20200601 13:21:48.816"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.817" starttime="20200601 13:21:48.816"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.817" starttime="20200601 13:21:48.817"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.818" starttime="20200601 13:21:48.818"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.819" starttime="20200601 13:21:48.819"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.819" starttime="20200601 13:21:48.818"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.819" starttime="20200601 13:21:48.783"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.819" starttime="20200601 13:21:48.783"></status>
</kw>
<kw type="foritem" name="${ID} = 15">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:48.826" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/15</msg>
<msg timestamp="20200601 13:21:48.850" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/15: 0.000313999999999 seconds.</msg>
<msg timestamp="20200601 13:21:48.850" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:50 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 13:21:48.850" starttime="20200601 13:21:48.820"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:21:48.851" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:21:48.851" starttime="20200601 13:21:48.851"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 13:21:48.852" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 13:21:48.852" starttime="20200601 13:21:48.851"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 13:21:48.852" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 13:21:48.852" starttime="20200601 13:21:48.852"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.853" starttime="20200601 13:21:48.853"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.854" starttime="20200601 13:21:48.853"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.854" starttime="20200601 13:21:48.854"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.855" starttime="20200601 13:21:48.855"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.855" starttime="20200601 13:21:48.855"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.856" starttime="20200601 13:21:48.820"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.856" starttime="20200601 13:21:48.819"></status>
</kw>
<kw type="foritem" name="${ID} = 16">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:48.863" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/16</msg>
<msg timestamp="20200601 13:21:48.887" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/16: 0.000308 seconds.</msg>
<msg timestamp="20200601 13:21:48.887" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:50 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 13:21:48.887" starttime="20200601 13:21:48.856"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:21:48.888" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:21:48.888" starttime="20200601 13:21:48.888"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 13:21:48.889" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 13:21:48.889" starttime="20200601 13:21:48.888"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 13:21:48.889" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 13:21:48.889" starttime="20200601 13:21:48.889"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.890" starttime="20200601 13:21:48.890"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.891" starttime="20200601 13:21:48.890"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.891" starttime="20200601 13:21:48.891"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:48.893" starttime="20200601 13:21:48.892"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.893" starttime="20200601 13:21:48.892"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.893" starttime="20200601 13:21:48.856"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:48.893" starttime="20200601 13:21:48.856"></status>
</kw>
<kw type="foritem" name="${ID} = 17">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:48.900" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/17</msg>
<msg timestamp="20200601 13:21:49.018" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/17: 0.000437000000001 seconds.</msg>
<msg timestamp="20200601 13:21:49.019" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:50 GMT
connection Keep-Alive
content-type application/json
content-length 2443


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 13:21:49.019" starttime="20200601 13:21:48.894"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:21:49.020" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:21:49.020" starttime="20200601 13:21:49.019"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 13:21:49.020" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200601 13:21:49.020" starttime="20200601 13:21:49.020"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 13:21:49.021" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200601 13:21:49.021" starttime="20200601 13:21:49.021"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:49.022" starttime="20200601 13:21:49.021"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:49.022" starttime="20200601 13:21:49.022"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:49.023" starttime="20200601 13:21:49.023"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:49.024" starttime="20200601 13:21:49.024"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:49.024" starttime="20200601 13:21:49.023"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:49.024" starttime="20200601 13:21:48.893"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:49.024" starttime="20200601 13:21:48.893"></status>
</kw>
<kw type="foritem" name="${ID} = 18">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:49.031" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/18</msg>
<msg timestamp="20200601 13:21:49.055" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/18: 0.000322000000001 seconds.</msg>
<msg timestamp="20200601 13:21:49.055" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:50 GMT
connection Keep-Alive
content-type application/json
content-length 1056


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 13:21:49.055" starttime="20200601 13:21:49.025"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:21:49.056" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:21:49.056" starttime="20200601 13:21:49.055"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 13:21:49.056" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 13:21:49.056" starttime="20200601 13:21:49.056"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 13:21:49.057" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200601 13:21:49.057" starttime="20200601 13:21:49.057"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:49.057" starttime="20200601 13:21:49.057"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:49.058" starttime="20200601 13:21:49.058"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:49.059" starttime="20200601 13:21:49.058"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:49.060" starttime="20200601 13:21:49.060"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:49.060" starttime="20200601 13:21:49.059"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:49.061" starttime="20200601 13:21:49.024"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:49.061" starttime="20200601 13:21:49.024"></status>
</kw>
<kw type="foritem" name="${ID} = 19">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 13:21:49.067" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/19</msg>
<msg timestamp="20200601 13:21:49.091" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/19: 0.000303 seconds.</msg>
<msg timestamp="20200601 13:21:49.091" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 05:21:50 GMT
connection Keep-Alive
content-type application/json
content-length 1056


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 13:21:49.091" starttime="20200601 13:21:49.061"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 13:21:49.092" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 13:21:49.092" starttime="20200601 13:21:49.091"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 13:21:49.093" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 13:21:49.093" starttime="20200601 13:21:49.092"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 13:21:49.093" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200601 13:21:49.093" starttime="20200601 13:21:49.093"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:49.094" starttime="20200601 13:21:49.093"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:49.095" starttime="20200601 13:21:49.094"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:49.095" starttime="20200601 13:21:49.095"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 13:21:49.096" starttime="20200601 13:21:49.096"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:49.096" starttime="20200601 13:21:49.096"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:49.096" starttime="20200601 13:21:49.061"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:49.097" starttime="20200601 13:21:49.061"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:49.097" starttime="20200601 13:21:48.269"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:49.097" starttime="20200601 13:21:48.227"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:49.097" starttime="20200601 13:20:50.874"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200601 13:21:49.103" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200601 13:21:49.126" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.00027 seconds.</msg>
<msg timestamp="20200601 13:21:49.127" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200601 13:21:49.127" starttime="20200601 13:21:49.097"></status>
</kw>
<status status="PASS" endtime="20200601 13:21:49.127" starttime="20200601 13:21:49.097"></status>
</kw>
<doc>Test omci send</doc>
<tags>
<tag>Test omci send</tag>
</tags>
<status status="PASS" endtime="20200601 13:21:49.127" critical="yes" starttime="20200601 13:20:50.847"></status>
</test>
<doc>Test BAL Rstful functionality.</doc>
<status status="FAIL" endtime="20200601 13:21:49.128" starttime="20200601 13:20:12.084"></status>
</suite>
<status status="FAIL" endtime="20200601 13:21:49.132" starttime="20200601 13:20:12.068"></status>
</suite>
<statistics>
<total>
<stat fail="3" pass="1">Critical Tests</stat>
<stat fail="3" pass="1">All Tests</stat>
</total>
<tag>
<stat fail="1" pass="0">Test Bal Restful opertaion test</stat>
<stat fail="1" pass="0">Test Flow add</stat>
<stat fail="0" pass="1">Test omci send</stat>
<stat fail="1" pass="0">Test ONU Rnage test</stat>
</tag>
<suite>
<stat fail="3" id="s1" name="Bal Test" pass="1">Bal Test</stat>
<stat fail="3" id="s1-s1" name="Test Bal" pass="1">Bal Test.Test Bal</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
