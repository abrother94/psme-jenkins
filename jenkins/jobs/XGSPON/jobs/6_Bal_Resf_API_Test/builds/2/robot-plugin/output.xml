<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200521 11:41:25.029" generator="Robot 3.1.1 (Python 2.7.12 on linux2)">
<suite source="/home/voltha/workspace/XGSPON/Bal_Resf_API_Test/RF_Auto_Test/bal_test" id="s1" name="Bal Test">
<suite source="/home/voltha/workspace/XGSPON/Bal_Resf_API_Test/RF_Auto_Test/bal_test/test_bal.robot" id="s1-s1" name="Test Bal">
<test id="s1-s1-t1" name="Verify Restful API for BAL Test">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200521 11:41:26.533" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200521 11:41:26.550" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000886 seconds.</msg>
<msg timestamp="20200521 11:41:26.550" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200521 11:41:26.551" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200521 11:41:26.551" starttime="20200521 11:41:26.525"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:26.551" starttime="20200521 11:41:26.523"></status>
</kw>
<kw name="Test Bal Component">
<tags>
<tag>Bal_Component</tag>
</tags>
<doc>Do basic test 1.Enable All PON MAC PON NNI port enable/disable.</doc>
<kw name="Disable All Tx Port">
<tags>
<tag>Disable Pon Port Tx</tag>
</tags>
<doc>Disable all port function</doc>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:41:26.563" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/</msg>
<msg timestamp="20200521 11:41:26.684" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/: 0.000527 seconds.</msg>
<msg timestamp="20200521 11:41:26.684" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:41:26 GMT
connection Keep-Alive
content-type application/json
content-length 1467


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPortCollection.EthernetSwitchPor...</msg>
<status status="PASS" endtime="20200521 11:41:26.684" starttime="20200521 11:41:26.553"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200521 11:41:26.686" level="INFO">Length is 20</msg>
<msg timestamp="20200521 11:41:26.686" level="INFO">${item_count} = 20</msg>
<status status="PASS" endtime="20200521 11:41:26.686" starttime="20200521 11:41:26.685"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable All Pon Port ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:26.687" starttime="20200521 11:41:26.686"></status>
</kw>
<kw type="for" name="${ID} IN RANGE [ 1 | ${item_count} ]">
<kw type="foritem" name="${ID} = 1">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:41:26.698" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200521 11:41:26.795" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000574 seconds.</msg>
<msg timestamp="20200521 11:41:26.795" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:41:27 GMT
connection Keep-Alive
content-type application/json
content-length 2337


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:41:26.795" starttime="20200521 11:41:26.688"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:41:26.796" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:41:26.797" starttime="20200521 11:41:26.796"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 11:41:26.798" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200521 11:41:26.798" starttime="20200521 11:41:26.797"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 11:41:26.798" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 11:41:26.799" starttime="20200521 11:41:26.798"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:26.799" starttime="20200521 11:41:26.799"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:26.800" starttime="20200521 11:41:26.800"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:26.801" starttime="20200521 11:41:26.800"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
</arguments>
<kw name="Test Tx Op Down">
<tags>
<tag>Test tx_disable</tag>
</tags>
<doc>Test SFP port tx disable function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OP_DOWN)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 11:41:26.810" level="INFO">${payload} = {u'OperationalState': u'Down'}</msg>
<status status="PASS" endtime="20200521 11:41:26.810" starttime="20200521 11:41:26.804"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<msg timestamp="20200521 11:41:26.822" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200521 11:41:26.844" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.00058 seconds.</msg>
<status status="PASS" endtime="20200521 11:41:26.845" starttime="20200521 11:41:26.810"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:26.847" starttime="20200521 11:41:26.803"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:26.847" starttime="20200521 11:41:26.802"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:26.847" starttime="20200521 11:41:26.801"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:26.847" starttime="20200521 11:41:26.687"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:26.847" starttime="20200521 11:41:26.687"></status>
</kw>
<kw type="foritem" name="${ID} = 2">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:41:26.858" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/2</msg>
<msg timestamp="20200521 11:41:26.868" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/2: 0.000452 seconds.</msg>
<msg timestamp="20200521 11:41:26.869" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:41:27 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:41:26.869" starttime="20200521 11:41:26.848"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:41:26.870" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:41:26.870" starttime="20200521 11:41:26.870"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 11:41:26.871" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 11:41:26.871" starttime="20200521 11:41:26.870"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 11:41:26.872" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 11:41:26.872" starttime="20200521 11:41:26.871"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:26.873" starttime="20200521 11:41:26.872"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:26.900" starttime="20200521 11:41:26.899"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:26.901" starttime="20200521 11:41:26.900"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:26.903" starttime="20200521 11:41:26.903"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:26.903" starttime="20200521 11:41:26.902"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:26.903" starttime="20200521 11:41:26.847"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:26.904" starttime="20200521 11:41:26.847"></status>
</kw>
<kw type="foritem" name="${ID} = 3">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:41:26.914" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/3</msg>
<msg timestamp="20200521 11:41:26.925" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/3: 0.000663 seconds.</msg>
<msg timestamp="20200521 11:41:26.926" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:41:27 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:41:26.926" starttime="20200521 11:41:26.904"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:41:26.927" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:41:26.927" starttime="20200521 11:41:26.926"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 11:41:26.928" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 11:41:26.928" starttime="20200521 11:41:26.927"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 11:41:26.929" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 11:41:26.929" starttime="20200521 11:41:26.928"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:26.930" starttime="20200521 11:41:26.929"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:26.931" starttime="20200521 11:41:26.930"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:26.932" starttime="20200521 11:41:26.931"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:26.934" starttime="20200521 11:41:26.933"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:26.934" starttime="20200521 11:41:26.932"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:26.934" starttime="20200521 11:41:26.904"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:26.934" starttime="20200521 11:41:26.904"></status>
</kw>
<kw type="foritem" name="${ID} = 4">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:41:26.945" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/4</msg>
<msg timestamp="20200521 11:41:26.957" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/4: 0.00048 seconds.</msg>
<msg timestamp="20200521 11:41:26.957" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:41:27 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:41:26.958" starttime="20200521 11:41:26.935"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:41:26.959" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:41:26.959" starttime="20200521 11:41:26.958"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 11:41:26.960" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 11:41:26.960" starttime="20200521 11:41:26.959"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 11:41:26.960" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 11:41:26.961" starttime="20200521 11:41:26.960"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:26.961" starttime="20200521 11:41:26.961"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:26.962" starttime="20200521 11:41:26.962"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:26.964" starttime="20200521 11:41:26.963"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:26.965" starttime="20200521 11:41:26.965"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:26.965" starttime="20200521 11:41:26.964"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:26.966" starttime="20200521 11:41:26.934"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:26.966" starttime="20200521 11:41:26.934"></status>
</kw>
<kw type="foritem" name="${ID} = 5">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:41:27.010" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/5</msg>
<msg timestamp="20200521 11:41:27.021" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/5: 0.000571 seconds.</msg>
<msg timestamp="20200521 11:41:27.021" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:41:27 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:41:27.021" starttime="20200521 11:41:26.967"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:41:27.022" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:41:27.022" starttime="20200521 11:41:27.022"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 11:41:27.023" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 11:41:27.023" starttime="20200521 11:41:27.023"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 11:41:27.024" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 11:41:27.024" starttime="20200521 11:41:27.024"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.025" starttime="20200521 11:41:27.024"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.026" starttime="20200521 11:41:27.026"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.027" starttime="20200521 11:41:27.027"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.029" starttime="20200521 11:41:27.029"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.029" starttime="20200521 11:41:27.028"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.030" starttime="20200521 11:41:26.966"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.030" starttime="20200521 11:41:26.966"></status>
</kw>
<kw type="foritem" name="${ID} = 6">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:41:27.040" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/6</msg>
<msg timestamp="20200521 11:41:27.052" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/6: 0.000541 seconds.</msg>
<msg timestamp="20200521 11:41:27.052" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:41:27 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:41:27.052" starttime="20200521 11:41:27.031"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:41:27.053" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:41:27.053" starttime="20200521 11:41:27.053"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 11:41:27.054" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 11:41:27.054" starttime="20200521 11:41:27.054"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 11:41:27.055" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 11:41:27.055" starttime="20200521 11:41:27.055"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.056" starttime="20200521 11:41:27.055"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.057" starttime="20200521 11:41:27.056"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.058" starttime="20200521 11:41:27.057"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.060" starttime="20200521 11:41:27.059"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.060" starttime="20200521 11:41:27.059"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.060" starttime="20200521 11:41:27.030"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.060" starttime="20200521 11:41:27.030"></status>
</kw>
<kw type="foritem" name="${ID} = 7">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:41:27.108" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/7</msg>
<msg timestamp="20200521 11:41:27.118" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/7: 0.000552 seconds.</msg>
<msg timestamp="20200521 11:41:27.119" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:41:27 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:41:27.119" starttime="20200521 11:41:27.061"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:41:27.120" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:41:27.120" starttime="20200521 11:41:27.119"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 11:41:27.121" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 11:41:27.121" starttime="20200521 11:41:27.120"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 11:41:27.122" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 11:41:27.122" starttime="20200521 11:41:27.121"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.123" starttime="20200521 11:41:27.122"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.125" starttime="20200521 11:41:27.125"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.127" starttime="20200521 11:41:27.126"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.128" starttime="20200521 11:41:27.128"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.128" starttime="20200521 11:41:27.127"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.129" starttime="20200521 11:41:27.061"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.129" starttime="20200521 11:41:27.060"></status>
</kw>
<kw type="foritem" name="${ID} = 8">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:41:27.139" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/8</msg>
<msg timestamp="20200521 11:41:27.149" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/8: 0.000554 seconds.</msg>
<msg timestamp="20200521 11:41:27.150" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:41:27 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:41:27.150" starttime="20200521 11:41:27.129"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:41:27.151" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:41:27.151" starttime="20200521 11:41:27.151"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 11:41:27.152" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 11:41:27.152" starttime="20200521 11:41:27.152"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 11:41:27.153" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 11:41:27.153" starttime="20200521 11:41:27.153"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.154" starttime="20200521 11:41:27.153"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.156" starttime="20200521 11:41:27.154"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.157" starttime="20200521 11:41:27.157"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.159" starttime="20200521 11:41:27.159"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.159" starttime="20200521 11:41:27.158"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.159" starttime="20200521 11:41:27.129"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.159" starttime="20200521 11:41:27.129"></status>
</kw>
<kw type="foritem" name="${ID} = 9">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:41:27.171" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/9</msg>
<msg timestamp="20200521 11:41:27.182" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/9: 0.000537 seconds.</msg>
<msg timestamp="20200521 11:41:27.183" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:41:27 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:41:27.183" starttime="20200521 11:41:27.160"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:41:27.184" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:41:27.184" starttime="20200521 11:41:27.183"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 11:41:27.185" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 11:41:27.185" starttime="20200521 11:41:27.184"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 11:41:27.186" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 11:41:27.186" starttime="20200521 11:41:27.185"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.186" starttime="20200521 11:41:27.186"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.187" starttime="20200521 11:41:27.187"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.188" starttime="20200521 11:41:27.187"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.189" starttime="20200521 11:41:27.189"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.189" starttime="20200521 11:41:27.188"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.190" starttime="20200521 11:41:27.159"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.190" starttime="20200521 11:41:27.159"></status>
</kw>
<kw type="foritem" name="${ID} = 10">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:41:27.202" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/10</msg>
<msg timestamp="20200521 11:41:27.212" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/10: 0.000519 seconds.</msg>
<msg timestamp="20200521 11:41:27.213" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:41:27 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:41:27.213" starttime="20200521 11:41:27.191"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:41:27.214" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:41:27.214" starttime="20200521 11:41:27.213"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 11:41:27.215" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 11:41:27.215" starttime="20200521 11:41:27.214"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 11:41:27.215" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 11:41:27.216" starttime="20200521 11:41:27.215"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.216" starttime="20200521 11:41:27.216"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.218" starttime="20200521 11:41:27.217"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.219" starttime="20200521 11:41:27.218"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.220" starttime="20200521 11:41:27.220"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.220" starttime="20200521 11:41:27.219"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.220" starttime="20200521 11:41:27.190"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.220" starttime="20200521 11:41:27.190"></status>
</kw>
<kw type="foritem" name="${ID} = 11">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:41:27.231" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/11</msg>
<msg timestamp="20200521 11:41:27.242" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/11: 0.000609 seconds.</msg>
<msg timestamp="20200521 11:41:27.243" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:41:27 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:41:27.243" starttime="20200521 11:41:27.221"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:41:27.244" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:41:27.244" starttime="20200521 11:41:27.243"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 11:41:27.245" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 11:41:27.245" starttime="20200521 11:41:27.244"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 11:41:27.246" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 11:41:27.246" starttime="20200521 11:41:27.245"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.247" starttime="20200521 11:41:27.246"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.247" starttime="20200521 11:41:27.247"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.248" starttime="20200521 11:41:27.248"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.251" starttime="20200521 11:41:27.250"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.251" starttime="20200521 11:41:27.248"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.251" starttime="20200521 11:41:27.221"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.251" starttime="20200521 11:41:27.220"></status>
</kw>
<kw type="foritem" name="${ID} = 12">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:41:27.261" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/12</msg>
<msg timestamp="20200521 11:41:27.272" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/12: 0.000491 seconds.</msg>
<msg timestamp="20200521 11:41:27.273" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:41:27 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:41:27.273" starttime="20200521 11:41:27.252"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:41:27.274" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:41:27.274" starttime="20200521 11:41:27.273"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 11:41:27.275" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 11:41:27.275" starttime="20200521 11:41:27.274"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 11:41:27.276" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 11:41:27.276" starttime="20200521 11:41:27.275"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.313" starttime="20200521 11:41:27.276"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.313" starttime="20200521 11:41:27.313"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.314" starttime="20200521 11:41:27.314"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.315" starttime="20200521 11:41:27.315"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.315" starttime="20200521 11:41:27.314"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.315" starttime="20200521 11:41:27.251"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.315" starttime="20200521 11:41:27.251"></status>
</kw>
<kw type="foritem" name="${ID} = 13">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:41:27.330" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/13</msg>
<msg timestamp="20200521 11:41:27.340" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/13: 0.000472 seconds.</msg>
<msg timestamp="20200521 11:41:27.341" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:41:27 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:41:27.341" starttime="20200521 11:41:27.315"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:41:27.342" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:41:27.342" starttime="20200521 11:41:27.341"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 11:41:27.343" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 11:41:27.343" starttime="20200521 11:41:27.342"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 11:41:27.344" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 11:41:27.344" starttime="20200521 11:41:27.343"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.345" starttime="20200521 11:41:27.344"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.346" starttime="20200521 11:41:27.345"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.347" starttime="20200521 11:41:27.346"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.350" starttime="20200521 11:41:27.348"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.350" starttime="20200521 11:41:27.347"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.350" starttime="20200521 11:41:27.315"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.350" starttime="20200521 11:41:27.315"></status>
</kw>
<kw type="foritem" name="${ID} = 14">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:41:27.361" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/14</msg>
<msg timestamp="20200521 11:41:27.371" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/14: 0.000423 seconds.</msg>
<msg timestamp="20200521 11:41:27.372" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:41:27 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:41:27.372" starttime="20200521 11:41:27.351"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:41:27.373" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:41:27.373" starttime="20200521 11:41:27.372"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 11:41:27.374" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 11:41:27.374" starttime="20200521 11:41:27.374"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 11:41:27.375" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 11:41:27.375" starttime="20200521 11:41:27.374"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.375" starttime="20200521 11:41:27.375"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.376" starttime="20200521 11:41:27.376"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.377" starttime="20200521 11:41:27.377"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.379" starttime="20200521 11:41:27.378"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.379" starttime="20200521 11:41:27.378"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.379" starttime="20200521 11:41:27.350"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.379" starttime="20200521 11:41:27.350"></status>
</kw>
<kw type="foritem" name="${ID} = 15">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:41:27.389" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/15</msg>
<msg timestamp="20200521 11:41:27.400" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/15: 0.000512 seconds.</msg>
<msg timestamp="20200521 11:41:27.401" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:41:27 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:41:27.401" starttime="20200521 11:41:27.380"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:41:27.402" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:41:27.402" starttime="20200521 11:41:27.401"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 11:41:27.404" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 11:41:27.404" starttime="20200521 11:41:27.402"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 11:41:27.405" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 11:41:27.405" starttime="20200521 11:41:27.404"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.406" starttime="20200521 11:41:27.405"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.407" starttime="20200521 11:41:27.406"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.407" starttime="20200521 11:41:27.407"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.409" starttime="20200521 11:41:27.409"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.409" starttime="20200521 11:41:27.408"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.409" starttime="20200521 11:41:27.379"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.409" starttime="20200521 11:41:27.379"></status>
</kw>
<kw type="foritem" name="${ID} = 16">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:41:27.420" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/16</msg>
<msg timestamp="20200521 11:41:27.436" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/16: 0.000635 seconds.</msg>
<msg timestamp="20200521 11:41:27.437" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:41:27 GMT
connection Keep-Alive
content-type application/json
content-length 2310


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:41:27.437" starttime="20200521 11:41:27.410"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:41:27.438" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:41:27.438" starttime="20200521 11:41:27.437"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 11:41:27.439" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200521 11:41:27.439" starttime="20200521 11:41:27.438"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 11:41:27.440" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 11:41:27.440" starttime="20200521 11:41:27.439"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.443" starttime="20200521 11:41:27.440"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.444" starttime="20200521 11:41:27.444"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.445" starttime="20200521 11:41:27.445"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
</arguments>
<kw name="Test Tx Op Down">
<tags>
<tag>Test tx_disable</tag>
</tags>
<doc>Test SFP port tx disable function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OP_DOWN)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 11:41:27.453" level="INFO">${payload} = {u'OperationalState': u'Down'}</msg>
<status status="PASS" endtime="20200521 11:41:27.454" starttime="20200521 11:41:27.448"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<msg timestamp="20200521 11:41:27.465" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/16</msg>
<msg timestamp="20200521 11:41:27.488" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/16: 0.000648 seconds.</msg>
<status status="PASS" endtime="20200521 11:41:27.489" starttime="20200521 11:41:27.454"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.489" starttime="20200521 11:41:27.447"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.489" starttime="20200521 11:41:27.446"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.489" starttime="20200521 11:41:27.446"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.489" starttime="20200521 11:41:27.410"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.489" starttime="20200521 11:41:27.410"></status>
</kw>
<kw type="foritem" name="${ID} = 17">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:41:27.502" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/17</msg>
<msg timestamp="20200521 11:41:27.515" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/17: 0.000372 seconds.</msg>
<msg timestamp="20200521 11:41:27.515" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:41:27 GMT
connection Keep-Alive
content-type application/json
content-length 2438


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:41:27.515" starttime="20200521 11:41:27.490"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:41:27.516" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:41:27.516" starttime="20200521 11:41:27.516"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 11:41:27.523" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200521 11:41:27.523" starttime="20200521 11:41:27.522"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 11:41:27.524" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200521 11:41:27.524" starttime="20200521 11:41:27.523"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.527" starttime="20200521 11:41:27.524"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.530" starttime="20200521 11:41:27.527"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.531" starttime="20200521 11:41:27.530"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.532" starttime="20200521 11:41:27.532"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.532" starttime="20200521 11:41:27.531"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.532" starttime="20200521 11:41:27.490"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.533" starttime="20200521 11:41:27.489"></status>
</kw>
<kw type="foritem" name="${ID} = 18">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:41:27.543" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/18</msg>
<msg timestamp="20200521 11:41:27.556" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/18: 0.000575 seconds.</msg>
<msg timestamp="20200521 11:41:27.557" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:41:27 GMT
connection Keep-Alive
content-type application/json
content-length 2430


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:41:27.557" starttime="20200521 11:41:27.534"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:41:27.558" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:41:27.558" starttime="20200521 11:41:27.557"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 11:41:27.559" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200521 11:41:27.559" starttime="20200521 11:41:27.558"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 11:41:27.560" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200521 11:41:27.560" starttime="20200521 11:41:27.559"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.561" starttime="20200521 11:41:27.560"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.561" starttime="20200521 11:41:27.561"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.562" starttime="20200521 11:41:27.562"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.564" starttime="20200521 11:41:27.564"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.564" starttime="20200521 11:41:27.563"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.564" starttime="20200521 11:41:27.533"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.564" starttime="20200521 11:41:27.533"></status>
</kw>
<kw type="foritem" name="${ID} = 19">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:41:27.576" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/19</msg>
<msg timestamp="20200521 11:41:27.585" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/19: 0.000532 seconds.</msg>
<msg timestamp="20200521 11:41:27.586" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:41:27 GMT
connection Keep-Alive
content-type application/json
content-length 1056


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:41:27.586" starttime="20200521 11:41:27.565"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:41:27.587" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:41:27.587" starttime="20200521 11:41:27.586"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 11:41:27.588" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 11:41:27.588" starttime="20200521 11:41:27.587"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 11:41:27.589" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200521 11:41:27.589" starttime="20200521 11:41:27.588"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.592" starttime="20200521 11:41:27.589"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.594" starttime="20200521 11:41:27.592"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.595" starttime="20200521 11:41:27.595"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.597" starttime="20200521 11:41:27.597"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.597" starttime="20200521 11:41:27.596"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.597" starttime="20200521 11:41:27.564"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.597" starttime="20200521 11:41:27.564"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.597" starttime="20200521 11:41:26.687"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.597" starttime="20200521 11:41:26.552"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PON_TYPE}' == 'GPON'</arg>
<arg>Log to console</arg>
<arg>"####### GPON TESTING ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### XGSPON TESTING ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### XGSPON TESTING ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.599" starttime="20200521 11:41:27.599"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.599" starttime="20200521 11:41:27.598"></status>
</kw>
<kw name="Test Bal Enable">
<tags>
<tag>Verify_Bal_Enable</tag>
</tags>
<doc>Enable Bal</doc>
<kw type="for" name="${i} IN RANGE [ 1 | 30 ]">
<kw type="foritem" name="${i} = 1">
<kw name="Test Wait Bal Enable">
<tags>
<tag>Verify_Waut_Bal_Enable</tag>
</tags>
<doc>Wait Enable Bal</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.629" starttime="20200521 11:41:27.627"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:41:27.641" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 11:41:27.652" level="INFO">Response Time to /redfish/v1/Olt: 0.000471 seconds.</msg>
<msg timestamp="20200521 11:41:27.652" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:41:27 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 11:41:27.652" starttime="20200521 11:41:27.629"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:41:27.653" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:41:27.653" starttime="20200521 11:41:27.653"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['BalState']}</arg>
</arguments>
<assign>
<var>${BAL_STATE}</var>
</assign>
<msg timestamp="20200521 11:41:27.654" level="INFO">${BAL_STATE} = up</msg>
<status status="PASS" endtime="20200521 11:41:27.654" starttime="20200521 11:41:27.654"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BAL_STATE}' == 'up'</arg>
<arg>Log to console</arg>
<arg>"####### Up ######"</arg>
<arg>${bal_state} =</arg>
<arg>"up"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Up ######"</arg>
<arg>${bal_state} =</arg>
<arg>"up"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:27.656" starttime="20200521 11:41:27.655"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:27.656" starttime="20200521 11:41:27.655"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 11:41:28.657" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 11:41:28.657" starttime="20200521 11:41:27.656"></status>
</kw>
<msg timestamp="20200521 11:41:28.657" level="INFO">${result} = up</msg>
<status status="PASS" endtime="20200521 11:41:28.657" starttime="20200521 11:41:27.626"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:28.658" starttime="20200521 11:41:28.658"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${result}' == 'up'</arg>
</arguments>
<msg timestamp="20200521 11:41:28.659" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20200521 11:41:28.659" starttime="20200521 11:41:28.659"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:28.659" starttime="20200521 11:41:27.626"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:28.659" starttime="20200521 11:41:27.600"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${result}</arg>
<arg>up</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:28.660" starttime="20200521 11:41:28.660"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OPT_ENABLE)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 11:41:28.667" level="INFO">${payload} = {u'OltOperateState': True}</msg>
<status status="PASS" endtime="20200521 11:41:28.667" starttime="20200521 11:41:28.660"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:41:28.677" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 11:41:30.292" level="INFO">Response Time to /redfish/v1/Olt: 0.000505 seconds.</msg>
<msg timestamp="20200521 11:41:30.292" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:41:30 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:41:30.293" starttime="20200521 11:41:28.667"></status>
</kw>
<kw type="for" name="${i} IN RANGE [ 1 | 30 ]">
<kw type="foritem" name="${i} = 1">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:30.294" starttime="20200521 11:41:30.294"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:41:30.306" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 11:41:30.317" level="INFO">Response Time to /redfish/v1/Olt: 0.000575 seconds.</msg>
<msg timestamp="20200521 11:41:30.317" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:41:30 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 11:41:30.317" starttime="20200521 11:41:30.295"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:41:30.318" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:41:30.319" starttime="20200521 11:41:30.318"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 11:41:30.319" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 11:41:30.319" starttime="20200521 11:41:30.319"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:30.320" starttime="20200521 11:41:30.320"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:30.322" starttime="20200521 11:41:30.322"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:30.322" starttime="20200521 11:41:30.321"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 11:41:31.323" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 11:41:31.323" starttime="20200521 11:41:30.322"></status>
</kw>
<msg timestamp="20200521 11:41:31.323" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 11:41:31.323" starttime="20200521 11:41:30.293"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:31.324" starttime="20200521 11:41:31.324"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:31.325" starttime="20200521 11:41:31.325"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:31.325" starttime="20200521 11:41:30.293"></status>
</kw>
<kw type="foritem" name="${i} = 2">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:31.326" starttime="20200521 11:41:31.326"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:41:31.341" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 11:41:31.353" level="INFO">Response Time to /redfish/v1/Olt: 0.00053 seconds.</msg>
<msg timestamp="20200521 11:41:31.353" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:41:31 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 11:41:31.353" starttime="20200521 11:41:31.327"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:41:31.354" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:41:31.355" starttime="20200521 11:41:31.354"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 11:41:31.355" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 11:41:31.355" starttime="20200521 11:41:31.355"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:31.356" starttime="20200521 11:41:31.356"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:31.360" starttime="20200521 11:41:31.358"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:31.360" starttime="20200521 11:41:31.357"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 11:41:32.361" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 11:41:32.361" starttime="20200521 11:41:31.360"></status>
</kw>
<msg timestamp="20200521 11:41:32.361" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 11:41:32.361" starttime="20200521 11:41:31.325"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:32.362" starttime="20200521 11:41:32.362"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:32.363" starttime="20200521 11:41:32.363"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:32.363" starttime="20200521 11:41:31.325"></status>
</kw>
<kw type="foritem" name="${i} = 3">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:32.364" starttime="20200521 11:41:32.364"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:41:32.374" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 11:41:32.383" level="INFO">Response Time to /redfish/v1/Olt: 0.000555 seconds.</msg>
<msg timestamp="20200521 11:41:32.383" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:41:32 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 11:41:32.383" starttime="20200521 11:41:32.365"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:41:32.384" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:41:32.385" starttime="20200521 11:41:32.384"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 11:41:32.385" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 11:41:32.385" starttime="20200521 11:41:32.385"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:32.389" starttime="20200521 11:41:32.386"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:32.392" starttime="20200521 11:41:32.390"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:32.392" starttime="20200521 11:41:32.389"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 11:41:33.393" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 11:41:33.393" starttime="20200521 11:41:32.393"></status>
</kw>
<msg timestamp="20200521 11:41:33.394" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 11:41:33.394" starttime="20200521 11:41:32.363"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:33.395" starttime="20200521 11:41:33.394"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:33.395" starttime="20200521 11:41:33.395"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:33.395" starttime="20200521 11:41:32.363"></status>
</kw>
<kw type="foritem" name="${i} = 4">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:33.396" starttime="20200521 11:41:33.396"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:41:33.405" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 11:41:33.416" level="INFO">Response Time to /redfish/v1/Olt: 0.000571 seconds.</msg>
<msg timestamp="20200521 11:41:33.417" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:41:33 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 11:41:33.417" starttime="20200521 11:41:33.396"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:41:33.418" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:41:33.418" starttime="20200521 11:41:33.417"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 11:41:33.419" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 11:41:33.419" starttime="20200521 11:41:33.418"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:33.419" starttime="20200521 11:41:33.419"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:33.423" starttime="20200521 11:41:33.420"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:33.423" starttime="20200521 11:41:33.420"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 11:41:34.424" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 11:41:34.424" starttime="20200521 11:41:33.424"></status>
</kw>
<msg timestamp="20200521 11:41:34.425" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 11:41:34.425" starttime="20200521 11:41:33.395"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:34.425" starttime="20200521 11:41:34.425"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:34.426" starttime="20200521 11:41:34.426"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:34.426" starttime="20200521 11:41:33.395"></status>
</kw>
<kw type="foritem" name="${i} = 5">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:34.427" starttime="20200521 11:41:34.427"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:41:34.439" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 11:41:34.450" level="INFO">Response Time to /redfish/v1/Olt: 0.00078 seconds.</msg>
<msg timestamp="20200521 11:41:34.450" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:41:34 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 11:41:34.451" starttime="20200521 11:41:34.427"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:41:34.451" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:41:34.452" starttime="20200521 11:41:34.451"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 11:41:34.452" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 11:41:34.452" starttime="20200521 11:41:34.452"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:34.453" starttime="20200521 11:41:34.453"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:34.457" starttime="20200521 11:41:34.454"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:34.457" starttime="20200521 11:41:34.454"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 11:41:35.501" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 11:41:35.501" starttime="20200521 11:41:34.457"></status>
</kw>
<msg timestamp="20200521 11:41:35.502" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 11:41:35.502" starttime="20200521 11:41:34.426"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:35.503" starttime="20200521 11:41:35.502"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:35.504" starttime="20200521 11:41:35.504"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:35.504" starttime="20200521 11:41:34.426"></status>
</kw>
<kw type="foritem" name="${i} = 6">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:35.505" starttime="20200521 11:41:35.505"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:41:35.515" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 11:41:35.527" level="INFO">Response Time to /redfish/v1/Olt: 0.000443 seconds.</msg>
<msg timestamp="20200521 11:41:35.527" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:41:35 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 11:41:35.527" starttime="20200521 11:41:35.505"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:41:35.528" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:41:35.529" starttime="20200521 11:41:35.528"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 11:41:35.529" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 11:41:35.529" starttime="20200521 11:41:35.529"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:35.530" starttime="20200521 11:41:35.530"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:35.531" starttime="20200521 11:41:35.531"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:35.532" starttime="20200521 11:41:35.530"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 11:41:36.532" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 11:41:36.533" starttime="20200521 11:41:35.532"></status>
</kw>
<msg timestamp="20200521 11:41:36.533" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 11:41:36.533" starttime="20200521 11:41:35.504"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:36.534" starttime="20200521 11:41:36.533"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:36.535" starttime="20200521 11:41:36.534"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:36.535" starttime="20200521 11:41:35.504"></status>
</kw>
<kw type="foritem" name="${i} = 7">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:36.536" starttime="20200521 11:41:36.536"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:41:36.546" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 11:41:36.558" level="INFO">Response Time to /redfish/v1/Olt: 0.000466 seconds.</msg>
<msg timestamp="20200521 11:41:36.558" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:41:36 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 11:41:36.558" starttime="20200521 11:41:36.536"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:41:36.559" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:41:36.559" starttime="20200521 11:41:36.559"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 11:41:36.560" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 11:41:36.560" starttime="20200521 11:41:36.560"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:36.561" starttime="20200521 11:41:36.561"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:36.563" starttime="20200521 11:41:36.562"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:36.563" starttime="20200521 11:41:36.562"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 11:41:37.565" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 11:41:37.565" starttime="20200521 11:41:36.563"></status>
</kw>
<msg timestamp="20200521 11:41:37.565" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 11:41:37.565" starttime="20200521 11:41:36.535"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:37.566" starttime="20200521 11:41:37.566"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:37.567" starttime="20200521 11:41:37.567"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:37.567" starttime="20200521 11:41:36.535"></status>
</kw>
<kw type="foritem" name="${i} = 8">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:37.569" starttime="20200521 11:41:37.568"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:41:37.580" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 11:41:37.590" level="INFO">Response Time to /redfish/v1/Olt: 0.00048 seconds.</msg>
<msg timestamp="20200521 11:41:37.593" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:41:37 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 11:41:37.593" starttime="20200521 11:41:37.569"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:41:37.594" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:41:37.594" starttime="20200521 11:41:37.594"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 11:41:37.595" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 11:41:37.595" starttime="20200521 11:41:37.594"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:37.597" starttime="20200521 11:41:37.595"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:37.601" starttime="20200521 11:41:37.599"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:37.601" starttime="20200521 11:41:37.598"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 11:41:38.602" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 11:41:38.602" starttime="20200521 11:41:37.601"></status>
</kw>
<msg timestamp="20200521 11:41:38.602" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 11:41:38.602" starttime="20200521 11:41:37.567"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:38.603" starttime="20200521 11:41:38.603"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:38.604" starttime="20200521 11:41:38.604"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:38.604" starttime="20200521 11:41:37.567"></status>
</kw>
<kw type="foritem" name="${i} = 9">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:38.605" starttime="20200521 11:41:38.605"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:41:38.615" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 11:41:38.625" level="INFO">Response Time to /redfish/v1/Olt: 0.000615 seconds.</msg>
<msg timestamp="20200521 11:41:38.626" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:41:38 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 11:41:38.626" starttime="20200521 11:41:38.606"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:41:38.627" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:41:38.627" starttime="20200521 11:41:38.626"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 11:41:38.628" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 11:41:38.628" starttime="20200521 11:41:38.627"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:38.630" starttime="20200521 11:41:38.628"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:38.632" starttime="20200521 11:41:38.631"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:38.632" starttime="20200521 11:41:38.631"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 11:41:39.633" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 11:41:39.633" starttime="20200521 11:41:38.632"></status>
</kw>
<msg timestamp="20200521 11:41:39.633" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 11:41:39.633" starttime="20200521 11:41:38.604"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:39.634" starttime="20200521 11:41:39.634"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:39.635" starttime="20200521 11:41:39.635"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:39.635" starttime="20200521 11:41:38.604"></status>
</kw>
<kw type="foritem" name="${i} = 10">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:39.636" starttime="20200521 11:41:39.636"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:41:39.646" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 11:41:39.657" level="INFO">Response Time to /redfish/v1/Olt: 0.000556 seconds.</msg>
<msg timestamp="20200521 11:41:39.657" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:41:39 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 11:41:39.658" starttime="20200521 11:41:39.636"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:41:39.658" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:41:39.659" starttime="20200521 11:41:39.658"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 11:41:39.659" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 11:41:39.659" starttime="20200521 11:41:39.659"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:39.662" starttime="20200521 11:41:39.660"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:39.664" starttime="20200521 11:41:39.663"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:39.664" starttime="20200521 11:41:39.663"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 11:41:40.665" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 11:41:40.665" starttime="20200521 11:41:39.665"></status>
</kw>
<msg timestamp="20200521 11:41:40.666" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 11:41:40.666" starttime="20200521 11:41:39.635"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:40.667" starttime="20200521 11:41:40.666"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:40.668" starttime="20200521 11:41:40.668"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:40.668" starttime="20200521 11:41:39.635"></status>
</kw>
<kw type="foritem" name="${i} = 11">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:40.670" starttime="20200521 11:41:40.669"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:41:40.681" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 11:41:40.692" level="INFO">Response Time to /redfish/v1/Olt: 0.000728 seconds.</msg>
<msg timestamp="20200521 11:41:40.693" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:41:40 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 11:41:40.693" starttime="20200521 11:41:40.670"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:41:40.694" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:41:40.694" starttime="20200521 11:41:40.693"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 11:41:40.695" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 11:41:40.695" starttime="20200521 11:41:40.694"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:40.698" starttime="20200521 11:41:40.695"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:40.700" starttime="20200521 11:41:40.699"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:40.700" starttime="20200521 11:41:40.699"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 11:41:41.701" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 11:41:41.701" starttime="20200521 11:41:40.700"></status>
</kw>
<msg timestamp="20200521 11:41:41.701" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 11:41:41.701" starttime="20200521 11:41:40.669"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:41.702" starttime="20200521 11:41:41.702"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:41.703" starttime="20200521 11:41:41.703"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:41.703" starttime="20200521 11:41:40.668"></status>
</kw>
<kw type="foritem" name="${i} = 12">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:41.705" starttime="20200521 11:41:41.704"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:41:41.718" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 11:41:41.729" level="INFO">Response Time to /redfish/v1/Olt: 0.000412 seconds.</msg>
<msg timestamp="20200521 11:41:41.730" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:41:42 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 11:41:41.730" starttime="20200521 11:41:41.705"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:41:41.731" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:41:41.731" starttime="20200521 11:41:41.731"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 11:41:41.732" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 11:41:41.732" starttime="20200521 11:41:41.732"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:41.733" starttime="20200521 11:41:41.733"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:41.736" starttime="20200521 11:41:41.735"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:41.736" starttime="20200521 11:41:41.734"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 11:41:42.737" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 11:41:42.738" starttime="20200521 11:41:41.737"></status>
</kw>
<msg timestamp="20200521 11:41:42.738" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 11:41:42.738" starttime="20200521 11:41:41.704"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:42.739" starttime="20200521 11:41:42.738"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:42.740" starttime="20200521 11:41:42.739"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:42.740" starttime="20200521 11:41:41.703"></status>
</kw>
<kw type="foritem" name="${i} = 13">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:42.741" starttime="20200521 11:41:42.741"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:41:42.756" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 11:41:42.767" level="INFO">Response Time to /redfish/v1/Olt: 0.000536 seconds.</msg>
<msg timestamp="20200521 11:41:42.768" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:41:43 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 11:41:42.768" starttime="20200521 11:41:42.742"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:41:42.770" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:41:42.770" starttime="20200521 11:41:42.769"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 11:41:42.771" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 11:41:42.771" starttime="20200521 11:41:42.770"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:42.774" starttime="20200521 11:41:42.771"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:42.776" starttime="20200521 11:41:42.775"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:42.776" starttime="20200521 11:41:42.774"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 11:41:43.777" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 11:41:43.777" starttime="20200521 11:41:42.776"></status>
</kw>
<msg timestamp="20200521 11:41:43.777" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 11:41:43.777" starttime="20200521 11:41:42.740"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:43.778" starttime="20200521 11:41:43.777"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:43.779" starttime="20200521 11:41:43.778"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:43.779" starttime="20200521 11:41:42.740"></status>
</kw>
<kw type="foritem" name="${i} = 14">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:43.780" starttime="20200521 11:41:43.779"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:41:43.792" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 11:41:43.803" level="INFO">Response Time to /redfish/v1/Olt: 0.000544 seconds.</msg>
<msg timestamp="20200521 11:41:43.804" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:41:44 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 11:41:43.804" starttime="20200521 11:41:43.780"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:41:43.805" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:41:43.805" starttime="20200521 11:41:43.804"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 11:41:43.806" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 11:41:43.806" starttime="20200521 11:41:43.806"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:43.807" starttime="20200521 11:41:43.806"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:43.809" starttime="20200521 11:41:43.808"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:43.809" starttime="20200521 11:41:43.808"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 11:41:44.810" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 11:41:44.810" starttime="20200521 11:41:43.809"></status>
</kw>
<msg timestamp="20200521 11:41:44.811" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 11:41:44.811" starttime="20200521 11:41:43.779"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:44.812" starttime="20200521 11:41:44.811"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:44.813" starttime="20200521 11:41:44.812"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:44.813" starttime="20200521 11:41:43.779"></status>
</kw>
<kw type="foritem" name="${i} = 15">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:44.814" starttime="20200521 11:41:44.814"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:41:44.827" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 11:41:44.837" level="INFO">Response Time to /redfish/v1/Olt: 0.0007 seconds.</msg>
<msg timestamp="20200521 11:41:44.838" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:41:45 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 11:41:44.838" starttime="20200521 11:41:44.814"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:41:44.839" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:41:44.839" starttime="20200521 11:41:44.839"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 11:41:44.840" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 11:41:44.840" starttime="20200521 11:41:44.840"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:44.841" starttime="20200521 11:41:44.841"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:44.843" starttime="20200521 11:41:44.843"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:44.843" starttime="20200521 11:41:44.842"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 11:41:45.844" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 11:41:45.844" starttime="20200521 11:41:44.844"></status>
</kw>
<msg timestamp="20200521 11:41:45.845" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 11:41:45.845" starttime="20200521 11:41:44.813"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:45.846" starttime="20200521 11:41:45.845"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:45.847" starttime="20200521 11:41:45.846"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:45.847" starttime="20200521 11:41:44.813"></status>
</kw>
<kw type="foritem" name="${i} = 16">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:45.848" starttime="20200521 11:41:45.848"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:41:45.859" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 11:41:45.870" level="INFO">Response Time to /redfish/v1/Olt: 0.000386 seconds.</msg>
<msg timestamp="20200521 11:41:45.871" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:41:46 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 11:41:45.871" starttime="20200521 11:41:45.849"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:41:45.871" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:41:45.871" starttime="20200521 11:41:45.871"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 11:41:45.872" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 11:41:45.872" starttime="20200521 11:41:45.872"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:45.875" starttime="20200521 11:41:45.873"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:45.876" starttime="20200521 11:41:45.876"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:45.876" starttime="20200521 11:41:45.875"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 11:41:46.877" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 11:41:46.877" starttime="20200521 11:41:45.877"></status>
</kw>
<msg timestamp="20200521 11:41:46.878" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 11:41:46.878" starttime="20200521 11:41:45.847"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:46.879" starttime="20200521 11:41:46.878"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:46.880" starttime="20200521 11:41:46.879"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:46.880" starttime="20200521 11:41:45.847"></status>
</kw>
<kw type="foritem" name="${i} = 17">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:46.881" starttime="20200521 11:41:46.881"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:41:46.892" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 11:41:47.912" level="INFO">Response Time to /redfish/v1/Olt: 0.00055 seconds.</msg>
<msg timestamp="20200521 11:41:47.913" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:41:48 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 11:41:47.913" starttime="20200521 11:41:46.881"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:41:47.914" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:41:47.914" starttime="20200521 11:41:47.914"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 11:41:47.915" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 11:41:47.915" starttime="20200521 11:41:47.915"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:47.916" starttime="20200521 11:41:47.916"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:47.918" starttime="20200521 11:41:47.917"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:47.918" starttime="20200521 11:41:47.917"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 11:41:48.919" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 11:41:48.919" starttime="20200521 11:41:47.918"></status>
</kw>
<msg timestamp="20200521 11:41:48.919" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 11:41:48.919" starttime="20200521 11:41:46.880"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:48.920" starttime="20200521 11:41:48.920"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:48.921" starttime="20200521 11:41:48.921"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:48.921" starttime="20200521 11:41:46.880"></status>
</kw>
<kw type="foritem" name="${i} = 18">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:48.923" starttime="20200521 11:41:48.922"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:41:48.933" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 11:41:48.945" level="INFO">Response Time to /redfish/v1/Olt: 0.000433 seconds.</msg>
<msg timestamp="20200521 11:41:48.946" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:41:49 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 11:41:48.946" starttime="20200521 11:41:48.923"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:41:48.947" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:41:48.947" starttime="20200521 11:41:48.947"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 11:41:48.948" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 11:41:48.948" starttime="20200521 11:41:48.948"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:48.949" starttime="20200521 11:41:48.948"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:48.951" starttime="20200521 11:41:48.950"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:48.951" starttime="20200521 11:41:48.950"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 11:41:49.952" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 11:41:49.953" starttime="20200521 11:41:48.952"></status>
</kw>
<msg timestamp="20200521 11:41:49.953" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 11:41:49.953" starttime="20200521 11:41:48.922"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:49.954" starttime="20200521 11:41:49.953"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:49.955" starttime="20200521 11:41:49.955"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:49.955" starttime="20200521 11:41:48.921"></status>
</kw>
<kw type="foritem" name="${i} = 19">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:49.956" starttime="20200521 11:41:49.956"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:41:49.967" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 11:41:49.977" level="INFO">Response Time to /redfish/v1/Olt: 0.000451 seconds.</msg>
<msg timestamp="20200521 11:41:49.978" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:41:50 GMT
connection Keep-Alive
content-type application/json
content-length 40


{"BalState":"up","OltOperateState":true}</msg>
<status status="PASS" endtime="20200521 11:41:49.978" starttime="20200521 11:41:49.956"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:41:49.979" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:41:49.979" starttime="20200521 11:41:49.979"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 11:41:49.980" level="INFO">${bal_opt_state} = True</msg>
<status status="PASS" endtime="20200521 11:41:49.980" starttime="20200521 11:41:49.980"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:49.981" starttime="20200521 11:41:49.981"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Up ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:49.983" starttime="20200521 11:41:49.982"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:49.983" starttime="20200521 11:41:49.982"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 11:41:50.984" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 11:41:50.984" starttime="20200521 11:41:49.984"></status>
</kw>
<msg timestamp="20200521 11:41:50.985" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20200521 11:41:50.985" starttime="20200521 11:41:49.955"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:50.986" starttime="20200521 11:41:50.985"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20200521 11:41:50.986" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20200521 11:41:50.986" starttime="20200521 11:41:50.986"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:50.987" starttime="20200521 11:41:49.955"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:50.987" starttime="20200521 11:41:30.293"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:50.987" starttime="20200521 11:41:50.987"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:50.987" starttime="20200521 11:41:27.599"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200521 11:41:55.988" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20200521 11:41:55.988" starttime="20200521 11:41:50.988"></status>
</kw>
<kw name="Test Port Present">
<tags>
<tag>Test pon_status present</tag>
</tags>
<doc>Test Pon port present function</doc>
<arguments>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:41:55.998" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200521 11:41:56.249" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000618 seconds.</msg>
<msg timestamp="20200521 11:41:56.250" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:41:56 GMT
connection Keep-Alive
content-type application/json
content-length 2417


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:41:56.250" starttime="20200521 11:41:55.989"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:41:56.251" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:41:56.251" starttime="20200521 11:41:56.250"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 11:41:56.252" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200521 11:41:56.252" starttime="20200521 11:41:56.251"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 11:41:56.253" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 11:41:56.253" starttime="20200521 11:41:56.252"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:56.254" starttime="20200521 11:41:56.254"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:56.255" starttime="20200521 11:41:56.255"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${PORT_ENABLE}'</arg>
<arg>'Enabled'</arg>
</arguments>
<status status="PASS" endtime="20200521 11:41:56.258" starttime="20200521 11:41:56.257"></status>
</kw>
<status status="PASS" endtime="20200521 11:41:56.258" starttime="20200521 11:41:55.989"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200521 11:42:01.259" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20200521 11:42:01.259" starttime="20200521 11:41:56.258"></status>
</kw>
<kw name="Enable Port">
<tags>
<tag>Enable Port</tag>
</tags>
<doc>Enable port function</doc>
<arguments>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Enable Port ${ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:42:01.261" starttime="20200521 11:42:01.261"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($ADM_UP)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 11:42:01.268" level="INFO">${payload} = {u'AdministrativeState': u'Up'}</msg>
<status status="PASS" endtime="20200521 11:42:01.268" starttime="20200521 11:42:01.262"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:42:01.277" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200521 11:42:01.662" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.00055 seconds.</msg>
<msg timestamp="20200521 11:42:01.662" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:42:01 GMT
connection Keep-Alive
content-type application/json
content-length 2412


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:42:01.663" starttime="20200521 11:42:01.268"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:42:01.664" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:42:01.664" starttime="20200521 11:42:01.663"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:42:01.674" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200521 11:42:01.763" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000598 seconds.</msg>
<msg timestamp="20200521 11:42:01.764" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:42:02 GMT
connection Keep-Alive
content-type application/json
content-length 2412


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:42:01.764" starttime="20200521 11:42:01.664"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:42:01.765" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:42:01.765" starttime="20200521 11:42:01.764"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['AdministrativeState']}</arg>
</arguments>
<assign>
<var>${ADM_STAT}</var>
</assign>
<msg timestamp="20200521 11:42:01.766" level="INFO">${ADM_STAT} = Up</msg>
<status status="PASS" endtime="20200521 11:42:01.766" starttime="20200521 11:42:01.765"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${ADM_STAT}'</arg>
<arg>'Up'</arg>
</arguments>
<status status="PASS" endtime="20200521 11:42:01.767" starttime="20200521 11:42:01.766"></status>
</kw>
<status status="PASS" endtime="20200521 11:42:01.767" starttime="20200521 11:42:01.260"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200521 11:42:06.768" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20200521 11:42:06.768" starttime="20200521 11:42:01.767"></status>
</kw>
<kw name="Test NNI Port Enable">
<tags>
<tag>Verify_nni_enable</tag>
</tags>
<doc>Verify NNI port enable function</doc>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:42:06.778" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/</msg>
<msg timestamp="20200521 11:42:06.795" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/: 0.000558 seconds.</msg>
<msg timestamp="20200521 11:42:06.795" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:42:07 GMT
connection Keep-Alive
content-type application/json
content-length 1467


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPortCollection.EthernetSwitchPor...</msg>
<status status="PASS" endtime="20200521 11:42:06.795" starttime="20200521 11:42:06.769"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:42:06.796" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:42:06.796" starttime="20200521 11:42:06.796"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200521 11:42:06.799" level="INFO">Length is 20</msg>
<msg timestamp="20200521 11:42:06.799" level="INFO">${item_count} = 20</msg>
<status status="PASS" endtime="20200521 11:42:06.799" starttime="20200521 11:42:06.797"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### num ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:42:06.800" starttime="20200521 11:42:06.799"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PON_TYPE}' == 'GPON'</arg>
<arg>set variable</arg>
<arg>${65}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${17}</arg>
</arguments>
<assign>
<var>${NNI_PORT}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${17}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:42:06.802" starttime="20200521 11:42:06.801"></status>
</kw>
<msg timestamp="20200521 11:42:06.802" level="INFO">${NNI_PORT} = 17</msg>
<status status="PASS" endtime="20200521 11:42:06.802" starttime="20200521 11:42:06.800"></status>
</kw>
<kw name="Test Port Present">
<tags>
<tag>Test pon_status present</tag>
</tags>
<doc>Test Pon port present function</doc>
<arguments>
<arg>${NNI_PORT}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:42:06.812" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/17</msg>
<msg timestamp="20200521 11:42:06.826" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/17: 0.000592 seconds.</msg>
<msg timestamp="20200521 11:42:06.826" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:42:07 GMT
connection Keep-Alive
content-type application/json
content-length 2438


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:42:06.826" starttime="20200521 11:42:06.803"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:42:06.827" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:42:06.827" starttime="20200521 11:42:06.827"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 11:42:06.828" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200521 11:42:06.828" starttime="20200521 11:42:06.828"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 11:42:06.829" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200521 11:42:06.829" starttime="20200521 11:42:06.829"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:42:06.830" starttime="20200521 11:42:06.830"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:42:06.831" starttime="20200521 11:42:06.831"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${PORT_ENABLE}'</arg>
<arg>'Enabled'</arg>
</arguments>
<status status="PASS" endtime="20200521 11:42:06.832" starttime="20200521 11:42:06.832"></status>
</kw>
<status status="PASS" endtime="20200521 11:42:06.832" starttime="20200521 11:42:06.802"></status>
</kw>
<kw name="Enable Port">
<tags>
<tag>Enable Port</tag>
</tags>
<doc>Enable port function</doc>
<arguments>
<arg>${NNI_PORT}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Enable Port ${ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:42:06.835" starttime="20200521 11:42:06.834"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($ADM_UP)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 11:42:06.841" level="INFO">${payload} = {u'AdministrativeState': u'Up'}</msg>
<status status="PASS" endtime="20200521 11:42:06.841" starttime="20200521 11:42:06.836"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:42:06.852" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/17</msg>
<msg timestamp="20200521 11:42:07.072" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/17: 0.000642 seconds.</msg>
<msg timestamp="20200521 11:42:07.073" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:42:07 GMT
connection Keep-Alive
content-type application/json
content-length 2438


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:42:07.073" starttime="20200521 11:42:06.842"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:42:07.074" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:42:07.074" starttime="20200521 11:42:07.073"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:42:07.083" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/17</msg>
<msg timestamp="20200521 11:42:07.097" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/17: 0.000699 seconds.</msg>
<msg timestamp="20200521 11:42:07.097" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:42:07 GMT
connection Keep-Alive
content-type application/json
content-length 2438


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:42:07.097" starttime="20200521 11:42:07.074"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:42:07.099" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:42:07.099" starttime="20200521 11:42:07.098"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['AdministrativeState']}</arg>
</arguments>
<assign>
<var>${ADM_STAT}</var>
</assign>
<msg timestamp="20200521 11:42:07.100" level="INFO">${ADM_STAT} = Up</msg>
<status status="PASS" endtime="20200521 11:42:07.100" starttime="20200521 11:42:07.099"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${ADM_STAT}'</arg>
<arg>'Up'</arg>
</arguments>
<status status="PASS" endtime="20200521 11:42:07.101" starttime="20200521 11:42:07.100"></status>
</kw>
<status status="PASS" endtime="20200521 11:42:07.101" starttime="20200521 11:42:06.833"></status>
</kw>
<status status="PASS" endtime="20200521 11:42:07.101" starttime="20200521 11:42:06.768"></status>
</kw>
<status status="PASS" endtime="20200521 11:42:07.101" starttime="20200521 11:41:26.551"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200521 11:42:07.110" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200521 11:42:07.121" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000505 seconds.</msg>
<msg timestamp="20200521 11:42:07.121" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200521 11:42:07.121" starttime="20200521 11:42:07.102"></status>
</kw>
<status status="PASS" endtime="20200521 11:42:07.122" starttime="20200521 11:42:07.101"></status>
</kw>
<doc>Test BAL Restful Status</doc>
<tags>
<tag>Test Bal Restful opertaion test</tag>
</tags>
<status status="PASS" endtime="20200521 11:42:07.122" critical="yes" starttime="20200521 11:41:26.522"></status>
</test>
<test id="s1-s1-t2" name="Verify Restful API for ONU Range Test">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200521 11:42:07.132" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200521 11:42:07.150" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000831 seconds.</msg>
<msg timestamp="20200521 11:42:07.151" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200521 11:42:07.151" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200521 11:42:07.151" starttime="20200521 11:42:07.125"></status>
</kw>
<status status="PASS" endtime="20200521 11:42:07.151" starttime="20200521 11:42:07.124"></status>
</kw>
<kw name="Test ONU Range">
<tags>
<tag>ONU Range</tag>
</tags>
<doc>ONU Ranging Test</doc>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PON_TYPE}' == 'GPON'</arg>
<arg>set variable</arg>
<arg>${150}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${255}</arg>
</arguments>
<assign>
<var>${ONU_ID_RANGE}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${255}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:42:07.153" starttime="20200521 11:42:07.153"></status>
</kw>
<msg timestamp="20200521 11:42:07.154" level="INFO">${ONU_ID_RANGE} = 255</msg>
<status status="PASS" endtime="20200521 11:42:07.154" starttime="20200521 11:42:07.152"></status>
</kw>
<kw type="for" name="${id} IN RANGE [ 1 | ${ONU_ID_RANGE} | 50 ]">
<kw type="foritem" name="${id} = 1">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200521 11:42:14.171" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200521 11:42:14.171" starttime="20200521 11:42:07.154"></status>
</kw>
<kw name="Test Active ONU">
<tags>
<tag>Test Active ONU</tag>
</tags>
<doc>Test Active ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${SPECIFIC_ID}</arg>
<arg>${SPECIFIC_NUM}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onu_id": ${ONU_ID},</arg>
<arg>"vendor_id": "${VEN_ID}",</arg>
<arg>"vendor_specific":"${VEN_SPEC}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 11:42:14.173" level="INFO">${JSTRING} = { "onu_id": 1, "vendor_id": "ISKT", "vendor_specific":"71E83268" }</msg>
<status status="PASS" endtime="20200521 11:42:14.173" starttime="20200521 11:42:14.172"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### active onu ${JSTRING} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:42:14.174" starttime="20200521 11:42:14.173"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 11:42:14.180" level="INFO">${payload} = {u'onu_id': 1, u'vendor_id': u'ISKT', u'vendor_specific': u'71E83268'}</msg>
<status status="PASS" endtime="20200521 11:42:14.180" starttime="20200521 11:42:14.174"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:42:14.190" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 11:42:14.203" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000448 seconds.</msg>
<msg timestamp="20200521 11:42:14.204" level="INFO">${resp} = 201
date Thu, 21 May 2020 03:42:14 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:42:14.204" starttime="20200521 11:42:14.180"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200521 11:42:14.205" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:42:14.206" starttime="20200521 11:42:14.205"></status>
</kw>
<status status="PASS" endtime="20200521 11:42:14.206" starttime="20200521 11:42:14.204"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6s</arg>
</arguments>
<msg timestamp="20200521 11:42:20.206" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20200521 11:42:20.207" starttime="20200521 11:42:14.206"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:42:20.218" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 11:42:20.233" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.002131 seconds.</msg>
<msg timestamp="20200521 11:42:20.233" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:42:20 GMT
connection Keep-Alive
content-type application/json
content-length 405


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200521 11:42:20.233" starttime="20200521 11:42:20.207"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### onu res ${resp} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:42:20.234" starttime="20200521 11:42:20.234"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200521 11:42:20.235" level="INFO">Length is 1</msg>
<msg timestamp="20200521 11:42:20.235" level="INFO">${item_count} = 1</msg>
<status status="PASS" endtime="20200521 11:42:20.235" starttime="20200521 11:42:20.234"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Onu num ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:42:20.236" starttime="20200521 11:42:20.235"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200521 11:42:20.238" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:42:20.238" starttime="20200521 11:42:20.237"></status>
</kw>
<status status="PASS" endtime="20200521 11:42:20.238" starttime="20200521 11:42:20.236"></status>
</kw>
<status status="PASS" endtime="20200521 11:42:20.238" starttime="20200521 11:42:14.171"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200521 11:42:27.239" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200521 11:42:27.239" starttime="20200521 11:42:20.239"></status>
</kw>
<kw name="Test DeActive ONU">
<tags>
<tag>Test DeActive ONU</tag>
</tags>
<doc>Test DeActive ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Deactive onu ${ONU_ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:42:27.241" starttime="20200521 11:42:27.241"></status>
</kw>
<kw type="for" name="${j} IN RANGE [ 5 ]">
<kw type="foritem" name="${j} = 0">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${j} == 4</arg>
</arguments>
<status status="PASS" endtime="20200521 11:42:27.243" starttime="20200521 11:42:27.242"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:42:27.255" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1</msg>
<msg timestamp="20200521 11:42:27.767" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1: 0.000566 seconds.</msg>
<msg timestamp="20200521 11:42:27.768" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:42:28 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:42:27.768" starttime="20200521 11:42:27.243"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${resp.status} == ${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:42:27.770" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20200521 11:42:27.770" starttime="20200521 11:42:27.769"></status>
</kw>
<status status="PASS" endtime="20200521 11:42:27.770" starttime="20200521 11:42:27.242"></status>
</kw>
<status status="PASS" endtime="20200521 11:42:27.770" starttime="20200521 11:42:27.241"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:42:27.771" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:42:27.771" starttime="20200521 11:42:27.770"></status>
</kw>
<status status="PASS" endtime="20200521 11:42:27.771" starttime="20200521 11:42:27.240"></status>
</kw>
<status status="PASS" endtime="20200521 11:42:27.771" starttime="20200521 11:42:07.154"></status>
</kw>
<kw type="foritem" name="${id} = 51">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200521 11:42:34.773" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200521 11:42:34.774" starttime="20200521 11:42:27.772"></status>
</kw>
<kw name="Test Active ONU">
<tags>
<tag>Test Active ONU</tag>
</tags>
<doc>Test Active ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${SPECIFIC_ID}</arg>
<arg>${SPECIFIC_NUM}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onu_id": ${ONU_ID},</arg>
<arg>"vendor_id": "${VEN_ID}",</arg>
<arg>"vendor_specific":"${VEN_SPEC}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 11:42:34.775" level="INFO">${JSTRING} = { "onu_id": 51, "vendor_id": "ISKT", "vendor_specific":"71E83268" }</msg>
<status status="PASS" endtime="20200521 11:42:34.775" starttime="20200521 11:42:34.775"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### active onu ${JSTRING} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:42:34.776" starttime="20200521 11:42:34.776"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 11:42:34.782" level="INFO">${payload} = {u'onu_id': 51, u'vendor_id': u'ISKT', u'vendor_specific': u'71E83268'}</msg>
<status status="PASS" endtime="20200521 11:42:34.782" starttime="20200521 11:42:34.777"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:42:34.792" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 11:42:34.804" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000544 seconds.</msg>
<msg timestamp="20200521 11:42:34.805" level="INFO">${resp} = 201
date Thu, 21 May 2020 03:42:35 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:42:34.805" starttime="20200521 11:42:34.782"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200521 11:42:34.807" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:42:34.807" starttime="20200521 11:42:34.806"></status>
</kw>
<status status="PASS" endtime="20200521 11:42:34.807" starttime="20200521 11:42:34.805"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6s</arg>
</arguments>
<msg timestamp="20200521 11:42:40.808" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20200521 11:42:40.808" starttime="20200521 11:42:34.807"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:42:40.817" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 11:42:40.828" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000485 seconds.</msg>
<msg timestamp="20200521 11:42:40.828" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:42:41 GMT
connection Keep-Alive
content-type application/json
content-length 406


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200521 11:42:40.828" starttime="20200521 11:42:40.808"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### onu res ${resp} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:42:40.829" starttime="20200521 11:42:40.829"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200521 11:42:40.830" level="INFO">Length is 1</msg>
<msg timestamp="20200521 11:42:40.830" level="INFO">${item_count} = 1</msg>
<status status="PASS" endtime="20200521 11:42:40.830" starttime="20200521 11:42:40.830"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Onu num ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:42:40.831" starttime="20200521 11:42:40.831"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200521 11:42:40.833" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:42:40.833" starttime="20200521 11:42:40.832"></status>
</kw>
<status status="PASS" endtime="20200521 11:42:40.833" starttime="20200521 11:42:40.832"></status>
</kw>
<status status="PASS" endtime="20200521 11:42:40.833" starttime="20200521 11:42:34.774"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200521 11:42:47.835" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200521 11:42:47.836" starttime="20200521 11:42:40.833"></status>
</kw>
<kw name="Test DeActive ONU">
<tags>
<tag>Test DeActive ONU</tag>
</tags>
<doc>Test DeActive ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Deactive onu ${ONU_ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:42:47.838" starttime="20200521 11:42:47.837"></status>
</kw>
<kw type="for" name="${j} IN RANGE [ 5 ]">
<kw type="foritem" name="${j} = 0">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${j} == 4</arg>
</arguments>
<status status="PASS" endtime="20200521 11:42:47.839" starttime="20200521 11:42:47.838"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:42:47.849" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/51</msg>
<msg timestamp="20200521 11:42:48.362" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/51: 0.00053 seconds.</msg>
<msg timestamp="20200521 11:42:48.363" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:42:48 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:42:48.363" starttime="20200521 11:42:47.839"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${resp.status} == ${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:42:48.364" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20200521 11:42:48.364" starttime="20200521 11:42:48.363"></status>
</kw>
<status status="PASS" endtime="20200521 11:42:48.364" starttime="20200521 11:42:47.838"></status>
</kw>
<status status="PASS" endtime="20200521 11:42:48.364" starttime="20200521 11:42:47.838"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:42:48.365" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:42:48.365" starttime="20200521 11:42:48.365"></status>
</kw>
<status status="PASS" endtime="20200521 11:42:48.365" starttime="20200521 11:42:47.836"></status>
</kw>
<status status="PASS" endtime="20200521 11:42:48.365" starttime="20200521 11:42:27.771"></status>
</kw>
<kw type="foritem" name="${id} = 101">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200521 11:42:55.366" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200521 11:42:55.367" starttime="20200521 11:42:48.366"></status>
</kw>
<kw name="Test Active ONU">
<tags>
<tag>Test Active ONU</tag>
</tags>
<doc>Test Active ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${SPECIFIC_ID}</arg>
<arg>${SPECIFIC_NUM}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onu_id": ${ONU_ID},</arg>
<arg>"vendor_id": "${VEN_ID}",</arg>
<arg>"vendor_specific":"${VEN_SPEC}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 11:42:55.369" level="INFO">${JSTRING} = { "onu_id": 101, "vendor_id": "ISKT", "vendor_specific":"71E83268" }</msg>
<status status="PASS" endtime="20200521 11:42:55.369" starttime="20200521 11:42:55.368"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### active onu ${JSTRING} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:42:55.369" starttime="20200521 11:42:55.369"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 11:42:55.376" level="INFO">${payload} = {u'onu_id': 101, u'vendor_id': u'ISKT', u'vendor_specific': u'71E83268'}</msg>
<status status="PASS" endtime="20200521 11:42:55.376" starttime="20200521 11:42:55.370"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:42:55.387" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 11:42:55.400" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000515 seconds.</msg>
<msg timestamp="20200521 11:42:55.400" level="INFO">${resp} = 201
date Thu, 21 May 2020 03:42:55 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:42:55.400" starttime="20200521 11:42:55.376"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200521 11:42:55.402" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:42:55.402" starttime="20200521 11:42:55.402"></status>
</kw>
<status status="PASS" endtime="20200521 11:42:55.403" starttime="20200521 11:42:55.401"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6s</arg>
</arguments>
<msg timestamp="20200521 11:43:01.403" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20200521 11:43:01.404" starttime="20200521 11:42:55.403"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:43:01.411" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 11:43:01.422" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000512 seconds.</msg>
<msg timestamp="20200521 11:43:01.423" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:43:01 GMT
connection Keep-Alive
content-type application/json
content-length 407


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200521 11:43:01.423" starttime="20200521 11:43:01.404"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### onu res ${resp} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:43:01.424" starttime="20200521 11:43:01.423"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200521 11:43:01.426" level="INFO">Length is 1</msg>
<msg timestamp="20200521 11:43:01.426" level="INFO">${item_count} = 1</msg>
<status status="PASS" endtime="20200521 11:43:01.426" starttime="20200521 11:43:01.425"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Onu num ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:43:01.427" starttime="20200521 11:43:01.426"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200521 11:43:01.428" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:43:01.428" starttime="20200521 11:43:01.428"></status>
</kw>
<status status="PASS" endtime="20200521 11:43:01.428" starttime="20200521 11:43:01.427"></status>
</kw>
<status status="PASS" endtime="20200521 11:43:01.429" starttime="20200521 11:42:55.367"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200521 11:43:08.429" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200521 11:43:08.430" starttime="20200521 11:43:01.429"></status>
</kw>
<kw name="Test DeActive ONU">
<tags>
<tag>Test DeActive ONU</tag>
</tags>
<doc>Test DeActive ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Deactive onu ${ONU_ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:43:08.431" starttime="20200521 11:43:08.431"></status>
</kw>
<kw type="for" name="${j} IN RANGE [ 5 ]">
<kw type="foritem" name="${j} = 0">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${j} == 4</arg>
</arguments>
<status status="PASS" endtime="20200521 11:43:08.432" starttime="20200521 11:43:08.432"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:43:08.444" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/101</msg>
<msg timestamp="20200521 11:43:08.957" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/101: 0.000505 seconds.</msg>
<msg timestamp="20200521 11:43:08.957" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:43:09 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:43:08.957" starttime="20200521 11:43:08.433"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${resp.status} == ${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:43:08.958" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20200521 11:43:08.959" starttime="20200521 11:43:08.958"></status>
</kw>
<status status="PASS" endtime="20200521 11:43:08.959" starttime="20200521 11:43:08.432"></status>
</kw>
<status status="PASS" endtime="20200521 11:43:08.959" starttime="20200521 11:43:08.431"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:43:08.960" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:43:08.960" starttime="20200521 11:43:08.959"></status>
</kw>
<status status="PASS" endtime="20200521 11:43:08.960" starttime="20200521 11:43:08.430"></status>
</kw>
<status status="PASS" endtime="20200521 11:43:08.960" starttime="20200521 11:42:48.366"></status>
</kw>
<kw type="foritem" name="${id} = 151">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200521 11:43:15.962" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200521 11:43:15.962" starttime="20200521 11:43:08.961"></status>
</kw>
<kw name="Test Active ONU">
<tags>
<tag>Test Active ONU</tag>
</tags>
<doc>Test Active ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${SPECIFIC_ID}</arg>
<arg>${SPECIFIC_NUM}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onu_id": ${ONU_ID},</arg>
<arg>"vendor_id": "${VEN_ID}",</arg>
<arg>"vendor_specific":"${VEN_SPEC}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 11:43:15.964" level="INFO">${JSTRING} = { "onu_id": 151, "vendor_id": "ISKT", "vendor_specific":"71E83268" }</msg>
<status status="PASS" endtime="20200521 11:43:15.964" starttime="20200521 11:43:15.964"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### active onu ${JSTRING} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:43:15.965" starttime="20200521 11:43:15.965"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 11:43:15.972" level="INFO">${payload} = {u'onu_id': 151, u'vendor_id': u'ISKT', u'vendor_specific': u'71E83268'}</msg>
<status status="PASS" endtime="20200521 11:43:15.972" starttime="20200521 11:43:15.965"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:43:15.981" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 11:43:15.993" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000422 seconds.</msg>
<msg timestamp="20200521 11:43:15.994" level="INFO">${resp} = 201
date Thu, 21 May 2020 03:43:16 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:43:15.994" starttime="20200521 11:43:15.972"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200521 11:43:15.996" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:43:15.996" starttime="20200521 11:43:15.995"></status>
</kw>
<status status="PASS" endtime="20200521 11:43:15.996" starttime="20200521 11:43:15.994"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6s</arg>
</arguments>
<msg timestamp="20200521 11:43:21.997" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20200521 11:43:21.997" starttime="20200521 11:43:15.996"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:43:22.006" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 11:43:22.016" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000472 seconds.</msg>
<msg timestamp="20200521 11:43:22.017" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:43:22 GMT
connection Keep-Alive
content-type application/json
content-length 407


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200521 11:43:22.017" starttime="20200521 11:43:21.997"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### onu res ${resp} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:43:22.018" starttime="20200521 11:43:22.018"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200521 11:43:22.019" level="INFO">Length is 1</msg>
<msg timestamp="20200521 11:43:22.019" level="INFO">${item_count} = 1</msg>
<status status="PASS" endtime="20200521 11:43:22.019" starttime="20200521 11:43:22.019"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Onu num ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:43:22.020" starttime="20200521 11:43:22.020"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200521 11:43:22.022" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:43:22.022" starttime="20200521 11:43:22.021"></status>
</kw>
<status status="PASS" endtime="20200521 11:43:22.022" starttime="20200521 11:43:22.021"></status>
</kw>
<status status="PASS" endtime="20200521 11:43:22.022" starttime="20200521 11:43:15.963"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200521 11:43:29.023" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200521 11:43:29.023" starttime="20200521 11:43:22.022"></status>
</kw>
<kw name="Test DeActive ONU">
<tags>
<tag>Test DeActive ONU</tag>
</tags>
<doc>Test DeActive ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Deactive onu ${ONU_ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:43:29.025" starttime="20200521 11:43:29.024"></status>
</kw>
<kw type="for" name="${j} IN RANGE [ 5 ]">
<kw type="foritem" name="${j} = 0">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${j} == 4</arg>
</arguments>
<status status="PASS" endtime="20200521 11:43:29.026" starttime="20200521 11:43:29.026"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:43:29.038" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/151</msg>
<msg timestamp="20200521 11:43:29.550" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/151: 0.000641 seconds.</msg>
<msg timestamp="20200521 11:43:29.551" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:43:29 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:43:29.551" starttime="20200521 11:43:29.027"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${resp.status} == ${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:43:29.553" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20200521 11:43:29.553" starttime="20200521 11:43:29.552"></status>
</kw>
<status status="PASS" endtime="20200521 11:43:29.553" starttime="20200521 11:43:29.025"></status>
</kw>
<status status="PASS" endtime="20200521 11:43:29.553" starttime="20200521 11:43:29.025"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:43:29.554" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:43:29.555" starttime="20200521 11:43:29.553"></status>
</kw>
<status status="PASS" endtime="20200521 11:43:29.555" starttime="20200521 11:43:29.023"></status>
</kw>
<status status="PASS" endtime="20200521 11:43:29.555" starttime="20200521 11:43:08.960"></status>
</kw>
<kw type="foritem" name="${id} = 201">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200521 11:43:36.556" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200521 11:43:36.556" starttime="20200521 11:43:29.555"></status>
</kw>
<kw name="Test Active ONU">
<tags>
<tag>Test Active ONU</tag>
</tags>
<doc>Test Active ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${SPECIFIC_ID}</arg>
<arg>${SPECIFIC_NUM}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onu_id": ${ONU_ID},</arg>
<arg>"vendor_id": "${VEN_ID}",</arg>
<arg>"vendor_specific":"${VEN_SPEC}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 11:43:36.558" level="INFO">${JSTRING} = { "onu_id": 201, "vendor_id": "ISKT", "vendor_specific":"71E83268" }</msg>
<status status="PASS" endtime="20200521 11:43:36.559" starttime="20200521 11:43:36.558"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### active onu ${JSTRING} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:43:36.559" starttime="20200521 11:43:36.559"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 11:43:36.566" level="INFO">${payload} = {u'onu_id': 201, u'vendor_id': u'ISKT', u'vendor_specific': u'71E83268'}</msg>
<status status="PASS" endtime="20200521 11:43:36.566" starttime="20200521 11:43:36.560"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:43:36.576" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 11:43:36.589" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000476 seconds.</msg>
<msg timestamp="20200521 11:43:36.590" level="INFO">${resp} = 201
date Thu, 21 May 2020 03:43:36 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:43:36.590" starttime="20200521 11:43:36.566"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200521 11:43:36.591" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:43:36.592" starttime="20200521 11:43:36.591"></status>
</kw>
<status status="PASS" endtime="20200521 11:43:36.592" starttime="20200521 11:43:36.590"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6s</arg>
</arguments>
<msg timestamp="20200521 11:43:42.619" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20200521 11:43:42.620" starttime="20200521 11:43:36.592"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:43:42.629" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 11:43:42.639" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000399 seconds.</msg>
<msg timestamp="20200521 11:43:42.640" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:43:42 GMT
connection Keep-Alive
content-type application/json
content-length 407


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200521 11:43:42.640" starttime="20200521 11:43:42.620"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### onu res ${resp} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:43:42.641" starttime="20200521 11:43:42.641"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200521 11:43:42.643" level="INFO">Length is 1</msg>
<msg timestamp="20200521 11:43:42.643" level="INFO">${item_count} = 1</msg>
<status status="PASS" endtime="20200521 11:43:42.643" starttime="20200521 11:43:42.642"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Onu num ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:43:42.644" starttime="20200521 11:43:42.643"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200521 11:43:42.645" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:43:42.645" starttime="20200521 11:43:42.645"></status>
</kw>
<status status="PASS" endtime="20200521 11:43:42.645" starttime="20200521 11:43:42.644"></status>
</kw>
<status status="PASS" endtime="20200521 11:43:42.646" starttime="20200521 11:43:36.557"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200521 11:43:49.646" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200521 11:43:49.647" starttime="20200521 11:43:42.646"></status>
</kw>
<kw name="Test DeActive ONU">
<tags>
<tag>Test DeActive ONU</tag>
</tags>
<doc>Test DeActive ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Deactive onu ${ONU_ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:43:49.648" starttime="20200521 11:43:49.648"></status>
</kw>
<kw type="for" name="${j} IN RANGE [ 5 ]">
<kw type="foritem" name="${j} = 0">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${j} == 4</arg>
</arguments>
<status status="PASS" endtime="20200521 11:43:49.650" starttime="20200521 11:43:49.649"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:43:49.662" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/201</msg>
<msg timestamp="20200521 11:43:50.175" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/201: 0.00052 seconds.</msg>
<msg timestamp="20200521 11:43:50.175" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:43:50 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:43:50.175" starttime="20200521 11:43:49.650"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${resp.status} == ${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:43:50.177" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20200521 11:43:50.177" starttime="20200521 11:43:50.176"></status>
</kw>
<status status="PASS" endtime="20200521 11:43:50.177" starttime="20200521 11:43:49.649"></status>
</kw>
<status status="PASS" endtime="20200521 11:43:50.177" starttime="20200521 11:43:49.649"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:43:50.178" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:43:50.178" starttime="20200521 11:43:50.177"></status>
</kw>
<status status="PASS" endtime="20200521 11:43:50.178" starttime="20200521 11:43:49.647"></status>
</kw>
<status status="PASS" endtime="20200521 11:43:50.178" starttime="20200521 11:43:29.555"></status>
</kw>
<kw type="foritem" name="${id} = 251">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200521 11:43:57.179" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200521 11:43:57.179" starttime="20200521 11:43:50.179"></status>
</kw>
<kw name="Test Active ONU">
<tags>
<tag>Test Active ONU</tag>
</tags>
<doc>Test Active ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${SPECIFIC_ID}</arg>
<arg>${SPECIFIC_NUM}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onu_id": ${ONU_ID},</arg>
<arg>"vendor_id": "${VEN_ID}",</arg>
<arg>"vendor_specific":"${VEN_SPEC}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 11:43:57.181" level="INFO">${JSTRING} = { "onu_id": 251, "vendor_id": "ISKT", "vendor_specific":"71E83268" }</msg>
<status status="PASS" endtime="20200521 11:43:57.181" starttime="20200521 11:43:57.181"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### active onu ${JSTRING} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:43:57.182" starttime="20200521 11:43:57.182"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 11:43:57.188" level="INFO">${payload} = {u'onu_id': 251, u'vendor_id': u'ISKT', u'vendor_specific': u'71E83268'}</msg>
<status status="PASS" endtime="20200521 11:43:57.188" starttime="20200521 11:43:57.183"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:43:57.198" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 11:43:57.211" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000456 seconds.</msg>
<msg timestamp="20200521 11:43:57.212" level="INFO">${resp} = 201
date Thu, 21 May 2020 03:43:57 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:43:57.212" starttime="20200521 11:43:57.188"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200521 11:43:57.214" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:43:57.214" starttime="20200521 11:43:57.213"></status>
</kw>
<status status="PASS" endtime="20200521 11:43:57.214" starttime="20200521 11:43:57.212"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6s</arg>
</arguments>
<msg timestamp="20200521 11:44:03.214" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20200521 11:44:03.215" starttime="20200521 11:43:57.214"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:03.224" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 11:44:03.234" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000511 seconds.</msg>
<msg timestamp="20200521 11:44:03.234" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:03 GMT
connection Keep-Alive
content-type application/json
content-length 407


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200521 11:44:03.234" starttime="20200521 11:44:03.215"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### onu res ${resp} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:44:03.235" starttime="20200521 11:44:03.235"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200521 11:44:03.237" level="INFO">Length is 1</msg>
<msg timestamp="20200521 11:44:03.237" level="INFO">${item_count} = 1</msg>
<status status="PASS" endtime="20200521 11:44:03.237" starttime="20200521 11:44:03.236"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Onu num ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:44:03.238" starttime="20200521 11:44:03.237"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200521 11:44:03.239" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:44:03.239" starttime="20200521 11:44:03.239"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:03.239" starttime="20200521 11:44:03.238"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:03.239" starttime="20200521 11:43:57.180"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200521 11:44:10.240" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200521 11:44:10.240" starttime="20200521 11:44:03.240"></status>
</kw>
<kw name="Test DeActive ONU">
<tags>
<tag>Test DeActive ONU</tag>
</tags>
<doc>Test DeActive ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Deactive onu ${ONU_ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:44:10.242" starttime="20200521 11:44:10.241"></status>
</kw>
<kw type="for" name="${j} IN RANGE [ 5 ]">
<kw type="foritem" name="${j} = 0">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${j} == 4</arg>
</arguments>
<status status="PASS" endtime="20200521 11:44:10.243" starttime="20200521 11:44:10.243"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:10.253" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/251</msg>
<msg timestamp="20200521 11:44:10.766" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/251: 0.000515 seconds.</msg>
<msg timestamp="20200521 11:44:10.766" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:11 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:44:10.766" starttime="20200521 11:44:10.243"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${resp.status} == ${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:44:10.767" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20200521 11:44:10.768" starttime="20200521 11:44:10.767"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:10.768" starttime="20200521 11:44:10.242"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:10.768" starttime="20200521 11:44:10.242"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:44:10.769" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:44:10.769" starttime="20200521 11:44:10.768"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:10.769" starttime="20200521 11:44:10.241"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:10.769" starttime="20200521 11:43:50.178"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:10.769" starttime="20200521 11:42:07.154"></status>
</kw>
<kw name="Test Active ONU">
<tags>
<tag>Test Active ONU</tag>
</tags>
<doc>Test Active ONU function</doc>
<arguments>
<arg>256</arg>
<arg>${SPECIFIC_ID}</arg>
<arg>${SPECIFIC_NUM}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>NOTONUID_IN_RANGE</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onu_id": ${ONU_ID},</arg>
<arg>"vendor_id": "${VEN_ID}",</arg>
<arg>"vendor_specific":"${VEN_SPEC}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 11:44:10.771" level="INFO">${JSTRING} = { "onu_id": 256, "vendor_id": "ISKT", "vendor_specific":"71E83268" }</msg>
<status status="PASS" endtime="20200521 11:44:10.771" starttime="20200521 11:44:10.770"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### active onu ${JSTRING} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:44:10.772" starttime="20200521 11:44:10.771"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 11:44:10.777" level="INFO">${payload} = {u'onu_id': 256, u'vendor_id': u'ISKT', u'vendor_specific': u'71E83268'}</msg>
<status status="PASS" endtime="20200521 11:44:10.777" starttime="20200521 11:44:10.772"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:10.787" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 11:44:10.797" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000533 seconds.</msg>
<msg timestamp="20200521 11:44:10.798" level="INFO">${resp} = 500
date Thu, 21 May 2020 03:44:11 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:44:10.798" starttime="20200521 11:44:10.778"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200521 11:44:10.800" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:44:10.800" starttime="20200521 11:44:10.799"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:10.800" starttime="20200521 11:44:10.798"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6s</arg>
</arguments>
<msg timestamp="20200521 11:44:16.801" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20200521 11:44:16.801" starttime="20200521 11:44:10.800"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:16.811" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 11:44:16.822" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.00058 seconds.</msg>
<msg timestamp="20200521 11:44:16.823" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:17 GMT
connection Keep-Alive
content-type application/json
content-length 344


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200521 11:44:16.823" starttime="20200521 11:44:16.801"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### onu res ${resp} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:44:16.824" starttime="20200521 11:44:16.823"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200521 11:44:16.825" level="INFO">Length is 0</msg>
<msg timestamp="20200521 11:44:16.825" level="INFO">${item_count} = 0</msg>
<status status="PASS" endtime="20200521 11:44:16.825" starttime="20200521 11:44:16.824"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Onu num ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:44:16.826" starttime="20200521 11:44:16.826"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200521 11:44:16.828" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:44:16.828" starttime="20200521 11:44:16.828"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:16.829" starttime="20200521 11:44:16.827"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:16.829" starttime="20200521 11:44:10.769"></status>
</kw>
<kw name="Test Port Present">
<tags>
<tag>Test pon_status present</tag>
</tags>
<doc>Test Pon port present function</doc>
<arguments>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:16.840" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200521 11:44:16.856" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000639 seconds.</msg>
<msg timestamp="20200521 11:44:16.857" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:17 GMT
connection Keep-Alive
content-type application/json
content-length 2412


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:44:16.857" starttime="20200521 11:44:16.830"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:44:16.858" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:44:16.858" starttime="20200521 11:44:16.858"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 11:44:16.860" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200521 11:44:16.860" starttime="20200521 11:44:16.859"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 11:44:16.861" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 11:44:16.861" starttime="20200521 11:44:16.860"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:44:16.862" starttime="20200521 11:44:16.861"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:44:16.863" starttime="20200521 11:44:16.862"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${PORT_ENABLE}'</arg>
<arg>'Enabled'</arg>
</arguments>
<status status="PASS" endtime="20200521 11:44:16.864" starttime="20200521 11:44:16.863"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:16.864" starttime="20200521 11:44:16.829"></status>
</kw>
<kw name="Enable Port">
<tags>
<tag>Enable Port</tag>
</tags>
<doc>Enable port function</doc>
<arguments>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Enable Port ${ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:44:16.865" starttime="20200521 11:44:16.865"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($ADM_UP)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 11:44:16.872" level="INFO">${payload} = {u'AdministrativeState': u'Up'}</msg>
<status status="PASS" endtime="20200521 11:44:16.872" starttime="20200521 11:44:16.866"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:16.883" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200521 11:44:16.900" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000604 seconds.</msg>
<msg timestamp="20200521 11:44:16.901" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:17 GMT
connection Keep-Alive
content-type application/json
content-length 2412


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:44:16.901" starttime="20200521 11:44:16.872"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:44:16.902" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:44:16.902" starttime="20200521 11:44:16.901"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:16.912" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200521 11:44:16.929" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000701 seconds.</msg>
<msg timestamp="20200521 11:44:16.930" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:17 GMT
connection Keep-Alive
content-type application/json
content-length 2412


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:44:16.930" starttime="20200521 11:44:16.902"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:44:16.931" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:44:16.931" starttime="20200521 11:44:16.930"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['AdministrativeState']}</arg>
</arguments>
<assign>
<var>${ADM_STAT}</var>
</assign>
<msg timestamp="20200521 11:44:16.932" level="INFO">${ADM_STAT} = Up</msg>
<status status="PASS" endtime="20200521 11:44:16.932" starttime="20200521 11:44:16.931"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${ADM_STAT}'</arg>
<arg>'Up'</arg>
</arguments>
<status status="PASS" endtime="20200521 11:44:16.959" starttime="20200521 11:44:16.958"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:16.959" starttime="20200521 11:44:16.864"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200521 11:44:19.960" level="INFO">Slept 3 seconds</msg>
<status status="PASS" endtime="20200521 11:44:19.960" starttime="20200521 11:44:16.959"></status>
</kw>
<kw name="Test Active ONU">
<tags>
<tag>Test Active ONU</tag>
</tags>
<doc>Test Active ONU function</doc>
<arguments>
<arg>1</arg>
<arg>${SPECIFIC_ID}</arg>
<arg>${SPECIFIC_NUM}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onu_id": ${ONU_ID},</arg>
<arg>"vendor_id": "${VEN_ID}",</arg>
<arg>"vendor_specific":"${VEN_SPEC}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 11:44:19.962" level="INFO">${JSTRING} = { "onu_id": 1, "vendor_id": "ISKT", "vendor_specific":"71E83268" }</msg>
<status status="PASS" endtime="20200521 11:44:19.962" starttime="20200521 11:44:19.962"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### active onu ${JSTRING} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:44:19.963" starttime="20200521 11:44:19.963"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 11:44:19.969" level="INFO">${payload} = {u'onu_id': 1, u'vendor_id': u'ISKT', u'vendor_specific': u'71E83268'}</msg>
<status status="PASS" endtime="20200521 11:44:19.969" starttime="20200521 11:44:19.963"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:19.980" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 11:44:19.992" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000535 seconds.</msg>
<msg timestamp="20200521 11:44:19.993" level="INFO">${resp} = 201
date Thu, 21 May 2020 03:44:20 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:44:19.993" starttime="20200521 11:44:19.970"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200521 11:44:19.995" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:44:19.996" starttime="20200521 11:44:19.995"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:19.996" starttime="20200521 11:44:19.994"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6s</arg>
</arguments>
<msg timestamp="20200521 11:44:25.996" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20200521 11:44:25.997" starttime="20200521 11:44:19.996"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:26.006" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 11:44:26.018" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000541 seconds.</msg>
<msg timestamp="20200521 11:44:26.018" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:26 GMT
connection Keep-Alive
content-type application/json
content-length 405


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200521 11:44:26.019" starttime="20200521 11:44:25.997"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### onu res ${resp} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:44:26.020" starttime="20200521 11:44:26.019"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200521 11:44:26.020" level="INFO">Length is 1</msg>
<msg timestamp="20200521 11:44:26.021" level="INFO">${item_count} = 1</msg>
<status status="PASS" endtime="20200521 11:44:26.021" starttime="20200521 11:44:26.020"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Onu num ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:44:26.022" starttime="20200521 11:44:26.021"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200521 11:44:26.023" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:44:26.023" starttime="20200521 11:44:26.023"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:26.023" starttime="20200521 11:44:26.022"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:26.023" starttime="20200521 11:44:19.960"></status>
</kw>
<kw name="Disable Port">
<tags>
<tag>Enable Port</tag>
</tags>
<doc>Enable port function</doc>
<arguments>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($ADM_DOWN)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 11:44:26.030" level="INFO">${payload} = {u'AdministrativeState': u'Down'}</msg>
<status status="PASS" endtime="20200521 11:44:26.030" starttime="20200521 11:44:26.025"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:26.039" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200521 11:44:26.228" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000655 seconds.</msg>
<msg timestamp="20200521 11:44:26.229" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:26 GMT
connection Keep-Alive
content-type application/json
content-length 2413


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:44:26.229" starttime="20200521 11:44:26.030"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:44:26.230" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:44:26.230" starttime="20200521 11:44:26.230"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:26.240" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200521 11:44:26.260" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000486 seconds.</msg>
<msg timestamp="20200521 11:44:26.261" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:26 GMT
connection Keep-Alive
content-type application/json
content-length 2413


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:44:26.261" starttime="20200521 11:44:26.231"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:44:26.262" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:44:26.262" starttime="20200521 11:44:26.261"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['AdministrativeState']}</arg>
</arguments>
<assign>
<var>${ADM_STAT}</var>
</assign>
<msg timestamp="20200521 11:44:26.263" level="INFO">${ADM_STAT} = Down</msg>
<status status="PASS" endtime="20200521 11:44:26.263" starttime="20200521 11:44:26.262"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${ADM_STAT}'</arg>
<arg>'Down'</arg>
</arguments>
<status status="PASS" endtime="20200521 11:44:26.264" starttime="20200521 11:44:26.263"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:26.264" starttime="20200521 11:44:26.024"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20200521 11:44:28.265" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20200521 11:44:28.265" starttime="20200521 11:44:26.264"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:28.273" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 11:44:28.284" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000501 seconds.</msg>
<msg timestamp="20200521 11:44:28.286" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:28 GMT
connection Keep-Alive
content-type application/json
content-length 344


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200521 11:44:28.286" starttime="20200521 11:44:28.265"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200521 11:44:28.287" level="INFO">Length is 0</msg>
<msg timestamp="20200521 11:44:28.287" level="INFO">${item_count} = 0</msg>
<status status="PASS" endtime="20200521 11:44:28.287" starttime="20200521 11:44:28.286"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200521 11:44:28.288" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:44:28.288" starttime="20200521 11:44:28.287"></status>
</kw>
<kw name="Enable Port">
<tags>
<tag>Enable Port</tag>
</tags>
<doc>Enable port function</doc>
<arguments>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Enable Port ${ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:44:28.290" starttime="20200521 11:44:28.289"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($ADM_UP)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 11:44:28.295" level="INFO">${payload} = {u'AdministrativeState': u'Up'}</msg>
<status status="PASS" endtime="20200521 11:44:28.295" starttime="20200521 11:44:28.290"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:28.305" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200521 11:44:28.525" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.00058 seconds.</msg>
<msg timestamp="20200521 11:44:28.526" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:28 GMT
connection Keep-Alive
content-type application/json
content-length 2411


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:44:28.526" starttime="20200521 11:44:28.296"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:44:28.526" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:44:28.527" starttime="20200521 11:44:28.526"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:28.536" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200521 11:44:28.551" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000517 seconds.</msg>
<msg timestamp="20200521 11:44:28.551" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:28 GMT
connection Keep-Alive
content-type application/json
content-length 2411


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:44:28.551" starttime="20200521 11:44:28.527"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:44:28.552" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:44:28.552" starttime="20200521 11:44:28.552"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['AdministrativeState']}</arg>
</arguments>
<assign>
<var>${ADM_STAT}</var>
</assign>
<msg timestamp="20200521 11:44:28.556" level="INFO">${ADM_STAT} = Up</msg>
<status status="PASS" endtime="20200521 11:44:28.556" starttime="20200521 11:44:28.555"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${ADM_STAT}'</arg>
<arg>'Up'</arg>
</arguments>
<status status="PASS" endtime="20200521 11:44:28.557" starttime="20200521 11:44:28.556"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:28.557" starttime="20200521 11:44:28.288"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200521 11:44:38.561" level="INFO">Slept 10 seconds</msg>
<status status="PASS" endtime="20200521 11:44:38.561" starttime="20200521 11:44:28.557"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:38.573" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 11:44:38.583" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000476 seconds.</msg>
<msg timestamp="20200521 11:44:38.584" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:38 GMT
connection Keep-Alive
content-type application/json
content-length 405


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200521 11:44:38.584" starttime="20200521 11:44:38.562"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200521 11:44:38.585" level="INFO">Length is 1</msg>
<msg timestamp="20200521 11:44:38.585" level="INFO">${item_count} = 1</msg>
<status status="PASS" endtime="20200521 11:44:38.585" starttime="20200521 11:44:38.584"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200521 11:44:38.586" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:44:38.587" starttime="20200521 11:44:38.586"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200521 11:44:43.587" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20200521 11:44:43.588" starttime="20200521 11:44:38.587"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:43.588" starttime="20200521 11:42:07.151"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200521 11:44:43.597" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200521 11:44:43.607" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000455 seconds.</msg>
<msg timestamp="20200521 11:44:43.608" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200521 11:44:43.608" starttime="20200521 11:44:43.589"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:43.608" starttime="20200521 11:44:43.588"></status>
</kw>
<doc>Test ONU Range</doc>
<tags>
<tag>Test ONU Rnage test</tag>
</tags>
<status status="PASS" endtime="20200521 11:44:43.608" critical="yes" starttime="20200521 11:42:07.123"></status>
</test>
<test id="s1-s1-t3" name="Verify Restful API for flow add">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200521 11:44:43.617" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200521 11:44:43.632" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000708 seconds.</msg>
<msg timestamp="20200521 11:44:43.632" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200521 11:44:43.632" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200521 11:44:43.633" starttime="20200521 11:44:43.610"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:43.633" starttime="20200521 11:44:43.610"></status>
</kw>
<kw name="Test US DS Flow Add">
<tags>
<tag>US DS Flow Add/Remove</tag>
</tags>
<doc>Flow Add/Remove</doc>
<kw type="for" name="${flow_id} IN RANGE [ 0 | 2047 | 500 ]">
<kw type="foritem" name="${flow_id} = 0">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 11:44:44.634" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 11:44:44.635" starttime="20200521 11:44:43.634"></status>
</kw>
<kw name="Test Flow Add">
<tags>
<tag>UP/DOWN stream flow add</tag>
</tags>
<doc>Test Flow Add</doc>
<arguments>
<arg>1</arg>
<arg>${flow_id}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PON_ID} - ${1}</arg>
</arguments>
<assign>
<var>${PON_ID}</var>
</assign>
<msg timestamp="20200521 11:44:44.636" level="INFO">${PON_ID} = 0</msg>
<status status="PASS" endtime="20200521 11:44:44.637" starttime="20200521 11:44:44.636"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024,</arg>
<arg>"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":"BCMOLT_ACTION_CMD_ID_ADD_OUTER_TAG",</arg>
<arg>"ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,"EtherType":0,"IpProto":0,"SrcPort":0,</arg>
<arg>"DstPort":0},"ClassVal":[{"OVid":20,"IVid":0,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 11:44:44.637" level="INFO">${JSTRING} = { "onuId":1,"FlowId":0,"PortId":0,"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024, "Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":...</msg>
<status status="PASS" endtime="20200521 11:44:44.638" starttime="20200521 11:44:44.637"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 11:44:44.644" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'single_tag', u'GemportId': 1024, u'FlowId': 0, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 20, u'IPbits': 0, u'IVid': 0, u'O...</msg>
<status status="PASS" endtime="20200521 11:44:44.644" starttime="20200521 11:44:44.638"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:44.656" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200521 11:44:44.671" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000488 seconds.</msg>
<msg timestamp="20200521 11:44:44.672" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:44 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:44:44.672" starttime="20200521 11:44:44.644"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:44:44.675" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:44:44.675" starttime="20200521 11:44:44.675"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:44.675" starttime="20200521 11:44:44.673"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"downstream","PktTagType":"double_tag",</arg>
<arg>"GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOLT_ACTION_ID_O_VID",</arg>
<arg>"ActionCmd":"BCMOLT_ACTION_CMD_ID_REMOVE_OUTER_TAG","ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,</arg>
<arg>"EtherType":0,"IpProto":0,"SrcPort":0,"DstPort":0},</arg>
<arg>"ClassVal":[{"OVid":10,"IVid":20,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0</arg>
<arg>}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 11:44:44.676" level="INFO">${JSTRING} = { "onuId":1,"FlowId":0,"PortId":0,"NniId":0,"FlowType":"downstream","PktTagType":"double_tag", "GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOL...</msg>
<status status="PASS" endtime="20200521 11:44:44.676" starttime="20200521 11:44:44.676"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 11:44:44.683" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'double_tag', u'GemportId': 1024, u'FlowId': 0, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 10, u'IPbits': 0, u'IVid': 20, u'...</msg>
<status status="PASS" endtime="20200521 11:44:44.683" starttime="20200521 11:44:44.677"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:44.697" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200521 11:44:44.728" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000669 seconds.</msg>
<msg timestamp="20200521 11:44:44.729" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:45 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:44:44.731" starttime="20200521 11:44:44.683"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:44:44.733" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:44:44.733" starttime="20200521 11:44:44.732"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:44.733" starttime="20200521 11:44:44.731"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:44.733" starttime="20200521 11:44:44.635"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 11:44:45.734" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 11:44:45.734" starttime="20200521 11:44:44.734"></status>
</kw>
<kw name="Test Flow Del">
<tags>
<tag>UP/DOWN stream flow del</tag>
</tags>
<doc>Test Flow Del</doc>
<arguments>
<arg>${flow_id}</arg>
</arguments>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_upstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:45.746" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/0_upstream</msg>
<msg timestamp="20200521 11:44:45.753" level="INFO">Response Time to /redfish/v1/Olt/Flow/0_upstream: 0.000564 seconds.</msg>
<msg timestamp="20200521 11:44:45.754" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:46 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:44:45.754" starttime="20200521 11:44:45.735"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:44:45.755" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:44:45.755" starttime="20200521 11:44:45.755"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_downstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:45.767" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/0_downstream</msg>
<msg timestamp="20200521 11:44:45.789" level="INFO">Response Time to /redfish/v1/Olt/Flow/0_downstream: 0.000544 seconds.</msg>
<msg timestamp="20200521 11:44:45.790" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:46 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:44:45.790" starttime="20200521 11:44:45.756"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:44:45.791" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:44:45.791" starttime="20200521 11:44:45.790"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:45.791" starttime="20200521 11:44:45.735"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:45.791" starttime="20200521 11:44:43.634"></status>
</kw>
<kw type="foritem" name="${flow_id} = 500">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 11:44:46.792" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 11:44:46.793" starttime="20200521 11:44:45.792"></status>
</kw>
<kw name="Test Flow Add">
<tags>
<tag>UP/DOWN stream flow add</tag>
</tags>
<doc>Test Flow Add</doc>
<arguments>
<arg>1</arg>
<arg>${flow_id}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PON_ID} - ${1}</arg>
</arguments>
<assign>
<var>${PON_ID}</var>
</assign>
<msg timestamp="20200521 11:44:46.794" level="INFO">${PON_ID} = 0</msg>
<status status="PASS" endtime="20200521 11:44:46.794" starttime="20200521 11:44:46.794"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024,</arg>
<arg>"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":"BCMOLT_ACTION_CMD_ID_ADD_OUTER_TAG",</arg>
<arg>"ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,"EtherType":0,"IpProto":0,"SrcPort":0,</arg>
<arg>"DstPort":0},"ClassVal":[{"OVid":20,"IVid":0,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 11:44:46.795" level="INFO">${JSTRING} = { "onuId":1,"FlowId":500,"PortId":0,"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024, "Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd...</msg>
<status status="PASS" endtime="20200521 11:44:46.795" starttime="20200521 11:44:46.795"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 11:44:46.802" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'single_tag', u'GemportId': 1024, u'FlowId': 500, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 20, u'IPbits': 0, u'IVid': 0, u...</msg>
<status status="PASS" endtime="20200521 11:44:46.802" starttime="20200521 11:44:46.796"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:46.813" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200521 11:44:46.831" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000582000000001 seconds.</msg>
<msg timestamp="20200521 11:44:46.832" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:47 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:44:46.832" starttime="20200521 11:44:46.802"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:44:46.836" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:44:46.836" starttime="20200521 11:44:46.835"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:46.836" starttime="20200521 11:44:46.832"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"downstream","PktTagType":"double_tag",</arg>
<arg>"GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOLT_ACTION_ID_O_VID",</arg>
<arg>"ActionCmd":"BCMOLT_ACTION_CMD_ID_REMOVE_OUTER_TAG","ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,</arg>
<arg>"EtherType":0,"IpProto":0,"SrcPort":0,"DstPort":0},</arg>
<arg>"ClassVal":[{"OVid":10,"IVid":20,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0</arg>
<arg>}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 11:44:46.837" level="INFO">${JSTRING} = { "onuId":1,"FlowId":500,"PortId":0,"NniId":0,"FlowType":"downstream","PktTagType":"double_tag", "GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCM...</msg>
<status status="PASS" endtime="20200521 11:44:46.837" starttime="20200521 11:44:46.836"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 11:44:46.844" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'double_tag', u'GemportId': 1024, u'FlowId': 500, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 10, u'IPbits': 0, u'IVid': 20, ...</msg>
<status status="PASS" endtime="20200521 11:44:46.844" starttime="20200521 11:44:46.837"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:46.856" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200521 11:44:46.874" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000545 seconds.</msg>
<msg timestamp="20200521 11:44:46.874" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:47 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:44:46.875" starttime="20200521 11:44:46.845"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:44:46.876" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:44:46.877" starttime="20200521 11:44:46.876"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:46.877" starttime="20200521 11:44:46.875"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:46.877" starttime="20200521 11:44:46.793"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 11:44:47.878" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 11:44:47.878" starttime="20200521 11:44:46.877"></status>
</kw>
<kw name="Test Flow Del">
<tags>
<tag>UP/DOWN stream flow del</tag>
</tags>
<doc>Test Flow Del</doc>
<arguments>
<arg>${flow_id}</arg>
</arguments>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_upstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:47.890" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/500_upstream</msg>
<msg timestamp="20200521 11:44:47.902" level="INFO">Response Time to /redfish/v1/Olt/Flow/500_upstream: 0.000497 seconds.</msg>
<msg timestamp="20200521 11:44:47.902" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:48 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:44:47.902" starttime="20200521 11:44:47.879"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:44:47.903" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:44:47.904" starttime="20200521 11:44:47.903"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_downstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:47.915" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/500_downstream</msg>
<msg timestamp="20200521 11:44:47.938" level="INFO">Response Time to /redfish/v1/Olt/Flow/500_downstream: 0.000668 seconds.</msg>
<msg timestamp="20200521 11:44:47.938" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:48 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:44:47.939" starttime="20200521 11:44:47.904"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:44:47.940" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:44:47.940" starttime="20200521 11:44:47.939"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:47.940" starttime="20200521 11:44:47.878"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:47.940" starttime="20200521 11:44:45.791"></status>
</kw>
<kw type="foritem" name="${flow_id} = 1000">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 11:44:48.941" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 11:44:48.941" starttime="20200521 11:44:47.940"></status>
</kw>
<kw name="Test Flow Add">
<tags>
<tag>UP/DOWN stream flow add</tag>
</tags>
<doc>Test Flow Add</doc>
<arguments>
<arg>1</arg>
<arg>${flow_id}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PON_ID} - ${1}</arg>
</arguments>
<assign>
<var>${PON_ID}</var>
</assign>
<msg timestamp="20200521 11:44:48.943" level="INFO">${PON_ID} = 0</msg>
<status status="PASS" endtime="20200521 11:44:48.943" starttime="20200521 11:44:48.943"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024,</arg>
<arg>"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":"BCMOLT_ACTION_CMD_ID_ADD_OUTER_TAG",</arg>
<arg>"ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,"EtherType":0,"IpProto":0,"SrcPort":0,</arg>
<arg>"DstPort":0},"ClassVal":[{"OVid":20,"IVid":0,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 11:44:48.945" level="INFO">${JSTRING} = { "onuId":1,"FlowId":1000,"PortId":0,"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024, "Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCm...</msg>
<status status="PASS" endtime="20200521 11:44:48.945" starttime="20200521 11:44:48.944"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 11:44:48.952" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'single_tag', u'GemportId': 1024, u'FlowId': 1000, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 20, u'IPbits': 0, u'IVid': 0, ...</msg>
<status status="PASS" endtime="20200521 11:44:48.952" starttime="20200521 11:44:48.945"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:48.963" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200521 11:44:48.983" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.0005 seconds.</msg>
<msg timestamp="20200521 11:44:48.983" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:49 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:44:48.983" starttime="20200521 11:44:48.952"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:44:48.985" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:44:48.986" starttime="20200521 11:44:48.985"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:48.986" starttime="20200521 11:44:48.984"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"downstream","PktTagType":"double_tag",</arg>
<arg>"GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOLT_ACTION_ID_O_VID",</arg>
<arg>"ActionCmd":"BCMOLT_ACTION_CMD_ID_REMOVE_OUTER_TAG","ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,</arg>
<arg>"EtherType":0,"IpProto":0,"SrcPort":0,"DstPort":0},</arg>
<arg>"ClassVal":[{"OVid":10,"IVid":20,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0</arg>
<arg>}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 11:44:48.987" level="INFO">${JSTRING} = { "onuId":1,"FlowId":1000,"PortId":0,"NniId":0,"FlowType":"downstream","PktTagType":"double_tag", "GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BC...</msg>
<status status="PASS" endtime="20200521 11:44:48.987" starttime="20200521 11:44:48.986"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 11:44:48.993" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'double_tag', u'GemportId': 1024, u'FlowId': 1000, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 10, u'IPbits': 0, u'IVid': 20,...</msg>
<status status="PASS" endtime="20200521 11:44:48.993" starttime="20200521 11:44:48.987"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:49.003" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200521 11:44:49.015" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000551 seconds.</msg>
<msg timestamp="20200521 11:44:49.016" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:49 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:44:49.016" starttime="20200521 11:44:48.993"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:44:49.018" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:44:49.018" starttime="20200521 11:44:49.018"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:49.018" starttime="20200521 11:44:49.017"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:49.018" starttime="20200521 11:44:48.942"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 11:44:50.019" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 11:44:50.019" starttime="20200521 11:44:49.019"></status>
</kw>
<kw name="Test Flow Del">
<tags>
<tag>UP/DOWN stream flow del</tag>
</tags>
<doc>Test Flow Del</doc>
<arguments>
<arg>${flow_id}</arg>
</arguments>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_upstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:50.030" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/1000_upstream</msg>
<msg timestamp="20200521 11:44:50.042" level="INFO">Response Time to /redfish/v1/Olt/Flow/1000_upstream: 0.000500000000001 seconds.</msg>
<msg timestamp="20200521 11:44:50.043" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:50 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:44:50.043" starttime="20200521 11:44:50.020"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:44:50.044" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:44:50.045" starttime="20200521 11:44:50.044"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_downstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:50.055" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/1000_downstream</msg>
<msg timestamp="20200521 11:44:50.080" level="INFO">Response Time to /redfish/v1/Olt/Flow/1000_downstream: 0.000522 seconds.</msg>
<msg timestamp="20200521 11:44:50.080" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:50 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:44:50.080" starttime="20200521 11:44:50.045"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:44:50.081" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:44:50.082" starttime="20200521 11:44:50.081"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:50.082" starttime="20200521 11:44:50.020"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:50.082" starttime="20200521 11:44:47.940"></status>
</kw>
<kw type="foritem" name="${flow_id} = 1500">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 11:44:51.083" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 11:44:51.083" starttime="20200521 11:44:50.082"></status>
</kw>
<kw name="Test Flow Add">
<tags>
<tag>UP/DOWN stream flow add</tag>
</tags>
<doc>Test Flow Add</doc>
<arguments>
<arg>1</arg>
<arg>${flow_id}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PON_ID} - ${1}</arg>
</arguments>
<assign>
<var>${PON_ID}</var>
</assign>
<msg timestamp="20200521 11:44:51.085" level="INFO">${PON_ID} = 0</msg>
<status status="PASS" endtime="20200521 11:44:51.085" starttime="20200521 11:44:51.084"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024,</arg>
<arg>"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":"BCMOLT_ACTION_CMD_ID_ADD_OUTER_TAG",</arg>
<arg>"ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,"EtherType":0,"IpProto":0,"SrcPort":0,</arg>
<arg>"DstPort":0},"ClassVal":[{"OVid":20,"IVid":0,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 11:44:51.086" level="INFO">${JSTRING} = { "onuId":1,"FlowId":1500,"PortId":0,"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024, "Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCm...</msg>
<status status="PASS" endtime="20200521 11:44:51.086" starttime="20200521 11:44:51.085"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 11:44:51.092" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'single_tag', u'GemportId': 1024, u'FlowId': 1500, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 20, u'IPbits': 0, u'IVid': 0, ...</msg>
<status status="PASS" endtime="20200521 11:44:51.092" starttime="20200521 11:44:51.086"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:51.103" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200521 11:44:51.121" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000506 seconds.</msg>
<msg timestamp="20200521 11:44:51.122" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:51 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:44:51.122" starttime="20200521 11:44:51.093"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:44:51.124" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:44:51.124" starttime="20200521 11:44:51.123"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:51.124" starttime="20200521 11:44:51.122"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"downstream","PktTagType":"double_tag",</arg>
<arg>"GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOLT_ACTION_ID_O_VID",</arg>
<arg>"ActionCmd":"BCMOLT_ACTION_CMD_ID_REMOVE_OUTER_TAG","ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,</arg>
<arg>"EtherType":0,"IpProto":0,"SrcPort":0,"DstPort":0},</arg>
<arg>"ClassVal":[{"OVid":10,"IVid":20,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0</arg>
<arg>}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 11:44:51.127" level="INFO">${JSTRING} = { "onuId":1,"FlowId":1500,"PortId":0,"NniId":0,"FlowType":"downstream","PktTagType":"double_tag", "GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BC...</msg>
<status status="PASS" endtime="20200521 11:44:51.128" starttime="20200521 11:44:51.124"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 11:44:51.134" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'double_tag', u'GemportId': 1024, u'FlowId': 1500, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 10, u'IPbits': 0, u'IVid': 20,...</msg>
<status status="PASS" endtime="20200521 11:44:51.134" starttime="20200521 11:44:51.128"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:51.145" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200521 11:44:51.159" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000496 seconds.</msg>
<msg timestamp="20200521 11:44:51.160" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:51 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:44:51.160" starttime="20200521 11:44:51.134"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:44:51.162" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:44:51.162" starttime="20200521 11:44:51.161"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:51.162" starttime="20200521 11:44:51.160"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:51.162" starttime="20200521 11:44:51.083"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 11:44:52.163" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 11:44:52.163" starttime="20200521 11:44:51.162"></status>
</kw>
<kw name="Test Flow Del">
<tags>
<tag>UP/DOWN stream flow del</tag>
</tags>
<doc>Test Flow Del</doc>
<arguments>
<arg>${flow_id}</arg>
</arguments>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_upstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:52.174" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/1500_upstream</msg>
<msg timestamp="20200521 11:44:52.184" level="INFO">Response Time to /redfish/v1/Olt/Flow/1500_upstream: 0.000492 seconds.</msg>
<msg timestamp="20200521 11:44:52.185" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:52 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:44:52.185" starttime="20200521 11:44:52.164"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:44:52.186" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:44:52.186" starttime="20200521 11:44:52.185"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_downstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:52.196" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/1500_downstream</msg>
<msg timestamp="20200521 11:44:52.215" level="INFO">Response Time to /redfish/v1/Olt/Flow/1500_downstream: 0.000497999999999 seconds.</msg>
<msg timestamp="20200521 11:44:52.216" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:52 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:44:52.216" starttime="20200521 11:44:52.186"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:44:52.217" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:44:52.217" starttime="20200521 11:44:52.216"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:52.217" starttime="20200521 11:44:52.163"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:52.217" starttime="20200521 11:44:50.082"></status>
</kw>
<kw type="foritem" name="${flow_id} = 2000">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 11:44:53.218" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 11:44:53.218" starttime="20200521 11:44:52.218"></status>
</kw>
<kw name="Test Flow Add">
<tags>
<tag>UP/DOWN stream flow add</tag>
</tags>
<doc>Test Flow Add</doc>
<arguments>
<arg>1</arg>
<arg>${flow_id}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PON_ID} - ${1}</arg>
</arguments>
<assign>
<var>${PON_ID}</var>
</assign>
<msg timestamp="20200521 11:44:53.220" level="INFO">${PON_ID} = 0</msg>
<status status="PASS" endtime="20200521 11:44:53.220" starttime="20200521 11:44:53.220"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024,</arg>
<arg>"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":"BCMOLT_ACTION_CMD_ID_ADD_OUTER_TAG",</arg>
<arg>"ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,"EtherType":0,"IpProto":0,"SrcPort":0,</arg>
<arg>"DstPort":0},"ClassVal":[{"OVid":20,"IVid":0,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 11:44:53.221" level="INFO">${JSTRING} = { "onuId":1,"FlowId":2000,"PortId":0,"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024, "Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCm...</msg>
<status status="PASS" endtime="20200521 11:44:53.221" starttime="20200521 11:44:53.220"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 11:44:53.227" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'single_tag', u'GemportId': 1024, u'FlowId': 2000, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 20, u'IPbits': 0, u'IVid': 0, ...</msg>
<status status="PASS" endtime="20200521 11:44:53.227" starttime="20200521 11:44:53.221"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:53.237" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200521 11:44:53.253" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000561 seconds.</msg>
<msg timestamp="20200521 11:44:53.254" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:53 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:44:53.254" starttime="20200521 11:44:53.227"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:44:53.256" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:44:53.256" starttime="20200521 11:44:53.255"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:53.256" starttime="20200521 11:44:53.254"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"downstream","PktTagType":"double_tag",</arg>
<arg>"GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOLT_ACTION_ID_O_VID",</arg>
<arg>"ActionCmd":"BCMOLT_ACTION_CMD_ID_REMOVE_OUTER_TAG","ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,</arg>
<arg>"EtherType":0,"IpProto":0,"SrcPort":0,"DstPort":0},</arg>
<arg>"ClassVal":[{"OVid":10,"IVid":20,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0</arg>
<arg>}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 11:44:53.257" level="INFO">${JSTRING} = { "onuId":1,"FlowId":2000,"PortId":0,"NniId":0,"FlowType":"downstream","PktTagType":"double_tag", "GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BC...</msg>
<status status="PASS" endtime="20200521 11:44:53.257" starttime="20200521 11:44:53.256"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 11:44:53.263" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'double_tag', u'GemportId': 1024, u'FlowId': 2000, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 10, u'IPbits': 0, u'IVid': 20,...</msg>
<status status="PASS" endtime="20200521 11:44:53.263" starttime="20200521 11:44:53.257"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:53.273" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200521 11:44:53.286" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000453 seconds.</msg>
<msg timestamp="20200521 11:44:53.287" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:53 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:44:53.287" starttime="20200521 11:44:53.263"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:44:53.289" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:44:53.289" starttime="20200521 11:44:53.288"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:53.289" starttime="20200521 11:44:53.288"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:53.289" starttime="20200521 11:44:53.219"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 11:44:54.290" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 11:44:54.290" starttime="20200521 11:44:53.290"></status>
</kw>
<kw name="Test Flow Del">
<tags>
<tag>UP/DOWN stream flow del</tag>
</tags>
<doc>Test Flow Del</doc>
<arguments>
<arg>${flow_id}</arg>
</arguments>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_upstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:54.300" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/2000_upstream</msg>
<msg timestamp="20200521 11:44:54.311" level="INFO">Response Time to /redfish/v1/Olt/Flow/2000_upstream: 0.000425 seconds.</msg>
<msg timestamp="20200521 11:44:54.311" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:54 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:44:54.311" starttime="20200521 11:44:54.291"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:44:54.313" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:44:54.313" starttime="20200521 11:44:54.312"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_downstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:54.325" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/2000_downstream</msg>
<msg timestamp="20200521 11:44:54.345" level="INFO">Response Time to /redfish/v1/Olt/Flow/2000_downstream: 0.000543 seconds.</msg>
<msg timestamp="20200521 11:44:54.346" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:54 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:44:54.346" starttime="20200521 11:44:54.313"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:44:54.347" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:44:54.347" starttime="20200521 11:44:54.346"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:54.347" starttime="20200521 11:44:54.291"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:54.347" starttime="20200521 11:44:52.217"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:54.347" starttime="20200521 11:44:43.633"></status>
</kw>
<kw name="Test Flow Add">
<tags>
<tag>UP/DOWN stream flow add</tag>
</tags>
<doc>Test Flow Add</doc>
<arguments>
<arg>1</arg>
<arg>2048</arg>
<arg>${PON_PORT_ID}</arg>
<arg>NOTONUID_IN_RANGE</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PON_ID} - ${1}</arg>
</arguments>
<assign>
<var>${PON_ID}</var>
</assign>
<msg timestamp="20200521 11:44:54.349" level="INFO">${PON_ID} = 0</msg>
<status status="PASS" endtime="20200521 11:44:54.349" starttime="20200521 11:44:54.348"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024,</arg>
<arg>"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":"BCMOLT_ACTION_CMD_ID_ADD_OUTER_TAG",</arg>
<arg>"ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,"EtherType":0,"IpProto":0,"SrcPort":0,</arg>
<arg>"DstPort":0},"ClassVal":[{"OVid":20,"IVid":0,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 11:44:54.350" level="INFO">${JSTRING} = { "onuId":1,"FlowId":2048,"PortId":0,"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024, "Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCm...</msg>
<status status="PASS" endtime="20200521 11:44:54.350" starttime="20200521 11:44:54.349"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 11:44:54.358" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'single_tag', u'GemportId': 1024, u'FlowId': 2048, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 20, u'IPbits': 0, u'IVid': 0, ...</msg>
<status status="PASS" endtime="20200521 11:44:54.358" starttime="20200521 11:44:54.350"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:54.368" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200521 11:44:54.378" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000506 seconds.</msg>
<msg timestamp="20200521 11:44:54.379" level="INFO">${resp} = 500
date Thu, 21 May 2020 03:44:54 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:44:54.379" starttime="20200521 11:44:54.358"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:44:54.381" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:44:54.381" starttime="20200521 11:44:54.380"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:54.381" starttime="20200521 11:44:54.380"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"downstream","PktTagType":"double_tag",</arg>
<arg>"GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOLT_ACTION_ID_O_VID",</arg>
<arg>"ActionCmd":"BCMOLT_ACTION_CMD_ID_REMOVE_OUTER_TAG","ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,</arg>
<arg>"EtherType":0,"IpProto":0,"SrcPort":0,"DstPort":0},</arg>
<arg>"ClassVal":[{"OVid":10,"IVid":20,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0</arg>
<arg>}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 11:44:54.382" level="INFO">${JSTRING} = { "onuId":1,"FlowId":2048,"PortId":0,"NniId":0,"FlowType":"downstream","PktTagType":"double_tag", "GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BC...</msg>
<status status="PASS" endtime="20200521 11:44:54.382" starttime="20200521 11:44:54.382"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 11:44:54.388" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'double_tag', u'GemportId': 1024, u'FlowId': 2048, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 10, u'IPbits': 0, u'IVid': 20,...</msg>
<status status="PASS" endtime="20200521 11:44:54.388" starttime="20200521 11:44:54.383"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:54.400" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200521 11:44:54.410" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000544 seconds.</msg>
<msg timestamp="20200521 11:44:54.411" level="INFO">${resp} = 500
date Thu, 21 May 2020 03:44:54 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:44:54.411" starttime="20200521 11:44:54.389"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:44:54.413" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:44:54.413" starttime="20200521 11:44:54.412"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:54.413" starttime="20200521 11:44:54.411"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:54.413" starttime="20200521 11:44:54.348"></status>
</kw>
<kw name="Test Flow Add">
<tags>
<tag>UP/DOWN stream flow add</tag>
</tags>
<doc>Test Flow Add</doc>
<arguments>
<arg>1</arg>
<arg>16</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PON_ID} - ${1}</arg>
</arguments>
<assign>
<var>${PON_ID}</var>
</assign>
<msg timestamp="20200521 11:44:54.415" level="INFO">${PON_ID} = 0</msg>
<status status="PASS" endtime="20200521 11:44:54.415" starttime="20200521 11:44:54.414"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024,</arg>
<arg>"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":"BCMOLT_ACTION_CMD_ID_ADD_OUTER_TAG",</arg>
<arg>"ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,"EtherType":0,"IpProto":0,"SrcPort":0,</arg>
<arg>"DstPort":0},"ClassVal":[{"OVid":20,"IVid":0,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 11:44:54.416" level="INFO">${JSTRING} = { "onuId":1,"FlowId":16,"PortId":0,"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024, "Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd"...</msg>
<status status="PASS" endtime="20200521 11:44:54.416" starttime="20200521 11:44:54.415"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 11:44:54.422" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'single_tag', u'GemportId': 1024, u'FlowId': 16, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 20, u'IPbits': 0, u'IVid': 0, u'...</msg>
<status status="PASS" endtime="20200521 11:44:54.422" starttime="20200521 11:44:54.416"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:54.432" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200521 11:44:54.450" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000507 seconds.</msg>
<msg timestamp="20200521 11:44:54.450" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:54 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:44:54.471" starttime="20200521 11:44:54.422"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:44:54.473" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:44:54.473" starttime="20200521 11:44:54.472"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:54.473" starttime="20200521 11:44:54.471"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"downstream","PktTagType":"double_tag",</arg>
<arg>"GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOLT_ACTION_ID_O_VID",</arg>
<arg>"ActionCmd":"BCMOLT_ACTION_CMD_ID_REMOVE_OUTER_TAG","ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,</arg>
<arg>"EtherType":0,"IpProto":0,"SrcPort":0,"DstPort":0},</arg>
<arg>"ClassVal":[{"OVid":10,"IVid":20,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0</arg>
<arg>}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 11:44:54.474" level="INFO">${JSTRING} = { "onuId":1,"FlowId":16,"PortId":0,"NniId":0,"FlowType":"downstream","PktTagType":"double_tag", "GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMO...</msg>
<status status="PASS" endtime="20200521 11:44:54.474" starttime="20200521 11:44:54.473"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 11:44:54.480" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'double_tag', u'GemportId': 1024, u'FlowId': 16, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 10, u'IPbits': 0, u'IVid': 20, u...</msg>
<status status="PASS" endtime="20200521 11:44:54.480" starttime="20200521 11:44:54.474"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:54.489" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200521 11:44:54.503" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000461 seconds.</msg>
<msg timestamp="20200521 11:44:54.504" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:54 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:44:54.504" starttime="20200521 11:44:54.480"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:44:54.506" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:44:54.506" starttime="20200521 11:44:54.505"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:54.506" starttime="20200521 11:44:54.504"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:54.506" starttime="20200521 11:44:54.413"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:54.506" starttime="20200521 11:44:43.633"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200521 11:44:54.516" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200521 11:44:54.524" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000448 seconds.</msg>
<msg timestamp="20200521 11:44:54.526" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200521 11:44:54.526" starttime="20200521 11:44:54.507"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:54.526" starttime="20200521 11:44:54.507"></status>
</kw>
<doc>Test flow add</doc>
<tags>
<tag>Test Flow add</tag>
</tags>
<status status="PASS" endtime="20200521 11:44:54.526" critical="yes" starttime="20200521 11:44:43.609"></status>
</test>
<test id="s1-s1-t4" name="Verify Restful API for omci send">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200521 11:44:54.534" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200521 11:44:54.572" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.021403 seconds.</msg>
<msg timestamp="20200521 11:44:54.573" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200521 11:44:54.573" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200521 11:44:54.573" starttime="20200521 11:44:54.528"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:54.573" starttime="20200521 11:44:54.527"></status>
</kw>
<kw name="Test omci send">
<tags>
<tag>omci send</tag>
</tags>
<doc>Send omci raw data</doc>
<kw name="Test Send Omci">
<tags>
<tag>Send Omci function</tag>
</tags>
<doc>Send Omci function</doc>
<arguments>
<arg>1</arg>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OMCI_RAW)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload_}</var>
</assign>
<msg timestamp="20200521 11:44:54.581" level="INFO">${payload_} = {u'raw_data': [{u'Omci': u'00B34F0A00020000000000000000000000000000000000000000000000000000000000000000000000000028'}, {u'Omci': u'00B44F0A0002000000000000000000000000000000000000000000000000000000000...</msg>
<status status="PASS" endtime="20200521 11:44:54.581" starttime="20200521 11:44:54.575"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${payload_["raw_data"]</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200521 11:44:54.582" level="INFO">Length is 22</msg>
<msg timestamp="20200521 11:44:54.582" level="INFO">${length} = 22</msg>
<status status="PASS" endtime="20200521 11:44:54.582" starttime="20200521 11:44:54.581"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>====================length ${length} ================</arg>
</arguments>
<status status="PASS" endtime="20200521 11:44:54.583" starttime="20200521 11:44:54.582"></status>
</kw>
<kw type="for" name="${i} IN RANGE [ 0 | 171 ]">
<kw type="foritem" name="${i} = 0">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:44:54.584" starttime="20200521 11:44:54.583"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:44:54.885" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:44:54.885" starttime="20200521 11:44:54.585"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:54.896" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:44:54.908" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000500000000001 seconds.</msg>
<msg timestamp="20200521 11:44:54.908" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:55 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:44:54.908" starttime="20200521 11:44:54.886"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:54.909" starttime="20200521 11:44:54.583"></status>
</kw>
<kw type="foritem" name="${i} = 1">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:44:54.910" starttime="20200521 11:44:54.909"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:44:55.211" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:44:55.211" starttime="20200521 11:44:54.910"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:55.222" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:44:55.232" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000543 seconds.</msg>
<msg timestamp="20200521 11:44:55.233" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:55 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:44:55.233" starttime="20200521 11:44:55.212"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:55.233" starttime="20200521 11:44:54.909"></status>
</kw>
<kw type="foritem" name="${i} = 2">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:44:55.234" starttime="20200521 11:44:55.234"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:44:55.535" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:44:55.535" starttime="20200521 11:44:55.235"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:55.546" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:44:55.557" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000422 seconds.</msg>
<msg timestamp="20200521 11:44:55.557" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:55 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:44:55.557" starttime="20200521 11:44:55.536"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:55.557" starttime="20200521 11:44:55.233"></status>
</kw>
<kw type="foritem" name="${i} = 3">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:44:55.559" starttime="20200521 11:44:55.558"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:44:55.860" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:44:55.860" starttime="20200521 11:44:55.559"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:55.870" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:44:55.881" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000522 seconds.</msg>
<msg timestamp="20200521 11:44:55.881" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:56 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:44:55.882" starttime="20200521 11:44:55.860"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:55.882" starttime="20200521 11:44:55.558"></status>
</kw>
<kw type="foritem" name="${i} = 4">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:44:55.883" starttime="20200521 11:44:55.882"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:44:56.184" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:44:56.184" starttime="20200521 11:44:55.883"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:56.194" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:44:56.204" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000484 seconds.</msg>
<msg timestamp="20200521 11:44:56.205" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:56 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:44:56.205" starttime="20200521 11:44:56.184"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:56.205" starttime="20200521 11:44:55.882"></status>
</kw>
<kw type="foritem" name="${i} = 5">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:44:56.206" starttime="20200521 11:44:56.206"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:44:56.507" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:44:56.507" starttime="20200521 11:44:56.207"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:56.517" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:44:56.527" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000395999999999 seconds.</msg>
<msg timestamp="20200521 11:44:56.528" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:56 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:44:56.528" starttime="20200521 11:44:56.508"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:56.528" starttime="20200521 11:44:56.205"></status>
</kw>
<kw type="foritem" name="${i} = 6">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:44:56.529" starttime="20200521 11:44:56.528"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:44:56.830" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:44:56.830" starttime="20200521 11:44:56.529"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:56.842" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:44:56.852" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00035 seconds.</msg>
<msg timestamp="20200521 11:44:56.852" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:57 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:44:56.852" starttime="20200521 11:44:56.830"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:56.852" starttime="20200521 11:44:56.528"></status>
</kw>
<kw type="foritem" name="${i} = 7">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:44:56.853" starttime="20200521 11:44:56.853"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:44:57.154" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:44:57.154" starttime="20200521 11:44:56.854"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:57.164" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:44:57.174" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000436 seconds.</msg>
<msg timestamp="20200521 11:44:57.174" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:57 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:44:57.174" starttime="20200521 11:44:57.155"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:57.174" starttime="20200521 11:44:56.853"></status>
</kw>
<kw type="foritem" name="${i} = 8">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:44:57.176" starttime="20200521 11:44:57.175"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:44:57.477" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:44:57.477" starttime="20200521 11:44:57.176"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:57.486" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:44:57.496" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00047 seconds.</msg>
<msg timestamp="20200521 11:44:57.497" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:57 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:44:57.497" starttime="20200521 11:44:57.477"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:57.497" starttime="20200521 11:44:57.175"></status>
</kw>
<kw type="foritem" name="${i} = 9">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:44:57.500" starttime="20200521 11:44:57.499"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:44:57.800" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:44:57.801" starttime="20200521 11:44:57.500"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:57.812" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:44:57.822" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000437000000001 seconds.</msg>
<msg timestamp="20200521 11:44:57.822" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:58 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:44:57.822" starttime="20200521 11:44:57.801"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:57.822" starttime="20200521 11:44:57.497"></status>
</kw>
<kw type="foritem" name="${i} = 10">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:44:57.824" starttime="20200521 11:44:57.823"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:44:58.125" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:44:58.125" starttime="20200521 11:44:57.824"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:58.135" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:44:58.142" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000399 seconds.</msg>
<msg timestamp="20200521 11:44:58.143" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:58 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:44:58.143" starttime="20200521 11:44:58.126"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:58.143" starttime="20200521 11:44:57.822"></status>
</kw>
<kw type="foritem" name="${i} = 11">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:44:58.144" starttime="20200521 11:44:58.143"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:44:58.445" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:44:58.445" starttime="20200521 11:44:58.144"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:58.455" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:44:58.465" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000477999999999 seconds.</msg>
<msg timestamp="20200521 11:44:58.466" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:58 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:44:58.466" starttime="20200521 11:44:58.445"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:58.466" starttime="20200521 11:44:58.143"></status>
</kw>
<kw type="foritem" name="${i} = 12">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:44:58.467" starttime="20200521 11:44:58.466"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:44:58.768" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:44:58.768" starttime="20200521 11:44:58.467"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:58.778" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:44:58.788" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000519000000001 seconds.</msg>
<msg timestamp="20200521 11:44:58.789" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:59 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:44:58.789" starttime="20200521 11:44:58.769"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:58.789" starttime="20200521 11:44:58.466"></status>
</kw>
<kw type="foritem" name="${i} = 13">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:44:58.790" starttime="20200521 11:44:58.790"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:44:59.091" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:44:59.091" starttime="20200521 11:44:58.791"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:59.101" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:44:59.111" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000446999999999 seconds.</msg>
<msg timestamp="20200521 11:44:59.111" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:59 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:44:59.111" starttime="20200521 11:44:59.092"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:59.111" starttime="20200521 11:44:58.789"></status>
</kw>
<kw type="foritem" name="${i} = 14">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:44:59.113" starttime="20200521 11:44:59.112"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:44:59.413" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:44:59.414" starttime="20200521 11:44:59.113"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:59.424" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:44:59.434" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000586 seconds.</msg>
<msg timestamp="20200521 11:44:59.435" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:44:59 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:44:59.435" starttime="20200521 11:44:59.414"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:59.435" starttime="20200521 11:44:59.111"></status>
</kw>
<kw type="foritem" name="${i} = 15">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:44:59.436" starttime="20200521 11:44:59.435"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:44:59.737" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:44:59.738" starttime="20200521 11:44:59.437"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:44:59.748" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:44:59.758" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000432 seconds.</msg>
<msg timestamp="20200521 11:44:59.759" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:00 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:44:59.759" starttime="20200521 11:44:59.738"></status>
</kw>
<status status="PASS" endtime="20200521 11:44:59.759" starttime="20200521 11:44:59.435"></status>
</kw>
<kw type="foritem" name="${i} = 16">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:44:59.760" starttime="20200521 11:44:59.759"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:00.061" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:00.061" starttime="20200521 11:44:59.760"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:00.071" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:00.082" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000416 seconds.</msg>
<msg timestamp="20200521 11:45:00.082" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:00 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:00.082" starttime="20200521 11:45:00.062"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:00.082" starttime="20200521 11:44:59.759"></status>
</kw>
<kw type="foritem" name="${i} = 17">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:00.084" starttime="20200521 11:45:00.083"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:00.385" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:00.385" starttime="20200521 11:45:00.084"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:00.395" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:00.405" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000497999999999 seconds.</msg>
<msg timestamp="20200521 11:45:00.406" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:00 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:00.406" starttime="20200521 11:45:00.385"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:00.406" starttime="20200521 11:45:00.083"></status>
</kw>
<kw type="foritem" name="${i} = 18">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:00.408" starttime="20200521 11:45:00.407"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:00.709" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:00.709" starttime="20200521 11:45:00.408"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:00.719" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:00.729" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000496 seconds.</msg>
<msg timestamp="20200521 11:45:00.730" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:01 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:00.730" starttime="20200521 11:45:00.709"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:00.730" starttime="20200521 11:45:00.406"></status>
</kw>
<kw type="foritem" name="${i} = 19">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:00.731" starttime="20200521 11:45:00.730"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:01.032" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:01.032" starttime="20200521 11:45:00.731"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:01.042" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:01.052" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000576 seconds.</msg>
<msg timestamp="20200521 11:45:01.053" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:01 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:01.053" starttime="20200521 11:45:01.033"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:01.053" starttime="20200521 11:45:00.730"></status>
</kw>
<kw type="foritem" name="${i} = 20">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:01.055" starttime="20200521 11:45:01.054"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:01.360" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:01.360" starttime="20200521 11:45:01.055"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:01.370" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:01.381" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000513000000001 seconds.</msg>
<msg timestamp="20200521 11:45:01.381" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:01 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:01.381" starttime="20200521 11:45:01.360"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:01.381" starttime="20200521 11:45:01.053"></status>
</kw>
<kw type="foritem" name="${i} = 21">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:01.382" starttime="20200521 11:45:01.382"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:01.684" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:01.684" starttime="20200521 11:45:01.383"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:01.692" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:01.702" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00055 seconds.</msg>
<msg timestamp="20200521 11:45:01.703" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:01 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:01.703" starttime="20200521 11:45:01.684"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:01.703" starttime="20200521 11:45:01.381"></status>
</kw>
<kw type="foritem" name="${i} = 22">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:01.704" starttime="20200521 11:45:01.704"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:02.005" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:02.006" starttime="20200521 11:45:01.705"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:02.016" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:02.026" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00043 seconds.</msg>
<msg timestamp="20200521 11:45:02.026" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:02 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:02.026" starttime="20200521 11:45:02.006"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:02.027" starttime="20200521 11:45:01.703"></status>
</kw>
<kw type="foritem" name="${i} = 23">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:02.028" starttime="20200521 11:45:02.027"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:02.329" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:02.329" starttime="20200521 11:45:02.028"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:02.339" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:02.350" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000542 seconds.</msg>
<msg timestamp="20200521 11:45:02.350" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:02 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:02.350" starttime="20200521 11:45:02.329"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:02.350" starttime="20200521 11:45:02.027"></status>
</kw>
<kw type="foritem" name="${i} = 24">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:02.352" starttime="20200521 11:45:02.351"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:02.653" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:02.653" starttime="20200521 11:45:02.352"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:02.663" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:02.673" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000495 seconds.</msg>
<msg timestamp="20200521 11:45:02.673" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:02 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:02.674" starttime="20200521 11:45:02.653"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:02.674" starttime="20200521 11:45:02.351"></status>
</kw>
<kw type="foritem" name="${i} = 25">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:02.676" starttime="20200521 11:45:02.674"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:02.977" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:02.977" starttime="20200521 11:45:02.676"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:02.987" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:02.997" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000475 seconds.</msg>
<msg timestamp="20200521 11:45:02.998" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:03 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:02.998" starttime="20200521 11:45:02.978"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:02.998" starttime="20200521 11:45:02.674"></status>
</kw>
<kw type="foritem" name="${i} = 26">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:03.000" starttime="20200521 11:45:02.999"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:03.301" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:03.301" starttime="20200521 11:45:03.000"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:03.311" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:03.321" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000411 seconds.</msg>
<msg timestamp="20200521 11:45:03.321" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:03 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:03.321" starttime="20200521 11:45:03.301"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:03.321" starttime="20200521 11:45:02.998"></status>
</kw>
<kw type="foritem" name="${i} = 27">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:03.323" starttime="20200521 11:45:03.322"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:03.624" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:03.624" starttime="20200521 11:45:03.323"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:03.633" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:03.643" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000481 seconds.</msg>
<msg timestamp="20200521 11:45:03.643" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:03 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:03.644" starttime="20200521 11:45:03.624"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:03.644" starttime="20200521 11:45:03.322"></status>
</kw>
<kw type="foritem" name="${i} = 28">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:03.645" starttime="20200521 11:45:03.644"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:03.946" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:03.947" starttime="20200521 11:45:03.645"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:03.957" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:03.966" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00042 seconds.</msg>
<msg timestamp="20200521 11:45:03.967" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:04 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:03.967" starttime="20200521 11:45:03.947"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:03.967" starttime="20200521 11:45:03.644"></status>
</kw>
<kw type="foritem" name="${i} = 29">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:03.968" starttime="20200521 11:45:03.968"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:04.269" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:04.270" starttime="20200521 11:45:03.969"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:04.282" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:04.293" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000506000000001 seconds.</msg>
<msg timestamp="20200521 11:45:04.293" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:04 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:04.294" starttime="20200521 11:45:04.270"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:04.294" starttime="20200521 11:45:03.967"></status>
</kw>
<kw type="foritem" name="${i} = 30">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:04.295" starttime="20200521 11:45:04.294"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:04.596" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:04.596" starttime="20200521 11:45:04.295"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:04.607" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:04.618" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000656999999999 seconds.</msg>
<msg timestamp="20200521 11:45:04.619" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:04 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:04.619" starttime="20200521 11:45:04.597"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:04.619" starttime="20200521 11:45:04.294"></status>
</kw>
<kw type="foritem" name="${i} = 31">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:04.620" starttime="20200521 11:45:04.620"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:04.922" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:04.922" starttime="20200521 11:45:04.621"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:04.934" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:04.947" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.002292 seconds.</msg>
<msg timestamp="20200521 11:45:04.947" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:05 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:04.947" starttime="20200521 11:45:04.922"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:04.947" starttime="20200521 11:45:04.619"></status>
</kw>
<kw type="foritem" name="${i} = 32">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:04.949" starttime="20200521 11:45:04.948"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:05.252" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:05.252" starttime="20200521 11:45:04.950"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:05.264" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:05.274" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000531000000001 seconds.</msg>
<msg timestamp="20200521 11:45:05.275" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:05 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:05.275" starttime="20200521 11:45:05.253"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:05.275" starttime="20200521 11:45:04.947"></status>
</kw>
<kw type="foritem" name="${i} = 33">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:05.277" starttime="20200521 11:45:05.276"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:05.579" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:05.579" starttime="20200521 11:45:05.278"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:05.591" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:05.601" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000474000000001 seconds.</msg>
<msg timestamp="20200521 11:45:05.602" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:05 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:05.602" starttime="20200521 11:45:05.579"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:05.602" starttime="20200521 11:45:05.275"></status>
</kw>
<kw type="foritem" name="${i} = 34">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:05.603" starttime="20200521 11:45:05.603"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:05.904" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:05.905" starttime="20200521 11:45:05.604"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:05.916" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:05.926" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000568 seconds.</msg>
<msg timestamp="20200521 11:45:05.927" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:06 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:05.927" starttime="20200521 11:45:05.905"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:05.927" starttime="20200521 11:45:05.602"></status>
</kw>
<kw type="foritem" name="${i} = 35">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:05.929" starttime="20200521 11:45:05.928"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:06.230" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:06.230" starttime="20200521 11:45:05.929"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:06.242" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:06.252" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000651 seconds.</msg>
<msg timestamp="20200521 11:45:06.253" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:06 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:06.253" starttime="20200521 11:45:06.230"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:06.253" starttime="20200521 11:45:05.927"></status>
</kw>
<kw type="foritem" name="${i} = 36">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:06.255" starttime="20200521 11:45:06.254"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:06.556" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:06.556" starttime="20200521 11:45:06.255"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:06.568" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:06.579" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000522 seconds.</msg>
<msg timestamp="20200521 11:45:06.579" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:06 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:06.579" starttime="20200521 11:45:06.556"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:06.579" starttime="20200521 11:45:06.253"></status>
</kw>
<kw type="foritem" name="${i} = 37">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:06.581" starttime="20200521 11:45:06.580"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:06.882" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:06.882" starttime="20200521 11:45:06.581"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:06.894" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:06.904" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000592 seconds.</msg>
<msg timestamp="20200521 11:45:06.905" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:07 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:06.905" starttime="20200521 11:45:06.883"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:06.905" starttime="20200521 11:45:06.580"></status>
</kw>
<kw type="foritem" name="${i} = 38">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:06.907" starttime="20200521 11:45:06.906"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:07.208" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:07.208" starttime="20200521 11:45:06.907"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:07.219" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:07.230" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000721 seconds.</msg>
<msg timestamp="20200521 11:45:07.231" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:07 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:07.231" starttime="20200521 11:45:07.208"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:07.231" starttime="20200521 11:45:06.905"></status>
</kw>
<kw type="foritem" name="${i} = 39">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:07.232" starttime="20200521 11:45:07.232"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:07.533" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:07.534" starttime="20200521 11:45:07.233"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:07.545" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:07.559" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000586 seconds.</msg>
<msg timestamp="20200521 11:45:07.560" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:07 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:07.560" starttime="20200521 11:45:07.534"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:07.560" starttime="20200521 11:45:07.231"></status>
</kw>
<kw type="foritem" name="${i} = 40">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:07.561" starttime="20200521 11:45:07.560"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:07.863" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:07.863" starttime="20200521 11:45:07.562"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:07.874" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:07.884" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000504 seconds.</msg>
<msg timestamp="20200521 11:45:07.885" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:08 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:07.885" starttime="20200521 11:45:07.863"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:07.885" starttime="20200521 11:45:07.560"></status>
</kw>
<kw type="foritem" name="${i} = 41">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:07.887" starttime="20200521 11:45:07.886"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:08.188" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:08.188" starttime="20200521 11:45:07.887"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:08.198" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:08.209" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000496 seconds.</msg>
<msg timestamp="20200521 11:45:08.210" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:08 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:08.210" starttime="20200521 11:45:08.188"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:08.210" starttime="20200521 11:45:07.885"></status>
</kw>
<kw type="foritem" name="${i} = 42">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:08.211" starttime="20200521 11:45:08.210"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:08.512" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:08.512" starttime="20200521 11:45:08.212"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:08.523" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:08.533" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000541999999999 seconds.</msg>
<msg timestamp="20200521 11:45:08.534" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:08 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:08.534" starttime="20200521 11:45:08.513"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:08.534" starttime="20200521 11:45:08.210"></status>
</kw>
<kw type="foritem" name="${i} = 43">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:08.535" starttime="20200521 11:45:08.534"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:08.836" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:08.836" starttime="20200521 11:45:08.535"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:08.847" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:08.857" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000446 seconds.</msg>
<msg timestamp="20200521 11:45:08.858" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:09 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:08.858" starttime="20200521 11:45:08.837"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:08.858" starttime="20200521 11:45:08.534"></status>
</kw>
<kw type="foritem" name="${i} = 44">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:08.861" starttime="20200521 11:45:08.858"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:09.162" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:09.162" starttime="20200521 11:45:08.862"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:09.172" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:09.182" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000477 seconds.</msg>
<msg timestamp="20200521 11:45:09.183" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:09 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:09.183" starttime="20200521 11:45:09.163"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:09.183" starttime="20200521 11:45:08.858"></status>
</kw>
<kw type="foritem" name="${i} = 45">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:09.184" starttime="20200521 11:45:09.184"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:09.485" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:09.486" starttime="20200521 11:45:09.185"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:09.496" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:09.506" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000444000000001 seconds.</msg>
<msg timestamp="20200521 11:45:09.506" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:09 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:09.506" starttime="20200521 11:45:09.486"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:09.506" starttime="20200521 11:45:09.183"></status>
</kw>
<kw type="foritem" name="${i} = 46">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:09.508" starttime="20200521 11:45:09.507"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:09.809" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:09.809" starttime="20200521 11:45:09.508"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:09.820" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:09.831" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000474000000001 seconds.</msg>
<msg timestamp="20200521 11:45:09.832" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:10 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:09.832" starttime="20200521 11:45:09.809"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:09.832" starttime="20200521 11:45:09.506"></status>
</kw>
<kw type="foritem" name="${i} = 47">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:09.833" starttime="20200521 11:45:09.832"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:10.134" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:10.134" starttime="20200521 11:45:09.834"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:10.145" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:10.156" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000462 seconds.</msg>
<msg timestamp="20200521 11:45:10.156" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:10 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:10.157" starttime="20200521 11:45:10.135"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:10.157" starttime="20200521 11:45:09.832"></status>
</kw>
<kw type="foritem" name="${i} = 48">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:10.158" starttime="20200521 11:45:10.157"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:10.459" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:10.459" starttime="20200521 11:45:10.158"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:10.470" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:10.481" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000478 seconds.</msg>
<msg timestamp="20200521 11:45:10.481" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:10 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:10.482" starttime="20200521 11:45:10.460"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:10.482" starttime="20200521 11:45:10.157"></status>
</kw>
<kw type="foritem" name="${i} = 49">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:10.483" starttime="20200521 11:45:10.482"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:10.784" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:10.784" starttime="20200521 11:45:10.483"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:10.795" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:10.806" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000481 seconds.</msg>
<msg timestamp="20200521 11:45:10.806" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:11 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:10.806" starttime="20200521 11:45:10.784"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:10.806" starttime="20200521 11:45:10.482"></status>
</kw>
<kw type="foritem" name="${i} = 50">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:10.808" starttime="20200521 11:45:10.807"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:11.109" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:11.109" starttime="20200521 11:45:10.808"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:11.119" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:11.129" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000427 seconds.</msg>
<msg timestamp="20200521 11:45:11.130" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:11 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:11.130" starttime="20200521 11:45:11.109"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:11.130" starttime="20200521 11:45:10.807"></status>
</kw>
<kw type="foritem" name="${i} = 51">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:11.132" starttime="20200521 11:45:11.131"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:11.433" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:11.433" starttime="20200521 11:45:11.132"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:11.442" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:11.453" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000495 seconds.</msg>
<msg timestamp="20200521 11:45:11.453" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:11 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:11.453" starttime="20200521 11:45:11.433"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:11.453" starttime="20200521 11:45:11.130"></status>
</kw>
<kw type="foritem" name="${i} = 52">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:11.455" starttime="20200521 11:45:11.454"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:11.756" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:11.756" starttime="20200521 11:45:11.455"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:11.767" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:11.776" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000415 seconds.</msg>
<msg timestamp="20200521 11:45:11.777" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:12 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:11.777" starttime="20200521 11:45:11.756"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:11.777" starttime="20200521 11:45:11.453"></status>
</kw>
<kw type="foritem" name="${i} = 53">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:11.779" starttime="20200521 11:45:11.778"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:12.079" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:12.080" starttime="20200521 11:45:11.779"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:12.091" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:12.101" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000429 seconds.</msg>
<msg timestamp="20200521 11:45:12.102" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:12 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:12.102" starttime="20200521 11:45:12.080"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:12.102" starttime="20200521 11:45:11.777"></status>
</kw>
<kw type="foritem" name="${i} = 54">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:12.103" starttime="20200521 11:45:12.102"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:12.404" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:12.404" starttime="20200521 11:45:12.103"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:12.414" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:12.424" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000447 seconds.</msg>
<msg timestamp="20200521 11:45:12.425" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:12 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:12.425" starttime="20200521 11:45:12.405"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:12.425" starttime="20200521 11:45:12.102"></status>
</kw>
<kw type="foritem" name="${i} = 55">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:12.426" starttime="20200521 11:45:12.426"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:12.727" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:12.728" starttime="20200521 11:45:12.427"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:12.738" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:12.749" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000436000000001 seconds.</msg>
<msg timestamp="20200521 11:45:12.749" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:13 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:12.749" starttime="20200521 11:45:12.728"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:12.749" starttime="20200521 11:45:12.425"></status>
</kw>
<kw type="foritem" name="${i} = 56">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:12.752" starttime="20200521 11:45:12.750"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:13.053" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:13.054" starttime="20200521 11:45:12.753"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:13.064" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:13.074" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000459999999999 seconds.</msg>
<msg timestamp="20200521 11:45:13.075" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:13 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:13.075" starttime="20200521 11:45:13.054"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:13.075" starttime="20200521 11:45:12.749"></status>
</kw>
<kw type="foritem" name="${i} = 57">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:13.078" starttime="20200521 11:45:13.075"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:13.378" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:13.379" starttime="20200521 11:45:13.078"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:13.389" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:13.399" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000468 seconds.</msg>
<msg timestamp="20200521 11:45:13.400" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:13 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:13.400" starttime="20200521 11:45:13.379"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:13.400" starttime="20200521 11:45:13.075"></status>
</kw>
<kw type="foritem" name="${i} = 58">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:13.401" starttime="20200521 11:45:13.400"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:13.702" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:13.702" starttime="20200521 11:45:13.402"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:13.713" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:13.723" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000452 seconds.</msg>
<msg timestamp="20200521 11:45:13.724" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:14 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:13.724" starttime="20200521 11:45:13.703"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:13.724" starttime="20200521 11:45:13.400"></status>
</kw>
<kw type="foritem" name="${i} = 59">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:13.725" starttime="20200521 11:45:13.725"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:14.026" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:14.026" starttime="20200521 11:45:13.726"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:14.036" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:14.046" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000558 seconds.</msg>
<msg timestamp="20200521 11:45:14.046" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:14 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:14.046" starttime="20200521 11:45:14.027"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:14.047" starttime="20200521 11:45:13.724"></status>
</kw>
<kw type="foritem" name="${i} = 60">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:14.048" starttime="20200521 11:45:14.047"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:14.349" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:14.349" starttime="20200521 11:45:14.048"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:14.359" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:14.369" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000319999999999 seconds.</msg>
<msg timestamp="20200521 11:45:14.369" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:14 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:14.369" starttime="20200521 11:45:14.349"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:14.369" starttime="20200521 11:45:14.047"></status>
</kw>
<kw type="foritem" name="${i} = 61">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:14.370" starttime="20200521 11:45:14.370"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:14.671" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:14.671" starttime="20200521 11:45:14.371"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:14.682" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:14.692" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000431 seconds.</msg>
<msg timestamp="20200521 11:45:14.693" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:14 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:14.693" starttime="20200521 11:45:14.672"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:14.693" starttime="20200521 11:45:14.370"></status>
</kw>
<kw type="foritem" name="${i} = 62">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:14.694" starttime="20200521 11:45:14.694"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:14.995" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:14.995" starttime="20200521 11:45:14.695"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:15.006" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:15.016" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000493000000001 seconds.</msg>
<msg timestamp="20200521 11:45:15.017" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:15 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:15.017" starttime="20200521 11:45:14.996"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:15.017" starttime="20200521 11:45:14.693"></status>
</kw>
<kw type="foritem" name="${i} = 63">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:15.018" starttime="20200521 11:45:15.017"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:15.319" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:15.319" starttime="20200521 11:45:15.019"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:15.330" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:15.338" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000694999999999 seconds.</msg>
<msg timestamp="20200521 11:45:15.339" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:15 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:15.339" starttime="20200521 11:45:15.320"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:15.339" starttime="20200521 11:45:15.017"></status>
</kw>
<kw type="foritem" name="${i} = 64">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:15.340" starttime="20200521 11:45:15.339"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:15.641" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:15.641" starttime="20200521 11:45:15.340"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:15.651" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:15.661" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000609 seconds.</msg>
<msg timestamp="20200521 11:45:15.662" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:15 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:15.662" starttime="20200521 11:45:15.642"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:15.662" starttime="20200521 11:45:15.339"></status>
</kw>
<kw type="foritem" name="${i} = 65">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:15.663" starttime="20200521 11:45:15.662"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:15.964" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:15.964" starttime="20200521 11:45:15.664"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:15.972" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:15.982" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000452 seconds.</msg>
<msg timestamp="20200521 11:45:15.982" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:16 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:15.983" starttime="20200521 11:45:15.964"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:15.983" starttime="20200521 11:45:15.662"></status>
</kw>
<kw type="foritem" name="${i} = 66">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:15.984" starttime="20200521 11:45:15.983"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:16.285" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:16.285" starttime="20200521 11:45:15.985"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:16.296" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:16.306" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000389 seconds.</msg>
<msg timestamp="20200521 11:45:16.307" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:16 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:16.307" starttime="20200521 11:45:16.286"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:16.307" starttime="20200521 11:45:15.983"></status>
</kw>
<kw type="foritem" name="${i} = 67">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:16.308" starttime="20200521 11:45:16.307"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:16.612" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:16.612" starttime="20200521 11:45:16.308"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:16.622" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:16.631" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000398 seconds.</msg>
<msg timestamp="20200521 11:45:16.632" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:16 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:16.632" starttime="20200521 11:45:16.612"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:16.632" starttime="20200521 11:45:16.307"></status>
</kw>
<kw type="foritem" name="${i} = 68">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:16.633" starttime="20200521 11:45:16.632"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:16.934" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:16.934" starttime="20200521 11:45:16.634"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:16.945" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:16.954" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000564 seconds.</msg>
<msg timestamp="20200521 11:45:16.955" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:17 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:16.955" starttime="20200521 11:45:16.935"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:16.955" starttime="20200521 11:45:16.632"></status>
</kw>
<kw type="foritem" name="${i} = 69">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:16.956" starttime="20200521 11:45:16.956"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:17.257" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:17.257" starttime="20200521 11:45:16.957"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:17.267" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:17.277" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000435 seconds.</msg>
<msg timestamp="20200521 11:45:17.278" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:17 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:17.278" starttime="20200521 11:45:17.258"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:17.278" starttime="20200521 11:45:16.955"></status>
</kw>
<kw type="foritem" name="${i} = 70">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:17.280" starttime="20200521 11:45:17.279"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:17.581" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:17.582" starttime="20200521 11:45:17.281"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:17.591" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:17.601" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000407 seconds.</msg>
<msg timestamp="20200521 11:45:17.602" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:17 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:17.602" starttime="20200521 11:45:17.582"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:17.602" starttime="20200521 11:45:17.278"></status>
</kw>
<kw type="foritem" name="${i} = 71">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:17.603" starttime="20200521 11:45:17.603"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:17.904" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:17.904" starttime="20200521 11:45:17.604"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:17.915" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:17.926" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000442 seconds.</msg>
<msg timestamp="20200521 11:45:17.927" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:18 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:17.927" starttime="20200521 11:45:17.905"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:17.927" starttime="20200521 11:45:17.602"></status>
</kw>
<kw type="foritem" name="${i} = 72">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:17.928" starttime="20200521 11:45:17.927"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:18.229" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:18.230" starttime="20200521 11:45:17.929"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:18.240" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:18.249" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000416 seconds.</msg>
<msg timestamp="20200521 11:45:18.250" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:18 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:18.250" starttime="20200521 11:45:18.230"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:18.250" starttime="20200521 11:45:17.927"></status>
</kw>
<kw type="foritem" name="${i} = 73">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:18.251" starttime="20200521 11:45:18.250"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:18.552" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:18.553" starttime="20200521 11:45:18.252"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:18.563" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:18.573" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000416 seconds.</msg>
<msg timestamp="20200521 11:45:18.574" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:18 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:18.574" starttime="20200521 11:45:18.553"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:18.574" starttime="20200521 11:45:18.250"></status>
</kw>
<kw type="foritem" name="${i} = 74">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:18.575" starttime="20200521 11:45:18.574"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:18.876" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:18.876" starttime="20200521 11:45:18.576"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:18.888" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:18.898" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000481000000001 seconds.</msg>
<msg timestamp="20200521 11:45:18.898" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:19 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:18.898" starttime="20200521 11:45:18.877"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:18.898" starttime="20200521 11:45:18.574"></status>
</kw>
<kw type="foritem" name="${i} = 75">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:18.900" starttime="20200521 11:45:18.899"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:19.200" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:19.201" starttime="20200521 11:45:18.900"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:19.210" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:19.220" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000426 seconds.</msg>
<msg timestamp="20200521 11:45:19.220" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:19 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:19.220" starttime="20200521 11:45:19.201"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:19.220" starttime="20200521 11:45:18.898"></status>
</kw>
<kw type="foritem" name="${i} = 76">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:19.222" starttime="20200521 11:45:19.221"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:19.532" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:19.532" starttime="20200521 11:45:19.222"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:19.542" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:19.555" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000585 seconds.</msg>
<msg timestamp="20200521 11:45:19.556" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:19 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:19.556" starttime="20200521 11:45:19.533"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:19.556" starttime="20200521 11:45:19.220"></status>
</kw>
<kw type="foritem" name="${i} = 77">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:19.557" starttime="20200521 11:45:19.556"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:19.862" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:19.862" starttime="20200521 11:45:19.558"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:19.874" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:19.891" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000595 seconds.</msg>
<msg timestamp="20200521 11:45:19.892" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:20 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:19.892" starttime="20200521 11:45:19.863"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:19.892" starttime="20200521 11:45:19.556"></status>
</kw>
<kw type="foritem" name="${i} = 78">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:19.894" starttime="20200521 11:45:19.893"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:20.195" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:20.195" starttime="20200521 11:45:19.894"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:20.205" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:20.216" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000406 seconds.</msg>
<msg timestamp="20200521 11:45:20.217" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:20 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:20.217" starttime="20200521 11:45:20.195"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:20.217" starttime="20200521 11:45:19.893"></status>
</kw>
<kw type="foritem" name="${i} = 79">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:20.219" starttime="20200521 11:45:20.218"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:20.519" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:20.520" starttime="20200521 11:45:20.219"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:20.530" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:20.540" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000511 seconds.</msg>
<msg timestamp="20200521 11:45:20.541" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:20 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:20.541" starttime="20200521 11:45:20.520"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:20.541" starttime="20200521 11:45:20.217"></status>
</kw>
<kw type="foritem" name="${i} = 80">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:20.543" starttime="20200521 11:45:20.542"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:20.844" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:20.844" starttime="20200521 11:45:20.543"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:20.854" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:20.864" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000509 seconds.</msg>
<msg timestamp="20200521 11:45:20.864" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:21 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:20.865" starttime="20200521 11:45:20.844"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:20.865" starttime="20200521 11:45:20.541"></status>
</kw>
<kw type="foritem" name="${i} = 81">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:20.866" starttime="20200521 11:45:20.865"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:21.167" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:21.167" starttime="20200521 11:45:20.867"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:21.178" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:21.188" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000449 seconds.</msg>
<msg timestamp="20200521 11:45:21.188" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:21 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:21.188" starttime="20200521 11:45:21.168"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:21.188" starttime="20200521 11:45:20.865"></status>
</kw>
<kw type="foritem" name="${i} = 82">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:21.190" starttime="20200521 11:45:21.189"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:21.491" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:21.491" starttime="20200521 11:45:21.191"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:21.502" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:21.512" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000555 seconds.</msg>
<msg timestamp="20200521 11:45:21.513" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:21 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:21.513" starttime="20200521 11:45:21.492"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:21.513" starttime="20200521 11:45:21.188"></status>
</kw>
<kw type="foritem" name="${i} = 83">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:21.515" starttime="20200521 11:45:21.513"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:21.816" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:21.816" starttime="20200521 11:45:21.515"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:21.826" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:21.837" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000424 seconds.</msg>
<msg timestamp="20200521 11:45:21.837" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:22 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:21.837" starttime="20200521 11:45:21.816"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:21.837" starttime="20200521 11:45:21.513"></status>
</kw>
<kw type="foritem" name="${i} = 84">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:21.839" starttime="20200521 11:45:21.838"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:22.141" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:22.141" starttime="20200521 11:45:21.840"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:22.152" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:22.163" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000423000000001 seconds.</msg>
<msg timestamp="20200521 11:45:22.163" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:22 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:22.164" starttime="20200521 11:45:22.142"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:22.164" starttime="20200521 11:45:21.837"></status>
</kw>
<kw type="foritem" name="${i} = 85">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:22.165" starttime="20200521 11:45:22.164"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:22.472" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:22.472" starttime="20200521 11:45:22.165"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:22.484" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:22.491" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000476 seconds.</msg>
<msg timestamp="20200521 11:45:22.491" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:22 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:22.491" starttime="20200521 11:45:22.473"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:22.491" starttime="20200521 11:45:22.164"></status>
</kw>
<kw type="foritem" name="${i} = 86">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:22.493" starttime="20200521 11:45:22.492"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:22.798" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:22.798" starttime="20200521 11:45:22.493"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:22.810" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:22.822" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000429 seconds.</msg>
<msg timestamp="20200521 11:45:22.822" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:23 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:22.822" starttime="20200521 11:45:22.799"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:22.822" starttime="20200521 11:45:22.492"></status>
</kw>
<kw type="foritem" name="${i} = 87">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:22.824" starttime="20200521 11:45:22.823"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:23.125" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:23.125" starttime="20200521 11:45:22.824"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:23.135" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:23.145" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000451 seconds.</msg>
<msg timestamp="20200521 11:45:23.146" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:23 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:23.146" starttime="20200521 11:45:23.125"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:23.146" starttime="20200521 11:45:22.823"></status>
</kw>
<kw type="foritem" name="${i} = 88">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:23.147" starttime="20200521 11:45:23.147"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:23.452" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:23.452" starttime="20200521 11:45:23.148"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:23.464" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:23.473" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00043 seconds.</msg>
<msg timestamp="20200521 11:45:23.474" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:23 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:23.474" starttime="20200521 11:45:23.452"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:23.474" starttime="20200521 11:45:23.146"></status>
</kw>
<kw type="foritem" name="${i} = 89">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:23.477" starttime="20200521 11:45:23.474"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:23.778" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:23.778" starttime="20200521 11:45:23.477"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:23.789" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:23.800" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000394 seconds.</msg>
<msg timestamp="20200521 11:45:23.800" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:24 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:23.800" starttime="20200521 11:45:23.778"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:23.800" starttime="20200521 11:45:23.474"></status>
</kw>
<kw type="foritem" name="${i} = 90">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:23.802" starttime="20200521 11:45:23.801"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:24.107" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:24.107" starttime="20200521 11:45:23.802"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:24.117" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:24.128" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000562 seconds.</msg>
<msg timestamp="20200521 11:45:24.129" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:24 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:24.129" starttime="20200521 11:45:24.107"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:24.129" starttime="20200521 11:45:23.800"></status>
</kw>
<kw type="foritem" name="${i} = 91">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:24.130" starttime="20200521 11:45:24.129"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:24.442" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:24.442" starttime="20200521 11:45:24.131"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:24.453" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:24.463" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000417 seconds.</msg>
<msg timestamp="20200521 11:45:24.463" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:24 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:24.463" starttime="20200521 11:45:24.443"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:24.463" starttime="20200521 11:45:24.129"></status>
</kw>
<kw type="foritem" name="${i} = 92">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:24.464" starttime="20200521 11:45:24.464"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:24.783" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:24.784" starttime="20200521 11:45:24.465"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:24.794" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:24.804" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000508 seconds.</msg>
<msg timestamp="20200521 11:45:24.805" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:25 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:24.805" starttime="20200521 11:45:24.784"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:24.805" starttime="20200521 11:45:24.463"></status>
</kw>
<kw type="foritem" name="${i} = 93">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:24.806" starttime="20200521 11:45:24.805"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:25.109" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:25.109" starttime="20200521 11:45:24.806"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:25.119" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:25.129" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00052 seconds.</msg>
<msg timestamp="20200521 11:45:25.130" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:25 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:25.130" starttime="20200521 11:45:25.110"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:25.130" starttime="20200521 11:45:24.805"></status>
</kw>
<kw type="foritem" name="${i} = 94">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:25.133" starttime="20200521 11:45:25.130"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:25.450" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:25.450" starttime="20200521 11:45:25.134"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:25.460" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:25.470" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000396 seconds.</msg>
<msg timestamp="20200521 11:45:25.470" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:25 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:25.470" starttime="20200521 11:45:25.450"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:25.471" starttime="20200521 11:45:25.130"></status>
</kw>
<kw type="foritem" name="${i} = 95">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:25.472" starttime="20200521 11:45:25.471"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:25.773" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:25.773" starttime="20200521 11:45:25.472"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:25.783" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:25.793" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000418000000001 seconds.</msg>
<msg timestamp="20200521 11:45:25.794" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:26 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:25.794" starttime="20200521 11:45:25.773"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:25.794" starttime="20200521 11:45:25.471"></status>
</kw>
<kw type="foritem" name="${i} = 96">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:25.796" starttime="20200521 11:45:25.794"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:26.097" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:26.097" starttime="20200521 11:45:25.796"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:26.108" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:26.121" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000429 seconds.</msg>
<msg timestamp="20200521 11:45:26.121" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:26 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:26.121" starttime="20200521 11:45:26.097"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:26.121" starttime="20200521 11:45:25.794"></status>
</kw>
<kw type="foritem" name="${i} = 97">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:26.122" starttime="20200521 11:45:26.122"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:26.432" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:26.432" starttime="20200521 11:45:26.123"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:26.442" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:26.453" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000466 seconds.</msg>
<msg timestamp="20200521 11:45:26.453" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:26 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:26.453" starttime="20200521 11:45:26.433"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:26.453" starttime="20200521 11:45:26.121"></status>
</kw>
<kw type="foritem" name="${i} = 98">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:26.455" starttime="20200521 11:45:26.454"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:26.775" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:26.775" starttime="20200521 11:45:26.455"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:26.786" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:26.796" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000475 seconds.</msg>
<msg timestamp="20200521 11:45:26.797" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:27 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:26.797" starttime="20200521 11:45:26.775"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:26.797" starttime="20200521 11:45:26.454"></status>
</kw>
<kw type="foritem" name="${i} = 99">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:26.798" starttime="20200521 11:45:26.797"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:27.099" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:27.099" starttime="20200521 11:45:26.798"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:27.111" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:27.122" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000403 seconds.</msg>
<msg timestamp="20200521 11:45:27.123" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:27 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:27.123" starttime="20200521 11:45:27.100"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:27.123" starttime="20200521 11:45:26.797"></status>
</kw>
<kw type="foritem" name="${i} = 100">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:27.124" starttime="20200521 11:45:27.123"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:27.490" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:27.490" starttime="20200521 11:45:27.124"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:27.502" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:27.512" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000432 seconds.</msg>
<msg timestamp="20200521 11:45:27.513" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:27 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:27.513" starttime="20200521 11:45:27.490"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:27.513" starttime="20200521 11:45:27.123"></status>
</kw>
<kw type="foritem" name="${i} = 101">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:27.514" starttime="20200521 11:45:27.513"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:27.815" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:27.816" starttime="20200521 11:45:27.515"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:27.826" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:27.836" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000317 seconds.</msg>
<msg timestamp="20200521 11:45:27.836" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:28 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:27.836" starttime="20200521 11:45:27.816"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:27.836" starttime="20200521 11:45:27.513"></status>
</kw>
<kw type="foritem" name="${i} = 102">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:27.838" starttime="20200521 11:45:27.837"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:28.138" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:28.139" starttime="20200521 11:45:27.838"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:28.149" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:28.159" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000330999999999 seconds.</msg>
<msg timestamp="20200521 11:45:28.160" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:28 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:28.160" starttime="20200521 11:45:28.139"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:28.160" starttime="20200521 11:45:27.836"></status>
</kw>
<kw type="foritem" name="${i} = 103">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:28.162" starttime="20200521 11:45:28.161"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:28.488" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:28.488" starttime="20200521 11:45:28.163"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:28.499" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:28.509" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000491999999999 seconds.</msg>
<msg timestamp="20200521 11:45:28.510" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:28 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:28.510" starttime="20200521 11:45:28.489"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:28.510" starttime="20200521 11:45:28.160"></status>
</kw>
<kw type="foritem" name="${i} = 104">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:28.512" starttime="20200521 11:45:28.510"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:28.813" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:28.813" starttime="20200521 11:45:28.512"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:28.823" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:28.835" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000402 seconds.</msg>
<msg timestamp="20200521 11:45:28.835" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:29 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:28.836" starttime="20200521 11:45:28.814"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:28.836" starttime="20200521 11:45:28.510"></status>
</kw>
<kw type="foritem" name="${i} = 105">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:28.837" starttime="20200521 11:45:28.836"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:29.138" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:29.138" starttime="20200521 11:45:28.837"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:29.148" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:29.159" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000429 seconds.</msg>
<msg timestamp="20200521 11:45:29.159" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:29 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:29.159" starttime="20200521 11:45:29.138"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:29.159" starttime="20200521 11:45:28.836"></status>
</kw>
<kw type="foritem" name="${i} = 106">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:29.161" starttime="20200521 11:45:29.160"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:29.462" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:29.462" starttime="20200521 11:45:29.161"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:29.472" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:29.482" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00045 seconds.</msg>
<msg timestamp="20200521 11:45:29.483" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:29 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:29.483" starttime="20200521 11:45:29.462"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:29.483" starttime="20200521 11:45:29.159"></status>
</kw>
<kw type="foritem" name="${i} = 107">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:29.485" starttime="20200521 11:45:29.484"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:29.786" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:29.786" starttime="20200521 11:45:29.485"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:29.797" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:29.808" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000528 seconds.</msg>
<msg timestamp="20200521 11:45:29.808" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:30 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:29.809" starttime="20200521 11:45:29.786"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:29.809" starttime="20200521 11:45:29.483"></status>
</kw>
<kw type="foritem" name="${i} = 108">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:29.810" starttime="20200521 11:45:29.809"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:30.112" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:30.112" starttime="20200521 11:45:29.811"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:30.125" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:30.137" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000406 seconds.</msg>
<msg timestamp="20200521 11:45:30.138" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:30 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:30.138" starttime="20200521 11:45:30.113"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:30.138" starttime="20200521 11:45:29.809"></status>
</kw>
<kw type="foritem" name="${i} = 109">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:30.139" starttime="20200521 11:45:30.138"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:30.487" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:30.487" starttime="20200521 11:45:30.156"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:30.501" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:30.511" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000458 seconds.</msg>
<msg timestamp="20200521 11:45:30.512" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:30 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:30.512" starttime="20200521 11:45:30.488"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:30.512" starttime="20200521 11:45:30.138"></status>
</kw>
<kw type="foritem" name="${i} = 110">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:30.513" starttime="20200521 11:45:30.512"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:30.814" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:30.814" starttime="20200521 11:45:30.514"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:30.825" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:30.835" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000459999999999 seconds.</msg>
<msg timestamp="20200521 11:45:30.836" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:31 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:30.836" starttime="20200521 11:45:30.815"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:30.836" starttime="20200521 11:45:30.512"></status>
</kw>
<kw type="foritem" name="${i} = 111">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:30.837" starttime="20200521 11:45:30.836"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:31.138" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:31.138" starttime="20200521 11:45:30.838"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:31.149" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:31.159" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000454 seconds.</msg>
<msg timestamp="20200521 11:45:31.159" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:31 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:31.159" starttime="20200521 11:45:31.139"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:31.159" starttime="20200521 11:45:30.836"></status>
</kw>
<kw type="foritem" name="${i} = 112">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:31.161" starttime="20200521 11:45:31.160"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:31.462" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:31.462" starttime="20200521 11:45:31.161"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:31.472" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:31.482" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000428 seconds.</msg>
<msg timestamp="20200521 11:45:31.483" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:31 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:31.483" starttime="20200521 11:45:31.462"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:31.483" starttime="20200521 11:45:31.159"></status>
</kw>
<kw type="foritem" name="${i} = 113">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:31.484" starttime="20200521 11:45:31.483"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:31.785" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:31.785" starttime="20200521 11:45:31.485"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:31.795" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:31.805" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000525000000001 seconds.</msg>
<msg timestamp="20200521 11:45:31.806" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:32 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:31.806" starttime="20200521 11:45:31.786"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:31.806" starttime="20200521 11:45:31.483"></status>
</kw>
<kw type="foritem" name="${i} = 114">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:31.808" starttime="20200521 11:45:31.807"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:32.108" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:32.109" starttime="20200521 11:45:31.808"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:32.122" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:32.132" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000473 seconds.</msg>
<msg timestamp="20200521 11:45:32.132" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:32 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:32.132" starttime="20200521 11:45:32.109"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:32.132" starttime="20200521 11:45:31.806"></status>
</kw>
<kw type="foritem" name="${i} = 115">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:32.134" starttime="20200521 11:45:32.133"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:32.435" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:32.435" starttime="20200521 11:45:32.134"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:32.446" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:32.456" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000469000000001 seconds.</msg>
<msg timestamp="20200521 11:45:32.457" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:32 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:32.457" starttime="20200521 11:45:32.436"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:32.457" starttime="20200521 11:45:32.133"></status>
</kw>
<kw type="foritem" name="${i} = 116">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:32.458" starttime="20200521 11:45:32.457"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:32.759" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:32.759" starttime="20200521 11:45:32.459"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:32.769" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:32.779" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000484 seconds.</msg>
<msg timestamp="20200521 11:45:32.779" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:33 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:32.780" starttime="20200521 11:45:32.760"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:32.780" starttime="20200521 11:45:32.457"></status>
</kw>
<kw type="foritem" name="${i} = 117">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:32.781" starttime="20200521 11:45:32.780"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:33.082" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:33.082" starttime="20200521 11:45:32.781"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:33.092" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:33.102" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00043 seconds.</msg>
<msg timestamp="20200521 11:45:33.102" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:33 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:33.102" starttime="20200521 11:45:33.082"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:33.102" starttime="20200521 11:45:32.780"></status>
</kw>
<kw type="foritem" name="${i} = 118">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:33.104" starttime="20200521 11:45:33.103"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:33.405" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:33.405" starttime="20200521 11:45:33.104"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:33.415" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:33.425" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000504 seconds.</msg>
<msg timestamp="20200521 11:45:33.427" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:33 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:33.427" starttime="20200521 11:45:33.405"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:33.427" starttime="20200521 11:45:33.103"></status>
</kw>
<kw type="foritem" name="${i} = 119">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:33.428" starttime="20200521 11:45:33.427"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:33.729" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:33.729" starttime="20200521 11:45:33.429"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:33.740" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:33.750" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000461 seconds.</msg>
<msg timestamp="20200521 11:45:33.750" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:34 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:33.750" starttime="20200521 11:45:33.730"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:33.750" starttime="20200521 11:45:33.427"></status>
</kw>
<kw type="foritem" name="${i} = 120">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:33.752" starttime="20200521 11:45:33.751"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:34.053" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:34.053" starttime="20200521 11:45:33.752"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:34.063" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:34.073" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000476 seconds.</msg>
<msg timestamp="20200521 11:45:34.075" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:34 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:34.075" starttime="20200521 11:45:34.053"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:34.075" starttime="20200521 11:45:33.751"></status>
</kw>
<kw type="foritem" name="${i} = 121">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:34.076" starttime="20200521 11:45:34.076"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:34.390" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:34.391" starttime="20200521 11:45:34.077"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:34.403" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:34.413" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000398 seconds.</msg>
<msg timestamp="20200521 11:45:34.413" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:34 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:34.413" starttime="20200521 11:45:34.391"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:34.413" starttime="20200521 11:45:34.075"></status>
</kw>
<kw type="foritem" name="${i} = 122">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:34.414" starttime="20200521 11:45:34.414"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:34.715" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:34.716" starttime="20200521 11:45:34.415"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:34.726" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:34.736" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000503999999999 seconds.</msg>
<msg timestamp="20200521 11:45:34.736" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:35 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:34.737" starttime="20200521 11:45:34.716"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:34.737" starttime="20200521 11:45:34.413"></status>
</kw>
<kw type="foritem" name="${i} = 123">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:34.738" starttime="20200521 11:45:34.737"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:35.039" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:35.039" starttime="20200521 11:45:34.738"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:35.048" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:35.058" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00056 seconds.</msg>
<msg timestamp="20200521 11:45:35.059" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:35 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:35.059" starttime="20200521 11:45:35.039"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:35.059" starttime="20200521 11:45:34.737"></status>
</kw>
<kw type="foritem" name="${i} = 124">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:35.060" starttime="20200521 11:45:35.059"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:35.362" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:35.362" starttime="20200521 11:45:35.061"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:35.372" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:35.385" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000408999999999 seconds.</msg>
<msg timestamp="20200521 11:45:35.385" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:35 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:35.385" starttime="20200521 11:45:35.363"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:35.385" starttime="20200521 11:45:35.059"></status>
</kw>
<kw type="foritem" name="${i} = 125">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:35.386" starttime="20200521 11:45:35.386"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:35.687" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:35.688" starttime="20200521 11:45:35.387"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:35.699" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:35.710" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000427 seconds.</msg>
<msg timestamp="20200521 11:45:35.711" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:35 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:35.711" starttime="20200521 11:45:35.688"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:35.711" starttime="20200521 11:45:35.385"></status>
</kw>
<kw type="foritem" name="${i} = 126">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:35.712" starttime="20200521 11:45:35.711"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:36.045" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:36.045" starttime="20200521 11:45:35.713"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:36.056" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:36.065" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000432 seconds.</msg>
<msg timestamp="20200521 11:45:36.066" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:36 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:36.066" starttime="20200521 11:45:36.046"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:36.066" starttime="20200521 11:45:35.711"></status>
</kw>
<kw type="foritem" name="${i} = 127">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:36.067" starttime="20200521 11:45:36.067"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:36.368" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:36.368" starttime="20200521 11:45:36.068"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:36.377" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:36.387" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000482 seconds.</msg>
<msg timestamp="20200521 11:45:36.388" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:36 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:36.388" starttime="20200521 11:45:36.369"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:36.388" starttime="20200521 11:45:36.066"></status>
</kw>
<kw type="foritem" name="${i} = 128">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:36.389" starttime="20200521 11:45:36.389"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:36.690" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:36.691" starttime="20200521 11:45:36.390"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:36.701" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:36.711" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000477 seconds.</msg>
<msg timestamp="20200521 11:45:36.712" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:36 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:36.712" starttime="20200521 11:45:36.691"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:36.712" starttime="20200521 11:45:36.388"></status>
</kw>
<kw type="foritem" name="${i} = 129">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:36.714" starttime="20200521 11:45:36.713"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:37.015" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:37.015" starttime="20200521 11:45:36.714"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:37.025" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:37.036" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000511 seconds.</msg>
<msg timestamp="20200521 11:45:37.036" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:37 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:37.036" starttime="20200521 11:45:37.015"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:37.037" starttime="20200521 11:45:36.712"></status>
</kw>
<kw type="foritem" name="${i} = 130">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:37.038" starttime="20200521 11:45:37.037"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:37.339" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:37.339" starttime="20200521 11:45:37.038"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:37.350" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:37.361" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000462 seconds.</msg>
<msg timestamp="20200521 11:45:37.361" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:37 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:37.362" starttime="20200521 11:45:37.340"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:37.362" starttime="20200521 11:45:37.037"></status>
</kw>
<kw type="foritem" name="${i} = 131">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:37.363" starttime="20200521 11:45:37.362"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:37.664" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:37.664" starttime="20200521 11:45:37.363"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:37.675" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:37.684" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000434 seconds.</msg>
<msg timestamp="20200521 11:45:37.685" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:37 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:37.685" starttime="20200521 11:45:37.664"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:37.685" starttime="20200521 11:45:37.362"></status>
</kw>
<kw type="foritem" name="${i} = 132">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:37.686" starttime="20200521 11:45:37.686"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:37.987" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:37.988" starttime="20200521 11:45:37.687"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:37.998" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:38.008" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000489 seconds.</msg>
<msg timestamp="20200521 11:45:38.009" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:38 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:38.009" starttime="20200521 11:45:37.988"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:38.009" starttime="20200521 11:45:37.685"></status>
</kw>
<kw type="foritem" name="${i} = 133">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:38.010" starttime="20200521 11:45:38.009"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:38.311" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:38.311" starttime="20200521 11:45:38.011"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:38.322" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:38.332" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000473 seconds.</msg>
<msg timestamp="20200521 11:45:38.333" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:38 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:38.333" starttime="20200521 11:45:38.312"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:38.333" starttime="20200521 11:45:38.009"></status>
</kw>
<kw type="foritem" name="${i} = 134">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:38.335" starttime="20200521 11:45:38.334"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:38.635" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:38.636" starttime="20200521 11:45:38.335"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:38.646" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:38.656" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000438 seconds.</msg>
<msg timestamp="20200521 11:45:38.657" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:38 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:38.657" starttime="20200521 11:45:38.636"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:38.657" starttime="20200521 11:45:38.333"></status>
</kw>
<kw type="foritem" name="${i} = 135">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:38.658" starttime="20200521 11:45:38.657"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:38.959" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:38.959" starttime="20200521 11:45:38.659"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:38.970" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:38.980" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000538000000001 seconds.</msg>
<msg timestamp="20200521 11:45:38.980" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:39 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:38.980" starttime="20200521 11:45:38.960"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:38.981" starttime="20200521 11:45:38.657"></status>
</kw>
<kw type="foritem" name="${i} = 136">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:38.982" starttime="20200521 11:45:38.981"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:39.283" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:39.283" starttime="20200521 11:45:38.982"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:39.293" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:39.304" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000498 seconds.</msg>
<msg timestamp="20200521 11:45:39.304" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:39 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:39.304" starttime="20200521 11:45:39.283"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:39.304" starttime="20200521 11:45:38.981"></status>
</kw>
<kw type="foritem" name="${i} = 137">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:39.306" starttime="20200521 11:45:39.305"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:39.607" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:39.607" starttime="20200521 11:45:39.306"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:39.617" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:39.627" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000404000000001 seconds.</msg>
<msg timestamp="20200521 11:45:39.628" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:39 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:39.628" starttime="20200521 11:45:39.607"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:39.628" starttime="20200521 11:45:39.304"></status>
</kw>
<kw type="foritem" name="${i} = 138">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:39.629" starttime="20200521 11:45:39.629"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:39.930" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:39.931" starttime="20200521 11:45:39.630"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:39.941" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:39.952" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000547 seconds.</msg>
<msg timestamp="20200521 11:45:39.953" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:40 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:39.953" starttime="20200521 11:45:39.931"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:39.953" starttime="20200521 11:45:39.628"></status>
</kw>
<kw type="foritem" name="${i} = 139">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:39.954" starttime="20200521 11:45:39.953"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:40.255" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:40.255" starttime="20200521 11:45:39.955"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:40.267" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:40.277" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000477999999999 seconds.</msg>
<msg timestamp="20200521 11:45:40.278" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:40 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:40.278" starttime="20200521 11:45:40.256"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:40.278" starttime="20200521 11:45:39.953"></status>
</kw>
<kw type="foritem" name="${i} = 140">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:40.280" starttime="20200521 11:45:40.279"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:40.581" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:40.581" starttime="20200521 11:45:40.280"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:40.593" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:40.604" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000629999999999 seconds.</msg>
<msg timestamp="20200521 11:45:40.604" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:40 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:40.604" starttime="20200521 11:45:40.581"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:40.604" starttime="20200521 11:45:40.278"></status>
</kw>
<kw type="foritem" name="${i} = 141">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:40.606" starttime="20200521 11:45:40.605"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:40.907" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:40.907" starttime="20200521 11:45:40.606"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:40.918" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:40.929" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000519 seconds.</msg>
<msg timestamp="20200521 11:45:40.930" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:41 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:40.930" starttime="20200521 11:45:40.908"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:40.930" starttime="20200521 11:45:40.604"></status>
</kw>
<kw type="foritem" name="${i} = 142">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:40.931" starttime="20200521 11:45:40.930"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:41.242" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:41.242" starttime="20200521 11:45:40.932"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:41.254" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:41.265" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000471 seconds.</msg>
<msg timestamp="20200521 11:45:41.265" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:41 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:41.265" starttime="20200521 11:45:41.243"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:41.265" starttime="20200521 11:45:40.930"></status>
</kw>
<kw type="foritem" name="${i} = 143">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:41.267" starttime="20200521 11:45:41.266"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:41.572" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:41.572" starttime="20200521 11:45:41.267"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:41.586" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:41.598" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000521 seconds.</msg>
<msg timestamp="20200521 11:45:41.598" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:41 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:41.598" starttime="20200521 11:45:41.573"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:41.598" starttime="20200521 11:45:41.266"></status>
</kw>
<kw type="foritem" name="${i} = 144">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:41.602" starttime="20200521 11:45:41.599"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:41.911" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:41.912" starttime="20200521 11:45:41.602"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:41.925" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:41.935" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000503 seconds.</msg>
<msg timestamp="20200521 11:45:41.936" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:42 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:41.936" starttime="20200521 11:45:41.912"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:41.936" starttime="20200521 11:45:41.599"></status>
</kw>
<kw type="foritem" name="${i} = 145">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:41.937" starttime="20200521 11:45:41.936"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:42.239" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:42.239" starttime="20200521 11:45:41.938"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:42.251" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:42.261" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000515 seconds.</msg>
<msg timestamp="20200521 11:45:42.262" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:42 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:42.262" starttime="20200521 11:45:42.239"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:42.262" starttime="20200521 11:45:41.936"></status>
</kw>
<kw type="foritem" name="${i} = 146">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:42.264" starttime="20200521 11:45:42.263"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:42.568" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:42.568" starttime="20200521 11:45:42.264"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:42.580" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:42.591" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000584 seconds.</msg>
<msg timestamp="20200521 11:45:42.592" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:42 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:42.592" starttime="20200521 11:45:42.569"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:42.592" starttime="20200521 11:45:42.262"></status>
</kw>
<kw type="foritem" name="${i} = 147">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:42.594" starttime="20200521 11:45:42.593"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:42.895" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:42.895" starttime="20200521 11:45:42.594"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:42.906" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:42.917" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000615 seconds.</msg>
<msg timestamp="20200521 11:45:42.918" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:43 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:42.918" starttime="20200521 11:45:42.895"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:42.918" starttime="20200521 11:45:42.592"></status>
</kw>
<kw type="foritem" name="${i} = 148">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:42.919" starttime="20200521 11:45:42.919"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:43.221" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:43.221" starttime="20200521 11:45:42.920"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:43.233" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:43.243" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000471 seconds.</msg>
<msg timestamp="20200521 11:45:43.244" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:43 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:43.244" starttime="20200521 11:45:43.221"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:43.244" starttime="20200521 11:45:42.918"></status>
</kw>
<kw type="foritem" name="${i} = 149">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:43.246" starttime="20200521 11:45:43.245"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:43.547" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:43.547" starttime="20200521 11:45:43.246"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:43.561" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:43.572" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000587 seconds.</msg>
<msg timestamp="20200521 11:45:43.573" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:43 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:43.573" starttime="20200521 11:45:43.547"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:43.573" starttime="20200521 11:45:43.245"></status>
</kw>
<kw type="foritem" name="${i} = 150">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:43.574" starttime="20200521 11:45:43.573"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:43.875" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:43.875" starttime="20200521 11:45:43.575"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:43.887" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:43.897" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000383999999999 seconds.</msg>
<msg timestamp="20200521 11:45:43.898" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:44 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:43.898" starttime="20200521 11:45:43.876"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:43.898" starttime="20200521 11:45:43.573"></status>
</kw>
<kw type="foritem" name="${i} = 151">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:43.899" starttime="20200521 11:45:43.898"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:44.200" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:44.200" starttime="20200521 11:45:43.899"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:44.210" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:44.220" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000434 seconds.</msg>
<msg timestamp="20200521 11:45:44.221" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:44 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:44.221" starttime="20200521 11:45:44.200"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:44.221" starttime="20200521 11:45:43.898"></status>
</kw>
<kw type="foritem" name="${i} = 152">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:44.222" starttime="20200521 11:45:44.222"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:44.523" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:44.524" starttime="20200521 11:45:44.223"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:44.534" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:44.545" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000561 seconds.</msg>
<msg timestamp="20200521 11:45:44.546" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:44 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:44.546" starttime="20200521 11:45:44.524"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:44.546" starttime="20200521 11:45:44.221"></status>
</kw>
<kw type="foritem" name="${i} = 153">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:44.547" starttime="20200521 11:45:44.546"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:44.848" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:44.848" starttime="20200521 11:45:44.547"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:44.859" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:44.869" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000508 seconds.</msg>
<msg timestamp="20200521 11:45:44.870" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:45 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:44.870" starttime="20200521 11:45:44.848"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:44.870" starttime="20200521 11:45:44.546"></status>
</kw>
<kw type="foritem" name="${i} = 154">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:44.872" starttime="20200521 11:45:44.871"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:45.173" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:45.173" starttime="20200521 11:45:44.872"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:45.184" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:45.194" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000637 seconds.</msg>
<msg timestamp="20200521 11:45:45.195" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:45 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:45.195" starttime="20200521 11:45:45.173"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:45.195" starttime="20200521 11:45:44.870"></status>
</kw>
<kw type="foritem" name="${i} = 155">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:45.196" starttime="20200521 11:45:45.196"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:45.498" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:45.498" starttime="20200521 11:45:45.197"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:45.509" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:45.520" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000582000000001 seconds.</msg>
<msg timestamp="20200521 11:45:45.520" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:45 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:45.520" starttime="20200521 11:45:45.498"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:45.520" starttime="20200521 11:45:45.195"></status>
</kw>
<kw type="foritem" name="${i} = 156">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:45.522" starttime="20200521 11:45:45.521"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:45.823" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:45.823" starttime="20200521 11:45:45.523"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:45.834" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:45.844" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00046 seconds.</msg>
<msg timestamp="20200521 11:45:45.845" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:46 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:45.845" starttime="20200521 11:45:45.824"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:45.845" starttime="20200521 11:45:45.520"></status>
</kw>
<kw type="foritem" name="${i} = 157">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:45.846" starttime="20200521 11:45:45.846"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:46.148" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:46.148" starttime="20200521 11:45:45.847"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:46.160" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:46.170" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000458 seconds.</msg>
<msg timestamp="20200521 11:45:46.170" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:46 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:46.170" starttime="20200521 11:45:46.148"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:46.171" starttime="20200521 11:45:45.845"></status>
</kw>
<kw type="foritem" name="${i} = 158">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:46.172" starttime="20200521 11:45:46.171"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:46.473" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:46.473" starttime="20200521 11:45:46.173"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:46.485" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:46.495" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000593 seconds.</msg>
<msg timestamp="20200521 11:45:46.496" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:46 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:46.496" starttime="20200521 11:45:46.474"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:46.496" starttime="20200521 11:45:46.171"></status>
</kw>
<kw type="foritem" name="${i} = 159">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:46.498" starttime="20200521 11:45:46.497"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:46.799" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:46.799" starttime="20200521 11:45:46.498"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:46.810" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:46.820" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000445 seconds.</msg>
<msg timestamp="20200521 11:45:46.820" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:47 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:46.821" starttime="20200521 11:45:46.799"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:46.821" starttime="20200521 11:45:46.496"></status>
</kw>
<kw type="foritem" name="${i} = 160">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:46.822" starttime="20200521 11:45:46.821"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:47.123" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:47.124" starttime="20200521 11:45:46.823"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:47.135" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:47.146" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000665 seconds.</msg>
<msg timestamp="20200521 11:45:47.146" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:47 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:47.146" starttime="20200521 11:45:47.124"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:47.146" starttime="20200521 11:45:46.821"></status>
</kw>
<kw type="foritem" name="${i} = 161">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:47.148" starttime="20200521 11:45:47.147"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:47.452" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:47.452" starttime="20200521 11:45:47.149"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:47.465" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:47.476" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000433 seconds.</msg>
<msg timestamp="20200521 11:45:47.476" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:47 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:47.476" starttime="20200521 11:45:47.453"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:47.476" starttime="20200521 11:45:47.147"></status>
</kw>
<kw type="foritem" name="${i} = 162">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:47.480" starttime="20200521 11:45:47.477"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:47.781" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:47.781" starttime="20200521 11:45:47.480"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:47.794" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:47.804" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000602 seconds.</msg>
<msg timestamp="20200521 11:45:47.805" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:48 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:47.805" starttime="20200521 11:45:47.782"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:47.805" starttime="20200521 11:45:47.476"></status>
</kw>
<kw type="foritem" name="${i} = 163">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:47.807" starttime="20200521 11:45:47.806"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:48.108" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:48.108" starttime="20200521 11:45:47.807"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:48.120" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:48.132" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000532 seconds.</msg>
<msg timestamp="20200521 11:45:48.132" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:48 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:48.132" starttime="20200521 11:45:48.108"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:48.132" starttime="20200521 11:45:47.805"></status>
</kw>
<kw type="foritem" name="${i} = 164">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:48.134" starttime="20200521 11:45:48.133"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:48.446" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:48.446" starttime="20200521 11:45:48.134"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:48.457" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:48.467" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000534 seconds.</msg>
<msg timestamp="20200521 11:45:48.467" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:48 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:48.467" starttime="20200521 11:45:48.447"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:48.467" starttime="20200521 11:45:48.133"></status>
</kw>
<kw type="foritem" name="${i} = 165">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:48.469" starttime="20200521 11:45:48.468"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:48.770" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:48.770" starttime="20200521 11:45:48.469"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:48.781" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:48.792" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000446 seconds.</msg>
<msg timestamp="20200521 11:45:48.792" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:49 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:48.792" starttime="20200521 11:45:48.770"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:48.792" starttime="20200521 11:45:48.467"></status>
</kw>
<kw type="foritem" name="${i} = 166">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:48.796" starttime="20200521 11:45:48.793"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:49.097" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:49.097" starttime="20200521 11:45:48.796"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:49.108" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:49.122" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000551000000001 seconds.</msg>
<msg timestamp="20200521 11:45:49.122" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:49 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:49.122" starttime="20200521 11:45:49.097"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:49.122" starttime="20200521 11:45:48.793"></status>
</kw>
<kw type="foritem" name="${i} = 167">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:49.123" starttime="20200521 11:45:49.123"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:49.432" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:49.432" starttime="20200521 11:45:49.124"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:49.443" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:49.453" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000445 seconds.</msg>
<msg timestamp="20200521 11:45:49.454" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:49 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:49.454" starttime="20200521 11:45:49.433"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:49.454" starttime="20200521 11:45:49.122"></status>
</kw>
<kw type="foritem" name="${i} = 168">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:49.455" starttime="20200521 11:45:49.454"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:49.761" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:49.761" starttime="20200521 11:45:49.455"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:49.771" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:49.781" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000419999999999 seconds.</msg>
<msg timestamp="20200521 11:45:49.781" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:50 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:49.781" starttime="20200521 11:45:49.761"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:49.782" starttime="20200521 11:45:49.454"></status>
</kw>
<kw type="foritem" name="${i} = 169">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:49.784" starttime="20200521 11:45:49.782"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:50.088" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:50.089" starttime="20200521 11:45:49.785"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:50.101" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:50.112" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000535 seconds.</msg>
<msg timestamp="20200521 11:45:50.112" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:50 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:50.112" starttime="20200521 11:45:50.089"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:50.112" starttime="20200521 11:45:49.782"></status>
</kw>
<kw type="foritem" name="${i} = 170">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:50.114" starttime="20200521 11:45:50.113"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 11:45:50.415" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 11:45:50.415" starttime="20200521 11:45:50.114"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:50.426" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 11:45:50.436" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000630999999999 seconds.</msg>
<msg timestamp="20200521 11:45:50.437" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:50 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 11:45:50.437" starttime="20200521 11:45:50.416"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:50.437" starttime="20200521 11:45:50.113"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:50.437" starttime="20200521 11:44:54.583"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:50.437" starttime="20200521 11:44:54.574"></status>
</kw>
<kw name="Enable All Tx Port">
<tags>
<tag>Enable Pon Port Tx</tag>
</tags>
<doc>Enable all port function</doc>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:50.449" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/</msg>
<msg timestamp="20200521 11:45:50.464" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/: 0.000651 seconds.</msg>
<msg timestamp="20200521 11:45:50.465" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:50 GMT
connection Keep-Alive
content-type application/json
content-length 1467


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPortCollection.EthernetSwitchPor...</msg>
<status status="PASS" endtime="20200521 11:45:50.465" starttime="20200521 11:45:50.438"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200521 11:45:50.466" level="INFO">Length is 20</msg>
<msg timestamp="20200521 11:45:50.466" level="INFO">${item_count} = 20</msg>
<status status="PASS" endtime="20200521 11:45:50.466" starttime="20200521 11:45:50.466"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Enable All Pon Port Tx ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:50.468" starttime="20200521 11:45:50.467"></status>
</kw>
<kw type="for" name="${ID} IN RANGE [ 1 | ${item_count} ]">
<kw type="foritem" name="${ID} = 1">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:50.479" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200521 11:45:51.073" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000490999999999 seconds.</msg>
<msg timestamp="20200521 11:45:51.073" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:51 GMT
connection Keep-Alive
content-type application/json
content-length 2413


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:45:51.073" starttime="20200521 11:45:50.469"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:45:51.074" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:45:51.074" starttime="20200521 11:45:51.074"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 11:45:51.075" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200521 11:45:51.075" starttime="20200521 11:45:51.075"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 11:45:51.076" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 11:45:51.076" starttime="20200521 11:45:51.076"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.077" starttime="20200521 11:45:51.077"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.078" starttime="20200521 11:45:51.077"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.078" starttime="20200521 11:45:51.078"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
</arguments>
<kw name="Test Tx Op Up">
<tags>
<tag>Test tx_disable</tag>
</tags>
<doc>Test SFP port tx disable function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OP_UP)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 11:45:51.087" level="INFO">${payload} = {u'OperationalState': u'Up'}</msg>
<status status="PASS" endtime="20200521 11:45:51.087" starttime="20200521 11:45:51.082"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<msg timestamp="20200521 11:45:51.104" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200521 11:45:51.127" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000557 seconds.</msg>
<status status="PASS" endtime="20200521 11:45:51.127" starttime="20200521 11:45:51.088"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.128" starttime="20200521 11:45:51.081"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.128" starttime="20200521 11:45:51.079"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.128" starttime="20200521 11:45:51.079"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.128" starttime="20200521 11:45:50.469"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.128" starttime="20200521 11:45:50.469"></status>
</kw>
<kw type="foritem" name="${ID} = 2">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:51.138" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/2</msg>
<msg timestamp="20200521 11:45:51.149" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/2: 0.000654000000001 seconds.</msg>
<msg timestamp="20200521 11:45:51.150" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:51 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:45:51.150" starttime="20200521 11:45:51.129"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:45:51.151" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:45:51.151" starttime="20200521 11:45:51.151"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 11:45:51.152" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 11:45:51.152" starttime="20200521 11:45:51.152"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 11:45:51.153" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 11:45:51.153" starttime="20200521 11:45:51.153"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.154" starttime="20200521 11:45:51.154"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.155" starttime="20200521 11:45:51.154"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.156" starttime="20200521 11:45:51.155"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.158" starttime="20200521 11:45:51.157"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.158" starttime="20200521 11:45:51.156"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.158" starttime="20200521 11:45:51.128"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.158" starttime="20200521 11:45:51.128"></status>
</kw>
<kw type="foritem" name="${ID} = 3">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:51.169" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/3</msg>
<msg timestamp="20200521 11:45:51.182" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/3: 0.000574 seconds.</msg>
<msg timestamp="20200521 11:45:51.182" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:51 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:45:51.182" starttime="20200521 11:45:51.159"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:45:51.183" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:45:51.183" starttime="20200521 11:45:51.183"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 11:45:51.184" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 11:45:51.184" starttime="20200521 11:45:51.184"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 11:45:51.185" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 11:45:51.185" starttime="20200521 11:45:51.185"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.186" starttime="20200521 11:45:51.185"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.187" starttime="20200521 11:45:51.186"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.188" starttime="20200521 11:45:51.187"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.190" starttime="20200521 11:45:51.189"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.190" starttime="20200521 11:45:51.188"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.190" starttime="20200521 11:45:51.158"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.190" starttime="20200521 11:45:51.158"></status>
</kw>
<kw type="foritem" name="${ID} = 4">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:51.201" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/4</msg>
<msg timestamp="20200521 11:45:51.213" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/4: 0.000687 seconds.</msg>
<msg timestamp="20200521 11:45:51.213" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:51 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:45:51.214" starttime="20200521 11:45:51.191"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:45:51.214" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:45:51.215" starttime="20200521 11:45:51.214"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 11:45:51.215" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 11:45:51.216" starttime="20200521 11:45:51.215"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 11:45:51.217" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 11:45:51.217" starttime="20200521 11:45:51.216"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.218" starttime="20200521 11:45:51.217"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.219" starttime="20200521 11:45:51.218"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.220" starttime="20200521 11:45:51.219"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.225" starttime="20200521 11:45:51.224"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.225" starttime="20200521 11:45:51.220"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.225" starttime="20200521 11:45:51.190"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.225" starttime="20200521 11:45:51.190"></status>
</kw>
<kw type="foritem" name="${ID} = 5">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:51.236" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/5</msg>
<msg timestamp="20200521 11:45:51.277" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/5: 0.00056 seconds.</msg>
<msg timestamp="20200521 11:45:51.278" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:51 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:45:51.278" starttime="20200521 11:45:51.226"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:45:51.279" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:45:51.279" starttime="20200521 11:45:51.278"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 11:45:51.280" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 11:45:51.280" starttime="20200521 11:45:51.279"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 11:45:51.282" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 11:45:51.283" starttime="20200521 11:45:51.280"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.283" starttime="20200521 11:45:51.283"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.284" starttime="20200521 11:45:51.284"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.285" starttime="20200521 11:45:51.285"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.287" starttime="20200521 11:45:51.287"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.287" starttime="20200521 11:45:51.286"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.287" starttime="20200521 11:45:51.226"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.287" starttime="20200521 11:45:51.225"></status>
</kw>
<kw type="foritem" name="${ID} = 6">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:51.298" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/6</msg>
<msg timestamp="20200521 11:45:51.310" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/6: 0.000425 seconds.</msg>
<msg timestamp="20200521 11:45:51.310" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:51 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:45:51.310" starttime="20200521 11:45:51.288"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:45:51.311" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:45:51.311" starttime="20200521 11:45:51.311"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 11:45:51.312" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 11:45:51.312" starttime="20200521 11:45:51.312"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 11:45:51.313" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 11:45:51.313" starttime="20200521 11:45:51.313"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.314" starttime="20200521 11:45:51.314"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.315" starttime="20200521 11:45:51.315"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.316" starttime="20200521 11:45:51.315"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.318" starttime="20200521 11:45:51.317"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.318" starttime="20200521 11:45:51.316"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.318" starttime="20200521 11:45:51.287"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.318" starttime="20200521 11:45:51.287"></status>
</kw>
<kw type="foritem" name="${ID} = 7">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:51.329" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/7</msg>
<msg timestamp="20200521 11:45:51.338" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/7: 0.000595000000001 seconds.</msg>
<msg timestamp="20200521 11:45:51.339" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:51 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:45:51.339" starttime="20200521 11:45:51.319"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:45:51.340" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:45:51.340" starttime="20200521 11:45:51.339"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 11:45:51.341" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 11:45:51.341" starttime="20200521 11:45:51.341"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 11:45:51.342" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 11:45:51.342" starttime="20200521 11:45:51.342"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.369" starttime="20200521 11:45:51.343"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.370" starttime="20200521 11:45:51.370"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.371" starttime="20200521 11:45:51.371"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.373" starttime="20200521 11:45:51.372"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.373" starttime="20200521 11:45:51.372"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.373" starttime="20200521 11:45:51.318"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.373" starttime="20200521 11:45:51.318"></status>
</kw>
<kw type="foritem" name="${ID} = 8">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:51.384" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/8</msg>
<msg timestamp="20200521 11:45:51.394" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/8: 0.000532 seconds.</msg>
<msg timestamp="20200521 11:45:51.395" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:51 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:45:51.395" starttime="20200521 11:45:51.374"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:45:51.396" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:45:51.396" starttime="20200521 11:45:51.395"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 11:45:51.397" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 11:45:51.397" starttime="20200521 11:45:51.396"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 11:45:51.398" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 11:45:51.398" starttime="20200521 11:45:51.397"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.399" starttime="20200521 11:45:51.398"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.399" starttime="20200521 11:45:51.399"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.400" starttime="20200521 11:45:51.400"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.402" starttime="20200521 11:45:51.402"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.402" starttime="20200521 11:45:51.401"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.402" starttime="20200521 11:45:51.373"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.402" starttime="20200521 11:45:51.373"></status>
</kw>
<kw type="foritem" name="${ID} = 9">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:51.413" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/9</msg>
<msg timestamp="20200521 11:45:51.424" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/9: 0.000456000000001 seconds.</msg>
<msg timestamp="20200521 11:45:51.425" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:51 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:45:51.425" starttime="20200521 11:45:51.403"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:45:51.426" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:45:51.426" starttime="20200521 11:45:51.426"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 11:45:51.427" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 11:45:51.427" starttime="20200521 11:45:51.427"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 11:45:51.428" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 11:45:51.428" starttime="20200521 11:45:51.428"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.429" starttime="20200521 11:45:51.428"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.430" starttime="20200521 11:45:51.429"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.431" starttime="20200521 11:45:51.430"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.433" starttime="20200521 11:45:51.432"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.433" starttime="20200521 11:45:51.431"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.433" starttime="20200521 11:45:51.403"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.433" starttime="20200521 11:45:51.402"></status>
</kw>
<kw type="foritem" name="${ID} = 10">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:51.475" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/10</msg>
<msg timestamp="20200521 11:45:51.487" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/10: 0.000548 seconds.</msg>
<msg timestamp="20200521 11:45:51.488" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:51 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:45:51.488" starttime="20200521 11:45:51.434"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:45:51.489" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:45:51.491" starttime="20200521 11:45:51.488"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 11:45:51.491" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 11:45:51.492" starttime="20200521 11:45:51.491"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 11:45:51.492" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 11:45:51.492" starttime="20200521 11:45:51.492"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.493" starttime="20200521 11:45:51.493"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.494" starttime="20200521 11:45:51.494"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.495" starttime="20200521 11:45:51.495"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.497" starttime="20200521 11:45:51.496"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.497" starttime="20200521 11:45:51.496"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.497" starttime="20200521 11:45:51.433"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.497" starttime="20200521 11:45:51.433"></status>
</kw>
<kw type="foritem" name="${ID} = 11">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:51.508" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/11</msg>
<msg timestamp="20200521 11:45:51.521" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/11: 0.000523 seconds.</msg>
<msg timestamp="20200521 11:45:51.522" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:51 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:45:51.522" starttime="20200521 11:45:51.498"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:45:51.523" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:45:51.523" starttime="20200521 11:45:51.522"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 11:45:51.524" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 11:45:51.524" starttime="20200521 11:45:51.523"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 11:45:51.525" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 11:45:51.525" starttime="20200521 11:45:51.524"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.525" starttime="20200521 11:45:51.525"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.526" starttime="20200521 11:45:51.526"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.527" starttime="20200521 11:45:51.527"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.529" starttime="20200521 11:45:51.528"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.529" starttime="20200521 11:45:51.528"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.529" starttime="20200521 11:45:51.497"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.529" starttime="20200521 11:45:51.497"></status>
</kw>
<kw type="foritem" name="${ID} = 12">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:51.540" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/12</msg>
<msg timestamp="20200521 11:45:51.552" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/12: 0.000883999999999 seconds.</msg>
<msg timestamp="20200521 11:45:51.575" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:51 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:45:51.575" starttime="20200521 11:45:51.530"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:45:51.577" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:45:51.577" starttime="20200521 11:45:51.576"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 11:45:51.578" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 11:45:51.578" starttime="20200521 11:45:51.577"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 11:45:51.578" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 11:45:51.578" starttime="20200521 11:45:51.578"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.579" starttime="20200521 11:45:51.579"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.580" starttime="20200521 11:45:51.580"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.581" starttime="20200521 11:45:51.580"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.583" starttime="20200521 11:45:51.582"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.583" starttime="20200521 11:45:51.582"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.583" starttime="20200521 11:45:51.530"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.583" starttime="20200521 11:45:51.529"></status>
</kw>
<kw type="foritem" name="${ID} = 13">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:51.594" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/13</msg>
<msg timestamp="20200521 11:45:51.605" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/13: 0.000579999999999 seconds.</msg>
<msg timestamp="20200521 11:45:51.606" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:51 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:45:51.606" starttime="20200521 11:45:51.584"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:45:51.607" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:45:51.607" starttime="20200521 11:45:51.606"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 11:45:51.608" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 11:45:51.608" starttime="20200521 11:45:51.607"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 11:45:51.609" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 11:45:51.609" starttime="20200521 11:45:51.608"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.611" starttime="20200521 11:45:51.609"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.611" starttime="20200521 11:45:51.611"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.613" starttime="20200521 11:45:51.612"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.614" starttime="20200521 11:45:51.614"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.614" starttime="20200521 11:45:51.613"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.614" starttime="20200521 11:45:51.583"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.614" starttime="20200521 11:45:51.583"></status>
</kw>
<kw type="foritem" name="${ID} = 14">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:51.627" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/14</msg>
<msg timestamp="20200521 11:45:51.637" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/14: 0.000423000000001 seconds.</msg>
<msg timestamp="20200521 11:45:51.637" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:51 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:45:51.637" starttime="20200521 11:45:51.615"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:45:51.638" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:45:51.638" starttime="20200521 11:45:51.638"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 11:45:51.639" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 11:45:51.639" starttime="20200521 11:45:51.639"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 11:45:51.640" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 11:45:51.640" starttime="20200521 11:45:51.640"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.641" starttime="20200521 11:45:51.641"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.642" starttime="20200521 11:45:51.642"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.643" starttime="20200521 11:45:51.642"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.645" starttime="20200521 11:45:51.644"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.645" starttime="20200521 11:45:51.643"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.645" starttime="20200521 11:45:51.615"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.645" starttime="20200521 11:45:51.615"></status>
</kw>
<kw type="foritem" name="${ID} = 15">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:51.687" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/15</msg>
<msg timestamp="20200521 11:45:51.697" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/15: 0.000435000000001 seconds.</msg>
<msg timestamp="20200521 11:45:51.698" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:51 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:45:51.698" starttime="20200521 11:45:51.677"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:45:51.699" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:45:51.699" starttime="20200521 11:45:51.699"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 11:45:51.700" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 11:45:51.700" starttime="20200521 11:45:51.700"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 11:45:51.701" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 11:45:51.701" starttime="20200521 11:45:51.701"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.702" starttime="20200521 11:45:51.702"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.703" starttime="20200521 11:45:51.703"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.704" starttime="20200521 11:45:51.704"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.706" starttime="20200521 11:45:51.705"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.706" starttime="20200521 11:45:51.705"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.706" starttime="20200521 11:45:51.676"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.706" starttime="20200521 11:45:51.645"></status>
</kw>
<kw type="foritem" name="${ID} = 16">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:51.719" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/16</msg>
<msg timestamp="20200521 11:45:51.736" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/16: 0.000624999999999 seconds.</msg>
<msg timestamp="20200521 11:45:51.737" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:52 GMT
connection Keep-Alive
content-type application/json
content-length 2398


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:45:51.737" starttime="20200521 11:45:51.707"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:45:51.738" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:45:51.738" starttime="20200521 11:45:51.737"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 11:45:51.739" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200521 11:45:51.739" starttime="20200521 11:45:51.738"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 11:45:51.740" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 11:45:51.740" starttime="20200521 11:45:51.739"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.741" starttime="20200521 11:45:51.740"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.742" starttime="20200521 11:45:51.741"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.743" starttime="20200521 11:45:51.742"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
</arguments>
<kw name="Test Tx Op Up">
<tags>
<tag>Test tx_disable</tag>
</tags>
<doc>Test SFP port tx disable function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OP_UP)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 11:45:51.751" level="INFO">${payload} = {u'OperationalState': u'Up'}</msg>
<status status="PASS" endtime="20200521 11:45:51.751" starttime="20200521 11:45:51.745"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<msg timestamp="20200521 11:45:51.789" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/16</msg>
<msg timestamp="20200521 11:45:51.813" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/16: 0.000696 seconds.</msg>
<status status="PASS" endtime="20200521 11:45:51.813" starttime="20200521 11:45:51.751"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.813" starttime="20200521 11:45:51.745"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.814" starttime="20200521 11:45:51.744"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.814" starttime="20200521 11:45:51.743"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.814" starttime="20200521 11:45:51.707"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.814" starttime="20200521 11:45:51.706"></status>
</kw>
<kw type="foritem" name="${ID} = 17">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:51.825" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/17</msg>
<msg timestamp="20200521 11:45:51.838" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/17: 0.000712999999999 seconds.</msg>
<msg timestamp="20200521 11:45:51.838" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:52 GMT
connection Keep-Alive
content-type application/json
content-length 2454


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:45:51.838" starttime="20200521 11:45:51.815"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:45:51.839" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:45:51.840" starttime="20200521 11:45:51.839"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 11:45:51.840" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200521 11:45:51.841" starttime="20200521 11:45:51.840"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 11:45:51.842" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200521 11:45:51.842" starttime="20200521 11:45:51.841"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.842" starttime="20200521 11:45:51.842"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.843" starttime="20200521 11:45:51.843"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.844" starttime="20200521 11:45:51.844"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.846" starttime="20200521 11:45:51.846"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.846" starttime="20200521 11:45:51.845"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.846" starttime="20200521 11:45:51.814"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.847" starttime="20200521 11:45:51.814"></status>
</kw>
<kw type="foritem" name="${ID} = 18">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:51.859" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/18</msg>
<msg timestamp="20200521 11:45:51.892" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/18: 0.000544 seconds.</msg>
<msg timestamp="20200521 11:45:51.893" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:52 GMT
connection Keep-Alive
content-type application/json
content-length 2430


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:45:51.893" starttime="20200521 11:45:51.847"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:45:51.894" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:45:51.894" starttime="20200521 11:45:51.893"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 11:45:51.895" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200521 11:45:51.895" starttime="20200521 11:45:51.894"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 11:45:51.896" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200521 11:45:51.896" starttime="20200521 11:45:51.895"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.897" starttime="20200521 11:45:51.896"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.899" starttime="20200521 11:45:51.897"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.900" starttime="20200521 11:45:51.899"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.902" starttime="20200521 11:45:51.901"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.902" starttime="20200521 11:45:51.901"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.902" starttime="20200521 11:45:51.847"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.902" starttime="20200521 11:45:51.847"></status>
</kw>
<kw type="foritem" name="${ID} = 19">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 11:45:51.918" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/19</msg>
<msg timestamp="20200521 11:45:51.928" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/19: 0.000523999999999 seconds.</msg>
<msg timestamp="20200521 11:45:51.929" level="INFO">${resp} = 200
date Thu, 21 May 2020 03:45:52 GMT
connection Keep-Alive
content-type application/json
content-length 1056


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 11:45:51.929" starttime="20200521 11:45:51.903"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 11:45:51.930" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 11:45:51.930" starttime="20200521 11:45:51.930"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 11:45:51.931" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 11:45:51.931" starttime="20200521 11:45:51.931"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 11:45:51.932" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200521 11:45:51.932" starttime="20200521 11:45:51.931"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.933" starttime="20200521 11:45:51.932"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.934" starttime="20200521 11:45:51.933"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.934" starttime="20200521 11:45:51.934"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 11:45:51.936" starttime="20200521 11:45:51.936"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.936" starttime="20200521 11:45:51.935"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.936" starttime="20200521 11:45:51.902"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.936" starttime="20200521 11:45:51.902"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.936" starttime="20200521 11:45:50.468"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.936" starttime="20200521 11:45:50.438"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.937" starttime="20200521 11:44:54.574"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200521 11:45:51.946" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200521 11:45:51.957" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000513 seconds.</msg>
<msg timestamp="20200521 11:45:51.957" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200521 11:45:51.957" starttime="20200521 11:45:51.937"></status>
</kw>
<status status="PASS" endtime="20200521 11:45:51.958" starttime="20200521 11:45:51.937"></status>
</kw>
<doc>Test omci send</doc>
<tags>
<tag>Test omci send</tag>
</tags>
<status status="PASS" endtime="20200521 11:45:51.958" critical="yes" starttime="20200521 11:44:54.527"></status>
</test>
<doc>Test BAL Rstful functionality.</doc>
<status status="PASS" endtime="20200521 11:45:51.959" starttime="20200521 11:41:25.108"></status>
</suite>
<status status="PASS" endtime="20200521 11:45:51.989" starttime="20200521 11:41:25.030"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="4">Critical Tests</stat>
<stat fail="0" pass="4">All Tests</stat>
</total>
<tag>
<stat fail="0" pass="1">Test Bal Restful opertaion test</stat>
<stat fail="0" pass="1">Test Flow add</stat>
<stat fail="0" pass="1">Test omci send</stat>
<stat fail="0" pass="1">Test ONU Rnage test</stat>
</tag>
<suite>
<stat fail="0" id="s1" name="Bal Test" pass="4">Bal Test</stat>
<stat fail="0" id="s1-s1" name="Test Bal" pass="4">Bal Test.Test Bal</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
