<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200521 14:24:47.267" generator="Robot 3.1.1 (Python 2.7.12 on linux2)">
<suite source="/home/voltha/workspace/XGSPON/Bal_Resf_API_Test/RF_Auto_Test/bal_test" id="s1" name="Bal Test">
<suite source="/home/voltha/workspace/XGSPON/Bal_Resf_API_Test/RF_Auto_Test/bal_test/test_bal.robot" id="s1-s1" name="Test Bal">
<test id="s1-s1-t1" name="Verify Restful API for BAL Test">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200521 14:24:49.083" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200521 14:24:49.095" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000809 seconds.</msg>
<msg timestamp="20200521 14:24:49.096" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200521 14:24:49.096" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200521 14:24:49.096" starttime="20200521 14:24:49.072"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:49.097" starttime="20200521 14:24:49.071"></status>
</kw>
<kw name="Test Bal Component">
<tags>
<tag>Bal_Component</tag>
</tags>
<doc>Do basic test 1.Enable All PON MAC PON NNI port enable/disable.</doc>
<kw name="Disable All Tx Port">
<tags>
<tag>Disable Pon Port Tx</tag>
</tags>
<doc>Disable all port function</doc>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:24:49.120" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/</msg>
<msg timestamp="20200521 14:24:49.286" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/: 0.000584 seconds.</msg>
<msg timestamp="20200521 14:24:49.287" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:24:49 GMT
connection Keep-Alive
content-type application/json
content-length 1467


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPortCollection.EthernetSwitchPor...</msg>
<status status="PASS" endtime="20200521 14:24:49.287" starttime="20200521 14:24:49.098"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200521 14:24:49.288" level="INFO">Length is 20</msg>
<msg timestamp="20200521 14:24:49.288" level="INFO">${item_count} = 20</msg>
<status status="PASS" endtime="20200521 14:24:49.288" starttime="20200521 14:24:49.288"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable All Pon Port ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.289" starttime="20200521 14:24:49.289"></status>
</kw>
<kw type="for" name="${ID} IN RANGE [ 1 | ${item_count} ]">
<kw type="foritem" name="${ID} = 1">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:24:49.302" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200521 14:24:49.414" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000582 seconds.</msg>
<msg timestamp="20200521 14:24:49.415" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:24:49 GMT
connection Keep-Alive
content-type application/json
content-length 2331


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:24:49.415" starttime="20200521 14:24:49.290"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:24:49.416" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:24:49.416" starttime="20200521 14:24:49.416"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:24:49.417" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200521 14:24:49.417" starttime="20200521 14:24:49.416"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:24:49.418" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:24:49.418" starttime="20200521 14:24:49.418"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.419" starttime="20200521 14:24:49.418"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.420" starttime="20200521 14:24:49.419"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.422" starttime="20200521 14:24:49.420"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
</arguments>
<kw name="Test Tx Op Down">
<tags>
<tag>Test tx_disable</tag>
</tags>
<doc>Test SFP port tx disable function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OP_DOWN)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 14:24:49.430" level="INFO">${payload} = {u'OperationalState': u'Down'}</msg>
<status status="PASS" endtime="20200521 14:24:49.430" starttime="20200521 14:24:49.425"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<msg timestamp="20200521 14:24:49.442" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200521 14:24:49.465" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000512 seconds.</msg>
<status status="PASS" endtime="20200521 14:24:49.465" starttime="20200521 14:24:49.430"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:49.466" starttime="20200521 14:24:49.424"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:49.466" starttime="20200521 14:24:49.424"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:49.466" starttime="20200521 14:24:49.423"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:49.466" starttime="20200521 14:24:49.290"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:49.466" starttime="20200521 14:24:49.290"></status>
</kw>
<kw type="foritem" name="${ID} = 2">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:24:49.478" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/2</msg>
<msg timestamp="20200521 14:24:49.490" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/2: 0.000539 seconds.</msg>
<msg timestamp="20200521 14:24:49.491" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:24:49 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:24:49.491" starttime="20200521 14:24:49.467"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:24:49.492" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:24:49.492" starttime="20200521 14:24:49.491"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:24:49.493" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:24:49.493" starttime="20200521 14:24:49.492"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:24:49.494" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:24:49.494" starttime="20200521 14:24:49.493"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.495" starttime="20200521 14:24:49.494"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.496" starttime="20200521 14:24:49.495"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.497" starttime="20200521 14:24:49.496"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.498" starttime="20200521 14:24:49.498"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:49.499" starttime="20200521 14:24:49.497"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:49.499" starttime="20200521 14:24:49.466"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:49.499" starttime="20200521 14:24:49.466"></status>
</kw>
<kw type="foritem" name="${ID} = 3">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:24:49.510" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/3</msg>
<msg timestamp="20200521 14:24:49.519" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/3: 0.00058 seconds.</msg>
<msg timestamp="20200521 14:24:49.520" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:24:49 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:24:49.520" starttime="20200521 14:24:49.500"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:24:49.521" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:24:49.521" starttime="20200521 14:24:49.520"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:24:49.522" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:24:49.522" starttime="20200521 14:24:49.521"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:24:49.523" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:24:49.523" starttime="20200521 14:24:49.522"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.523" starttime="20200521 14:24:49.523"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.524" starttime="20200521 14:24:49.524"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.525" starttime="20200521 14:24:49.525"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.527" starttime="20200521 14:24:49.527"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:49.527" starttime="20200521 14:24:49.526"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:49.527" starttime="20200521 14:24:49.499"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:49.527" starttime="20200521 14:24:49.499"></status>
</kw>
<kw type="foritem" name="${ID} = 4">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:24:49.556" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/4</msg>
<msg timestamp="20200521 14:24:49.567" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/4: 0.000672 seconds.</msg>
<msg timestamp="20200521 14:24:49.568" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:24:49 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:24:49.568" starttime="20200521 14:24:49.528"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:24:49.569" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:24:49.569" starttime="20200521 14:24:49.568"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:24:49.570" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:24:49.570" starttime="20200521 14:24:49.569"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:24:49.571" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:24:49.571" starttime="20200521 14:24:49.570"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.572" starttime="20200521 14:24:49.571"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.572" starttime="20200521 14:24:49.572"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.574" starttime="20200521 14:24:49.573"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.575" starttime="20200521 14:24:49.575"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:49.575" starttime="20200521 14:24:49.574"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:49.575" starttime="20200521 14:24:49.528"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:49.575" starttime="20200521 14:24:49.527"></status>
</kw>
<kw type="foritem" name="${ID} = 5">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:24:49.586" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/5</msg>
<msg timestamp="20200521 14:24:49.598" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/5: 0.000551 seconds.</msg>
<msg timestamp="20200521 14:24:49.598" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:24:49 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:24:49.598" starttime="20200521 14:24:49.576"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:24:49.599" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:24:49.600" starttime="20200521 14:24:49.599"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:24:49.601" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:24:49.601" starttime="20200521 14:24:49.600"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:24:49.602" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:24:49.602" starttime="20200521 14:24:49.601"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.602" starttime="20200521 14:24:49.602"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.603" starttime="20200521 14:24:49.603"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.604" starttime="20200521 14:24:49.603"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.606" starttime="20200521 14:24:49.605"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:49.606" starttime="20200521 14:24:49.605"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:49.606" starttime="20200521 14:24:49.576"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:49.606" starttime="20200521 14:24:49.576"></status>
</kw>
<kw type="foritem" name="${ID} = 6">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:24:49.653" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/6</msg>
<msg timestamp="20200521 14:24:49.664" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/6: 0.000472 seconds.</msg>
<msg timestamp="20200521 14:24:49.665" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:24:49 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:24:49.665" starttime="20200521 14:24:49.607"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:24:49.666" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:24:49.666" starttime="20200521 14:24:49.665"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:24:49.667" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:24:49.667" starttime="20200521 14:24:49.666"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:24:49.667" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:24:49.667" starttime="20200521 14:24:49.667"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.668" starttime="20200521 14:24:49.668"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.669" starttime="20200521 14:24:49.668"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.670" starttime="20200521 14:24:49.669"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.671" starttime="20200521 14:24:49.671"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:49.671" starttime="20200521 14:24:49.670"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:49.671" starttime="20200521 14:24:49.607"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:49.671" starttime="20200521 14:24:49.606"></status>
</kw>
<kw type="foritem" name="${ID} = 7">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:24:49.682" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/7</msg>
<msg timestamp="20200521 14:24:49.693" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/7: 0.000512 seconds.</msg>
<msg timestamp="20200521 14:24:49.694" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:24:49 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:24:49.694" starttime="20200521 14:24:49.672"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:24:49.695" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:24:49.695" starttime="20200521 14:24:49.694"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:24:49.696" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:24:49.696" starttime="20200521 14:24:49.695"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:24:49.697" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:24:49.697" starttime="20200521 14:24:49.696"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.698" starttime="20200521 14:24:49.697"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.698" starttime="20200521 14:24:49.698"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.699" starttime="20200521 14:24:49.699"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.701" starttime="20200521 14:24:49.700"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:49.701" starttime="20200521 14:24:49.700"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:49.701" starttime="20200521 14:24:49.672"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:49.701" starttime="20200521 14:24:49.672"></status>
</kw>
<kw type="foritem" name="${ID} = 8">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:24:49.712" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/8</msg>
<msg timestamp="20200521 14:24:49.720" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/8: 0.00047 seconds.</msg>
<msg timestamp="20200521 14:24:49.721" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:24:50 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:24:49.721" starttime="20200521 14:24:49.702"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:24:49.722" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:24:49.722" starttime="20200521 14:24:49.722"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:24:49.723" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:24:49.723" starttime="20200521 14:24:49.722"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:24:49.724" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:24:49.724" starttime="20200521 14:24:49.723"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.727" starttime="20200521 14:24:49.724"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.728" starttime="20200521 14:24:49.727"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.754" starttime="20200521 14:24:49.728"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.755" starttime="20200521 14:24:49.755"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:49.756" starttime="20200521 14:24:49.755"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:49.756" starttime="20200521 14:24:49.701"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:49.756" starttime="20200521 14:24:49.701"></status>
</kw>
<kw type="foritem" name="${ID} = 9">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:24:49.771" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/9</msg>
<msg timestamp="20200521 14:24:49.782" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/9: 0.000561 seconds.</msg>
<msg timestamp="20200521 14:24:49.783" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:24:50 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:24:49.783" starttime="20200521 14:24:49.757"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:24:49.784" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:24:49.784" starttime="20200521 14:24:49.784"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:24:49.785" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:24:49.785" starttime="20200521 14:24:49.785"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:24:49.786" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:24:49.786" starttime="20200521 14:24:49.786"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.787" starttime="20200521 14:24:49.786"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.787" starttime="20200521 14:24:49.787"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.788" starttime="20200521 14:24:49.788"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.790" starttime="20200521 14:24:49.790"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:49.790" starttime="20200521 14:24:49.789"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:49.790" starttime="20200521 14:24:49.756"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:49.790" starttime="20200521 14:24:49.756"></status>
</kw>
<kw type="foritem" name="${ID} = 10">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:24:49.801" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/10</msg>
<msg timestamp="20200521 14:24:49.811" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/10: 0.000656 seconds.</msg>
<msg timestamp="20200521 14:24:49.812" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:24:50 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:24:49.812" starttime="20200521 14:24:49.791"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:24:49.813" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:24:49.813" starttime="20200521 14:24:49.813"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:24:49.814" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:24:49.814" starttime="20200521 14:24:49.814"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:24:49.815" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:24:49.815" starttime="20200521 14:24:49.815"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.816" starttime="20200521 14:24:49.815"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.816" starttime="20200521 14:24:49.816"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.817" starttime="20200521 14:24:49.817"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.825" starttime="20200521 14:24:49.818"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:49.825" starttime="20200521 14:24:49.818"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:49.825" starttime="20200521 14:24:49.791"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:49.825" starttime="20200521 14:24:49.791"></status>
</kw>
<kw type="foritem" name="${ID} = 11">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:24:49.837" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/11</msg>
<msg timestamp="20200521 14:24:49.870" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/11: 0.002127 seconds.</msg>
<msg timestamp="20200521 14:24:49.871" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:24:50 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:24:49.871" starttime="20200521 14:24:49.826"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:24:49.872" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:24:49.872" starttime="20200521 14:24:49.871"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:24:49.873" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:24:49.873" starttime="20200521 14:24:49.872"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:24:49.874" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:24:49.874" starttime="20200521 14:24:49.873"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.875" starttime="20200521 14:24:49.874"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.877" starttime="20200521 14:24:49.876"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.879" starttime="20200521 14:24:49.877"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.881" starttime="20200521 14:24:49.880"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:49.881" starttime="20200521 14:24:49.879"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:49.881" starttime="20200521 14:24:49.826"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:49.881" starttime="20200521 14:24:49.825"></status>
</kw>
<kw type="foritem" name="${ID} = 12">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:24:49.893" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/12</msg>
<msg timestamp="20200521 14:24:49.900" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/12: 0.000465 seconds.</msg>
<msg timestamp="20200521 14:24:49.901" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:24:50 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:24:49.901" starttime="20200521 14:24:49.882"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:24:49.902" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:24:49.902" starttime="20200521 14:24:49.901"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:24:49.903" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:24:49.903" starttime="20200521 14:24:49.902"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:24:49.904" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:24:49.904" starttime="20200521 14:24:49.903"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.905" starttime="20200521 14:24:49.904"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.907" starttime="20200521 14:24:49.906"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.908" starttime="20200521 14:24:49.907"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.916" starttime="20200521 14:24:49.915"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:49.916" starttime="20200521 14:24:49.914"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:49.916" starttime="20200521 14:24:49.882"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:49.916" starttime="20200521 14:24:49.881"></status>
</kw>
<kw type="foritem" name="${ID} = 13">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:24:49.927" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/13</msg>
<msg timestamp="20200521 14:24:49.937" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/13: 0.000453 seconds.</msg>
<msg timestamp="20200521 14:24:49.937" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:24:50 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:24:49.937" starttime="20200521 14:24:49.917"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:24:49.938" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:24:49.939" starttime="20200521 14:24:49.938"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:24:49.940" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:24:49.940" starttime="20200521 14:24:49.939"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:24:49.940" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:24:49.940" starttime="20200521 14:24:49.940"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.942" starttime="20200521 14:24:49.941"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.943" starttime="20200521 14:24:49.942"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.944" starttime="20200521 14:24:49.943"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.946" starttime="20200521 14:24:49.945"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:49.947" starttime="20200521 14:24:49.945"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:49.947" starttime="20200521 14:24:49.916"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:49.947" starttime="20200521 14:24:49.916"></status>
</kw>
<kw type="foritem" name="${ID} = 14">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:24:49.958" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/14</msg>
<msg timestamp="20200521 14:24:49.969" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/14: 0.000495 seconds.</msg>
<msg timestamp="20200521 14:24:49.970" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:24:50 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:24:49.970" starttime="20200521 14:24:49.948"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:24:49.971" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:24:49.971" starttime="20200521 14:24:49.970"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:24:49.972" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:24:49.972" starttime="20200521 14:24:49.971"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:24:49.972" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:24:49.973" starttime="20200521 14:24:49.972"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.974" starttime="20200521 14:24:49.973"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.975" starttime="20200521 14:24:49.974"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.977" starttime="20200521 14:24:49.976"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:49.979" starttime="20200521 14:24:49.978"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:49.979" starttime="20200521 14:24:49.977"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:49.979" starttime="20200521 14:24:49.947"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:49.979" starttime="20200521 14:24:49.947"></status>
</kw>
<kw type="foritem" name="${ID} = 15">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:24:50.026" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/15</msg>
<msg timestamp="20200521 14:24:50.037" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/15: 0.000455 seconds.</msg>
<msg timestamp="20200521 14:24:50.038" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:24:50 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:24:50.038" starttime="20200521 14:24:49.980"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:24:50.039" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:24:50.039" starttime="20200521 14:24:50.038"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:24:50.041" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:24:50.041" starttime="20200521 14:24:50.039"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:24:50.042" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:24:50.042" starttime="20200521 14:24:50.042"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:50.044" starttime="20200521 14:24:50.043"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:50.045" starttime="20200521 14:24:50.044"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:50.046" starttime="20200521 14:24:50.045"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:50.048" starttime="20200521 14:24:50.047"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:50.048" starttime="20200521 14:24:50.047"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:50.049" starttime="20200521 14:24:49.979"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:50.049" starttime="20200521 14:24:49.979"></status>
</kw>
<kw type="foritem" name="${ID} = 16">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:24:50.060" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/16</msg>
<msg timestamp="20200521 14:24:50.075" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/16: 0.000431 seconds.</msg>
<msg timestamp="20200521 14:24:50.075" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:24:50 GMT
connection Keep-Alive
content-type application/json
content-length 2314


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:24:50.076" starttime="20200521 14:24:50.050"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:24:50.077" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:24:50.077" starttime="20200521 14:24:50.076"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:24:50.078" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200521 14:24:50.078" starttime="20200521 14:24:50.077"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:24:50.079" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:24:50.079" starttime="20200521 14:24:50.078"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:50.080" starttime="20200521 14:24:50.079"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:50.081" starttime="20200521 14:24:50.080"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:50.083" starttime="20200521 14:24:50.082"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
</arguments>
<kw name="Test Tx Op Down">
<tags>
<tag>Test tx_disable</tag>
</tags>
<doc>Test SFP port tx disable function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OP_DOWN)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 14:24:50.090" level="INFO">${payload} = {u'OperationalState': u'Down'}</msg>
<status status="PASS" endtime="20200521 14:24:50.090" starttime="20200521 14:24:50.085"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<msg timestamp="20200521 14:24:50.103" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/16</msg>
<msg timestamp="20200521 14:24:50.389" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/16: 0.000518 seconds.</msg>
<status status="PASS" endtime="20200521 14:24:50.389" starttime="20200521 14:24:50.091"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:50.389" starttime="20200521 14:24:50.084"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:50.389" starttime="20200521 14:24:50.084"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:50.390" starttime="20200521 14:24:50.083"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:50.390" starttime="20200521 14:24:50.049"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:50.390" starttime="20200521 14:24:50.049"></status>
</kw>
<kw type="foritem" name="${ID} = 17">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:24:50.401" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/17</msg>
<msg timestamp="20200521 14:24:50.414" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/17: 0.00045 seconds.</msg>
<msg timestamp="20200521 14:24:50.414" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:24:50 GMT
connection Keep-Alive
content-type application/json
content-length 2438


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:24:50.414" starttime="20200521 14:24:50.391"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:24:50.415" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:24:50.415" starttime="20200521 14:24:50.415"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:24:50.416" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200521 14:24:50.416" starttime="20200521 14:24:50.416"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:24:50.417" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200521 14:24:50.417" starttime="20200521 14:24:50.417"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:50.419" starttime="20200521 14:24:50.418"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:50.421" starttime="20200521 14:24:50.419"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:50.422" starttime="20200521 14:24:50.421"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:50.424" starttime="20200521 14:24:50.423"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:50.424" starttime="20200521 14:24:50.423"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:50.424" starttime="20200521 14:24:50.390"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:50.424" starttime="20200521 14:24:50.390"></status>
</kw>
<kw type="foritem" name="${ID} = 18">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:24:50.435" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/18</msg>
<msg timestamp="20200521 14:24:50.447" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/18: 0.000611 seconds.</msg>
<msg timestamp="20200521 14:24:50.447" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:24:50 GMT
connection Keep-Alive
content-type application/json
content-length 2430


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:24:50.448" starttime="20200521 14:24:50.425"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:24:50.448" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:24:50.449" starttime="20200521 14:24:50.448"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:24:50.450" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200521 14:24:50.450" starttime="20200521 14:24:50.449"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:24:50.451" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200521 14:24:50.451" starttime="20200521 14:24:50.450"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:50.452" starttime="20200521 14:24:50.451"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:50.453" starttime="20200521 14:24:50.452"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:50.455" starttime="20200521 14:24:50.454"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:50.456" starttime="20200521 14:24:50.456"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:50.456" starttime="20200521 14:24:50.455"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:50.457" starttime="20200521 14:24:50.424"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:50.457" starttime="20200521 14:24:50.424"></status>
</kw>
<kw type="foritem" name="${ID} = 19">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:24:50.468" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/19</msg>
<msg timestamp="20200521 14:24:50.479" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/19: 0.000439 seconds.</msg>
<msg timestamp="20200521 14:24:50.480" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:24:50 GMT
connection Keep-Alive
content-type application/json
content-length 1056


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:24:50.480" starttime="20200521 14:24:50.457"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:24:50.480" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:24:50.481" starttime="20200521 14:24:50.480"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:24:50.481" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:24:50.482" starttime="20200521 14:24:50.481"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:24:50.482" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200521 14:24:50.482" starttime="20200521 14:24:50.482"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:50.484" starttime="20200521 14:24:50.483"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:50.485" starttime="20200521 14:24:50.484"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:50.486" starttime="20200521 14:24:50.485"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:50.488" starttime="20200521 14:24:50.487"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:50.488" starttime="20200521 14:24:50.487"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:50.488" starttime="20200521 14:24:50.457"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:50.488" starttime="20200521 14:24:50.457"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:50.488" starttime="20200521 14:24:49.289"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:50.489" starttime="20200521 14:24:49.097"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PON_TYPE}' == 'GPON'</arg>
<arg>Log to console</arg>
<arg>"####### GPON TESTING ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### XGSPON TESTING ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### XGSPON TESTING ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:50.491" starttime="20200521 14:24:50.490"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:50.491" starttime="20200521 14:24:50.489"></status>
</kw>
<kw name="Test Bal Enable">
<tags>
<tag>Verify_Bal_Enable</tag>
</tags>
<doc>Enable Bal</doc>
<kw type="for" name="${i} IN RANGE [ 1 | 80 ]">
<kw type="foritem" name="${i} = 1">
<kw name="Test Wait Bal Enable">
<tags>
<tag>Verify_Waut_Bal_Enable</tag>
</tags>
<doc>Wait Enable Bal</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:50.493" starttime="20200521 14:24:50.492"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:24:50.503" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:24:50.545" level="INFO">Response Time to /redfish/v1/Olt: 0.000476 seconds.</msg>
<msg timestamp="20200521 14:24:50.545" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:24:50 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:24:50.546" starttime="20200521 14:24:50.493"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:24:50.546" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:24:50.547" starttime="20200521 14:24:50.546"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['BalState']}</arg>
</arguments>
<assign>
<var>${BAL_STATE}</var>
</assign>
<msg timestamp="20200521 14:24:50.547" level="INFO">${BAL_STATE} = up</msg>
<status status="PASS" endtime="20200521 14:24:50.547" starttime="20200521 14:24:50.547"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BAL_STATE}' == 'up'</arg>
<arg>Log to console</arg>
<arg>"####### Up ######"</arg>
<arg>${bal_state} =</arg>
<arg>"up"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Up ######"</arg>
<arg>${bal_state} =</arg>
<arg>"up"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:50.550" starttime="20200521 14:24:50.548"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:50.550" starttime="20200521 14:24:50.548"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:24:51.577" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:24:51.578" starttime="20200521 14:24:50.551"></status>
</kw>
<msg timestamp="20200521 14:24:51.578" level="INFO">${result} = up</msg>
<status status="PASS" endtime="20200521 14:24:51.578" starttime="20200521 14:24:50.492"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:51.579" starttime="20200521 14:24:51.578"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${result}' == 'up'</arg>
</arguments>
<msg timestamp="20200521 14:24:51.580" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20200521 14:24:51.580" starttime="20200521 14:24:51.580"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:51.580" starttime="20200521 14:24:50.491"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:51.581" starttime="20200521 14:24:50.491"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${result}</arg>
<arg>up</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:51.581" starttime="20200521 14:24:51.581"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OPT_ENABLE)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 14:24:51.587" level="INFO">${payload} = {u'OltOperateState': True}</msg>
<status status="PASS" endtime="20200521 14:24:51.587" starttime="20200521 14:24:51.582"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:24:51.597" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:24:53.212" level="INFO">Response Time to /redfish/v1/Olt: 0.000447 seconds.</msg>
<msg timestamp="20200521 14:24:53.213" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:24:53 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:24:53.213" starttime="20200521 14:24:51.587"></status>
</kw>
<kw type="for" name="${i} IN RANGE [ 1 | 60 ]">
<kw type="foritem" name="${i} = 1">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:53.215" starttime="20200521 14:24:53.214"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:24:53.225" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:24:53.236" level="INFO">Response Time to /redfish/v1/Olt: 0.000427 seconds.</msg>
<msg timestamp="20200521 14:24:53.236" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:24:53 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:24:53.236" starttime="20200521 14:24:53.215"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:24:53.237" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:24:53.237" starttime="20200521 14:24:53.236"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 14:24:53.238" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 14:24:53.238" starttime="20200521 14:24:53.237"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:53.239" starttime="20200521 14:24:53.238"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:53.241" starttime="20200521 14:24:53.240"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:53.241" starttime="20200521 14:24:53.240"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:24:54.242" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:24:54.242" starttime="20200521 14:24:53.242"></status>
</kw>
<msg timestamp="20200521 14:24:54.243" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 14:24:54.243" starttime="20200521 14:24:53.213"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:54.244" starttime="20200521 14:24:54.243"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:54.244" starttime="20200521 14:24:54.244"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:54.244" starttime="20200521 14:24:53.213"></status>
</kw>
<kw type="foritem" name="${i} = 2">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:54.245" starttime="20200521 14:24:54.245"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:24:54.255" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:24:54.265" level="INFO">Response Time to /redfish/v1/Olt: 0.000491 seconds.</msg>
<msg timestamp="20200521 14:24:54.266" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:24:54 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:24:54.266" starttime="20200521 14:24:54.246"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:24:54.267" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:24:54.267" starttime="20200521 14:24:54.266"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 14:24:54.267" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 14:24:54.267" starttime="20200521 14:24:54.267"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:54.270" starttime="20200521 14:24:54.268"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:54.274" starttime="20200521 14:24:54.271"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:54.274" starttime="20200521 14:24:54.270"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:24:55.275" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:24:55.275" starttime="20200521 14:24:54.274"></status>
</kw>
<msg timestamp="20200521 14:24:55.275" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 14:24:55.275" starttime="20200521 14:24:54.244"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:55.276" starttime="20200521 14:24:55.275"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:55.276" starttime="20200521 14:24:55.276"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:55.276" starttime="20200521 14:24:54.244"></status>
</kw>
<kw type="foritem" name="${i} = 3">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:55.278" starttime="20200521 14:24:55.277"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:24:55.290" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:24:55.299" level="INFO">Response Time to /redfish/v1/Olt: 0.000532 seconds.</msg>
<msg timestamp="20200521 14:24:55.299" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:24:55 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:24:55.299" starttime="20200521 14:24:55.278"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:24:55.300" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:24:55.300" starttime="20200521 14:24:55.300"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 14:24:55.301" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 14:24:55.301" starttime="20200521 14:24:55.301"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:55.302" starttime="20200521 14:24:55.302"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:55.303" starttime="20200521 14:24:55.303"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:55.303" starttime="20200521 14:24:55.302"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:24:56.304" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:24:56.304" starttime="20200521 14:24:55.304"></status>
</kw>
<msg timestamp="20200521 14:24:56.305" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 14:24:56.305" starttime="20200521 14:24:55.277"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:56.306" starttime="20200521 14:24:56.305"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:56.306" starttime="20200521 14:24:56.306"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:56.306" starttime="20200521 14:24:55.277"></status>
</kw>
<kw type="foritem" name="${i} = 4">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:56.307" starttime="20200521 14:24:56.307"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:24:56.317" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:24:56.328" level="INFO">Response Time to /redfish/v1/Olt: 0.000781 seconds.</msg>
<msg timestamp="20200521 14:24:56.329" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:24:56 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:24:56.329" starttime="20200521 14:24:56.307"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:24:56.330" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:24:56.330" starttime="20200521 14:24:56.329"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 14:24:56.331" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 14:24:56.331" starttime="20200521 14:24:56.330"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:56.332" starttime="20200521 14:24:56.331"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:56.333" starttime="20200521 14:24:56.333"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:56.333" starttime="20200521 14:24:56.332"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:24:57.337" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:24:57.337" starttime="20200521 14:24:56.333"></status>
</kw>
<msg timestamp="20200521 14:24:57.337" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 14:24:57.337" starttime="20200521 14:24:56.306"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:57.339" starttime="20200521 14:24:57.338"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:57.339" starttime="20200521 14:24:57.339"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:57.340" starttime="20200521 14:24:56.306"></status>
</kw>
<kw type="foritem" name="${i} = 5">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:57.341" starttime="20200521 14:24:57.340"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:24:57.353" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:24:57.363" level="INFO">Response Time to /redfish/v1/Olt: 0.000429 seconds.</msg>
<msg timestamp="20200521 14:24:57.363" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:24:57 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:24:57.363" starttime="20200521 14:24:57.342"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:24:57.364" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:24:57.364" starttime="20200521 14:24:57.364"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 14:24:57.365" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 14:24:57.365" starttime="20200521 14:24:57.365"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:57.367" starttime="20200521 14:24:57.366"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:57.369" starttime="20200521 14:24:57.368"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:57.369" starttime="20200521 14:24:57.367"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:24:58.369" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:24:58.370" starttime="20200521 14:24:57.369"></status>
</kw>
<msg timestamp="20200521 14:24:58.370" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 14:24:58.370" starttime="20200521 14:24:57.340"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:58.371" starttime="20200521 14:24:58.370"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:58.371" starttime="20200521 14:24:58.371"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:58.371" starttime="20200521 14:24:57.340"></status>
</kw>
<kw type="foritem" name="${i} = 6">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:58.372" starttime="20200521 14:24:58.372"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:24:58.383" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:24:58.394" level="INFO">Response Time to /redfish/v1/Olt: 0.000462 seconds.</msg>
<msg timestamp="20200521 14:24:58.395" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:24:58 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:24:58.395" starttime="20200521 14:24:58.372"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:24:58.396" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:24:58.396" starttime="20200521 14:24:58.395"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 14:24:58.397" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 14:24:58.397" starttime="20200521 14:24:58.396"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:58.397" starttime="20200521 14:24:58.397"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:58.399" starttime="20200521 14:24:58.398"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:58.399" starttime="20200521 14:24:58.398"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:24:59.401" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:24:59.401" starttime="20200521 14:24:58.399"></status>
</kw>
<msg timestamp="20200521 14:24:59.402" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 14:24:59.402" starttime="20200521 14:24:58.371"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:59.404" starttime="20200521 14:24:59.403"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:59.404" starttime="20200521 14:24:59.404"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:59.404" starttime="20200521 14:24:58.371"></status>
</kw>
<kw type="foritem" name="${i} = 7">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:59.406" starttime="20200521 14:24:59.405"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:24:59.417" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:24:59.427" level="INFO">Response Time to /redfish/v1/Olt: 0.000419 seconds.</msg>
<msg timestamp="20200521 14:24:59.428" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:24:59 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:24:59.428" starttime="20200521 14:24:59.407"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:24:59.429" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:24:59.429" starttime="20200521 14:24:59.429"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 14:24:59.430" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 14:24:59.430" starttime="20200521 14:24:59.430"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:59.432" starttime="20200521 14:24:59.431"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:24:59.434" starttime="20200521 14:24:59.433"></status>
</kw>
<status status="PASS" endtime="20200521 14:24:59.434" starttime="20200521 14:24:59.432"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:25:00.441" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:25:00.442" starttime="20200521 14:24:59.434"></status>
</kw>
<msg timestamp="20200521 14:25:00.442" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 14:25:00.442" starttime="20200521 14:24:59.405"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:00.444" starttime="20200521 14:25:00.443"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:00.445" starttime="20200521 14:25:00.444"></status>
</kw>
<status status="PASS" endtime="20200521 14:25:00.445" starttime="20200521 14:24:59.405"></status>
</kw>
<kw type="foritem" name="${i} = 8">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:00.448" starttime="20200521 14:25:00.447"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:25:00.460" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:25:00.470" level="INFO">Response Time to /redfish/v1/Olt: 0.000633 seconds.</msg>
<msg timestamp="20200521 14:25:00.471" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:25:00 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:25:00.471" starttime="20200521 14:25:00.448"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:25:00.472" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:25:00.472" starttime="20200521 14:25:00.471"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 14:25:00.473" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 14:25:00.473" starttime="20200521 14:25:00.472"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:00.474" starttime="20200521 14:25:00.473"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:00.477" starttime="20200521 14:25:00.476"></status>
</kw>
<status status="PASS" endtime="20200521 14:25:00.477" starttime="20200521 14:25:00.475"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:25:01.482" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:25:01.482" starttime="20200521 14:25:00.477"></status>
</kw>
<msg timestamp="20200521 14:25:01.483" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 14:25:01.483" starttime="20200521 14:25:00.445"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:01.484" starttime="20200521 14:25:01.483"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:01.485" starttime="20200521 14:25:01.485"></status>
</kw>
<status status="PASS" endtime="20200521 14:25:01.485" starttime="20200521 14:25:00.445"></status>
</kw>
<kw type="foritem" name="${i} = 9">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:01.487" starttime="20200521 14:25:01.486"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:25:01.499" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:25:01.505" level="INFO">Response Time to /redfish/v1/Olt: 0.000471 seconds.</msg>
<msg timestamp="20200521 14:25:01.506" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:25:01 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:25:01.506" starttime="20200521 14:25:01.488"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:25:01.507" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:25:01.507" starttime="20200521 14:25:01.506"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 14:25:01.508" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 14:25:01.508" starttime="20200521 14:25:01.508"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:01.510" starttime="20200521 14:25:01.509"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:01.513" starttime="20200521 14:25:01.512"></status>
</kw>
<status status="PASS" endtime="20200521 14:25:01.513" starttime="20200521 14:25:01.511"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:25:02.517" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:25:02.517" starttime="20200521 14:25:01.513"></status>
</kw>
<msg timestamp="20200521 14:25:02.518" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 14:25:02.518" starttime="20200521 14:25:01.486"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:02.519" starttime="20200521 14:25:02.518"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:02.520" starttime="20200521 14:25:02.520"></status>
</kw>
<status status="PASS" endtime="20200521 14:25:02.520" starttime="20200521 14:25:01.485"></status>
</kw>
<kw type="foritem" name="${i} = 10">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:02.522" starttime="20200521 14:25:02.521"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:25:02.534" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:25:02.545" level="INFO">Response Time to /redfish/v1/Olt: 0.000419 seconds.</msg>
<msg timestamp="20200521 14:25:02.545" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:25:02 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:25:02.545" starttime="20200521 14:25:02.523"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:25:02.546" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:25:02.546" starttime="20200521 14:25:02.546"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 14:25:02.547" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 14:25:02.548" starttime="20200521 14:25:02.547"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:02.550" starttime="20200521 14:25:02.548"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:02.552" starttime="20200521 14:25:02.551"></status>
</kw>
<status status="PASS" endtime="20200521 14:25:02.552" starttime="20200521 14:25:02.550"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:25:03.553" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:25:03.554" starttime="20200521 14:25:02.553"></status>
</kw>
<msg timestamp="20200521 14:25:03.554" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 14:25:03.554" starttime="20200521 14:25:02.521"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:03.555" starttime="20200521 14:25:03.555"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:03.556" starttime="20200521 14:25:03.556"></status>
</kw>
<status status="PASS" endtime="20200521 14:25:03.556" starttime="20200521 14:25:02.520"></status>
</kw>
<kw type="foritem" name="${i} = 11">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:03.558" starttime="20200521 14:25:03.557"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:25:03.573" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:25:03.583" level="INFO">Response Time to /redfish/v1/Olt: 0.000674 seconds.</msg>
<msg timestamp="20200521 14:25:03.584" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:25:03 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:25:03.584" starttime="20200521 14:25:03.558"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:25:03.585" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:25:03.586" starttime="20200521 14:25:03.585"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 14:25:03.586" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 14:25:03.587" starttime="20200521 14:25:03.586"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:03.590" starttime="20200521 14:25:03.587"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:03.592" starttime="20200521 14:25:03.592"></status>
</kw>
<status status="PASS" endtime="20200521 14:25:03.592" starttime="20200521 14:25:03.591"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:25:04.593" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:25:04.593" starttime="20200521 14:25:03.592"></status>
</kw>
<msg timestamp="20200521 14:25:04.594" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 14:25:04.594" starttime="20200521 14:25:03.556"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:04.595" starttime="20200521 14:25:04.594"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:04.595" starttime="20200521 14:25:04.595"></status>
</kw>
<status status="PASS" endtime="20200521 14:25:04.596" starttime="20200521 14:25:03.556"></status>
</kw>
<kw type="foritem" name="${i} = 12">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:04.597" starttime="20200521 14:25:04.596"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:25:04.610" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:25:04.620" level="INFO">Response Time to /redfish/v1/Olt: 0.000542 seconds.</msg>
<msg timestamp="20200521 14:25:04.620" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:25:04 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:25:04.621" starttime="20200521 14:25:04.598"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:25:04.622" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:25:04.622" starttime="20200521 14:25:04.621"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 14:25:04.623" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 14:25:04.623" starttime="20200521 14:25:04.622"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:04.623" starttime="20200521 14:25:04.623"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:04.625" starttime="20200521 14:25:04.625"></status>
</kw>
<status status="PASS" endtime="20200521 14:25:04.625" starttime="20200521 14:25:04.624"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:25:05.626" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:25:05.626" starttime="20200521 14:25:04.625"></status>
</kw>
<msg timestamp="20200521 14:25:05.627" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 14:25:05.627" starttime="20200521 14:25:04.596"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:05.628" starttime="20200521 14:25:05.627"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:05.628" starttime="20200521 14:25:05.628"></status>
</kw>
<status status="PASS" endtime="20200521 14:25:05.628" starttime="20200521 14:25:04.596"></status>
</kw>
<kw type="foritem" name="${i} = 13">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:05.630" starttime="20200521 14:25:05.630"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:25:05.642" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:25:05.653" level="INFO">Response Time to /redfish/v1/Olt: 0.000599 seconds.</msg>
<msg timestamp="20200521 14:25:05.654" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:25:05 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:25:05.654" starttime="20200521 14:25:05.630"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:25:05.655" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:25:05.655" starttime="20200521 14:25:05.655"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 14:25:05.656" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 14:25:05.656" starttime="20200521 14:25:05.656"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:05.657" starttime="20200521 14:25:05.657"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:05.661" starttime="20200521 14:25:05.659"></status>
</kw>
<status status="PASS" endtime="20200521 14:25:05.661" starttime="20200521 14:25:05.658"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:25:06.662" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:25:06.663" starttime="20200521 14:25:05.662"></status>
</kw>
<msg timestamp="20200521 14:25:06.663" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 14:25:06.663" starttime="20200521 14:25:05.629"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:06.664" starttime="20200521 14:25:06.663"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:06.664" starttime="20200521 14:25:06.664"></status>
</kw>
<status status="PASS" endtime="20200521 14:25:06.664" starttime="20200521 14:25:05.629"></status>
</kw>
<kw type="foritem" name="${i} = 14">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:06.666" starttime="20200521 14:25:06.665"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:25:06.678" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:25:06.689" level="INFO">Response Time to /redfish/v1/Olt: 0.000587 seconds.</msg>
<msg timestamp="20200521 14:25:06.690" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:25:06 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:25:06.690" starttime="20200521 14:25:06.666"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:25:06.691" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:25:06.691" starttime="20200521 14:25:06.690"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 14:25:06.692" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 14:25:06.692" starttime="20200521 14:25:06.692"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:06.693" starttime="20200521 14:25:06.692"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:06.697" starttime="20200521 14:25:06.694"></status>
</kw>
<status status="PASS" endtime="20200521 14:25:06.697" starttime="20200521 14:25:06.693"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:25:07.698" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:25:07.698" starttime="20200521 14:25:06.697"></status>
</kw>
<msg timestamp="20200521 14:25:07.698" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 14:25:07.698" starttime="20200521 14:25:06.665"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:07.699" starttime="20200521 14:25:07.699"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:07.700" starttime="20200521 14:25:07.699"></status>
</kw>
<status status="PASS" endtime="20200521 14:25:07.700" starttime="20200521 14:25:06.665"></status>
</kw>
<kw type="foritem" name="${i} = 15">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:07.701" starttime="20200521 14:25:07.701"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:25:07.714" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:25:07.724" level="INFO">Response Time to /redfish/v1/Olt: 0.000458 seconds.</msg>
<msg timestamp="20200521 14:25:07.725" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:25:08 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:25:07.725" starttime="20200521 14:25:07.701"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:25:07.726" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:25:07.726" starttime="20200521 14:25:07.726"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 14:25:07.727" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 14:25:07.727" starttime="20200521 14:25:07.727"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:07.728" starttime="20200521 14:25:07.728"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:07.732" starttime="20200521 14:25:07.729"></status>
</kw>
<status status="PASS" endtime="20200521 14:25:07.732" starttime="20200521 14:25:07.729"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:25:08.733" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:25:08.734" starttime="20200521 14:25:07.733"></status>
</kw>
<msg timestamp="20200521 14:25:08.734" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 14:25:08.734" starttime="20200521 14:25:07.700"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:08.735" starttime="20200521 14:25:08.734"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:08.735" starttime="20200521 14:25:08.735"></status>
</kw>
<status status="PASS" endtime="20200521 14:25:08.736" starttime="20200521 14:25:07.700"></status>
</kw>
<kw type="foritem" name="${i} = 16">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:08.737" starttime="20200521 14:25:08.737"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:25:08.747" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:25:08.758" level="INFO">Response Time to /redfish/v1/Olt: 0.000711 seconds.</msg>
<msg timestamp="20200521 14:25:08.759" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:25:09 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:25:08.759" starttime="20200521 14:25:08.737"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:25:08.760" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:25:08.760" starttime="20200521 14:25:08.759"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 14:25:08.763" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 14:25:08.763" starttime="20200521 14:25:08.760"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:08.763" starttime="20200521 14:25:08.763"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:08.766" starttime="20200521 14:25:08.764"></status>
</kw>
<status status="PASS" endtime="20200521 14:25:08.766" starttime="20200521 14:25:08.764"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:25:09.767" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:25:09.767" starttime="20200521 14:25:08.767"></status>
</kw>
<msg timestamp="20200521 14:25:09.768" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 14:25:09.768" starttime="20200521 14:25:08.736"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:09.769" starttime="20200521 14:25:09.768"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:09.769" starttime="20200521 14:25:09.769"></status>
</kw>
<status status="PASS" endtime="20200521 14:25:09.769" starttime="20200521 14:25:08.736"></status>
</kw>
<kw type="foritem" name="${i} = 17">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:09.771" starttime="20200521 14:25:09.770"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:25:09.782" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:25:10.802" level="INFO">Response Time to /redfish/v1/Olt: 0.000549 seconds.</msg>
<msg timestamp="20200521 14:25:10.802" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:25:11 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:25:10.802" starttime="20200521 14:25:09.771"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:25:10.803" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:25:10.804" starttime="20200521 14:25:10.803"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 14:25:10.805" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 14:25:10.805" starttime="20200521 14:25:10.804"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:10.806" starttime="20200521 14:25:10.806"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:10.807" starttime="20200521 14:25:10.807"></status>
</kw>
<status status="PASS" endtime="20200521 14:25:10.807" starttime="20200521 14:25:10.806"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:25:11.808" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:25:11.809" starttime="20200521 14:25:10.808"></status>
</kw>
<msg timestamp="20200521 14:25:11.809" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 14:25:11.809" starttime="20200521 14:25:09.770"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:11.810" starttime="20200521 14:25:11.809"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:11.811" starttime="20200521 14:25:11.810"></status>
</kw>
<status status="PASS" endtime="20200521 14:25:11.811" starttime="20200521 14:25:09.769"></status>
</kw>
<kw type="foritem" name="${i} = 18">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:11.812" starttime="20200521 14:25:11.812"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:25:11.822" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:25:11.832" level="INFO">Response Time to /redfish/v1/Olt: 0.000542 seconds.</msg>
<msg timestamp="20200521 14:25:11.833" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:25:12 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:25:11.833" starttime="20200521 14:25:11.812"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:25:11.836" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:25:11.836" starttime="20200521 14:25:11.835"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 14:25:11.837" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 14:25:11.837" starttime="20200521 14:25:11.836"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:11.837" starttime="20200521 14:25:11.837"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:11.843" starttime="20200521 14:25:11.840"></status>
</kw>
<status status="PASS" endtime="20200521 14:25:11.843" starttime="20200521 14:25:11.838"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:25:12.844" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:25:12.844" starttime="20200521 14:25:11.843"></status>
</kw>
<msg timestamp="20200521 14:25:12.844" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 14:25:12.844" starttime="20200521 14:25:11.811"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:12.845" starttime="20200521 14:25:12.845"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:12.846" starttime="20200521 14:25:12.845"></status>
</kw>
<status status="PASS" endtime="20200521 14:25:12.846" starttime="20200521 14:25:11.811"></status>
</kw>
<kw type="foritem" name="${i} = 19">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:12.847" starttime="20200521 14:25:12.847"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:25:12.859" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:25:12.870" level="INFO">Response Time to /redfish/v1/Olt: 0.000591 seconds.</msg>
<msg timestamp="20200521 14:25:12.870" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:25:13 GMT
connection Keep-Alive
content-type application/json
content-length 40


{"BalState":"up","OltOperateState":true}</msg>
<status status="PASS" endtime="20200521 14:25:12.870" starttime="20200521 14:25:12.847"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:25:12.871" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:25:12.871" starttime="20200521 14:25:12.871"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 14:25:12.872" level="INFO">${bal_opt_state} = True</msg>
<status status="PASS" endtime="20200521 14:25:12.872" starttime="20200521 14:25:12.872"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:12.873" starttime="20200521 14:25:12.873"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Up ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:12.874" starttime="20200521 14:25:12.874"></status>
</kw>
<status status="PASS" endtime="20200521 14:25:12.874" starttime="20200521 14:25:12.873"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:25:13.877" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:25:13.877" starttime="20200521 14:25:12.875"></status>
</kw>
<msg timestamp="20200521 14:25:13.877" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20200521 14:25:13.877" starttime="20200521 14:25:12.846"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:13.878" starttime="20200521 14:25:13.878"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20200521 14:25:13.879" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20200521 14:25:13.879" starttime="20200521 14:25:13.879"></status>
</kw>
<status status="PASS" endtime="20200521 14:25:13.879" starttime="20200521 14:25:12.846"></status>
</kw>
<status status="PASS" endtime="20200521 14:25:13.879" starttime="20200521 14:24:53.213"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:13.880" starttime="20200521 14:25:13.879"></status>
</kw>
<status status="PASS" endtime="20200521 14:25:13.880" starttime="20200521 14:24:50.491"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200521 14:25:18.882" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20200521 14:25:18.882" starttime="20200521 14:25:13.880"></status>
</kw>
<kw name="Test Port Present">
<tags>
<tag>Test pon_status present</tag>
</tags>
<doc>Test Pon port present function</doc>
<arguments>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:25:18.893" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200521 14:25:18.908" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000476 seconds.</msg>
<msg timestamp="20200521 14:25:18.909" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:25:19 GMT
connection Keep-Alive
content-type application/json
content-length 2417


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:25:18.909" starttime="20200521 14:25:18.883"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:25:18.910" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:25:18.910" starttime="20200521 14:25:18.909"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:25:18.911" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200521 14:25:18.911" starttime="20200521 14:25:18.910"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:25:18.912" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:25:18.912" starttime="20200521 14:25:18.911"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:18.914" starttime="20200521 14:25:18.912"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:18.915" starttime="20200521 14:25:18.914"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${PORT_ENABLE}'</arg>
<arg>'Enabled'</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:18.916" starttime="20200521 14:25:18.915"></status>
</kw>
<status status="PASS" endtime="20200521 14:25:18.916" starttime="20200521 14:25:18.882"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200521 14:25:23.917" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20200521 14:25:23.917" starttime="20200521 14:25:18.916"></status>
</kw>
<kw name="Enable Port">
<tags>
<tag>Enable Port</tag>
</tags>
<doc>Enable port function</doc>
<arguments>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Enable Port ${ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:23.918" starttime="20200521 14:25:23.918"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($ADM_UP)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 14:25:23.925" level="INFO">${payload} = {u'AdministrativeState': u'Up'}</msg>
<status status="PASS" endtime="20200521 14:25:23.925" starttime="20200521 14:25:23.918"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:25:23.934" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200521 14:25:24.481" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000613 seconds.</msg>
<msg timestamp="20200521 14:25:24.482" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:25:24 GMT
connection Keep-Alive
content-type application/json
content-length 2423


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:25:24.482" starttime="20200521 14:25:23.925"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:25:24.483" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:25:24.483" starttime="20200521 14:25:24.482"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:25:24.494" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200521 14:25:24.509" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000625 seconds.</msg>
<msg timestamp="20200521 14:25:24.510" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:25:24 GMT
connection Keep-Alive
content-type application/json
content-length 2423


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:25:24.510" starttime="20200521 14:25:24.483"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:25:24.511" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:25:24.511" starttime="20200521 14:25:24.511"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['AdministrativeState']}</arg>
</arguments>
<assign>
<var>${ADM_STAT}</var>
</assign>
<msg timestamp="20200521 14:25:24.513" level="INFO">${ADM_STAT} = Up</msg>
<status status="PASS" endtime="20200521 14:25:24.513" starttime="20200521 14:25:24.512"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${ADM_STAT}'</arg>
<arg>'Up'</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:24.514" starttime="20200521 14:25:24.513"></status>
</kw>
<status status="PASS" endtime="20200521 14:25:24.514" starttime="20200521 14:25:23.917"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200521 14:25:29.515" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20200521 14:25:29.515" starttime="20200521 14:25:24.514"></status>
</kw>
<kw name="Test NNI Port Enable">
<tags>
<tag>Verify_nni_enable</tag>
</tags>
<doc>Verify NNI port enable function</doc>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:25:29.525" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/</msg>
<msg timestamp="20200521 14:25:29.541" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/: 0.000503 seconds.</msg>
<msg timestamp="20200521 14:25:29.541" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:25:29 GMT
connection Keep-Alive
content-type application/json
content-length 1467


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPortCollection.EthernetSwitchPor...</msg>
<status status="PASS" endtime="20200521 14:25:29.541" starttime="20200521 14:25:29.516"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:25:29.542" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:25:29.542" starttime="20200521 14:25:29.542"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200521 14:25:29.543" level="INFO">Length is 20</msg>
<msg timestamp="20200521 14:25:29.543" level="INFO">${item_count} = 20</msg>
<status status="PASS" endtime="20200521 14:25:29.543" starttime="20200521 14:25:29.543"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### num ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:29.544" starttime="20200521 14:25:29.544"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PON_TYPE}' == 'GPON'</arg>
<arg>set variable</arg>
<arg>${65}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${17}</arg>
</arguments>
<assign>
<var>${NNI_PORT}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${17}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:29.546" starttime="20200521 14:25:29.545"></status>
</kw>
<msg timestamp="20200521 14:25:29.546" level="INFO">${NNI_PORT} = 17</msg>
<status status="PASS" endtime="20200521 14:25:29.546" starttime="20200521 14:25:29.545"></status>
</kw>
<kw name="Test Port Present">
<tags>
<tag>Test pon_status present</tag>
</tags>
<doc>Test Pon port present function</doc>
<arguments>
<arg>${NNI_PORT}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:25:29.559" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/17</msg>
<msg timestamp="20200521 14:25:29.571" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/17: 0.000536 seconds.</msg>
<msg timestamp="20200521 14:25:29.572" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:25:29 GMT
connection Keep-Alive
content-type application/json
content-length 2443


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:25:29.572" starttime="20200521 14:25:29.547"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:25:29.573" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:25:29.573" starttime="20200521 14:25:29.573"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:25:29.574" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200521 14:25:29.574" starttime="20200521 14:25:29.574"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:25:29.575" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200521 14:25:29.575" starttime="20200521 14:25:29.574"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:29.576" starttime="20200521 14:25:29.575"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:29.576" starttime="20200521 14:25:29.576"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${PORT_ENABLE}'</arg>
<arg>'Enabled'</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:29.577" starttime="20200521 14:25:29.577"></status>
</kw>
<status status="PASS" endtime="20200521 14:25:29.578" starttime="20200521 14:25:29.546"></status>
</kw>
<kw name="Enable Port">
<tags>
<tag>Enable Port</tag>
</tags>
<doc>Enable port function</doc>
<arguments>
<arg>${NNI_PORT}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Enable Port ${ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:29.579" starttime="20200521 14:25:29.578"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($ADM_UP)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 14:25:29.584" level="INFO">${payload} = {u'AdministrativeState': u'Up'}</msg>
<status status="PASS" endtime="20200521 14:25:29.584" starttime="20200521 14:25:29.579"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:25:29.594" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/17</msg>
<msg timestamp="20200521 14:25:29.813" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/17: 0.000706 seconds.</msg>
<msg timestamp="20200521 14:25:29.814" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:25:30 GMT
connection Keep-Alive
content-type application/json
content-length 2443


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:25:29.814" starttime="20200521 14:25:29.585"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:25:29.815" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:25:29.815" starttime="20200521 14:25:29.815"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:25:29.825" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/17</msg>
<msg timestamp="20200521 14:25:29.838" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/17: 0.000719 seconds.</msg>
<msg timestamp="20200521 14:25:29.839" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:25:30 GMT
connection Keep-Alive
content-type application/json
content-length 2443


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:25:29.839" starttime="20200521 14:25:29.816"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:25:29.840" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:25:29.840" starttime="20200521 14:25:29.839"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['AdministrativeState']}</arg>
</arguments>
<assign>
<var>${ADM_STAT}</var>
</assign>
<msg timestamp="20200521 14:25:29.842" level="INFO">${ADM_STAT} = Up</msg>
<status status="PASS" endtime="20200521 14:25:29.842" starttime="20200521 14:25:29.841"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${ADM_STAT}'</arg>
<arg>'Up'</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:29.842" starttime="20200521 14:25:29.842"></status>
</kw>
<status status="PASS" endtime="20200521 14:25:29.842" starttime="20200521 14:25:29.578"></status>
</kw>
<status status="PASS" endtime="20200521 14:25:29.843" starttime="20200521 14:25:29.515"></status>
</kw>
<status status="PASS" endtime="20200521 14:25:29.843" starttime="20200521 14:24:49.097"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200521 14:25:29.854" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200521 14:25:29.863" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000448 seconds.</msg>
<msg timestamp="20200521 14:25:29.864" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200521 14:25:29.864" starttime="20200521 14:25:29.844"></status>
</kw>
<status status="PASS" endtime="20200521 14:25:29.864" starttime="20200521 14:25:29.843"></status>
</kw>
<doc>Test BAL Restful Status</doc>
<tags>
<tag>Test Bal Restful opertaion test</tag>
</tags>
<status status="PASS" endtime="20200521 14:25:29.864" critical="yes" starttime="20200521 14:24:49.070"></status>
</test>
<test id="s1-s1-t2" name="Verify Restful API for ONU Range Test">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200521 14:25:29.873" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200521 14:25:29.889" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000595 seconds.</msg>
<msg timestamp="20200521 14:25:29.890" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200521 14:25:29.890" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200521 14:25:29.890" starttime="20200521 14:25:29.866"></status>
</kw>
<status status="PASS" endtime="20200521 14:25:29.891" starttime="20200521 14:25:29.865"></status>
</kw>
<kw name="Test ONU Range">
<tags>
<tag>ONU Range</tag>
</tags>
<doc>ONU Ranging Test</doc>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PON_TYPE}' == 'GPON'</arg>
<arg>set variable</arg>
<arg>${150}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${255}</arg>
</arguments>
<assign>
<var>${ONU_ID_RANGE}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${255}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:29.893" starttime="20200521 14:25:29.892"></status>
</kw>
<msg timestamp="20200521 14:25:29.893" level="INFO">${ONU_ID_RANGE} = 255</msg>
<status status="PASS" endtime="20200521 14:25:29.893" starttime="20200521 14:25:29.892"></status>
</kw>
<kw type="for" name="${id} IN RANGE [ 1 | ${ONU_ID_RANGE} | 50 ]">
<kw type="foritem" name="${id} = 1">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200521 14:25:36.894" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200521 14:25:36.894" starttime="20200521 14:25:29.894"></status>
</kw>
<kw name="Test Active ONU">
<tags>
<tag>Test Active ONU</tag>
</tags>
<doc>Test Active ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${SPECIFIC_ID}</arg>
<arg>${SPECIFIC_NUM}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onu_id": ${ONU_ID},</arg>
<arg>"vendor_id": "${VEN_ID}",</arg>
<arg>"vendor_specific":"${VEN_SPEC}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 14:25:36.896" level="INFO">${JSTRING} = { "onu_id": 1, "vendor_id": "ISKT", "vendor_specific":"71E83268" }</msg>
<status status="PASS" endtime="20200521 14:25:36.896" starttime="20200521 14:25:36.895"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### active onu ${JSTRING} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:36.897" starttime="20200521 14:25:36.896"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 14:25:36.903" level="INFO">${payload} = {u'onu_id': 1, u'vendor_id': u'ISKT', u'vendor_specific': u'71E83268'}</msg>
<status status="PASS" endtime="20200521 14:25:36.903" starttime="20200521 14:25:36.897"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:25:36.912" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 14:25:36.925" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000487 seconds.</msg>
<msg timestamp="20200521 14:25:36.925" level="INFO">${resp} = 201
date Thu, 21 May 2020 06:25:37 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:25:36.925" starttime="20200521 14:25:36.903"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200521 14:25:36.927" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:25:36.927" starttime="20200521 14:25:36.927"></status>
</kw>
<status status="PASS" endtime="20200521 14:25:36.927" starttime="20200521 14:25:36.926"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6s</arg>
</arguments>
<msg timestamp="20200521 14:25:42.928" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20200521 14:25:42.928" starttime="20200521 14:25:36.927"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:25:42.938" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 14:25:42.947" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000613 seconds.</msg>
<msg timestamp="20200521 14:25:42.947" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:25:43 GMT
connection Keep-Alive
content-type application/json
content-length 405


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200521 14:25:42.947" starttime="20200521 14:25:42.928"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### onu res ${resp} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:42.948" starttime="20200521 14:25:42.948"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200521 14:25:42.949" level="INFO">Length is 1</msg>
<msg timestamp="20200521 14:25:42.949" level="INFO">${item_count} = 1</msg>
<status status="PASS" endtime="20200521 14:25:42.949" starttime="20200521 14:25:42.949"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Onu num ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:42.950" starttime="20200521 14:25:42.950"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200521 14:25:42.952" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:25:42.953" starttime="20200521 14:25:42.951"></status>
</kw>
<status status="PASS" endtime="20200521 14:25:42.953" starttime="20200521 14:25:42.951"></status>
</kw>
<status status="PASS" endtime="20200521 14:25:42.953" starttime="20200521 14:25:36.895"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200521 14:25:49.954" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200521 14:25:49.954" starttime="20200521 14:25:42.953"></status>
</kw>
<kw name="Test DeActive ONU">
<tags>
<tag>Test DeActive ONU</tag>
</tags>
<doc>Test DeActive ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Deactive onu ${ONU_ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:49.955" starttime="20200521 14:25:49.955"></status>
</kw>
<kw type="for" name="${j} IN RANGE [ 5 ]">
<kw type="foritem" name="${j} = 0">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${j} == 4</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:49.956" starttime="20200521 14:25:49.956"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:25:49.970" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1</msg>
<msg timestamp="20200521 14:25:50.483" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1: 0.000524 seconds.</msg>
<msg timestamp="20200521 14:25:50.483" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:25:50 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:25:50.483" starttime="20200521 14:25:49.957"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${resp.status} == ${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:25:50.485" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20200521 14:25:50.485" starttime="20200521 14:25:50.484"></status>
</kw>
<status status="PASS" endtime="20200521 14:25:50.485" starttime="20200521 14:25:49.956"></status>
</kw>
<status status="PASS" endtime="20200521 14:25:50.485" starttime="20200521 14:25:49.955"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:25:50.486" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:25:50.486" starttime="20200521 14:25:50.485"></status>
</kw>
<status status="PASS" endtime="20200521 14:25:50.486" starttime="20200521 14:25:49.954"></status>
</kw>
<status status="PASS" endtime="20200521 14:25:50.486" starttime="20200521 14:25:29.893"></status>
</kw>
<kw type="foritem" name="${id} = 51">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200521 14:25:57.487" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200521 14:25:57.487" starttime="20200521 14:25:50.487"></status>
</kw>
<kw name="Test Active ONU">
<tags>
<tag>Test Active ONU</tag>
</tags>
<doc>Test Active ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${SPECIFIC_ID}</arg>
<arg>${SPECIFIC_NUM}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onu_id": ${ONU_ID},</arg>
<arg>"vendor_id": "${VEN_ID}",</arg>
<arg>"vendor_specific":"${VEN_SPEC}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 14:25:57.489" level="INFO">${JSTRING} = { "onu_id": 51, "vendor_id": "ISKT", "vendor_specific":"71E83268" }</msg>
<status status="PASS" endtime="20200521 14:25:57.489" starttime="20200521 14:25:57.489"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### active onu ${JSTRING} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:25:57.490" starttime="20200521 14:25:57.490"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 14:25:57.496" level="INFO">${payload} = {u'onu_id': 51, u'vendor_id': u'ISKT', u'vendor_specific': u'71E83268'}</msg>
<status status="PASS" endtime="20200521 14:25:57.496" starttime="20200521 14:25:57.490"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:25:57.507" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 14:25:57.516" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000527 seconds.</msg>
<msg timestamp="20200521 14:25:57.516" level="INFO">${resp} = 201
date Thu, 21 May 2020 06:25:57 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:25:57.517" starttime="20200521 14:25:57.497"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200521 14:25:57.518" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:25:57.519" starttime="20200521 14:25:57.518"></status>
</kw>
<status status="PASS" endtime="20200521 14:25:57.519" starttime="20200521 14:25:57.517"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6s</arg>
</arguments>
<msg timestamp="20200521 14:26:03.519" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20200521 14:26:03.520" starttime="20200521 14:25:57.519"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:26:03.530" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 14:26:03.540" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.00056 seconds.</msg>
<msg timestamp="20200521 14:26:03.541" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:26:03 GMT
connection Keep-Alive
content-type application/json
content-length 406


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200521 14:26:03.541" starttime="20200521 14:26:03.520"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### onu res ${resp} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:26:03.543" starttime="20200521 14:26:03.541"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200521 14:26:03.544" level="INFO">Length is 1</msg>
<msg timestamp="20200521 14:26:03.545" level="INFO">${item_count} = 1</msg>
<status status="PASS" endtime="20200521 14:26:03.545" starttime="20200521 14:26:03.544"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Onu num ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:26:03.545" starttime="20200521 14:26:03.545"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200521 14:26:03.547" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:26:03.547" starttime="20200521 14:26:03.547"></status>
</kw>
<status status="PASS" endtime="20200521 14:26:03.547" starttime="20200521 14:26:03.546"></status>
</kw>
<status status="PASS" endtime="20200521 14:26:03.547" starttime="20200521 14:25:57.488"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200521 14:26:10.548" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200521 14:26:10.549" starttime="20200521 14:26:03.547"></status>
</kw>
<kw name="Test DeActive ONU">
<tags>
<tag>Test DeActive ONU</tag>
</tags>
<doc>Test DeActive ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Deactive onu ${ONU_ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:26:10.551" starttime="20200521 14:26:10.550"></status>
</kw>
<kw type="for" name="${j} IN RANGE [ 5 ]">
<kw type="foritem" name="${j} = 0">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${j} == 4</arg>
</arguments>
<status status="PASS" endtime="20200521 14:26:10.553" starttime="20200521 14:26:10.552"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:26:10.565" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/51</msg>
<msg timestamp="20200521 14:26:11.077" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/51: 0.000462 seconds.</msg>
<msg timestamp="20200521 14:26:11.078" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:26:11 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:26:11.078" starttime="20200521 14:26:10.554"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${resp.status} == ${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:26:11.079" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20200521 14:26:11.079" starttime="20200521 14:26:11.079"></status>
</kw>
<status status="PASS" endtime="20200521 14:26:11.080" starttime="20200521 14:26:10.551"></status>
</kw>
<status status="PASS" endtime="20200521 14:26:11.080" starttime="20200521 14:26:10.551"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:26:11.080" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:26:11.080" starttime="20200521 14:26:11.080"></status>
</kw>
<status status="PASS" endtime="20200521 14:26:11.081" starttime="20200521 14:26:10.549"></status>
</kw>
<status status="PASS" endtime="20200521 14:26:11.081" starttime="20200521 14:25:50.486"></status>
</kw>
<kw type="foritem" name="${id} = 101">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200521 14:26:18.082" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200521 14:26:18.082" starttime="20200521 14:26:11.081"></status>
</kw>
<kw name="Test Active ONU">
<tags>
<tag>Test Active ONU</tag>
</tags>
<doc>Test Active ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${SPECIFIC_ID}</arg>
<arg>${SPECIFIC_NUM}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onu_id": ${ONU_ID},</arg>
<arg>"vendor_id": "${VEN_ID}",</arg>
<arg>"vendor_specific":"${VEN_SPEC}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 14:26:18.084" level="INFO">${JSTRING} = { "onu_id": 101, "vendor_id": "ISKT", "vendor_specific":"71E83268" }</msg>
<status status="PASS" endtime="20200521 14:26:18.084" starttime="20200521 14:26:18.083"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### active onu ${JSTRING} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:26:18.084" starttime="20200521 14:26:18.084"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 14:26:18.090" level="INFO">${payload} = {u'onu_id': 101, u'vendor_id': u'ISKT', u'vendor_specific': u'71E83268'}</msg>
<status status="PASS" endtime="20200521 14:26:18.090" starttime="20200521 14:26:18.085"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:26:18.101" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 14:26:18.112" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000507 seconds.</msg>
<msg timestamp="20200521 14:26:18.112" level="INFO">${resp} = 201
date Thu, 21 May 2020 06:26:18 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:26:18.112" starttime="20200521 14:26:18.091"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200521 14:26:18.114" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:26:18.114" starttime="20200521 14:26:18.114"></status>
</kw>
<status status="PASS" endtime="20200521 14:26:18.114" starttime="20200521 14:26:18.113"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6s</arg>
</arguments>
<msg timestamp="20200521 14:26:24.122" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20200521 14:26:24.122" starttime="20200521 14:26:18.115"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:26:24.132" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 14:26:24.142" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000524 seconds.</msg>
<msg timestamp="20200521 14:26:24.143" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:26:24 GMT
connection Keep-Alive
content-type application/json
content-length 407


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200521 14:26:24.143" starttime="20200521 14:26:24.123"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### onu res ${resp} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:26:24.144" starttime="20200521 14:26:24.143"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200521 14:26:24.145" level="INFO">Length is 1</msg>
<msg timestamp="20200521 14:26:24.145" level="INFO">${item_count} = 1</msg>
<status status="PASS" endtime="20200521 14:26:24.145" starttime="20200521 14:26:24.144"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Onu num ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:26:24.146" starttime="20200521 14:26:24.145"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200521 14:26:24.148" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:26:24.148" starttime="20200521 14:26:24.147"></status>
</kw>
<status status="PASS" endtime="20200521 14:26:24.148" starttime="20200521 14:26:24.147"></status>
</kw>
<status status="PASS" endtime="20200521 14:26:24.148" starttime="20200521 14:26:18.082"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200521 14:26:31.149" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200521 14:26:31.150" starttime="20200521 14:26:24.149"></status>
</kw>
<kw name="Test DeActive ONU">
<tags>
<tag>Test DeActive ONU</tag>
</tags>
<doc>Test DeActive ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Deactive onu ${ONU_ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:26:31.151" starttime="20200521 14:26:31.151"></status>
</kw>
<kw type="for" name="${j} IN RANGE [ 5 ]">
<kw type="foritem" name="${j} = 0">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${j} == 4</arg>
</arguments>
<status status="PASS" endtime="20200521 14:26:31.153" starttime="20200521 14:26:31.152"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:26:31.164" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/101</msg>
<msg timestamp="20200521 14:26:31.677" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/101: 0.000551 seconds.</msg>
<msg timestamp="20200521 14:26:31.677" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:26:31 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:26:31.677" starttime="20200521 14:26:31.153"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${resp.status} == ${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:26:31.679" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20200521 14:26:31.679" starttime="20200521 14:26:31.678"></status>
</kw>
<status status="PASS" endtime="20200521 14:26:31.679" starttime="20200521 14:26:31.152"></status>
</kw>
<status status="PASS" endtime="20200521 14:26:31.679" starttime="20200521 14:26:31.151"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:26:31.680" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:26:31.680" starttime="20200521 14:26:31.680"></status>
</kw>
<status status="PASS" endtime="20200521 14:26:31.681" starttime="20200521 14:26:31.150"></status>
</kw>
<status status="PASS" endtime="20200521 14:26:31.681" starttime="20200521 14:26:11.081"></status>
</kw>
<kw type="foritem" name="${id} = 151">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200521 14:26:38.682" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200521 14:26:38.682" starttime="20200521 14:26:31.681"></status>
</kw>
<kw name="Test Active ONU">
<tags>
<tag>Test Active ONU</tag>
</tags>
<doc>Test Active ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${SPECIFIC_ID}</arg>
<arg>${SPECIFIC_NUM}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onu_id": ${ONU_ID},</arg>
<arg>"vendor_id": "${VEN_ID}",</arg>
<arg>"vendor_specific":"${VEN_SPEC}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 14:26:38.684" level="INFO">${JSTRING} = { "onu_id": 151, "vendor_id": "ISKT", "vendor_specific":"71E83268" }</msg>
<status status="PASS" endtime="20200521 14:26:38.684" starttime="20200521 14:26:38.683"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### active onu ${JSTRING} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:26:38.684" starttime="20200521 14:26:38.684"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 14:26:38.690" level="INFO">${payload} = {u'onu_id': 151, u'vendor_id': u'ISKT', u'vendor_specific': u'71E83268'}</msg>
<status status="PASS" endtime="20200521 14:26:38.690" starttime="20200521 14:26:38.685"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:26:38.699" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 14:26:38.713" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000469 seconds.</msg>
<msg timestamp="20200521 14:26:38.713" level="INFO">${resp} = 201
date Thu, 21 May 2020 06:26:39 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:26:38.714" starttime="20200521 14:26:38.690"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200521 14:26:38.715" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:26:38.715" starttime="20200521 14:26:38.715"></status>
</kw>
<status status="PASS" endtime="20200521 14:26:38.715" starttime="20200521 14:26:38.714"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6s</arg>
</arguments>
<msg timestamp="20200521 14:26:44.716" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20200521 14:26:44.717" starttime="20200521 14:26:38.716"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:26:44.726" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 14:26:44.737" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000585 seconds.</msg>
<msg timestamp="20200521 14:26:44.738" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:26:45 GMT
connection Keep-Alive
content-type application/json
content-length 407


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200521 14:26:44.738" starttime="20200521 14:26:44.717"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### onu res ${resp} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:26:44.739" starttime="20200521 14:26:44.738"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200521 14:26:44.740" level="INFO">Length is 1</msg>
<msg timestamp="20200521 14:26:44.740" level="INFO">${item_count} = 1</msg>
<status status="PASS" endtime="20200521 14:26:44.740" starttime="20200521 14:26:44.739"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Onu num ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:26:44.741" starttime="20200521 14:26:44.740"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200521 14:26:44.742" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:26:44.742" starttime="20200521 14:26:44.742"></status>
</kw>
<status status="PASS" endtime="20200521 14:26:44.742" starttime="20200521 14:26:44.741"></status>
</kw>
<status status="PASS" endtime="20200521 14:26:44.743" starttime="20200521 14:26:38.682"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200521 14:26:51.743" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200521 14:26:51.744" starttime="20200521 14:26:44.743"></status>
</kw>
<kw name="Test DeActive ONU">
<tags>
<tag>Test DeActive ONU</tag>
</tags>
<doc>Test DeActive ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Deactive onu ${ONU_ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:26:51.745" starttime="20200521 14:26:51.745"></status>
</kw>
<kw type="for" name="${j} IN RANGE [ 5 ]">
<kw type="foritem" name="${j} = 0">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${j} == 4</arg>
</arguments>
<status status="PASS" endtime="20200521 14:26:51.746" starttime="20200521 14:26:51.746"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:26:51.759" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/151</msg>
<msg timestamp="20200521 14:26:52.271" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/151: 0.00052 seconds.</msg>
<msg timestamp="20200521 14:26:52.271" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:26:52 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:26:52.271" starttime="20200521 14:26:51.746"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${resp.status} == ${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:26:52.273" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20200521 14:26:52.273" starttime="20200521 14:26:52.272"></status>
</kw>
<status status="PASS" endtime="20200521 14:26:52.273" starttime="20200521 14:26:51.745"></status>
</kw>
<status status="PASS" endtime="20200521 14:26:52.273" starttime="20200521 14:26:51.745"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:26:52.274" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:26:52.274" starttime="20200521 14:26:52.273"></status>
</kw>
<status status="PASS" endtime="20200521 14:26:52.274" starttime="20200521 14:26:51.744"></status>
</kw>
<status status="PASS" endtime="20200521 14:26:52.274" starttime="20200521 14:26:31.681"></status>
</kw>
<kw type="foritem" name="${id} = 201">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200521 14:26:59.276" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200521 14:26:59.276" starttime="20200521 14:26:52.274"></status>
</kw>
<kw name="Test Active ONU">
<tags>
<tag>Test Active ONU</tag>
</tags>
<doc>Test Active ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${SPECIFIC_ID}</arg>
<arg>${SPECIFIC_NUM}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onu_id": ${ONU_ID},</arg>
<arg>"vendor_id": "${VEN_ID}",</arg>
<arg>"vendor_specific":"${VEN_SPEC}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 14:26:59.278" level="INFO">${JSTRING} = { "onu_id": 201, "vendor_id": "ISKT", "vendor_specific":"71E83268" }</msg>
<status status="PASS" endtime="20200521 14:26:59.278" starttime="20200521 14:26:59.277"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### active onu ${JSTRING} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:26:59.279" starttime="20200521 14:26:59.278"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 14:26:59.284" level="INFO">${payload} = {u'onu_id': 201, u'vendor_id': u'ISKT', u'vendor_specific': u'71E83268'}</msg>
<status status="PASS" endtime="20200521 14:26:59.284" starttime="20200521 14:26:59.279"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:26:59.294" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 14:26:59.306" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000438 seconds.</msg>
<msg timestamp="20200521 14:26:59.307" level="INFO">${resp} = 201
date Thu, 21 May 2020 06:26:59 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:26:59.307" starttime="20200521 14:26:59.284"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200521 14:26:59.308" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:26:59.308" starttime="20200521 14:26:59.308"></status>
</kw>
<status status="PASS" endtime="20200521 14:26:59.309" starttime="20200521 14:26:59.307"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6s</arg>
</arguments>
<msg timestamp="20200521 14:27:05.309" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20200521 14:27:05.310" starttime="20200521 14:26:59.309"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:27:05.320" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 14:27:05.330" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000478 seconds.</msg>
<msg timestamp="20200521 14:27:05.331" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:27:05 GMT
connection Keep-Alive
content-type application/json
content-length 407


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200521 14:27:05.331" starttime="20200521 14:27:05.310"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### onu res ${resp} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:27:05.332" starttime="20200521 14:27:05.331"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200521 14:27:05.333" level="INFO">Length is 1</msg>
<msg timestamp="20200521 14:27:05.333" level="INFO">${item_count} = 1</msg>
<status status="PASS" endtime="20200521 14:27:05.333" starttime="20200521 14:27:05.332"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Onu num ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:27:05.335" starttime="20200521 14:27:05.333"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200521 14:27:05.337" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:27:05.337" starttime="20200521 14:27:05.336"></status>
</kw>
<status status="PASS" endtime="20200521 14:27:05.337" starttime="20200521 14:27:05.336"></status>
</kw>
<status status="PASS" endtime="20200521 14:27:05.337" starttime="20200521 14:26:59.277"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200521 14:27:12.338" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200521 14:27:12.338" starttime="20200521 14:27:05.337"></status>
</kw>
<kw name="Test DeActive ONU">
<tags>
<tag>Test DeActive ONU</tag>
</tags>
<doc>Test DeActive ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Deactive onu ${ONU_ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:27:12.340" starttime="20200521 14:27:12.339"></status>
</kw>
<kw type="for" name="${j} IN RANGE [ 5 ]">
<kw type="foritem" name="${j} = 0">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${j} == 4</arg>
</arguments>
<status status="PASS" endtime="20200521 14:27:12.341" starttime="20200521 14:27:12.340"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:27:12.353" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/201</msg>
<msg timestamp="20200521 14:27:12.866" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/201: 0.000565 seconds.</msg>
<msg timestamp="20200521 14:27:12.867" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:27:13 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:27:12.867" starttime="20200521 14:27:12.341"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${resp.status} == ${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:27:12.868" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20200521 14:27:12.869" starttime="20200521 14:27:12.868"></status>
</kw>
<status status="PASS" endtime="20200521 14:27:12.869" starttime="20200521 14:27:12.340"></status>
</kw>
<status status="PASS" endtime="20200521 14:27:12.869" starttime="20200521 14:27:12.340"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:27:12.870" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:27:12.870" starttime="20200521 14:27:12.869"></status>
</kw>
<status status="PASS" endtime="20200521 14:27:12.870" starttime="20200521 14:27:12.338"></status>
</kw>
<status status="PASS" endtime="20200521 14:27:12.870" starttime="20200521 14:26:52.274"></status>
</kw>
<kw type="foritem" name="${id} = 251">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200521 14:27:19.871" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200521 14:27:19.871" starttime="20200521 14:27:12.870"></status>
</kw>
<kw name="Test Active ONU">
<tags>
<tag>Test Active ONU</tag>
</tags>
<doc>Test Active ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${SPECIFIC_ID}</arg>
<arg>${SPECIFIC_NUM}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onu_id": ${ONU_ID},</arg>
<arg>"vendor_id": "${VEN_ID}",</arg>
<arg>"vendor_specific":"${VEN_SPEC}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 14:27:19.873" level="INFO">${JSTRING} = { "onu_id": 251, "vendor_id": "ISKT", "vendor_specific":"71E83268" }</msg>
<status status="PASS" endtime="20200521 14:27:19.873" starttime="20200521 14:27:19.872"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### active onu ${JSTRING} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:27:19.874" starttime="20200521 14:27:19.874"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 14:27:19.880" level="INFO">${payload} = {u'onu_id': 251, u'vendor_id': u'ISKT', u'vendor_specific': u'71E83268'}</msg>
<status status="PASS" endtime="20200521 14:27:19.880" starttime="20200521 14:27:19.874"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:27:19.890" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 14:27:19.902" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000506 seconds.</msg>
<msg timestamp="20200521 14:27:19.903" level="INFO">${resp} = 201
date Thu, 21 May 2020 06:27:20 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:27:19.903" starttime="20200521 14:27:19.880"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200521 14:27:19.905" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:27:19.905" starttime="20200521 14:27:19.905"></status>
</kw>
<status status="PASS" endtime="20200521 14:27:19.905" starttime="20200521 14:27:19.904"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6s</arg>
</arguments>
<msg timestamp="20200521 14:27:25.906" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20200521 14:27:25.906" starttime="20200521 14:27:19.906"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:27:25.917" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 14:27:25.927" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000533 seconds.</msg>
<msg timestamp="20200521 14:27:25.928" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:27:26 GMT
connection Keep-Alive
content-type application/json
content-length 407


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200521 14:27:25.928" starttime="20200521 14:27:25.907"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### onu res ${resp} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:27:25.929" starttime="20200521 14:27:25.928"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200521 14:27:25.930" level="INFO">Length is 1</msg>
<msg timestamp="20200521 14:27:25.930" level="INFO">${item_count} = 1</msg>
<status status="PASS" endtime="20200521 14:27:25.930" starttime="20200521 14:27:25.929"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Onu num ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:27:25.931" starttime="20200521 14:27:25.930"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200521 14:27:25.933" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:27:25.933" starttime="20200521 14:27:25.932"></status>
</kw>
<status status="PASS" endtime="20200521 14:27:25.933" starttime="20200521 14:27:25.931"></status>
</kw>
<status status="PASS" endtime="20200521 14:27:25.933" starttime="20200521 14:27:19.871"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200521 14:27:32.934" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200521 14:27:32.934" starttime="20200521 14:27:25.934"></status>
</kw>
<kw name="Test DeActive ONU">
<tags>
<tag>Test DeActive ONU</tag>
</tags>
<doc>Test DeActive ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Deactive onu ${ONU_ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:27:32.936" starttime="20200521 14:27:32.935"></status>
</kw>
<kw type="for" name="${j} IN RANGE [ 5 ]">
<kw type="foritem" name="${j} = 0">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${j} == 4</arg>
</arguments>
<status status="PASS" endtime="20200521 14:27:32.937" starttime="20200521 14:27:32.936"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:27:32.947" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/251</msg>
<msg timestamp="20200521 14:27:33.460" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/251: 0.000531 seconds.</msg>
<msg timestamp="20200521 14:27:33.460" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:27:33 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:27:33.461" starttime="20200521 14:27:32.937"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${resp.status} == ${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:27:33.462" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20200521 14:27:33.462" starttime="20200521 14:27:33.461"></status>
</kw>
<status status="PASS" endtime="20200521 14:27:33.462" starttime="20200521 14:27:32.936"></status>
</kw>
<status status="PASS" endtime="20200521 14:27:33.462" starttime="20200521 14:27:32.936"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:27:33.463" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:27:33.463" starttime="20200521 14:27:33.463"></status>
</kw>
<status status="PASS" endtime="20200521 14:27:33.463" starttime="20200521 14:27:32.934"></status>
</kw>
<status status="PASS" endtime="20200521 14:27:33.463" starttime="20200521 14:27:12.870"></status>
</kw>
<status status="PASS" endtime="20200521 14:27:33.463" starttime="20200521 14:25:29.893"></status>
</kw>
<kw name="Test Active ONU">
<tags>
<tag>Test Active ONU</tag>
</tags>
<doc>Test Active ONU function</doc>
<arguments>
<arg>256</arg>
<arg>${SPECIFIC_ID}</arg>
<arg>${SPECIFIC_NUM}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>NOTONUID_IN_RANGE</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onu_id": ${ONU_ID},</arg>
<arg>"vendor_id": "${VEN_ID}",</arg>
<arg>"vendor_specific":"${VEN_SPEC}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 14:27:33.465" level="INFO">${JSTRING} = { "onu_id": 256, "vendor_id": "ISKT", "vendor_specific":"71E83268" }</msg>
<status status="PASS" endtime="20200521 14:27:33.465" starttime="20200521 14:27:33.464"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### active onu ${JSTRING} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:27:33.467" starttime="20200521 14:27:33.465"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 14:27:33.473" level="INFO">${payload} = {u'onu_id': 256, u'vendor_id': u'ISKT', u'vendor_specific': u'71E83268'}</msg>
<status status="PASS" endtime="20200521 14:27:33.473" starttime="20200521 14:27:33.468"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:27:33.482" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 14:27:33.493" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.00051 seconds.</msg>
<msg timestamp="20200521 14:27:33.494" level="INFO">${resp} = 500
date Thu, 21 May 2020 06:27:33 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:27:33.494" starttime="20200521 14:27:33.473"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200521 14:27:33.495" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:27:33.495" starttime="20200521 14:27:33.495"></status>
</kw>
<status status="PASS" endtime="20200521 14:27:33.496" starttime="20200521 14:27:33.494"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6s</arg>
</arguments>
<msg timestamp="20200521 14:27:39.502" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20200521 14:27:39.502" starttime="20200521 14:27:33.496"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:27:39.513" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 14:27:39.523" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.00047 seconds.</msg>
<msg timestamp="20200521 14:27:39.524" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:27:39 GMT
connection Keep-Alive
content-type application/json
content-length 344


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200521 14:27:39.524" starttime="20200521 14:27:39.503"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### onu res ${resp} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:27:39.524" starttime="20200521 14:27:39.524"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200521 14:27:39.525" level="INFO">Length is 0</msg>
<msg timestamp="20200521 14:27:39.525" level="INFO">${item_count} = 0</msg>
<status status="PASS" endtime="20200521 14:27:39.526" starttime="20200521 14:27:39.525"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Onu num ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:27:39.526" starttime="20200521 14:27:39.526"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200521 14:27:39.528" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:27:39.528" starttime="20200521 14:27:39.527"></status>
</kw>
<status status="PASS" endtime="20200521 14:27:39.528" starttime="20200521 14:27:39.526"></status>
</kw>
<status status="PASS" endtime="20200521 14:27:39.528" starttime="20200521 14:27:33.463"></status>
</kw>
<kw name="Test Port Present">
<tags>
<tag>Test pon_status present</tag>
</tags>
<doc>Test Pon port present function</doc>
<arguments>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:27:39.539" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200521 14:27:39.561" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000687 seconds.</msg>
<msg timestamp="20200521 14:27:39.562" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:27:39 GMT
connection Keep-Alive
content-type application/json
content-length 2411


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:27:39.562" starttime="20200521 14:27:39.529"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:27:39.563" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:27:39.563" starttime="20200521 14:27:39.562"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:27:39.564" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200521 14:27:39.564" starttime="20200521 14:27:39.563"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:27:39.565" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:27:39.565" starttime="20200521 14:27:39.564"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:27:39.567" starttime="20200521 14:27:39.565"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:27:39.568" starttime="20200521 14:27:39.568"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${PORT_ENABLE}'</arg>
<arg>'Enabled'</arg>
</arguments>
<status status="PASS" endtime="20200521 14:27:39.570" starttime="20200521 14:27:39.569"></status>
</kw>
<status status="PASS" endtime="20200521 14:27:39.570" starttime="20200521 14:27:39.528"></status>
</kw>
<kw name="Enable Port">
<tags>
<tag>Enable Port</tag>
</tags>
<doc>Enable port function</doc>
<arguments>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Enable Port ${ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:27:39.571" starttime="20200521 14:27:39.571"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($ADM_UP)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 14:27:39.577" level="INFO">${payload} = {u'AdministrativeState': u'Up'}</msg>
<status status="PASS" endtime="20200521 14:27:39.577" starttime="20200521 14:27:39.572"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:27:39.586" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200521 14:27:39.603" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000571 seconds.</msg>
<msg timestamp="20200521 14:27:39.604" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:27:39 GMT
connection Keep-Alive
content-type application/json
content-length 2411


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:27:39.604" starttime="20200521 14:27:39.577"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:27:39.605" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:27:39.605" starttime="20200521 14:27:39.604"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:27:39.614" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200521 14:27:39.642" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000627 seconds.</msg>
<msg timestamp="20200521 14:27:39.643" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:27:39 GMT
connection Keep-Alive
content-type application/json
content-length 2411


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:27:39.643" starttime="20200521 14:27:39.605"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:27:39.644" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:27:39.644" starttime="20200521 14:27:39.643"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['AdministrativeState']}</arg>
</arguments>
<assign>
<var>${ADM_STAT}</var>
</assign>
<msg timestamp="20200521 14:27:39.645" level="INFO">${ADM_STAT} = Up</msg>
<status status="PASS" endtime="20200521 14:27:39.645" starttime="20200521 14:27:39.644"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${ADM_STAT}'</arg>
<arg>'Up'</arg>
</arguments>
<status status="PASS" endtime="20200521 14:27:39.646" starttime="20200521 14:27:39.645"></status>
</kw>
<status status="PASS" endtime="20200521 14:27:39.646" starttime="20200521 14:27:39.570"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200521 14:27:42.652" level="INFO">Slept 3 seconds</msg>
<status status="PASS" endtime="20200521 14:27:42.652" starttime="20200521 14:27:39.646"></status>
</kw>
<kw name="Test Active ONU">
<tags>
<tag>Test Active ONU</tag>
</tags>
<doc>Test Active ONU function</doc>
<arguments>
<arg>1</arg>
<arg>${SPECIFIC_ID}</arg>
<arg>${SPECIFIC_NUM}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onu_id": ${ONU_ID},</arg>
<arg>"vendor_id": "${VEN_ID}",</arg>
<arg>"vendor_specific":"${VEN_SPEC}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 14:27:42.654" level="INFO">${JSTRING} = { "onu_id": 1, "vendor_id": "ISKT", "vendor_specific":"71E83268" }</msg>
<status status="PASS" endtime="20200521 14:27:42.654" starttime="20200521 14:27:42.654"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### active onu ${JSTRING} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:27:42.655" starttime="20200521 14:27:42.655"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 14:27:42.661" level="INFO">${payload} = {u'onu_id': 1, u'vendor_id': u'ISKT', u'vendor_specific': u'71E83268'}</msg>
<status status="PASS" endtime="20200521 14:27:42.662" starttime="20200521 14:27:42.656"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:27:42.671" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 14:27:42.683" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.00048 seconds.</msg>
<msg timestamp="20200521 14:27:42.684" level="INFO">${resp} = 201
date Thu, 21 May 2020 06:27:42 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:27:42.684" starttime="20200521 14:27:42.662"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200521 14:27:42.686" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:27:42.686" starttime="20200521 14:27:42.685"></status>
</kw>
<status status="PASS" endtime="20200521 14:27:42.686" starttime="20200521 14:27:42.684"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6s</arg>
</arguments>
<msg timestamp="20200521 14:27:48.687" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20200521 14:27:48.687" starttime="20200521 14:27:42.686"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:27:48.694" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 14:27:48.704" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000389 seconds.</msg>
<msg timestamp="20200521 14:27:48.704" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:27:48 GMT
connection Keep-Alive
content-type application/json
content-length 405


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200521 14:27:48.704" starttime="20200521 14:27:48.687"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### onu res ${resp} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:27:48.705" starttime="20200521 14:27:48.705"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200521 14:27:48.706" level="INFO">Length is 1</msg>
<msg timestamp="20200521 14:27:48.706" level="INFO">${item_count} = 1</msg>
<status status="PASS" endtime="20200521 14:27:48.706" starttime="20200521 14:27:48.706"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Onu num ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:27:48.707" starttime="20200521 14:27:48.707"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200521 14:27:48.709" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:27:48.709" starttime="20200521 14:27:48.708"></status>
</kw>
<status status="PASS" endtime="20200521 14:27:48.709" starttime="20200521 14:27:48.708"></status>
</kw>
<status status="PASS" endtime="20200521 14:27:48.709" starttime="20200521 14:27:42.653"></status>
</kw>
<kw name="Disable Port">
<tags>
<tag>Enable Port</tag>
</tags>
<doc>Enable port function</doc>
<arguments>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($ADM_DOWN)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 14:27:48.715" level="INFO">${payload} = {u'AdministrativeState': u'Down'}</msg>
<status status="PASS" endtime="20200521 14:27:48.715" starttime="20200521 14:27:48.710"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:27:48.724" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200521 14:27:48.747" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000683 seconds.</msg>
<msg timestamp="20200521 14:27:48.747" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:27:49 GMT
connection Keep-Alive
content-type application/json
content-length 2413


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:27:48.747" starttime="20200521 14:27:48.715"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:27:48.748" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:27:48.749" starttime="20200521 14:27:48.748"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:27:48.760" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200521 14:27:48.777" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000586 seconds.</msg>
<msg timestamp="20200521 14:27:48.778" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:27:49 GMT
connection Keep-Alive
content-type application/json
content-length 2413


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:27:48.778" starttime="20200521 14:27:48.749"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:27:48.779" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:27:48.779" starttime="20200521 14:27:48.778"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['AdministrativeState']}</arg>
</arguments>
<assign>
<var>${ADM_STAT}</var>
</assign>
<msg timestamp="20200521 14:27:48.780" level="INFO">${ADM_STAT} = Down</msg>
<status status="PASS" endtime="20200521 14:27:48.780" starttime="20200521 14:27:48.779"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${ADM_STAT}'</arg>
<arg>'Down'</arg>
</arguments>
<status status="PASS" endtime="20200521 14:27:48.781" starttime="20200521 14:27:48.780"></status>
</kw>
<status status="PASS" endtime="20200521 14:27:48.781" starttime="20200521 14:27:48.709"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20200521 14:27:50.782" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20200521 14:27:50.782" starttime="20200521 14:27:48.781"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:27:50.791" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 14:27:50.802" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000571 seconds.</msg>
<msg timestamp="20200521 14:27:50.802" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:27:51 GMT
connection Keep-Alive
content-type application/json
content-length 344


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200521 14:27:50.802" starttime="20200521 14:27:50.783"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200521 14:27:50.803" level="INFO">Length is 0</msg>
<msg timestamp="20200521 14:27:50.803" level="INFO">${item_count} = 0</msg>
<status status="PASS" endtime="20200521 14:27:50.803" starttime="20200521 14:27:50.803"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200521 14:27:50.804" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:27:50.804" starttime="20200521 14:27:50.804"></status>
</kw>
<kw name="Enable Port">
<tags>
<tag>Enable Port</tag>
</tags>
<doc>Enable port function</doc>
<arguments>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Enable Port ${ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:27:50.806" starttime="20200521 14:27:50.806"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($ADM_UP)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 14:27:50.812" level="INFO">${payload} = {u'AdministrativeState': u'Up'}</msg>
<status status="PASS" endtime="20200521 14:27:50.812" starttime="20200521 14:27:50.807"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:27:50.821" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200521 14:27:51.043" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000533 seconds.</msg>
<msg timestamp="20200521 14:27:51.043" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:27:51 GMT
connection Keep-Alive
content-type application/json
content-length 2411


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:27:51.043" starttime="20200521 14:27:50.813"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:27:51.044" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:27:51.044" starttime="20200521 14:27:51.044"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:27:51.055" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200521 14:27:51.071" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000325 seconds.</msg>
<msg timestamp="20200521 14:27:51.071" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:27:51 GMT
connection Keep-Alive
content-type application/json
content-length 2411


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:27:51.071" starttime="20200521 14:27:51.045"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:27:51.072" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:27:51.072" starttime="20200521 14:27:51.071"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['AdministrativeState']}</arg>
</arguments>
<assign>
<var>${ADM_STAT}</var>
</assign>
<msg timestamp="20200521 14:27:51.075" level="INFO">${ADM_STAT} = Up</msg>
<status status="PASS" endtime="20200521 14:27:51.075" starttime="20200521 14:27:51.072"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${ADM_STAT}'</arg>
<arg>'Up'</arg>
</arguments>
<status status="PASS" endtime="20200521 14:27:51.076" starttime="20200521 14:27:51.075"></status>
</kw>
<status status="PASS" endtime="20200521 14:27:51.076" starttime="20200521 14:27:50.805"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200521 14:28:01.076" level="INFO">Slept 10 seconds</msg>
<status status="PASS" endtime="20200521 14:28:01.077" starttime="20200521 14:27:51.076"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:01.086" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 14:28:01.096" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000535 seconds.</msg>
<msg timestamp="20200521 14:28:01.097" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:01 GMT
connection Keep-Alive
content-type application/json
content-length 405


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200521 14:28:01.097" starttime="20200521 14:28:01.077"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200521 14:28:01.098" level="INFO">Length is 1</msg>
<msg timestamp="20200521 14:28:01.098" level="INFO">${item_count} = 1</msg>
<status status="PASS" endtime="20200521 14:28:01.098" starttime="20200521 14:28:01.098"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200521 14:28:01.099" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:28:01.099" starttime="20200521 14:28:01.099"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200521 14:28:06.100" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20200521 14:28:06.100" starttime="20200521 14:28:01.099"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:06.100" starttime="20200521 14:25:29.891"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200521 14:28:06.114" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200521 14:28:06.124" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000484 seconds.</msg>
<msg timestamp="20200521 14:28:06.124" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200521 14:28:06.124" starttime="20200521 14:28:06.101"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:06.125" starttime="20200521 14:28:06.101"></status>
</kw>
<doc>Test ONU Range</doc>
<tags>
<tag>Test ONU Rnage test</tag>
</tags>
<status status="PASS" endtime="20200521 14:28:06.125" critical="yes" starttime="20200521 14:25:29.865"></status>
</test>
<test id="s1-s1-t3" name="Verify Restful API for flow add">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200521 14:28:06.133" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200521 14:28:06.150" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000702 seconds.</msg>
<msg timestamp="20200521 14:28:06.151" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200521 14:28:06.151" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200521 14:28:06.151" starttime="20200521 14:28:06.126"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:06.151" starttime="20200521 14:28:06.126"></status>
</kw>
<kw name="Test US DS Flow Add">
<tags>
<tag>US DS Flow Add/Remove</tag>
</tags>
<doc>Flow Add/Remove</doc>
<kw type="for" name="${flow_id} IN RANGE [ 0 | 2047 | 500 ]">
<kw type="foritem" name="${flow_id} = 0">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:28:07.153" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:28:07.153" starttime="20200521 14:28:06.152"></status>
</kw>
<kw name="Test Flow Add">
<tags>
<tag>UP/DOWN stream flow add</tag>
</tags>
<doc>Test Flow Add</doc>
<arguments>
<arg>1</arg>
<arg>${flow_id}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PON_ID} - ${1}</arg>
</arguments>
<assign>
<var>${PON_ID}</var>
</assign>
<msg timestamp="20200521 14:28:07.155" level="INFO">${PON_ID} = 0</msg>
<status status="PASS" endtime="20200521 14:28:07.155" starttime="20200521 14:28:07.154"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024,</arg>
<arg>"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":"BCMOLT_ACTION_CMD_ID_ADD_OUTER_TAG",</arg>
<arg>"ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,"EtherType":0,"IpProto":0,"SrcPort":0,</arg>
<arg>"DstPort":0},"ClassVal":[{"OVid":20,"IVid":0,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 14:28:07.156" level="INFO">${JSTRING} = { "onuId":1,"FlowId":0,"PortId":0,"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024, "Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":...</msg>
<status status="PASS" endtime="20200521 14:28:07.156" starttime="20200521 14:28:07.155"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 14:28:07.162" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'single_tag', u'GemportId': 1024, u'FlowId': 0, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 20, u'IPbits': 0, u'IVid': 0, u'O...</msg>
<status status="PASS" endtime="20200521 14:28:07.162" starttime="20200521 14:28:07.156"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:07.171" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200521 14:28:07.191" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000543 seconds.</msg>
<msg timestamp="20200521 14:28:07.191" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:07 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:07.191" starttime="20200521 14:28:07.162"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:28:07.193" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:28:07.193" starttime="20200521 14:28:07.193"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:07.193" starttime="20200521 14:28:07.192"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"downstream","PktTagType":"double_tag",</arg>
<arg>"GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOLT_ACTION_ID_O_VID",</arg>
<arg>"ActionCmd":"BCMOLT_ACTION_CMD_ID_REMOVE_OUTER_TAG","ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,</arg>
<arg>"EtherType":0,"IpProto":0,"SrcPort":0,"DstPort":0},</arg>
<arg>"ClassVal":[{"OVid":10,"IVid":20,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0</arg>
<arg>}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 14:28:07.194" level="INFO">${JSTRING} = { "onuId":1,"FlowId":0,"PortId":0,"NniId":0,"FlowType":"downstream","PktTagType":"double_tag", "GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOL...</msg>
<status status="PASS" endtime="20200521 14:28:07.194" starttime="20200521 14:28:07.194"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 14:28:07.200" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'double_tag', u'GemportId': 1024, u'FlowId': 0, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 10, u'IPbits': 0, u'IVid': 20, u'...</msg>
<status status="PASS" endtime="20200521 14:28:07.200" starttime="20200521 14:28:07.195"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:07.210" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200521 14:28:07.223" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000414 seconds.</msg>
<msg timestamp="20200521 14:28:07.224" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:07 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:07.224" starttime="20200521 14:28:07.200"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:28:07.226" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:28:07.226" starttime="20200521 14:28:07.225"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:07.226" starttime="20200521 14:28:07.224"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:07.226" starttime="20200521 14:28:07.153"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:28:08.227" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:28:08.227" starttime="20200521 14:28:07.226"></status>
</kw>
<kw name="Test Flow Del">
<tags>
<tag>UP/DOWN stream flow del</tag>
</tags>
<doc>Test Flow Del</doc>
<arguments>
<arg>${flow_id}</arg>
</arguments>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_upstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:08.237" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/0_upstream</msg>
<msg timestamp="20200521 14:28:08.248" level="INFO">Response Time to /redfish/v1/Olt/Flow/0_upstream: 0.000477 seconds.</msg>
<msg timestamp="20200521 14:28:08.249" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:08 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:08.249" starttime="20200521 14:28:08.228"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:28:08.250" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:28:08.250" starttime="20200521 14:28:08.250"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_downstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:08.261" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/0_downstream</msg>
<msg timestamp="20200521 14:28:08.280" level="INFO">Response Time to /redfish/v1/Olt/Flow/0_downstream: 0.000616 seconds.</msg>
<msg timestamp="20200521 14:28:08.281" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:08 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:08.281" starttime="20200521 14:28:08.251"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:28:08.282" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:28:08.283" starttime="20200521 14:28:08.282"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:08.283" starttime="20200521 14:28:08.227"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:08.283" starttime="20200521 14:28:06.152"></status>
</kw>
<kw type="foritem" name="${flow_id} = 500">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:28:09.284" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:28:09.284" starttime="20200521 14:28:08.283"></status>
</kw>
<kw name="Test Flow Add">
<tags>
<tag>UP/DOWN stream flow add</tag>
</tags>
<doc>Test Flow Add</doc>
<arguments>
<arg>1</arg>
<arg>${flow_id}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PON_ID} - ${1}</arg>
</arguments>
<assign>
<var>${PON_ID}</var>
</assign>
<msg timestamp="20200521 14:28:09.285" level="INFO">${PON_ID} = 0</msg>
<status status="PASS" endtime="20200521 14:28:09.285" starttime="20200521 14:28:09.285"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024,</arg>
<arg>"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":"BCMOLT_ACTION_CMD_ID_ADD_OUTER_TAG",</arg>
<arg>"ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,"EtherType":0,"IpProto":0,"SrcPort":0,</arg>
<arg>"DstPort":0},"ClassVal":[{"OVid":20,"IVid":0,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 14:28:09.286" level="INFO">${JSTRING} = { "onuId":1,"FlowId":500,"PortId":0,"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024, "Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd...</msg>
<status status="PASS" endtime="20200521 14:28:09.286" starttime="20200521 14:28:09.286"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 14:28:09.292" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'single_tag', u'GemportId': 1024, u'FlowId': 500, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 20, u'IPbits': 0, u'IVid': 0, u...</msg>
<status status="PASS" endtime="20200521 14:28:09.292" starttime="20200521 14:28:09.287"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:09.303" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200521 14:28:09.322" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000499 seconds.</msg>
<msg timestamp="20200521 14:28:09.322" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:09 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:09.322" starttime="20200521 14:28:09.292"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:28:09.324" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:28:09.324" starttime="20200521 14:28:09.324"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:09.324" starttime="20200521 14:28:09.323"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"downstream","PktTagType":"double_tag",</arg>
<arg>"GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOLT_ACTION_ID_O_VID",</arg>
<arg>"ActionCmd":"BCMOLT_ACTION_CMD_ID_REMOVE_OUTER_TAG","ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,</arg>
<arg>"EtherType":0,"IpProto":0,"SrcPort":0,"DstPort":0},</arg>
<arg>"ClassVal":[{"OVid":10,"IVid":20,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0</arg>
<arg>}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 14:28:09.325" level="INFO">${JSTRING} = { "onuId":1,"FlowId":500,"PortId":0,"NniId":0,"FlowType":"downstream","PktTagType":"double_tag", "GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCM...</msg>
<status status="PASS" endtime="20200521 14:28:09.325" starttime="20200521 14:28:09.325"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 14:28:09.331" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'double_tag', u'GemportId': 1024, u'FlowId': 500, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 10, u'IPbits': 0, u'IVid': 20, ...</msg>
<status status="PASS" endtime="20200521 14:28:09.331" starttime="20200521 14:28:09.326"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:09.340" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200521 14:28:09.354" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000495 seconds.</msg>
<msg timestamp="20200521 14:28:09.355" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:09 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:09.355" starttime="20200521 14:28:09.331"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:28:09.356" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:28:09.357" starttime="20200521 14:28:09.356"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:09.357" starttime="20200521 14:28:09.355"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:09.357" starttime="20200521 14:28:09.284"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:28:10.358" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:28:10.358" starttime="20200521 14:28:09.357"></status>
</kw>
<kw name="Test Flow Del">
<tags>
<tag>UP/DOWN stream flow del</tag>
</tags>
<doc>Test Flow Del</doc>
<arguments>
<arg>${flow_id}</arg>
</arguments>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_upstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:10.369" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/500_upstream</msg>
<msg timestamp="20200521 14:28:10.380" level="INFO">Response Time to /redfish/v1/Olt/Flow/500_upstream: 0.000394 seconds.</msg>
<msg timestamp="20200521 14:28:10.380" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:10 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:10.380" starttime="20200521 14:28:10.359"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:28:10.382" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:28:10.382" starttime="20200521 14:28:10.381"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_downstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:10.391" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/500_downstream</msg>
<msg timestamp="20200521 14:28:10.414" level="INFO">Response Time to /redfish/v1/Olt/Flow/500_downstream: 0.000474 seconds.</msg>
<msg timestamp="20200521 14:28:10.414" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:10 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:10.414" starttime="20200521 14:28:10.382"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:28:10.415" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:28:10.415" starttime="20200521 14:28:10.415"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:10.415" starttime="20200521 14:28:10.358"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:10.415" starttime="20200521 14:28:08.283"></status>
</kw>
<kw type="foritem" name="${flow_id} = 1000">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:28:11.416" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:28:11.416" starttime="20200521 14:28:10.416"></status>
</kw>
<kw name="Test Flow Add">
<tags>
<tag>UP/DOWN stream flow add</tag>
</tags>
<doc>Test Flow Add</doc>
<arguments>
<arg>1</arg>
<arg>${flow_id}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PON_ID} - ${1}</arg>
</arguments>
<assign>
<var>${PON_ID}</var>
</assign>
<msg timestamp="20200521 14:28:11.418" level="INFO">${PON_ID} = 0</msg>
<status status="PASS" endtime="20200521 14:28:11.418" starttime="20200521 14:28:11.418"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024,</arg>
<arg>"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":"BCMOLT_ACTION_CMD_ID_ADD_OUTER_TAG",</arg>
<arg>"ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,"EtherType":0,"IpProto":0,"SrcPort":0,</arg>
<arg>"DstPort":0},"ClassVal":[{"OVid":20,"IVid":0,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 14:28:11.419" level="INFO">${JSTRING} = { "onuId":1,"FlowId":1000,"PortId":0,"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024, "Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCm...</msg>
<status status="PASS" endtime="20200521 14:28:11.419" starttime="20200521 14:28:11.418"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 14:28:11.425" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'single_tag', u'GemportId': 1024, u'FlowId': 1000, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 20, u'IPbits': 0, u'IVid': 0, ...</msg>
<status status="PASS" endtime="20200521 14:28:11.425" starttime="20200521 14:28:11.420"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:11.435" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200521 14:28:11.453" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000508 seconds.</msg>
<msg timestamp="20200521 14:28:11.454" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:11 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:11.454" starttime="20200521 14:28:11.425"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:28:11.455" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:28:11.456" starttime="20200521 14:28:11.455"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:11.456" starttime="20200521 14:28:11.454"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"downstream","PktTagType":"double_tag",</arg>
<arg>"GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOLT_ACTION_ID_O_VID",</arg>
<arg>"ActionCmd":"BCMOLT_ACTION_CMD_ID_REMOVE_OUTER_TAG","ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,</arg>
<arg>"EtherType":0,"IpProto":0,"SrcPort":0,"DstPort":0},</arg>
<arg>"ClassVal":[{"OVid":10,"IVid":20,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0</arg>
<arg>}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 14:28:11.456" level="INFO">${JSTRING} = { "onuId":1,"FlowId":1000,"PortId":0,"NniId":0,"FlowType":"downstream","PktTagType":"double_tag", "GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BC...</msg>
<status status="PASS" endtime="20200521 14:28:11.456" starttime="20200521 14:28:11.456"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 14:28:11.462" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'double_tag', u'GemportId': 1024, u'FlowId': 1000, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 10, u'IPbits': 0, u'IVid': 20,...</msg>
<status status="PASS" endtime="20200521 14:28:11.462" starttime="20200521 14:28:11.457"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:11.472" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200521 14:28:11.489" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000451 seconds.</msg>
<msg timestamp="20200521 14:28:11.490" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:11 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:11.490" starttime="20200521 14:28:11.462"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:28:11.492" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:28:11.492" starttime="20200521 14:28:11.491"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:11.492" starttime="20200521 14:28:11.490"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:11.492" starttime="20200521 14:28:11.417"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:28:12.493" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:28:12.493" starttime="20200521 14:28:11.492"></status>
</kw>
<kw name="Test Flow Del">
<tags>
<tag>UP/DOWN stream flow del</tag>
</tags>
<doc>Test Flow Del</doc>
<arguments>
<arg>${flow_id}</arg>
</arguments>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_upstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:12.503" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/1000_upstream</msg>
<msg timestamp="20200521 14:28:12.514" level="INFO">Response Time to /redfish/v1/Olt/Flow/1000_upstream: 0.000489999999999 seconds.</msg>
<msg timestamp="20200521 14:28:12.514" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:12 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:12.515" starttime="20200521 14:28:12.494"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:28:12.516" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:28:12.516" starttime="20200521 14:28:12.515"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_downstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:12.528" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/1000_downstream</msg>
<msg timestamp="20200521 14:28:12.555" level="INFO">Response Time to /redfish/v1/Olt/Flow/1000_downstream: 0.000554 seconds.</msg>
<msg timestamp="20200521 14:28:12.556" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:12 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:12.556" starttime="20200521 14:28:12.516"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:28:12.557" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:28:12.557" starttime="20200521 14:28:12.556"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:12.557" starttime="20200521 14:28:12.493"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:12.557" starttime="20200521 14:28:10.415"></status>
</kw>
<kw type="foritem" name="${flow_id} = 1500">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:28:13.558" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:28:13.558" starttime="20200521 14:28:12.557"></status>
</kw>
<kw name="Test Flow Add">
<tags>
<tag>UP/DOWN stream flow add</tag>
</tags>
<doc>Test Flow Add</doc>
<arguments>
<arg>1</arg>
<arg>${flow_id}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PON_ID} - ${1}</arg>
</arguments>
<assign>
<var>${PON_ID}</var>
</assign>
<msg timestamp="20200521 14:28:13.560" level="INFO">${PON_ID} = 0</msg>
<status status="PASS" endtime="20200521 14:28:13.560" starttime="20200521 14:28:13.559"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024,</arg>
<arg>"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":"BCMOLT_ACTION_CMD_ID_ADD_OUTER_TAG",</arg>
<arg>"ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,"EtherType":0,"IpProto":0,"SrcPort":0,</arg>
<arg>"DstPort":0},"ClassVal":[{"OVid":20,"IVid":0,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 14:28:13.561" level="INFO">${JSTRING} = { "onuId":1,"FlowId":1500,"PortId":0,"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024, "Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCm...</msg>
<status status="PASS" endtime="20200521 14:28:13.561" starttime="20200521 14:28:13.560"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 14:28:13.567" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'single_tag', u'GemportId': 1024, u'FlowId': 1500, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 20, u'IPbits': 0, u'IVid': 0, ...</msg>
<status status="PASS" endtime="20200521 14:28:13.567" starttime="20200521 14:28:13.561"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:13.578" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200521 14:28:13.596" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000593 seconds.</msg>
<msg timestamp="20200521 14:28:13.597" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:13 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:13.597" starttime="20200521 14:28:13.567"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:28:13.598" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:28:13.599" starttime="20200521 14:28:13.598"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:13.599" starttime="20200521 14:28:13.597"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"downstream","PktTagType":"double_tag",</arg>
<arg>"GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOLT_ACTION_ID_O_VID",</arg>
<arg>"ActionCmd":"BCMOLT_ACTION_CMD_ID_REMOVE_OUTER_TAG","ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,</arg>
<arg>"EtherType":0,"IpProto":0,"SrcPort":0,"DstPort":0},</arg>
<arg>"ClassVal":[{"OVid":10,"IVid":20,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0</arg>
<arg>}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 14:28:13.600" level="INFO">${JSTRING} = { "onuId":1,"FlowId":1500,"PortId":0,"NniId":0,"FlowType":"downstream","PktTagType":"double_tag", "GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BC...</msg>
<status status="PASS" endtime="20200521 14:28:13.600" starttime="20200521 14:28:13.599"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 14:28:13.605" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'double_tag', u'GemportId': 1024, u'FlowId': 1500, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 10, u'IPbits': 0, u'IVid': 20,...</msg>
<status status="PASS" endtime="20200521 14:28:13.605" starttime="20200521 14:28:13.600"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:13.617" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200521 14:28:13.629" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.00041 seconds.</msg>
<msg timestamp="20200521 14:28:13.629" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:13 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:13.629" starttime="20200521 14:28:13.606"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:28:13.631" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:28:13.631" starttime="20200521 14:28:13.631"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:13.631" starttime="20200521 14:28:13.630"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:13.632" starttime="20200521 14:28:13.559"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:28:14.633" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:28:14.633" starttime="20200521 14:28:13.632"></status>
</kw>
<kw name="Test Flow Del">
<tags>
<tag>UP/DOWN stream flow del</tag>
</tags>
<doc>Test Flow Del</doc>
<arguments>
<arg>${flow_id}</arg>
</arguments>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_upstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:14.643" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/1500_upstream</msg>
<msg timestamp="20200521 14:28:14.654" level="INFO">Response Time to /redfish/v1/Olt/Flow/1500_upstream: 0.000459 seconds.</msg>
<msg timestamp="20200521 14:28:14.655" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:14 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:14.655" starttime="20200521 14:28:14.634"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:28:14.656" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:28:14.656" starttime="20200521 14:28:14.656"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_downstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:14.667" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/1500_downstream</msg>
<msg timestamp="20200521 14:28:14.689" level="INFO">Response Time to /redfish/v1/Olt/Flow/1500_downstream: 0.000576000000001 seconds.</msg>
<msg timestamp="20200521 14:28:14.689" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:14 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:14.689" starttime="20200521 14:28:14.656"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:28:14.690" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:28:14.691" starttime="20200521 14:28:14.690"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:14.691" starttime="20200521 14:28:14.634"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:14.691" starttime="20200521 14:28:12.557"></status>
</kw>
<kw type="foritem" name="${flow_id} = 2000">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:28:15.713" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:28:15.713" starttime="20200521 14:28:14.691"></status>
</kw>
<kw name="Test Flow Add">
<tags>
<tag>UP/DOWN stream flow add</tag>
</tags>
<doc>Test Flow Add</doc>
<arguments>
<arg>1</arg>
<arg>${flow_id}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PON_ID} - ${1}</arg>
</arguments>
<assign>
<var>${PON_ID}</var>
</assign>
<msg timestamp="20200521 14:28:15.715" level="INFO">${PON_ID} = 0</msg>
<status status="PASS" endtime="20200521 14:28:15.715" starttime="20200521 14:28:15.714"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024,</arg>
<arg>"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":"BCMOLT_ACTION_CMD_ID_ADD_OUTER_TAG",</arg>
<arg>"ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,"EtherType":0,"IpProto":0,"SrcPort":0,</arg>
<arg>"DstPort":0},"ClassVal":[{"OVid":20,"IVid":0,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 14:28:15.716" level="INFO">${JSTRING} = { "onuId":1,"FlowId":2000,"PortId":0,"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024, "Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCm...</msg>
<status status="PASS" endtime="20200521 14:28:15.716" starttime="20200521 14:28:15.715"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 14:28:15.721" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'single_tag', u'GemportId': 1024, u'FlowId': 2000, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 20, u'IPbits': 0, u'IVid': 0, ...</msg>
<status status="PASS" endtime="20200521 14:28:15.721" starttime="20200521 14:28:15.716"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:15.732" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200521 14:28:15.747" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000459 seconds.</msg>
<msg timestamp="20200521 14:28:15.747" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:16 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:15.748" starttime="20200521 14:28:15.722"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:28:15.750" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:28:15.750" starttime="20200521 14:28:15.749"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:15.750" starttime="20200521 14:28:15.748"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"downstream","PktTagType":"double_tag",</arg>
<arg>"GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOLT_ACTION_ID_O_VID",</arg>
<arg>"ActionCmd":"BCMOLT_ACTION_CMD_ID_REMOVE_OUTER_TAG","ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,</arg>
<arg>"EtherType":0,"IpProto":0,"SrcPort":0,"DstPort":0},</arg>
<arg>"ClassVal":[{"OVid":10,"IVid":20,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0</arg>
<arg>}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 14:28:15.751" level="INFO">${JSTRING} = { "onuId":1,"FlowId":2000,"PortId":0,"NniId":0,"FlowType":"downstream","PktTagType":"double_tag", "GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BC...</msg>
<status status="PASS" endtime="20200521 14:28:15.751" starttime="20200521 14:28:15.750"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 14:28:15.757" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'double_tag', u'GemportId': 1024, u'FlowId': 2000, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 10, u'IPbits': 0, u'IVid': 20,...</msg>
<status status="PASS" endtime="20200521 14:28:15.757" starttime="20200521 14:28:15.751"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:15.767" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200521 14:28:15.780" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000440999999999 seconds.</msg>
<msg timestamp="20200521 14:28:15.780" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:16 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:15.780" starttime="20200521 14:28:15.757"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:28:15.782" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:28:15.782" starttime="20200521 14:28:15.782"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:15.782" starttime="20200521 14:28:15.781"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:15.783" starttime="20200521 14:28:15.713"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:28:16.784" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:28:16.784" starttime="20200521 14:28:15.783"></status>
</kw>
<kw name="Test Flow Del">
<tags>
<tag>UP/DOWN stream flow del</tag>
</tags>
<doc>Test Flow Del</doc>
<arguments>
<arg>${flow_id}</arg>
</arguments>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_upstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:16.793" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/2000_upstream</msg>
<msg timestamp="20200521 14:28:16.804" level="INFO">Response Time to /redfish/v1/Olt/Flow/2000_upstream: 0.000488 seconds.</msg>
<msg timestamp="20200521 14:28:16.805" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:17 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:16.805" starttime="20200521 14:28:16.785"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:28:16.806" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:28:16.806" starttime="20200521 14:28:16.805"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_downstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:16.817" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/2000_downstream</msg>
<msg timestamp="20200521 14:28:16.849" level="INFO">Response Time to /redfish/v1/Olt/Flow/2000_downstream: 0.000508999999999 seconds.</msg>
<msg timestamp="20200521 14:28:16.850" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:17 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:16.850" starttime="20200521 14:28:16.806"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:28:16.851" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:28:16.851" starttime="20200521 14:28:16.851"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:16.851" starttime="20200521 14:28:16.784"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:16.851" starttime="20200521 14:28:14.691"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:16.851" starttime="20200521 14:28:06.152"></status>
</kw>
<kw name="Test Flow Add">
<tags>
<tag>UP/DOWN stream flow add</tag>
</tags>
<doc>Test Flow Add</doc>
<arguments>
<arg>1</arg>
<arg>2048</arg>
<arg>${PON_PORT_ID}</arg>
<arg>NOTONUID_IN_RANGE</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PON_ID} - ${1}</arg>
</arguments>
<assign>
<var>${PON_ID}</var>
</assign>
<msg timestamp="20200521 14:28:16.853" level="INFO">${PON_ID} = 0</msg>
<status status="PASS" endtime="20200521 14:28:16.853" starttime="20200521 14:28:16.852"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024,</arg>
<arg>"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":"BCMOLT_ACTION_CMD_ID_ADD_OUTER_TAG",</arg>
<arg>"ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,"EtherType":0,"IpProto":0,"SrcPort":0,</arg>
<arg>"DstPort":0},"ClassVal":[{"OVid":20,"IVid":0,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 14:28:16.854" level="INFO">${JSTRING} = { "onuId":1,"FlowId":2048,"PortId":0,"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024, "Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCm...</msg>
<status status="PASS" endtime="20200521 14:28:16.854" starttime="20200521 14:28:16.853"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 14:28:16.859" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'single_tag', u'GemportId': 1024, u'FlowId': 2048, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 20, u'IPbits': 0, u'IVid': 0, ...</msg>
<status status="PASS" endtime="20200521 14:28:16.860" starttime="20200521 14:28:16.854"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:16.868" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200521 14:28:16.878" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000591999999999 seconds.</msg>
<msg timestamp="20200521 14:28:16.878" level="INFO">${resp} = 500
date Thu, 21 May 2020 06:28:17 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:16.879" starttime="20200521 14:28:16.860"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:28:16.880" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:28:16.880" starttime="20200521 14:28:16.880"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:16.881" starttime="20200521 14:28:16.879"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"downstream","PktTagType":"double_tag",</arg>
<arg>"GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOLT_ACTION_ID_O_VID",</arg>
<arg>"ActionCmd":"BCMOLT_ACTION_CMD_ID_REMOVE_OUTER_TAG","ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,</arg>
<arg>"EtherType":0,"IpProto":0,"SrcPort":0,"DstPort":0},</arg>
<arg>"ClassVal":[{"OVid":10,"IVid":20,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0</arg>
<arg>}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 14:28:16.882" level="INFO">${JSTRING} = { "onuId":1,"FlowId":2048,"PortId":0,"NniId":0,"FlowType":"downstream","PktTagType":"double_tag", "GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BC...</msg>
<status status="PASS" endtime="20200521 14:28:16.882" starttime="20200521 14:28:16.881"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 14:28:16.887" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'double_tag', u'GemportId': 1024, u'FlowId': 2048, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 10, u'IPbits': 0, u'IVid': 20,...</msg>
<status status="PASS" endtime="20200521 14:28:16.887" starttime="20200521 14:28:16.882"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:16.896" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200521 14:28:16.906" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000588 seconds.</msg>
<msg timestamp="20200521 14:28:16.907" level="INFO">${resp} = 500
date Thu, 21 May 2020 06:28:17 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:16.907" starttime="20200521 14:28:16.887"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:28:16.909" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:28:16.909" starttime="20200521 14:28:16.908"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:16.909" starttime="20200521 14:28:16.907"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:16.909" starttime="20200521 14:28:16.852"></status>
</kw>
<kw name="Test Flow Add">
<tags>
<tag>UP/DOWN stream flow add</tag>
</tags>
<doc>Test Flow Add</doc>
<arguments>
<arg>1</arg>
<arg>16</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PON_ID} - ${1}</arg>
</arguments>
<assign>
<var>${PON_ID}</var>
</assign>
<msg timestamp="20200521 14:28:16.910" level="INFO">${PON_ID} = 0</msg>
<status status="PASS" endtime="20200521 14:28:16.910" starttime="20200521 14:28:16.910"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024,</arg>
<arg>"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":"BCMOLT_ACTION_CMD_ID_ADD_OUTER_TAG",</arg>
<arg>"ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,"EtherType":0,"IpProto":0,"SrcPort":0,</arg>
<arg>"DstPort":0},"ClassVal":[{"OVid":20,"IVid":0,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 14:28:16.911" level="INFO">${JSTRING} = { "onuId":1,"FlowId":16,"PortId":0,"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024, "Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd"...</msg>
<status status="PASS" endtime="20200521 14:28:16.911" starttime="20200521 14:28:16.911"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 14:28:16.917" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'single_tag', u'GemportId': 1024, u'FlowId': 16, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 20, u'IPbits': 0, u'IVid': 0, u'...</msg>
<status status="PASS" endtime="20200521 14:28:16.918" starttime="20200521 14:28:16.911"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:16.949" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200521 14:28:16.968" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000551000000001 seconds.</msg>
<msg timestamp="20200521 14:28:16.968" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:17 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:16.968" starttime="20200521 14:28:16.918"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:28:16.970" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:28:16.970" starttime="20200521 14:28:16.970"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:16.970" starttime="20200521 14:28:16.969"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"downstream","PktTagType":"double_tag",</arg>
<arg>"GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOLT_ACTION_ID_O_VID",</arg>
<arg>"ActionCmd":"BCMOLT_ACTION_CMD_ID_REMOVE_OUTER_TAG","ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,</arg>
<arg>"EtherType":0,"IpProto":0,"SrcPort":0,"DstPort":0},</arg>
<arg>"ClassVal":[{"OVid":10,"IVid":20,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0</arg>
<arg>}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 14:28:16.971" level="INFO">${JSTRING} = { "onuId":1,"FlowId":16,"PortId":0,"NniId":0,"FlowType":"downstream","PktTagType":"double_tag", "GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMO...</msg>
<status status="PASS" endtime="20200521 14:28:16.971" starttime="20200521 14:28:16.970"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 14:28:16.976" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'double_tag', u'GemportId': 1024, u'FlowId': 16, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 10, u'IPbits': 0, u'IVid': 20, u...</msg>
<status status="PASS" endtime="20200521 14:28:16.977" starttime="20200521 14:28:16.971"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:16.988" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200521 14:28:17.001" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000477 seconds.</msg>
<msg timestamp="20200521 14:28:17.001" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:17 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:17.001" starttime="20200521 14:28:16.977"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:28:17.003" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:28:17.003" starttime="20200521 14:28:17.003"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:17.003" starttime="20200521 14:28:17.002"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:17.003" starttime="20200521 14:28:16.909"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:17.004" starttime="20200521 14:28:06.151"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200521 14:28:17.014" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200521 14:28:17.024" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000469 seconds.</msg>
<msg timestamp="20200521 14:28:17.025" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200521 14:28:17.025" starttime="20200521 14:28:17.004"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:17.026" starttime="20200521 14:28:17.004"></status>
</kw>
<doc>Test flow add</doc>
<tags>
<tag>Test Flow add</tag>
</tags>
<status status="PASS" endtime="20200521 14:28:17.026" critical="yes" starttime="20200521 14:28:06.125"></status>
</test>
<test id="s1-s1-t4" name="Verify Restful API for omci send">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200521 14:28:17.052" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200521 14:28:17.067" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000746 seconds.</msg>
<msg timestamp="20200521 14:28:17.068" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200521 14:28:17.068" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200521 14:28:17.068" starttime="20200521 14:28:17.029"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:17.068" starttime="20200521 14:28:17.028"></status>
</kw>
<kw name="Test omci send">
<tags>
<tag>omci send</tag>
</tags>
<doc>Send omci raw data</doc>
<kw name="Test Send Omci">
<tags>
<tag>Send Omci function</tag>
</tags>
<doc>Send Omci function</doc>
<arguments>
<arg>1</arg>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OMCI_RAW)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload_}</var>
</assign>
<msg timestamp="20200521 14:28:17.075" level="INFO">${payload_} = {u'raw_data': [{u'Omci': u'00B34F0A00020000000000000000000000000000000000000000000000000000000000000000000000000028'}, {u'Omci': u'00B44F0A0002000000000000000000000000000000000000000000000000000000000...</msg>
<status status="PASS" endtime="20200521 14:28:17.075" starttime="20200521 14:28:17.070"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${payload_["raw_data"]</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200521 14:28:17.076" level="INFO">Length is 22</msg>
<msg timestamp="20200521 14:28:17.076" level="INFO">${length} = 22</msg>
<status status="PASS" endtime="20200521 14:28:17.076" starttime="20200521 14:28:17.076"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>====================length ${length} ================</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:17.077" starttime="20200521 14:28:17.076"></status>
</kw>
<kw type="for" name="${i} IN RANGE [ 0 | 171 ]">
<kw type="foritem" name="${i} = 0">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:17.080" starttime="20200521 14:28:17.077"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:17.381" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:17.381" starttime="20200521 14:28:17.080"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:17.391" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:17.401" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000484999999999 seconds.</msg>
<msg timestamp="20200521 14:28:17.401" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:17 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:17.401" starttime="20200521 14:28:17.381"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:17.401" starttime="20200521 14:28:17.077"></status>
</kw>
<kw type="foritem" name="${i} = 1">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:17.403" starttime="20200521 14:28:17.402"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:17.704" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:17.704" starttime="20200521 14:28:17.404"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:17.716" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:17.725" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000426 seconds.</msg>
<msg timestamp="20200521 14:28:17.726" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:18 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:17.726" starttime="20200521 14:28:17.705"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:17.726" starttime="20200521 14:28:17.401"></status>
</kw>
<kw type="foritem" name="${i} = 2">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:17.727" starttime="20200521 14:28:17.727"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:18.028" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:18.029" starttime="20200521 14:28:17.728"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:18.038" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:18.049" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000468 seconds.</msg>
<msg timestamp="20200521 14:28:18.050" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:18 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:18.050" starttime="20200521 14:28:18.029"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:18.050" starttime="20200521 14:28:17.726"></status>
</kw>
<kw type="foritem" name="${i} = 3">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:18.051" starttime="20200521 14:28:18.050"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:18.352" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:18.352" starttime="20200521 14:28:18.051"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:18.362" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:18.372" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000429 seconds.</msg>
<msg timestamp="20200521 14:28:18.373" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:18 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:18.373" starttime="20200521 14:28:18.353"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:18.373" starttime="20200521 14:28:18.050"></status>
</kw>
<kw type="foritem" name="${i} = 4">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:18.374" starttime="20200521 14:28:18.373"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:18.675" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:18.675" starttime="20200521 14:28:18.374"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:18.684" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:18.694" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000427 seconds.</msg>
<msg timestamp="20200521 14:28:18.695" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:18 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:18.695" starttime="20200521 14:28:18.675"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:18.695" starttime="20200521 14:28:18.373"></status>
</kw>
<kw type="foritem" name="${i} = 5">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:18.696" starttime="20200521 14:28:18.695"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:18.997" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:18.997" starttime="20200521 14:28:18.696"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:19.005" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:19.015" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000467 seconds.</msg>
<msg timestamp="20200521 14:28:19.015" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:19 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:19.015" starttime="20200521 14:28:18.997"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:19.015" starttime="20200521 14:28:18.695"></status>
</kw>
<kw type="foritem" name="${i} = 6">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:19.017" starttime="20200521 14:28:19.016"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:19.317" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:19.318" starttime="20200521 14:28:19.017"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:19.327" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:19.337" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000464 seconds.</msg>
<msg timestamp="20200521 14:28:19.337" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:19 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:19.337" starttime="20200521 14:28:19.318"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:19.338" starttime="20200521 14:28:19.016"></status>
</kw>
<kw type="foritem" name="${i} = 7">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:19.339" starttime="20200521 14:28:19.338"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:19.640" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:19.640" starttime="20200521 14:28:19.339"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:19.648" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:19.658" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000455 seconds.</msg>
<msg timestamp="20200521 14:28:19.659" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:19 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:19.659" starttime="20200521 14:28:19.640"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:19.659" starttime="20200521 14:28:19.338"></status>
</kw>
<kw type="foritem" name="${i} = 8">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:19.662" starttime="20200521 14:28:19.659"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:19.963" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:19.963" starttime="20200521 14:28:19.663"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:19.973" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:19.986" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.003509 seconds.</msg>
<msg timestamp="20200521 14:28:19.987" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:20 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:19.987" starttime="20200521 14:28:19.964"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:19.987" starttime="20200521 14:28:19.659"></status>
</kw>
<kw type="foritem" name="${i} = 9">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:19.988" starttime="20200521 14:28:19.987"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:20.290" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:20.291" starttime="20200521 14:28:19.989"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:20.301" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:20.311" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000411000000001 seconds.</msg>
<msg timestamp="20200521 14:28:20.311" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:20 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:20.311" starttime="20200521 14:28:20.291"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:20.311" starttime="20200521 14:28:19.987"></status>
</kw>
<kw type="foritem" name="${i} = 10">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:20.313" starttime="20200521 14:28:20.312"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:20.614" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:20.614" starttime="20200521 14:28:20.314"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:20.624" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:20.635" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000508 seconds.</msg>
<msg timestamp="20200521 14:28:20.635" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:20 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:20.636" starttime="20200521 14:28:20.615"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:20.636" starttime="20200521 14:28:20.311"></status>
</kw>
<kw type="foritem" name="${i} = 11">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:20.637" starttime="20200521 14:28:20.636"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:20.938" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:20.938" starttime="20200521 14:28:20.637"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:20.950" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:20.961" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00044 seconds.</msg>
<msg timestamp="20200521 14:28:20.962" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:21 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:20.962" starttime="20200521 14:28:20.939"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:20.962" starttime="20200521 14:28:20.636"></status>
</kw>
<kw type="foritem" name="${i} = 12">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:20.963" starttime="20200521 14:28:20.962"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:21.264" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:21.265" starttime="20200521 14:28:20.964"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:21.275" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:21.285" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000413 seconds.</msg>
<msg timestamp="20200521 14:28:21.286" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:21 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:21.286" starttime="20200521 14:28:21.265"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:21.286" starttime="20200521 14:28:20.962"></status>
</kw>
<kw type="foritem" name="${i} = 13">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:21.287" starttime="20200521 14:28:21.287"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:21.588" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:21.589" starttime="20200521 14:28:21.288"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:21.597" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:21.607" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000505 seconds.</msg>
<msg timestamp="20200521 14:28:21.608" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:21 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:21.608" starttime="20200521 14:28:21.589"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:21.608" starttime="20200521 14:28:21.286"></status>
</kw>
<kw type="foritem" name="${i} = 14">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:21.609" starttime="20200521 14:28:21.608"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:21.910" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:21.910" starttime="20200521 14:28:21.610"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:21.923" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:21.934" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000448 seconds.</msg>
<msg timestamp="20200521 14:28:21.934" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:22 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:21.934" starttime="20200521 14:28:21.911"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:21.934" starttime="20200521 14:28:21.608"></status>
</kw>
<kw type="foritem" name="${i} = 15">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:21.936" starttime="20200521 14:28:21.935"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:22.237" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:22.237" starttime="20200521 14:28:21.936"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:22.248" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:22.258" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000475 seconds.</msg>
<msg timestamp="20200521 14:28:22.259" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:22 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:22.259" starttime="20200521 14:28:22.238"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:22.259" starttime="20200521 14:28:21.935"></status>
</kw>
<kw type="foritem" name="${i} = 16">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:22.260" starttime="20200521 14:28:22.259"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:22.561" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:22.562" starttime="20200521 14:28:22.261"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:22.572" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:22.581" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000434 seconds.</msg>
<msg timestamp="20200521 14:28:22.581" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:22 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:22.581" starttime="20200521 14:28:22.562"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:22.581" starttime="20200521 14:28:22.259"></status>
</kw>
<kw type="foritem" name="${i} = 17">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:22.583" starttime="20200521 14:28:22.582"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:22.884" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:22.884" starttime="20200521 14:28:22.583"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:22.894" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:22.905" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000573999999999 seconds.</msg>
<msg timestamp="20200521 14:28:22.906" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:23 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:22.906" starttime="20200521 14:28:22.884"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:22.906" starttime="20200521 14:28:22.582"></status>
</kw>
<kw type="foritem" name="${i} = 18">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:22.909" starttime="20200521 14:28:22.906"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:23.210" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:23.210" starttime="20200521 14:28:22.909"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:23.222" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:23.232" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000441 seconds.</msg>
<msg timestamp="20200521 14:28:23.232" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:23 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:23.233" starttime="20200521 14:28:23.210"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:23.233" starttime="20200521 14:28:22.906"></status>
</kw>
<kw type="foritem" name="${i} = 19">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:23.236" starttime="20200521 14:28:23.233"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:23.537" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:23.537" starttime="20200521 14:28:23.236"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:23.550" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:23.560" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000528 seconds.</msg>
<msg timestamp="20200521 14:28:23.560" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:23 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:23.560" starttime="20200521 14:28:23.537"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:23.560" starttime="20200521 14:28:23.233"></status>
</kw>
<kw type="foritem" name="${i} = 20">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:23.562" starttime="20200521 14:28:23.561"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:23.863" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:23.863" starttime="20200521 14:28:23.562"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:23.873" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:23.884" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000456 seconds.</msg>
<msg timestamp="20200521 14:28:23.884" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:24 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:23.884" starttime="20200521 14:28:23.863"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:23.884" starttime="20200521 14:28:23.561"></status>
</kw>
<kw type="foritem" name="${i} = 21">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:23.886" starttime="20200521 14:28:23.885"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:24.187" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:24.187" starttime="20200521 14:28:23.886"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:24.196" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:24.206" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000525000000001 seconds.</msg>
<msg timestamp="20200521 14:28:24.207" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:24 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:24.207" starttime="20200521 14:28:24.187"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:24.207" starttime="20200521 14:28:23.884"></status>
</kw>
<kw type="foritem" name="${i} = 22">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:24.208" starttime="20200521 14:28:24.208"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:24.509" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:24.510" starttime="20200521 14:28:24.209"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:24.522" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:24.532" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000591 seconds.</msg>
<msg timestamp="20200521 14:28:24.533" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:24 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:24.534" starttime="20200521 14:28:24.510"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:24.534" starttime="20200521 14:28:24.207"></status>
</kw>
<kw type="foritem" name="${i} = 23">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:24.535" starttime="20200521 14:28:24.534"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:24.836" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:24.836" starttime="20200521 14:28:24.535"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:24.849" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:24.860" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000607 seconds.</msg>
<msg timestamp="20200521 14:28:24.861" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:25 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:24.861" starttime="20200521 14:28:24.837"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:24.861" starttime="20200521 14:28:24.534"></status>
</kw>
<kw type="foritem" name="${i} = 24">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:24.865" starttime="20200521 14:28:24.861"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:25.166" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:25.166" starttime="20200521 14:28:24.865"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:25.179" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:25.189" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00048 seconds.</msg>
<msg timestamp="20200521 14:28:25.190" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:25 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:25.190" starttime="20200521 14:28:25.166"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:25.190" starttime="20200521 14:28:24.861"></status>
</kw>
<kw type="foritem" name="${i} = 25">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:25.191" starttime="20200521 14:28:25.191"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:25.493" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:25.493" starttime="20200521 14:28:25.192"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:25.504" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:25.516" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000569 seconds.</msg>
<msg timestamp="20200521 14:28:25.517" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:25 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:25.517" starttime="20200521 14:28:25.493"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:25.517" starttime="20200521 14:28:25.190"></status>
</kw>
<kw type="foritem" name="${i} = 26">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:25.521" starttime="20200521 14:28:25.518"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:25.822" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:25.822" starttime="20200521 14:28:25.521"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:25.833" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:25.843" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000361 seconds.</msg>
<msg timestamp="20200521 14:28:25.844" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:26 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:25.844" starttime="20200521 14:28:25.822"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:25.844" starttime="20200521 14:28:25.517"></status>
</kw>
<kw type="foritem" name="${i} = 27">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:25.846" starttime="20200521 14:28:25.845"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:26.147" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:26.147" starttime="20200521 14:28:25.846"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:26.157" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:26.168" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000527 seconds.</msg>
<msg timestamp="20200521 14:28:26.169" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:26 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:26.169" starttime="20200521 14:28:26.147"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:26.169" starttime="20200521 14:28:25.844"></status>
</kw>
<kw type="foritem" name="${i} = 28">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:26.172" starttime="20200521 14:28:26.170"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:26.473" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:26.474" starttime="20200521 14:28:26.173"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:26.485" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:26.495" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000690000000001 seconds.</msg>
<msg timestamp="20200521 14:28:26.496" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:26 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:26.496" starttime="20200521 14:28:26.474"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:26.496" starttime="20200521 14:28:26.169"></status>
</kw>
<kw type="foritem" name="${i} = 29">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:26.497" starttime="20200521 14:28:26.497"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:26.799" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:26.799" starttime="20200521 14:28:26.498"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:26.810" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:26.820" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000469 seconds.</msg>
<msg timestamp="20200521 14:28:26.821" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:27 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:26.821" starttime="20200521 14:28:26.799"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:26.821" starttime="20200521 14:28:26.496"></status>
</kw>
<kw type="foritem" name="${i} = 30">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:26.822" starttime="20200521 14:28:26.822"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:27.124" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:27.124" starttime="20200521 14:28:26.823"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:27.137" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:27.147" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000461 seconds.</msg>
<msg timestamp="20200521 14:28:27.147" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:27 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:27.148" starttime="20200521 14:28:27.124"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:27.148" starttime="20200521 14:28:26.821"></status>
</kw>
<kw type="foritem" name="${i} = 31">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:27.149" starttime="20200521 14:28:27.148"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:27.452" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:27.452" starttime="20200521 14:28:27.150"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:27.464" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:27.475" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000506000000001 seconds.</msg>
<msg timestamp="20200521 14:28:27.475" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:27 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:27.475" starttime="20200521 14:28:27.453"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:27.475" starttime="20200521 14:28:27.148"></status>
</kw>
<kw type="foritem" name="${i} = 32">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:27.478" starttime="20200521 14:28:27.476"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:27.779" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:27.780" starttime="20200521 14:28:27.479"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:27.793" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:27.803" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000483 seconds.</msg>
<msg timestamp="20200521 14:28:27.804" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:28 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:27.804" starttime="20200521 14:28:27.780"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:27.804" starttime="20200521 14:28:27.475"></status>
</kw>
<kw type="foritem" name="${i} = 33">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:27.807" starttime="20200521 14:28:27.804"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:28.108" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:28.108" starttime="20200521 14:28:27.807"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:28.119" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:28.128" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000446 seconds.</msg>
<msg timestamp="20200521 14:28:28.129" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:28 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:28.129" starttime="20200521 14:28:28.109"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:28.129" starttime="20200521 14:28:27.804"></status>
</kw>
<kw type="foritem" name="${i} = 34">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:28.131" starttime="20200521 14:28:28.130"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:28.432" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:28.432" starttime="20200521 14:28:28.131"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:28.442" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:28.454" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00048 seconds.</msg>
<msg timestamp="20200521 14:28:28.454" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:28 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:28.454" starttime="20200521 14:28:28.433"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:28.454" starttime="20200521 14:28:28.129"></status>
</kw>
<kw type="foritem" name="${i} = 35">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:28.455" starttime="20200521 14:28:28.455"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:28.756" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:28.757" starttime="20200521 14:28:28.456"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:28.768" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:28.785" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000509 seconds.</msg>
<msg timestamp="20200521 14:28:28.785" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:29 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:28.785" starttime="20200521 14:28:28.757"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:28.785" starttime="20200521 14:28:28.454"></status>
</kw>
<kw type="foritem" name="${i} = 36">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:28.787" starttime="20200521 14:28:28.786"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:29.087" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:29.088" starttime="20200521 14:28:28.787"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:29.098" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:29.109" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000476 seconds.</msg>
<msg timestamp="20200521 14:28:29.109" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:29 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:29.109" starttime="20200521 14:28:29.088"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:29.110" starttime="20200521 14:28:28.785"></status>
</kw>
<kw type="foritem" name="${i} = 37">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:29.111" starttime="20200521 14:28:29.110"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:29.412" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:29.412" starttime="20200521 14:28:29.111"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:29.420" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:29.431" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000543 seconds.</msg>
<msg timestamp="20200521 14:28:29.431" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:29 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:29.431" starttime="20200521 14:28:29.412"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:29.431" starttime="20200521 14:28:29.110"></status>
</kw>
<kw type="foritem" name="${i} = 38">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:29.433" starttime="20200521 14:28:29.432"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:29.734" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:29.734" starttime="20200521 14:28:29.433"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:29.744" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:29.756" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000414999999999 seconds.</msg>
<msg timestamp="20200521 14:28:29.756" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:30 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:29.756" starttime="20200521 14:28:29.734"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:29.756" starttime="20200521 14:28:29.431"></status>
</kw>
<kw type="foritem" name="${i} = 39">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:29.758" starttime="20200521 14:28:29.757"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:30.062" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:30.063" starttime="20200521 14:28:29.758"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:30.076" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:30.083" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000548 seconds.</msg>
<msg timestamp="20200521 14:28:30.083" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:30 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:30.083" starttime="20200521 14:28:30.063"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:30.083" starttime="20200521 14:28:29.757"></status>
</kw>
<kw type="foritem" name="${i} = 40">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:30.086" starttime="20200521 14:28:30.084"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:30.388" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:30.388" starttime="20200521 14:28:30.087"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:30.399" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:30.412" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000479 seconds.</msg>
<msg timestamp="20200521 14:28:30.413" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:30 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:30.413" starttime="20200521 14:28:30.388"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:30.413" starttime="20200521 14:28:30.083"></status>
</kw>
<kw type="foritem" name="${i} = 41">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:30.414" starttime="20200521 14:28:30.413"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:30.722" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:30.722" starttime="20200521 14:28:30.415"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:30.733" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:30.743" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000477 seconds.</msg>
<msg timestamp="20200521 14:28:30.744" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:31 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:30.744" starttime="20200521 14:28:30.723"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:30.744" starttime="20200521 14:28:30.413"></status>
</kw>
<kw type="foritem" name="${i} = 42">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:30.745" starttime="20200521 14:28:30.744"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:31.047" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:31.048" starttime="20200521 14:28:30.746"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:31.060" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:31.072" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000522 seconds.</msg>
<msg timestamp="20200521 14:28:31.072" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:31 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:31.072" starttime="20200521 14:28:31.048"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:31.073" starttime="20200521 14:28:30.744"></status>
</kw>
<kw type="foritem" name="${i} = 43">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:31.076" starttime="20200521 14:28:31.073"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:31.377" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:31.377" starttime="20200521 14:28:31.076"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:31.389" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:31.399" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000459 seconds.</msg>
<msg timestamp="20200521 14:28:31.400" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:31 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:31.400" starttime="20200521 14:28:31.377"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:31.400" starttime="20200521 14:28:31.073"></status>
</kw>
<kw type="foritem" name="${i} = 44">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:31.401" starttime="20200521 14:28:31.401"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:31.703" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:31.703" starttime="20200521 14:28:31.402"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:31.713" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:31.723" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000471999999999 seconds.</msg>
<msg timestamp="20200521 14:28:31.723" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:32 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:31.723" starttime="20200521 14:28:31.703"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:31.723" starttime="20200521 14:28:31.400"></status>
</kw>
<kw type="foritem" name="${i} = 45">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:31.726" starttime="20200521 14:28:31.724"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:32.028" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:32.028" starttime="20200521 14:28:31.727"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:32.038" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:32.053" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000578 seconds.</msg>
<msg timestamp="20200521 14:28:32.054" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:32 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:32.054" starttime="20200521 14:28:32.028"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:32.054" starttime="20200521 14:28:31.724"></status>
</kw>
<kw type="foritem" name="${i} = 46">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:32.057" starttime="20200521 14:28:32.054"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:32.363" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:32.363" starttime="20200521 14:28:32.057"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:32.373" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:32.384" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000508999999999 seconds.</msg>
<msg timestamp="20200521 14:28:32.384" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:32 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:32.384" starttime="20200521 14:28:32.364"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:32.384" starttime="20200521 14:28:32.054"></status>
</kw>
<kw type="foritem" name="${i} = 47">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:32.386" starttime="20200521 14:28:32.385"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:32.691" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:32.691" starttime="20200521 14:28:32.386"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:32.701" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:32.711" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000502 seconds.</msg>
<msg timestamp="20200521 14:28:32.712" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:33 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:32.712" starttime="20200521 14:28:32.691"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:32.712" starttime="20200521 14:28:32.384"></status>
</kw>
<kw type="foritem" name="${i} = 48">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:32.713" starttime="20200521 14:28:32.713"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:33.022" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:33.023" starttime="20200521 14:28:32.714"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:33.033" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:33.043" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000528 seconds.</msg>
<msg timestamp="20200521 14:28:33.044" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:33 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:33.044" starttime="20200521 14:28:33.023"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:33.044" starttime="20200521 14:28:32.712"></status>
</kw>
<kw type="foritem" name="${i} = 49">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:33.045" starttime="20200521 14:28:33.044"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:33.346" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:33.347" starttime="20200521 14:28:33.045"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:33.357" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:33.366" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000429 seconds.</msg>
<msg timestamp="20200521 14:28:33.367" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:33 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:33.367" starttime="20200521 14:28:33.347"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:33.367" starttime="20200521 14:28:33.044"></status>
</kw>
<kw type="foritem" name="${i} = 50">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:33.368" starttime="20200521 14:28:33.367"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:33.672" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:33.673" starttime="20200521 14:28:33.368"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:33.684" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:33.694" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000522 seconds.</msg>
<msg timestamp="20200521 14:28:33.695" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:33 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:33.695" starttime="20200521 14:28:33.673"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:33.695" starttime="20200521 14:28:33.367"></status>
</kw>
<kw type="foritem" name="${i} = 51">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:33.696" starttime="20200521 14:28:33.695"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:34.012" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:34.012" starttime="20200521 14:28:33.697"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:34.022" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:34.032" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000444 seconds.</msg>
<msg timestamp="20200521 14:28:34.033" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:34 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:34.033" starttime="20200521 14:28:34.012"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:34.033" starttime="20200521 14:28:33.695"></status>
</kw>
<kw type="foritem" name="${i} = 52">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:34.034" starttime="20200521 14:28:34.034"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:34.335" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:34.336" starttime="20200521 14:28:34.035"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:34.344" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:34.354" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000406 seconds.</msg>
<msg timestamp="20200521 14:28:34.354" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:34 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:34.354" starttime="20200521 14:28:34.336"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:34.354" starttime="20200521 14:28:34.033"></status>
</kw>
<kw type="foritem" name="${i} = 53">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:34.356" starttime="20200521 14:28:34.355"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:34.656" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:34.657" starttime="20200521 14:28:34.356"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:34.666" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:34.677" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000585 seconds.</msg>
<msg timestamp="20200521 14:28:34.677" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:34 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:34.677" starttime="20200521 14:28:34.657"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:34.678" starttime="20200521 14:28:34.354"></status>
</kw>
<kw type="foritem" name="${i} = 54">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:34.679" starttime="20200521 14:28:34.678"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:34.982" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:34.982" starttime="20200521 14:28:34.679"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:34.993" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:35.002" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000325999999999 seconds.</msg>
<msg timestamp="20200521 14:28:35.002" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:35 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:35.002" starttime="20200521 14:28:34.983"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:35.002" starttime="20200521 14:28:34.678"></status>
</kw>
<kw type="foritem" name="${i} = 55">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:35.003" starttime="20200521 14:28:35.003"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:35.304" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:35.304" starttime="20200521 14:28:35.004"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:35.315" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:35.324" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000381999999999 seconds.</msg>
<msg timestamp="20200521 14:28:35.325" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:35 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:35.325" starttime="20200521 14:28:35.305"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:35.325" starttime="20200521 14:28:35.002"></status>
</kw>
<kw type="foritem" name="${i} = 56">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:35.326" starttime="20200521 14:28:35.326"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:35.627" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:35.627" starttime="20200521 14:28:35.327"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:35.638" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:35.648" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000462 seconds.</msg>
<msg timestamp="20200521 14:28:35.648" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:35 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:35.648" starttime="20200521 14:28:35.628"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:35.648" starttime="20200521 14:28:35.325"></status>
</kw>
<kw type="foritem" name="${i} = 57">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:35.650" starttime="20200521 14:28:35.649"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:35.951" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:35.952" starttime="20200521 14:28:35.651"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:35.962" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:35.972" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.0004 seconds.</msg>
<msg timestamp="20200521 14:28:35.972" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:36 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:35.972" starttime="20200521 14:28:35.952"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:35.973" starttime="20200521 14:28:35.648"></status>
</kw>
<kw type="foritem" name="${i} = 58">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:35.976" starttime="20200521 14:28:35.973"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:36.285" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:36.285" starttime="20200521 14:28:35.977"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:36.295" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:36.304" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000296 seconds.</msg>
<msg timestamp="20200521 14:28:36.305" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:36 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:36.305" starttime="20200521 14:28:36.286"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:36.305" starttime="20200521 14:28:35.973"></status>
</kw>
<kw type="foritem" name="${i} = 59">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:36.306" starttime="20200521 14:28:36.305"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:36.612" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:36.612" starttime="20200521 14:28:36.306"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:36.622" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:36.632" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000469000000001 seconds.</msg>
<msg timestamp="20200521 14:28:36.633" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:36 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:36.633" starttime="20200521 14:28:36.613"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:36.633" starttime="20200521 14:28:36.305"></status>
</kw>
<kw type="foritem" name="${i} = 60">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:36.634" starttime="20200521 14:28:36.633"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:36.935" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:36.935" starttime="20200521 14:28:36.634"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:36.945" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:36.955" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000379 seconds.</msg>
<msg timestamp="20200521 14:28:36.956" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:37 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:36.956" starttime="20200521 14:28:36.935"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:36.956" starttime="20200521 14:28:36.633"></status>
</kw>
<kw type="foritem" name="${i} = 61">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:36.957" starttime="20200521 14:28:36.957"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:37.258" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:37.258" starttime="20200521 14:28:36.958"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:37.270" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:37.280" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000544000000001 seconds.</msg>
<msg timestamp="20200521 14:28:37.281" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:37 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:37.281" starttime="20200521 14:28:37.259"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:37.281" starttime="20200521 14:28:36.956"></status>
</kw>
<kw type="foritem" name="${i} = 62">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:37.282" starttime="20200521 14:28:37.281"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:37.592" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:37.593" starttime="20200521 14:28:37.283"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:37.603" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:37.613" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000403 seconds.</msg>
<msg timestamp="20200521 14:28:37.613" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:37 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:37.613" starttime="20200521 14:28:37.593"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:37.613" starttime="20200521 14:28:37.281"></status>
</kw>
<kw type="foritem" name="${i} = 63">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:37.615" starttime="20200521 14:28:37.614"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:37.922" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:37.922" starttime="20200521 14:28:37.615"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:37.932" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:37.943" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000528 seconds.</msg>
<msg timestamp="20200521 14:28:37.943" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:38 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:37.944" starttime="20200521 14:28:37.923"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:37.944" starttime="20200521 14:28:37.614"></status>
</kw>
<kw type="foritem" name="${i} = 64">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:37.945" starttime="20200521 14:28:37.944"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:38.246" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:38.246" starttime="20200521 14:28:37.945"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:38.256" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:38.266" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000388 seconds.</msg>
<msg timestamp="20200521 14:28:38.266" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:38 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:38.267" starttime="20200521 14:28:38.246"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:38.267" starttime="20200521 14:28:37.944"></status>
</kw>
<kw type="foritem" name="${i} = 65">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:38.268" starttime="20200521 14:28:38.267"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:38.569" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:38.569" starttime="20200521 14:28:38.268"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:38.579" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:38.589" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000431 seconds.</msg>
<msg timestamp="20200521 14:28:38.589" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:38 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:38.590" starttime="20200521 14:28:38.569"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:38.590" starttime="20200521 14:28:38.267"></status>
</kw>
<kw type="foritem" name="${i} = 66">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:38.591" starttime="20200521 14:28:38.590"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:38.892" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:38.892" starttime="20200521 14:28:38.591"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:38.903" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:38.913" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000387 seconds.</msg>
<msg timestamp="20200521 14:28:38.914" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:39 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:38.914" starttime="20200521 14:28:38.892"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:38.914" starttime="20200521 14:28:38.590"></status>
</kw>
<kw type="foritem" name="${i} = 67">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:38.915" starttime="20200521 14:28:38.914"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:39.216" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:39.216" starttime="20200521 14:28:38.915"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:39.226" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:39.236" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000418 seconds.</msg>
<msg timestamp="20200521 14:28:39.237" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:39 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:39.237" starttime="20200521 14:28:39.216"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:39.237" starttime="20200521 14:28:38.914"></status>
</kw>
<kw type="foritem" name="${i} = 68">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:39.240" starttime="20200521 14:28:39.239"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:39.541" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:39.542" starttime="20200521 14:28:39.241"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:39.552" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:39.562" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000506 seconds.</msg>
<msg timestamp="20200521 14:28:39.562" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:39 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:39.562" starttime="20200521 14:28:39.542"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:39.563" starttime="20200521 14:28:39.237"></status>
</kw>
<kw type="foritem" name="${i} = 69">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:39.564" starttime="20200521 14:28:39.563"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:39.864" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:39.865" starttime="20200521 14:28:39.564"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:39.875" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:39.885" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000453 seconds.</msg>
<msg timestamp="20200521 14:28:39.885" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:40 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:39.885" starttime="20200521 14:28:39.865"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:39.885" starttime="20200521 14:28:39.563"></status>
</kw>
<kw type="foritem" name="${i} = 70">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:39.886" starttime="20200521 14:28:39.886"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:40.188" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:40.188" starttime="20200521 14:28:39.887"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:40.199" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:40.210" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000468 seconds.</msg>
<msg timestamp="20200521 14:28:40.210" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:40 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:40.210" starttime="20200521 14:28:40.188"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:40.210" starttime="20200521 14:28:39.885"></status>
</kw>
<kw type="foritem" name="${i} = 71">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:40.211" starttime="20200521 14:28:40.211"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:40.512" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:40.512" starttime="20200521 14:28:40.212"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:40.524" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:40.534" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000398 seconds.</msg>
<msg timestamp="20200521 14:28:40.534" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:40 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:40.534" starttime="20200521 14:28:40.513"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:40.535" starttime="20200521 14:28:40.210"></status>
</kw>
<kw type="foritem" name="${i} = 72">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:40.536" starttime="20200521 14:28:40.535"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:40.836" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:40.837" starttime="20200521 14:28:40.536"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:40.845" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:40.855" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000415 seconds.</msg>
<msg timestamp="20200521 14:28:40.855" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:41 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:40.855" starttime="20200521 14:28:40.837"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:40.855" starttime="20200521 14:28:40.535"></status>
</kw>
<kw type="foritem" name="${i} = 73">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:40.857" starttime="20200521 14:28:40.856"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:41.158" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:41.158" starttime="20200521 14:28:40.857"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:41.168" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:41.178" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000437 seconds.</msg>
<msg timestamp="20200521 14:28:41.179" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:41 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:41.179" starttime="20200521 14:28:41.158"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:41.179" starttime="20200521 14:28:40.856"></status>
</kw>
<kw type="foritem" name="${i} = 74">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:41.182" starttime="20200521 14:28:41.179"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:41.483" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:41.483" starttime="20200521 14:28:41.183"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:41.493" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:41.500" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000476 seconds.</msg>
<msg timestamp="20200521 14:28:41.501" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:41 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:41.501" starttime="20200521 14:28:41.483"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:41.501" starttime="20200521 14:28:41.179"></status>
</kw>
<kw type="foritem" name="${i} = 75">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:41.505" starttime="20200521 14:28:41.501"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:41.807" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:41.808" starttime="20200521 14:28:41.507"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:41.819" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:41.829" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000471 seconds.</msg>
<msg timestamp="20200521 14:28:41.830" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:42 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:41.830" starttime="20200521 14:28:41.808"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:41.830" starttime="20200521 14:28:41.501"></status>
</kw>
<kw type="foritem" name="${i} = 76">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:41.834" starttime="20200521 14:28:41.831"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:42.135" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:42.135" starttime="20200521 14:28:41.834"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:42.147" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:42.157" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000532 seconds.</msg>
<msg timestamp="20200521 14:28:42.157" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:42 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:42.157" starttime="20200521 14:28:42.135"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:42.157" starttime="20200521 14:28:41.830"></status>
</kw>
<kw type="foritem" name="${i} = 77">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:42.158" starttime="20200521 14:28:42.158"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:42.466" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:42.466" starttime="20200521 14:28:42.159"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:42.476" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:42.486" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000435 seconds.</msg>
<msg timestamp="20200521 14:28:42.487" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:42 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:42.487" starttime="20200521 14:28:42.467"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:42.487" starttime="20200521 14:28:42.157"></status>
</kw>
<kw type="foritem" name="${i} = 78">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:42.488" starttime="20200521 14:28:42.488"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:42.790" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:42.790" starttime="20200521 14:28:42.489"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:42.800" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:42.809" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000457 seconds.</msg>
<msg timestamp="20200521 14:28:42.810" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:43 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:42.810" starttime="20200521 14:28:42.790"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:42.810" starttime="20200521 14:28:42.487"></status>
</kw>
<kw type="foritem" name="${i} = 79">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:42.811" starttime="20200521 14:28:42.811"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:43.112" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:43.112" starttime="20200521 14:28:42.811"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:43.122" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:43.132" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000551 seconds.</msg>
<msg timestamp="20200521 14:28:43.133" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:43 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:43.133" starttime="20200521 14:28:43.113"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:43.133" starttime="20200521 14:28:42.810"></status>
</kw>
<kw type="foritem" name="${i} = 80">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:43.135" starttime="20200521 14:28:43.134"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:43.436" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:43.436" starttime="20200521 14:28:43.135"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:43.446" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:43.457" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000532000000001 seconds.</msg>
<msg timestamp="20200521 14:28:43.457" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:43 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:43.458" starttime="20200521 14:28:43.436"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:43.458" starttime="20200521 14:28:43.133"></status>
</kw>
<kw type="foritem" name="${i} = 81">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:43.459" starttime="20200521 14:28:43.458"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:43.760" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:43.760" starttime="20200521 14:28:43.459"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:43.770" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:43.780" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000497999999999 seconds.</msg>
<msg timestamp="20200521 14:28:43.781" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:44 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:43.781" starttime="20200521 14:28:43.760"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:43.781" starttime="20200521 14:28:43.458"></status>
</kw>
<kw type="foritem" name="${i} = 82">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:43.782" starttime="20200521 14:28:43.782"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:44.083" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:44.084" starttime="20200521 14:28:43.783"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:44.095" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:44.106" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000427 seconds.</msg>
<msg timestamp="20200521 14:28:44.107" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:44 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:44.107" starttime="20200521 14:28:44.084"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:44.107" starttime="20200521 14:28:43.781"></status>
</kw>
<kw type="foritem" name="${i} = 83">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:44.110" starttime="20200521 14:28:44.107"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:44.411" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:44.411" starttime="20200521 14:28:44.110"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:44.421" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:44.431" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00045 seconds.</msg>
<msg timestamp="20200521 14:28:44.432" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:44 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:44.432" starttime="20200521 14:28:44.411"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:44.432" starttime="20200521 14:28:44.107"></status>
</kw>
<kw type="foritem" name="${i} = 84">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:44.433" starttime="20200521 14:28:44.433"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:44.735" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:44.735" starttime="20200521 14:28:44.434"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:44.746" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:44.756" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000408 seconds.</msg>
<msg timestamp="20200521 14:28:44.756" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:45 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:44.757" starttime="20200521 14:28:44.735"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:44.757" starttime="20200521 14:28:44.432"></status>
</kw>
<kw type="foritem" name="${i} = 85">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:44.760" starttime="20200521 14:28:44.757"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:45.062" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:45.062" starttime="20200521 14:28:44.761"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:45.074" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:45.084" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.0004 seconds.</msg>
<msg timestamp="20200521 14:28:45.084" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:45 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:45.084" starttime="20200521 14:28:45.062"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:45.084" starttime="20200521 14:28:44.757"></status>
</kw>
<kw type="foritem" name="${i} = 86">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:45.088" starttime="20200521 14:28:45.085"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:45.389" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:45.389" starttime="20200521 14:28:45.088"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:45.400" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:45.411" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000468 seconds.</msg>
<msg timestamp="20200521 14:28:45.411" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:45 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:45.411" starttime="20200521 14:28:45.390"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:45.411" starttime="20200521 14:28:45.085"></status>
</kw>
<kw type="foritem" name="${i} = 87">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:45.412" starttime="20200521 14:28:45.412"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:45.713" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:45.714" starttime="20200521 14:28:45.413"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:45.725" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:45.735" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000412 seconds.</msg>
<msg timestamp="20200521 14:28:45.736" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:46 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:45.736" starttime="20200521 14:28:45.714"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:45.736" starttime="20200521 14:28:45.411"></status>
</kw>
<kw type="foritem" name="${i} = 88">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:45.739" starttime="20200521 14:28:45.737"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:46.040" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:46.040" starttime="20200521 14:28:45.739"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:46.050" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:46.060" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000468 seconds.</msg>
<msg timestamp="20200521 14:28:46.061" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:46 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:46.061" starttime="20200521 14:28:46.041"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:46.061" starttime="20200521 14:28:45.736"></status>
</kw>
<kw type="foritem" name="${i} = 89">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:46.062" starttime="20200521 14:28:46.061"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:46.363" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:46.363" starttime="20200521 14:28:46.062"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:46.373" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:46.383" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000402 seconds.</msg>
<msg timestamp="20200521 14:28:46.384" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:46 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:46.384" starttime="20200521 14:28:46.364"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:46.384" starttime="20200521 14:28:46.061"></status>
</kw>
<kw type="foritem" name="${i} = 90">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:46.385" starttime="20200521 14:28:46.384"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:46.688" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:46.688" starttime="20200521 14:28:46.385"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:46.696" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:46.708" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000401 seconds.</msg>
<msg timestamp="20200521 14:28:46.709" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:47 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:46.709" starttime="20200521 14:28:46.688"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:46.709" starttime="20200521 14:28:46.384"></status>
</kw>
<kw type="foritem" name="${i} = 91">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:46.710" starttime="20200521 14:28:46.709"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:47.013" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:47.013" starttime="20200521 14:28:46.712"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:47.023" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:47.036" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000496 seconds.</msg>
<msg timestamp="20200521 14:28:47.037" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:47 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:47.037" starttime="20200521 14:28:47.013"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:47.037" starttime="20200521 14:28:46.709"></status>
</kw>
<kw type="foritem" name="${i} = 92">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:47.040" starttime="20200521 14:28:47.038"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:47.341" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:47.341" starttime="20200521 14:28:47.040"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:47.351" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:47.363" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000400999999999 seconds.</msg>
<msg timestamp="20200521 14:28:47.363" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:47 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:47.363" starttime="20200521 14:28:47.341"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:47.364" starttime="20200521 14:28:47.037"></status>
</kw>
<kw type="foritem" name="${i} = 93">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:47.365" starttime="20200521 14:28:47.364"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:47.666" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:47.666" starttime="20200521 14:28:47.365"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:47.676" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:47.686" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000421 seconds.</msg>
<msg timestamp="20200521 14:28:47.686" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:47 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:47.686" starttime="20200521 14:28:47.666"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:47.686" starttime="20200521 14:28:47.364"></status>
</kw>
<kw type="foritem" name="${i} = 94">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:47.688" starttime="20200521 14:28:47.687"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:47.989" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:47.989" starttime="20200521 14:28:47.688"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:47.998" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:48.008" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000425 seconds.</msg>
<msg timestamp="20200521 14:28:48.009" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:48 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:48.009" starttime="20200521 14:28:47.989"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:48.009" starttime="20200521 14:28:47.687"></status>
</kw>
<kw type="foritem" name="${i} = 95">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:48.012" starttime="20200521 14:28:48.010"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:48.313" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:48.314" starttime="20200521 14:28:48.013"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:48.323" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:48.334" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000417 seconds.</msg>
<msg timestamp="20200521 14:28:48.334" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:48 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:48.334" starttime="20200521 14:28:48.314"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:48.334" starttime="20200521 14:28:48.009"></status>
</kw>
<kw type="foritem" name="${i} = 96">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:48.337" starttime="20200521 14:28:48.335"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:48.638" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:48.639" starttime="20200521 14:28:48.338"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:48.651" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:48.661" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000491 seconds.</msg>
<msg timestamp="20200521 14:28:48.662" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:48 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:48.662" starttime="20200521 14:28:48.639"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:48.662" starttime="20200521 14:28:48.335"></status>
</kw>
<kw type="foritem" name="${i} = 97">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:48.665" starttime="20200521 14:28:48.662"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:48.966" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:48.966" starttime="20200521 14:28:48.665"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:48.976" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:48.986" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000501 seconds.</msg>
<msg timestamp="20200521 14:28:48.986" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:49 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:48.986" starttime="20200521 14:28:48.966"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:48.987" starttime="20200521 14:28:48.662"></status>
</kw>
<kw type="foritem" name="${i} = 98">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:48.988" starttime="20200521 14:28:48.987"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:49.289" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:49.289" starttime="20200521 14:28:48.988"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:49.299" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:49.309" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000487000000001 seconds.</msg>
<msg timestamp="20200521 14:28:49.310" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:49 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:49.310" starttime="20200521 14:28:49.289"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:49.310" starttime="20200521 14:28:48.987"></status>
</kw>
<kw type="foritem" name="${i} = 99">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:49.311" starttime="20200521 14:28:49.310"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:49.614" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:49.614" starttime="20200521 14:28:49.311"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:49.624" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:49.634" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000436 seconds.</msg>
<msg timestamp="20200521 14:28:49.635" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:49 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:49.635" starttime="20200521 14:28:49.614"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:49.635" starttime="20200521 14:28:49.310"></status>
</kw>
<kw type="foritem" name="${i} = 100">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:49.636" starttime="20200521 14:28:49.635"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:49.938" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:49.938" starttime="20200521 14:28:49.637"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:49.949" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:49.959" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000453 seconds.</msg>
<msg timestamp="20200521 14:28:49.960" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:50 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:49.960" starttime="20200521 14:28:49.938"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:49.960" starttime="20200521 14:28:49.635"></status>
</kw>
<kw type="foritem" name="${i} = 101">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:49.961" starttime="20200521 14:28:49.960"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:50.262" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:50.262" starttime="20200521 14:28:49.962"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:50.275" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:50.285" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000426 seconds.</msg>
<msg timestamp="20200521 14:28:50.286" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:50 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:50.286" starttime="20200521 14:28:50.263"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:50.286" starttime="20200521 14:28:49.960"></status>
</kw>
<kw type="foritem" name="${i} = 102">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:50.288" starttime="20200521 14:28:50.286"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:50.589" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:50.589" starttime="20200521 14:28:50.288"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:50.599" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:50.610" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000515999999999 seconds.</msg>
<msg timestamp="20200521 14:28:50.610" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:50 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:50.610" starttime="20200521 14:28:50.589"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:50.610" starttime="20200521 14:28:50.286"></status>
</kw>
<kw type="foritem" name="${i} = 103">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:50.612" starttime="20200521 14:28:50.611"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:50.913" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:50.913" starttime="20200521 14:28:50.613"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:50.923" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:50.933" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000408 seconds.</msg>
<msg timestamp="20200521 14:28:50.935" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:51 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:50.935" starttime="20200521 14:28:50.914"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:50.935" starttime="20200521 14:28:50.611"></status>
</kw>
<kw type="foritem" name="${i} = 104">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:50.937" starttime="20200521 14:28:50.935"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:51.238" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:51.238" starttime="20200521 14:28:50.937"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:51.250" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:51.260" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000526 seconds.</msg>
<msg timestamp="20200521 14:28:51.261" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:51 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:51.261" starttime="20200521 14:28:51.239"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:51.261" starttime="20200521 14:28:50.935"></status>
</kw>
<kw type="foritem" name="${i} = 105">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:51.262" starttime="20200521 14:28:51.261"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:51.563" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:51.564" starttime="20200521 14:28:51.262"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:51.576" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:51.587" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000438 seconds.</msg>
<msg timestamp="20200521 14:28:51.587" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:51 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:51.587" starttime="20200521 14:28:51.564"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:51.587" starttime="20200521 14:28:51.261"></status>
</kw>
<kw type="foritem" name="${i} = 106">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:51.590" starttime="20200521 14:28:51.588"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:51.892" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:51.892" starttime="20200521 14:28:51.591"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:51.903" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:51.914" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000452 seconds.</msg>
<msg timestamp="20200521 14:28:51.914" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:52 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:51.914" starttime="20200521 14:28:51.892"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:51.914" starttime="20200521 14:28:51.588"></status>
</kw>
<kw type="foritem" name="${i} = 107">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:51.916" starttime="20200521 14:28:51.915"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:52.217" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:52.217" starttime="20200521 14:28:51.916"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:52.226" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:52.237" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000450000000001 seconds.</msg>
<msg timestamp="20200521 14:28:52.237" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:52 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:52.238" starttime="20200521 14:28:52.217"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:52.238" starttime="20200521 14:28:51.915"></status>
</kw>
<kw type="foritem" name="${i} = 108">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:52.240" starttime="20200521 14:28:52.238"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:52.541" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:52.542" starttime="20200521 14:28:52.241"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:52.555" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:52.565" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000465 seconds.</msg>
<msg timestamp="20200521 14:28:52.565" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:52 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:52.566" starttime="20200521 14:28:52.542"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:52.566" starttime="20200521 14:28:52.238"></status>
</kw>
<kw type="foritem" name="${i} = 109">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:52.568" starttime="20200521 14:28:52.566"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:52.869" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:52.870" starttime="20200521 14:28:52.569"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:52.879" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:52.894" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.002022 seconds.</msg>
<msg timestamp="20200521 14:28:52.894" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:53 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:52.894" starttime="20200521 14:28:52.870"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:52.894" starttime="20200521 14:28:52.566"></status>
</kw>
<kw type="foritem" name="${i} = 110">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:52.895" starttime="20200521 14:28:52.895"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:53.202" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:53.203" starttime="20200521 14:28:52.896"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:53.212" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:53.222" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000435 seconds.</msg>
<msg timestamp="20200521 14:28:53.222" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:53 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:53.222" starttime="20200521 14:28:53.203"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:53.222" starttime="20200521 14:28:52.894"></status>
</kw>
<kw type="foritem" name="${i} = 111">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:53.223" starttime="20200521 14:28:53.223"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:53.528" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:53.529" starttime="20200521 14:28:53.224"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:53.539" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:53.549" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00055 seconds.</msg>
<msg timestamp="20200521 14:28:53.550" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:53 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:53.550" starttime="20200521 14:28:53.529"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:53.550" starttime="20200521 14:28:53.222"></status>
</kw>
<kw type="foritem" name="${i} = 112">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:53.551" starttime="20200521 14:28:53.550"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:53.852" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:53.853" starttime="20200521 14:28:53.552"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:53.863" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:53.873" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000305 seconds.</msg>
<msg timestamp="20200521 14:28:53.873" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:54 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:53.873" starttime="20200521 14:28:53.853"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:53.873" starttime="20200521 14:28:53.550"></status>
</kw>
<kw type="foritem" name="${i} = 113">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:53.874" starttime="20200521 14:28:53.873"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:54.175" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:54.175" starttime="20200521 14:28:53.874"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:54.185" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:54.195" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000462 seconds.</msg>
<msg timestamp="20200521 14:28:54.196" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:54 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:54.196" starttime="20200521 14:28:54.175"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:54.196" starttime="20200521 14:28:53.873"></status>
</kw>
<kw type="foritem" name="${i} = 114">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:54.197" starttime="20200521 14:28:54.196"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:54.502" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:54.503" starttime="20200521 14:28:54.197"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:54.512" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:54.522" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000491 seconds.</msg>
<msg timestamp="20200521 14:28:54.523" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:54 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:54.523" starttime="20200521 14:28:54.503"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:54.523" starttime="20200521 14:28:54.196"></status>
</kw>
<kw type="foritem" name="${i} = 115">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:54.524" starttime="20200521 14:28:54.524"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:54.826" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:54.826" starttime="20200521 14:28:54.525"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:54.836" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:54.846" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000446 seconds.</msg>
<msg timestamp="20200521 14:28:54.847" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:55 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:54.847" starttime="20200521 14:28:54.827"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:54.847" starttime="20200521 14:28:54.523"></status>
</kw>
<kw type="foritem" name="${i} = 116">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:54.848" starttime="20200521 14:28:54.847"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:55.151" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:55.152" starttime="20200521 14:28:54.849"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:55.162" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:55.172" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000436 seconds.</msg>
<msg timestamp="20200521 14:28:55.172" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:55 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:55.172" starttime="20200521 14:28:55.152"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:55.172" starttime="20200521 14:28:54.847"></status>
</kw>
<kw type="foritem" name="${i} = 117">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:55.175" starttime="20200521 14:28:55.173"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:55.476" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:55.477" starttime="20200521 14:28:55.176"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:55.488" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:55.497" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000452999999999 seconds.</msg>
<msg timestamp="20200521 14:28:55.498" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:55 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:55.498" starttime="20200521 14:28:55.477"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:55.498" starttime="20200521 14:28:55.173"></status>
</kw>
<kw type="foritem" name="${i} = 118">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:55.499" starttime="20200521 14:28:55.499"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:55.800" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:55.800" starttime="20200521 14:28:55.500"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:55.810" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:55.820" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000445 seconds.</msg>
<msg timestamp="20200521 14:28:55.820" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:56 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:55.820" starttime="20200521 14:28:55.801"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:55.820" starttime="20200521 14:28:55.498"></status>
</kw>
<kw type="foritem" name="${i} = 119">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:55.824" starttime="20200521 14:28:55.821"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:56.134" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:56.135" starttime="20200521 14:28:55.824"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:56.146" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:56.155" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000468000000001 seconds.</msg>
<msg timestamp="20200521 14:28:56.156" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:56 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:56.156" starttime="20200521 14:28:56.135"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:56.156" starttime="20200521 14:28:55.821"></status>
</kw>
<kw type="foritem" name="${i} = 120">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:56.157" starttime="20200521 14:28:56.156"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:56.458" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:56.458" starttime="20200521 14:28:56.157"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:56.468" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:56.478" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000425 seconds.</msg>
<msg timestamp="20200521 14:28:56.478" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:56 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:56.478" starttime="20200521 14:28:56.459"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:56.478" starttime="20200521 14:28:56.156"></status>
</kw>
<kw type="foritem" name="${i} = 121">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:56.480" starttime="20200521 14:28:56.479"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:56.780" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:56.781" starttime="20200521 14:28:56.480"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:56.791" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:56.801" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000481 seconds.</msg>
<msg timestamp="20200521 14:28:56.802" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:57 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:56.802" starttime="20200521 14:28:56.781"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:56.802" starttime="20200521 14:28:56.479"></status>
</kw>
<kw type="foritem" name="${i} = 122">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:56.803" starttime="20200521 14:28:56.802"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:57.104" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:57.104" starttime="20200521 14:28:56.803"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:57.112" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:57.122" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000456 seconds.</msg>
<msg timestamp="20200521 14:28:57.122" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:57 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:57.122" starttime="20200521 14:28:57.104"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:57.122" starttime="20200521 14:28:56.802"></status>
</kw>
<kw type="foritem" name="${i} = 123">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:57.125" starttime="20200521 14:28:57.123"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:57.426" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:57.426" starttime="20200521 14:28:57.125"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:57.439" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:57.449" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000452999999999 seconds.</msg>
<msg timestamp="20200521 14:28:57.449" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:57 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:57.450" starttime="20200521 14:28:57.426"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:57.450" starttime="20200521 14:28:57.122"></status>
</kw>
<kw type="foritem" name="${i} = 124">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:57.453" starttime="20200521 14:28:57.450"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:57.754" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:57.754" starttime="20200521 14:28:57.453"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:57.763" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:57.773" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000436000000001 seconds.</msg>
<msg timestamp="20200521 14:28:57.774" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:58 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:57.774" starttime="20200521 14:28:57.754"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:57.774" starttime="20200521 14:28:57.450"></status>
</kw>
<kw type="foritem" name="${i} = 125">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:57.775" starttime="20200521 14:28:57.774"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:58.076" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:58.076" starttime="20200521 14:28:57.775"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:58.086" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:58.096" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000466 seconds.</msg>
<msg timestamp="20200521 14:28:58.097" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:58 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:58.097" starttime="20200521 14:28:58.076"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:58.097" starttime="20200521 14:28:57.774"></status>
</kw>
<kw type="foritem" name="${i} = 126">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:58.099" starttime="20200521 14:28:58.098"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:58.400" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:58.400" starttime="20200521 14:28:58.099"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:58.410" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:58.419" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000459999999999 seconds.</msg>
<msg timestamp="20200521 14:28:58.420" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:58 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:58.420" starttime="20200521 14:28:58.400"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:58.420" starttime="20200521 14:28:58.097"></status>
</kw>
<kw type="foritem" name="${i} = 127">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:58.421" starttime="20200521 14:28:58.421"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:58.722" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:58.723" starttime="20200521 14:28:58.422"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:58.733" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:58.742" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00044 seconds.</msg>
<msg timestamp="20200521 14:28:58.743" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:59 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:58.743" starttime="20200521 14:28:58.723"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:58.743" starttime="20200521 14:28:58.420"></status>
</kw>
<kw type="foritem" name="${i} = 128">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:58.744" starttime="20200521 14:28:58.744"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:59.045" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:59.045" starttime="20200521 14:28:58.745"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:59.056" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:59.066" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000585 seconds.</msg>
<msg timestamp="20200521 14:28:59.067" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:59 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:59.067" starttime="20200521 14:28:59.046"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:59.067" starttime="20200521 14:28:58.743"></status>
</kw>
<kw type="foritem" name="${i} = 129">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:59.068" starttime="20200521 14:28:59.067"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:59.369" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:59.369" starttime="20200521 14:28:59.068"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:59.378" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:59.388" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00046 seconds.</msg>
<msg timestamp="20200521 14:28:59.389" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:28:59 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:59.389" starttime="20200521 14:28:59.369"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:59.389" starttime="20200521 14:28:59.067"></status>
</kw>
<kw type="foritem" name="${i} = 130">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:59.390" starttime="20200521 14:28:59.389"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:28:59.691" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:28:59.691" starttime="20200521 14:28:59.390"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:28:59.701" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:28:59.712" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000465 seconds.</msg>
<msg timestamp="20200521 14:28:59.712" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:00 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:28:59.712" starttime="20200521 14:28:59.692"></status>
</kw>
<status status="PASS" endtime="20200521 14:28:59.712" starttime="20200521 14:28:59.389"></status>
</kw>
<kw type="foritem" name="${i} = 131">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:28:59.715" starttime="20200521 14:28:59.713"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:29:00.016" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:29:00.017" starttime="20200521 14:28:59.716"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:00.028" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:29:00.039" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000562 seconds.</msg>
<msg timestamp="20200521 14:29:00.039" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:00 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:29:00.039" starttime="20200521 14:29:00.017"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:00.040" starttime="20200521 14:28:59.713"></status>
</kw>
<kw type="foritem" name="${i} = 132">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:00.041" starttime="20200521 14:29:00.040"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:29:00.342" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:29:00.342" starttime="20200521 14:29:00.041"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:00.354" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:29:00.365" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000512000000001 seconds.</msg>
<msg timestamp="20200521 14:29:00.366" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:00 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:29:00.366" starttime="20200521 14:29:00.342"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:00.366" starttime="20200521 14:29:00.040"></status>
</kw>
<kw type="foritem" name="${i} = 133">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:00.367" starttime="20200521 14:29:00.366"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:29:00.668" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:29:00.669" starttime="20200521 14:29:00.368"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:00.682" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:29:00.692" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000569 seconds.</msg>
<msg timestamp="20200521 14:29:00.693" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:00 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:29:00.693" starttime="20200521 14:29:00.669"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:00.693" starttime="20200521 14:29:00.366"></status>
</kw>
<kw type="foritem" name="${i} = 134">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:00.694" starttime="20200521 14:29:00.694"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:29:00.996" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:29:00.996" starttime="20200521 14:29:00.695"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:01.009" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:29:01.019" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000445 seconds.</msg>
<msg timestamp="20200521 14:29:01.020" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:01 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:29:01.020" starttime="20200521 14:29:00.996"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:01.020" starttime="20200521 14:29:00.693"></status>
</kw>
<kw type="foritem" name="${i} = 135">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:01.023" starttime="20200521 14:29:01.021"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:29:01.324" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:29:01.325" starttime="20200521 14:29:01.024"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:01.338" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:29:01.350" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000597 seconds.</msg>
<msg timestamp="20200521 14:29:01.350" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:01 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:29:01.350" starttime="20200521 14:29:01.325"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:01.350" starttime="20200521 14:29:01.020"></status>
</kw>
<kw type="foritem" name="${i} = 136">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:01.353" starttime="20200521 14:29:01.351"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:29:01.654" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:29:01.654" starttime="20200521 14:29:01.353"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:01.665" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:29:01.676" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000534 seconds.</msg>
<msg timestamp="20200521 14:29:01.677" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:01 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:29:01.677" starttime="20200521 14:29:01.654"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:01.677" starttime="20200521 14:29:01.351"></status>
</kw>
<kw type="foritem" name="${i} = 137">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:01.681" starttime="20200521 14:29:01.677"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:29:01.982" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:29:01.982" starttime="20200521 14:29:01.681"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:01.993" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:29:02.003" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000476 seconds.</msg>
<msg timestamp="20200521 14:29:02.004" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:02 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:29:02.004" starttime="20200521 14:29:01.982"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:02.004" starttime="20200521 14:29:01.677"></status>
</kw>
<kw type="foritem" name="${i} = 138">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:02.005" starttime="20200521 14:29:02.005"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:29:02.307" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:29:02.307" starttime="20200521 14:29:02.006"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:02.318" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:29:02.329" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000598 seconds.</msg>
<msg timestamp="20200521 14:29:02.330" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:02 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:29:02.330" starttime="20200521 14:29:02.307"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:02.330" starttime="20200521 14:29:02.004"></status>
</kw>
<kw type="foritem" name="${i} = 139">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:02.331" starttime="20200521 14:29:02.331"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:29:02.632" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:29:02.633" starttime="20200521 14:29:02.332"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:02.639" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:29:02.651" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.002296 seconds.</msg>
<msg timestamp="20200521 14:29:02.652" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:02 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:29:02.652" starttime="20200521 14:29:02.633"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:02.652" starttime="20200521 14:29:02.330"></status>
</kw>
<kw type="foritem" name="${i} = 140">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:02.653" starttime="20200521 14:29:02.652"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:29:02.954" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:29:02.955" starttime="20200521 14:29:02.654"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:02.966" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:29:02.976" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000483 seconds.</msg>
<msg timestamp="20200521 14:29:02.977" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:03 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:29:02.977" starttime="20200521 14:29:02.955"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:02.977" starttime="20200521 14:29:02.652"></status>
</kw>
<kw type="foritem" name="${i} = 141">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:02.978" starttime="20200521 14:29:02.978"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:29:03.279" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:29:03.280" starttime="20200521 14:29:02.979"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:03.291" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:29:03.301" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000365 seconds.</msg>
<msg timestamp="20200521 14:29:03.302" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:03 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:29:03.302" starttime="20200521 14:29:03.280"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:03.302" starttime="20200521 14:29:02.977"></status>
</kw>
<kw type="foritem" name="${i} = 142">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:03.303" starttime="20200521 14:29:03.302"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:29:03.604" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:29:03.604" starttime="20200521 14:29:03.303"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:03.617" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:29:03.627" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00048 seconds.</msg>
<msg timestamp="20200521 14:29:03.628" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:03 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:29:03.628" starttime="20200521 14:29:03.604"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:03.628" starttime="20200521 14:29:03.302"></status>
</kw>
<kw type="foritem" name="${i} = 143">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:03.629" starttime="20200521 14:29:03.628"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:29:03.930" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:29:03.930" starttime="20200521 14:29:03.630"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:03.941" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:29:03.951" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000563 seconds.</msg>
<msg timestamp="20200521 14:29:03.958" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:04 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:29:03.958" starttime="20200521 14:29:03.931"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:03.958" starttime="20200521 14:29:03.628"></status>
</kw>
<kw type="foritem" name="${i} = 144">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:03.960" starttime="20200521 14:29:03.958"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:29:04.261" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:29:04.261" starttime="20200521 14:29:03.960"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:04.274" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:29:04.284" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000486 seconds.</msg>
<msg timestamp="20200521 14:29:04.285" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:04 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:29:04.285" starttime="20200521 14:29:04.262"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:04.285" starttime="20200521 14:29:03.958"></status>
</kw>
<kw type="foritem" name="${i} = 145">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:04.286" starttime="20200521 14:29:04.286"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:29:04.587" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:29:04.588" starttime="20200521 14:29:04.287"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:04.598" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:29:04.608" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000451 seconds.</msg>
<msg timestamp="20200521 14:29:04.609" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:04 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:29:04.609" starttime="20200521 14:29:04.588"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:04.609" starttime="20200521 14:29:04.285"></status>
</kw>
<kw type="foritem" name="${i} = 146">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:04.610" starttime="20200521 14:29:04.610"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:29:04.911" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:29:04.912" starttime="20200521 14:29:04.611"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:04.924" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:29:04.934" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00044 seconds.</msg>
<msg timestamp="20200521 14:29:04.934" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:05 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:29:04.934" starttime="20200521 14:29:04.912"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:04.934" starttime="20200521 14:29:04.609"></status>
</kw>
<kw type="foritem" name="${i} = 147">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:04.935" starttime="20200521 14:29:04.935"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:29:05.242" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:29:05.243" starttime="20200521 14:29:04.936"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:05.251" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:29:05.260" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000455 seconds.</msg>
<msg timestamp="20200521 14:29:05.261" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:05 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:29:05.261" starttime="20200521 14:29:05.243"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:05.261" starttime="20200521 14:29:04.934"></status>
</kw>
<kw type="foritem" name="${i} = 148">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:05.263" starttime="20200521 14:29:05.262"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:29:05.564" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:29:05.564" starttime="20200521 14:29:05.263"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:05.576" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:29:05.585" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000457 seconds.</msg>
<msg timestamp="20200521 14:29:05.585" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:05 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:29:05.585" starttime="20200521 14:29:05.565"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:05.586" starttime="20200521 14:29:05.261"></status>
</kw>
<kw type="foritem" name="${i} = 149">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:05.588" starttime="20200521 14:29:05.586"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:29:05.895" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:29:05.896" starttime="20200521 14:29:05.588"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:05.907" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:29:05.917" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000475 seconds.</msg>
<msg timestamp="20200521 14:29:05.917" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:06 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:29:05.917" starttime="20200521 14:29:05.896"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:05.917" starttime="20200521 14:29:05.586"></status>
</kw>
<kw type="foritem" name="${i} = 150">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:05.919" starttime="20200521 14:29:05.918"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:29:06.220" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:29:06.221" starttime="20200521 14:29:05.920"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:06.231" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:29:06.241" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.0006 seconds.</msg>
<msg timestamp="20200521 14:29:06.242" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:06 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:29:06.242" starttime="20200521 14:29:06.221"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:06.242" starttime="20200521 14:29:05.917"></status>
</kw>
<kw type="foritem" name="${i} = 151">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:06.246" starttime="20200521 14:29:06.243"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:29:06.547" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:29:06.547" starttime="20200521 14:29:06.246"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:06.559" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:29:06.570" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000474 seconds.</msg>
<msg timestamp="20200521 14:29:06.571" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:06 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:29:06.571" starttime="20200521 14:29:06.547"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:06.571" starttime="20200521 14:29:06.242"></status>
</kw>
<kw type="foritem" name="${i} = 152">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:06.574" starttime="20200521 14:29:06.571"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:29:06.875" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:29:06.875" starttime="20200521 14:29:06.574"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:06.885" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:29:06.896" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000302 seconds.</msg>
<msg timestamp="20200521 14:29:06.896" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:07 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:29:06.896" starttime="20200521 14:29:06.875"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:06.896" starttime="20200521 14:29:06.571"></status>
</kw>
<kw type="foritem" name="${i} = 153">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:06.900" starttime="20200521 14:29:06.897"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:29:07.201" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:29:07.201" starttime="20200521 14:29:06.901"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:07.213" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:29:07.223" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000465 seconds.</msg>
<msg timestamp="20200521 14:29:07.223" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:07 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:29:07.224" starttime="20200521 14:29:07.202"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:07.224" starttime="20200521 14:29:06.896"></status>
</kw>
<kw type="foritem" name="${i} = 154">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:07.227" starttime="20200521 14:29:07.224"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:29:07.528" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:29:07.528" starttime="20200521 14:29:07.227"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:07.540" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:29:07.551" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000407 seconds.</msg>
<msg timestamp="20200521 14:29:07.551" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:07 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:29:07.552" starttime="20200521 14:29:07.528"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:07.552" starttime="20200521 14:29:07.224"></status>
</kw>
<kw type="foritem" name="${i} = 155">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:07.554" starttime="20200521 14:29:07.552"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:29:07.855" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:29:07.855" starttime="20200521 14:29:07.555"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:07.866" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:29:07.876" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000503 seconds.</msg>
<msg timestamp="20200521 14:29:07.876" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:08 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:29:07.877" starttime="20200521 14:29:07.856"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:07.877" starttime="20200521 14:29:07.552"></status>
</kw>
<kw type="foritem" name="${i} = 156">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:07.878" starttime="20200521 14:29:07.877"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:29:08.179" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:29:08.179" starttime="20200521 14:29:07.878"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:08.190" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:29:08.200" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000495 seconds.</msg>
<msg timestamp="20200521 14:29:08.201" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:08 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:29:08.201" starttime="20200521 14:29:08.180"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:08.201" starttime="20200521 14:29:07.877"></status>
</kw>
<kw type="foritem" name="${i} = 157">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:08.203" starttime="20200521 14:29:08.202"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:29:08.509" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:29:08.509" starttime="20200521 14:29:08.203"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:08.519" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:29:08.529" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000379 seconds.</msg>
<msg timestamp="20200521 14:29:08.529" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:08 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:29:08.529" starttime="20200521 14:29:08.510"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:08.529" starttime="20200521 14:29:08.201"></status>
</kw>
<kw type="foritem" name="${i} = 158">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:08.530" starttime="20200521 14:29:08.530"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:29:08.832" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:29:08.833" starttime="20200521 14:29:08.531"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:08.843" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:29:08.850" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00043 seconds.</msg>
<msg timestamp="20200521 14:29:08.851" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:09 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:29:08.851" starttime="20200521 14:29:08.833"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:08.851" starttime="20200521 14:29:08.529"></status>
</kw>
<kw type="foritem" name="${i} = 159">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:08.852" starttime="20200521 14:29:08.851"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:29:09.162" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:29:09.163" starttime="20200521 14:29:08.853"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:09.174" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:29:09.183" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000386 seconds.</msg>
<msg timestamp="20200521 14:29:09.184" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:09 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:29:09.184" starttime="20200521 14:29:09.163"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:09.184" starttime="20200521 14:29:08.851"></status>
</kw>
<kw type="foritem" name="${i} = 160">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:09.185" starttime="20200521 14:29:09.185"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:29:09.492" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:29:09.493" starttime="20200521 14:29:09.186"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:09.502" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:29:09.512" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000577000000001 seconds.</msg>
<msg timestamp="20200521 14:29:09.513" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:09 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:29:09.513" starttime="20200521 14:29:09.493"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:09.513" starttime="20200521 14:29:09.184"></status>
</kw>
<kw type="foritem" name="${i} = 161">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:09.514" starttime="20200521 14:29:09.513"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:29:09.827" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:29:09.827" starttime="20200521 14:29:09.515"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:09.837" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:29:09.847" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00047 seconds.</msg>
<msg timestamp="20200521 14:29:09.847" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:10 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:29:09.847" starttime="20200521 14:29:09.828"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:09.848" starttime="20200521 14:29:09.513"></status>
</kw>
<kw type="foritem" name="${i} = 162">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:09.849" starttime="20200521 14:29:09.848"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:29:10.152" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:29:10.153" starttime="20200521 14:29:09.849"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:10.163" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:29:10.174" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000439999999999 seconds.</msg>
<msg timestamp="20200521 14:29:10.175" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:10 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:29:10.175" starttime="20200521 14:29:10.153"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:10.175" starttime="20200521 14:29:09.848"></status>
</kw>
<kw type="foritem" name="${i} = 163">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:10.176" starttime="20200521 14:29:10.175"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:29:10.477" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:29:10.478" starttime="20200521 14:29:10.176"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:10.488" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:29:10.498" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000474 seconds.</msg>
<msg timestamp="20200521 14:29:10.498" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:10 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:29:10.498" starttime="20200521 14:29:10.478"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:10.499" starttime="20200521 14:29:10.175"></status>
</kw>
<kw type="foritem" name="${i} = 164">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:10.500" starttime="20200521 14:29:10.499"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:29:10.801" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:29:10.801" starttime="20200521 14:29:10.500"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:10.811" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:29:10.821" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000452 seconds.</msg>
<msg timestamp="20200521 14:29:10.822" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:11 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:29:10.822" starttime="20200521 14:29:10.801"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:10.822" starttime="20200521 14:29:10.499"></status>
</kw>
<kw type="foritem" name="${i} = 165">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:10.823" starttime="20200521 14:29:10.823"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:29:11.124" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:29:11.124" starttime="20200521 14:29:10.823"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:11.135" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:29:11.145" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000509 seconds.</msg>
<msg timestamp="20200521 14:29:11.145" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:11 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:29:11.145" starttime="20200521 14:29:11.125"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:11.146" starttime="20200521 14:29:10.822"></status>
</kw>
<kw type="foritem" name="${i} = 166">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:11.147" starttime="20200521 14:29:11.146"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:29:11.448" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:29:11.448" starttime="20200521 14:29:11.148"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:11.459" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:29:11.469" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000521 seconds.</msg>
<msg timestamp="20200521 14:29:11.470" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:11 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:29:11.470" starttime="20200521 14:29:11.449"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:11.470" starttime="20200521 14:29:11.146"></status>
</kw>
<kw type="foritem" name="${i} = 167">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:11.474" starttime="20200521 14:29:11.470"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:29:11.775" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:29:11.775" starttime="20200521 14:29:11.474"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:11.787" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:29:11.796" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000522999999999 seconds.</msg>
<msg timestamp="20200521 14:29:11.797" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:12 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:29:11.797" starttime="20200521 14:29:11.775"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:11.797" starttime="20200521 14:29:11.470"></status>
</kw>
<kw type="foritem" name="${i} = 168">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:11.800" starttime="20200521 14:29:11.797"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:29:12.101" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:29:12.101" starttime="20200521 14:29:11.801"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:12.111" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:29:12.122" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000614 seconds.</msg>
<msg timestamp="20200521 14:29:12.123" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:12 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:29:12.123" starttime="20200521 14:29:12.102"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:12.123" starttime="20200521 14:29:11.797"></status>
</kw>
<kw type="foritem" name="${i} = 169">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:12.124" starttime="20200521 14:29:12.124"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:29:12.426" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:29:12.426" starttime="20200521 14:29:12.125"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:12.436" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:29:12.446" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000403 seconds.</msg>
<msg timestamp="20200521 14:29:12.447" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:12 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:29:12.447" starttime="20200521 14:29:12.427"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:12.447" starttime="20200521 14:29:12.123"></status>
</kw>
<kw type="foritem" name="${i} = 170">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:12.448" starttime="20200521 14:29:12.447"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:29:12.751" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:29:12.752" starttime="20200521 14:29:12.449"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:12.761" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:29:12.771" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000442 seconds.</msg>
<msg timestamp="20200521 14:29:12.772" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:13 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:29:12.772" starttime="20200521 14:29:12.752"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:12.772" starttime="20200521 14:29:12.447"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:12.772" starttime="20200521 14:28:17.077"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:12.772" starttime="20200521 14:28:17.069"></status>
</kw>
<kw name="Enable All Tx Port">
<tags>
<tag>Enable Pon Port Tx</tag>
</tags>
<doc>Enable all port function</doc>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:12.783" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/</msg>
<msg timestamp="20200521 14:29:12.800" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/: 0.000451 seconds.</msg>
<msg timestamp="20200521 14:29:12.801" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:13 GMT
connection Keep-Alive
content-type application/json
content-length 1467


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPortCollection.EthernetSwitchPor...</msg>
<status status="PASS" endtime="20200521 14:29:12.801" starttime="20200521 14:29:12.773"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200521 14:29:12.802" level="INFO">Length is 20</msg>
<msg timestamp="20200521 14:29:12.802" level="INFO">${item_count} = 20</msg>
<status status="PASS" endtime="20200521 14:29:12.802" starttime="20200521 14:29:12.802"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Enable All Pon Port Tx ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:12.803" starttime="20200521 14:29:12.803"></status>
</kw>
<kw type="for" name="${ID} IN RANGE [ 1 | ${item_count} ]">
<kw type="foritem" name="${ID} = 1">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:12.814" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200521 14:29:12.831" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000565 seconds.</msg>
<msg timestamp="20200521 14:29:12.832" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:13 GMT
connection Keep-Alive
content-type application/json
content-length 2409


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:29:12.832" starttime="20200521 14:29:12.804"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:29:12.833" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:29:12.833" starttime="20200521 14:29:12.832"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:29:12.834" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200521 14:29:12.834" starttime="20200521 14:29:12.833"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:29:12.834" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:29:12.834" starttime="20200521 14:29:12.834"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:12.835" starttime="20200521 14:29:12.835"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:12.836" starttime="20200521 14:29:12.835"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:12.837" starttime="20200521 14:29:12.836"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
</arguments>
<kw name="Test Tx Op Up">
<tags>
<tag>Test tx_disable</tag>
</tags>
<doc>Test SFP port tx disable function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OP_UP)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 14:29:12.845" level="INFO">${payload} = {u'OperationalState': u'Up'}</msg>
<status status="PASS" endtime="20200521 14:29:12.845" starttime="20200521 14:29:12.840"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<msg timestamp="20200521 14:29:12.856" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200521 14:29:12.879" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000572 seconds.</msg>
<status status="PASS" endtime="20200521 14:29:12.880" starttime="20200521 14:29:12.845"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:12.880" starttime="20200521 14:29:12.839"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:12.880" starttime="20200521 14:29:12.838"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:12.880" starttime="20200521 14:29:12.837"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:12.880" starttime="20200521 14:29:12.804"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:12.880" starttime="20200521 14:29:12.803"></status>
</kw>
<kw type="foritem" name="${ID} = 2">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:12.892" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/2</msg>
<msg timestamp="20200521 14:29:12.904" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/2: 0.000463 seconds.</msg>
<msg timestamp="20200521 14:29:12.904" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:13 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:29:12.904" starttime="20200521 14:29:12.881"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:29:12.905" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:29:12.905" starttime="20200521 14:29:12.905"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:29:12.906" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:29:12.906" starttime="20200521 14:29:12.906"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:29:12.907" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:29:12.907" starttime="20200521 14:29:12.906"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:12.908" starttime="20200521 14:29:12.907"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:12.909" starttime="20200521 14:29:12.908"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:12.910" starttime="20200521 14:29:12.909"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:12.913" starttime="20200521 14:29:12.911"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:12.913" starttime="20200521 14:29:12.910"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:12.913" starttime="20200521 14:29:12.881"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:12.913" starttime="20200521 14:29:12.881"></status>
</kw>
<kw type="foritem" name="${ID} = 3">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:12.923" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/3</msg>
<msg timestamp="20200521 14:29:12.934" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/3: 0.000439 seconds.</msg>
<msg timestamp="20200521 14:29:12.934" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:13 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:29:12.934" starttime="20200521 14:29:12.914"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:29:12.935" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:29:12.935" starttime="20200521 14:29:12.935"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:29:12.936" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:29:12.936" starttime="20200521 14:29:12.936"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:29:12.937" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:29:12.937" starttime="20200521 14:29:12.936"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:12.938" starttime="20200521 14:29:12.937"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:12.940" starttime="20200521 14:29:12.938"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:12.941" starttime="20200521 14:29:12.941"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:12.943" starttime="20200521 14:29:12.942"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:12.943" starttime="20200521 14:29:12.942"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:12.943" starttime="20200521 14:29:12.913"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:12.943" starttime="20200521 14:29:12.913"></status>
</kw>
<kw type="foritem" name="${ID} = 4">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:12.959" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/4</msg>
<msg timestamp="20200521 14:29:12.972" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/4: 0.000503999999999 seconds.</msg>
<msg timestamp="20200521 14:29:12.973" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:13 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:29:12.973" starttime="20200521 14:29:12.944"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:29:12.974" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:29:12.974" starttime="20200521 14:29:12.973"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:29:12.975" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:29:12.975" starttime="20200521 14:29:12.974"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:29:12.976" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:29:12.976" starttime="20200521 14:29:12.975"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:12.977" starttime="20200521 14:29:12.976"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:12.978" starttime="20200521 14:29:12.977"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:12.979" starttime="20200521 14:29:12.978"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:12.980" starttime="20200521 14:29:12.980"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:12.980" starttime="20200521 14:29:12.979"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:12.980" starttime="20200521 14:29:12.943"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:12.980" starttime="20200521 14:29:12.943"></status>
</kw>
<kw type="foritem" name="${ID} = 5">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:12.992" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/5</msg>
<msg timestamp="20200521 14:29:12.999" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/5: 0.000540000000001 seconds.</msg>
<msg timestamp="20200521 14:29:12.999" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:13 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:29:12.999" starttime="20200521 14:29:12.981"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:29:13.000" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:29:13.000" starttime="20200521 14:29:13.000"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:29:13.002" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:29:13.002" starttime="20200521 14:29:13.001"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:29:13.002" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:29:13.002" starttime="20200521 14:29:13.002"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.003" starttime="20200521 14:29:13.003"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.004" starttime="20200521 14:29:13.004"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.005" starttime="20200521 14:29:13.005"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.007" starttime="20200521 14:29:13.006"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.007" starttime="20200521 14:29:13.006"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.007" starttime="20200521 14:29:12.981"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.007" starttime="20200521 14:29:12.981"></status>
</kw>
<kw type="foritem" name="${ID} = 6">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:13.017" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/6</msg>
<msg timestamp="20200521 14:29:13.028" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/6: 0.000439 seconds.</msg>
<msg timestamp="20200521 14:29:13.029" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:13 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:29:13.029" starttime="20200521 14:29:13.008"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:29:13.030" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:29:13.030" starttime="20200521 14:29:13.029"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:29:13.031" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:29:13.031" starttime="20200521 14:29:13.030"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:29:13.031" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:29:13.032" starttime="20200521 14:29:13.031"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.032" starttime="20200521 14:29:13.032"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.059" starttime="20200521 14:29:13.033"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.060" starttime="20200521 14:29:13.059"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.062" starttime="20200521 14:29:13.061"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.062" starttime="20200521 14:29:13.060"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.062" starttime="20200521 14:29:13.007"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.062" starttime="20200521 14:29:13.007"></status>
</kw>
<kw type="foritem" name="${ID} = 7">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:13.072" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/7</msg>
<msg timestamp="20200521 14:29:13.083" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/7: 0.000536 seconds.</msg>
<msg timestamp="20200521 14:29:13.084" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:13 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:29:13.084" starttime="20200521 14:29:13.063"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:29:13.085" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:29:13.085" starttime="20200521 14:29:13.084"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:29:13.086" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:29:13.086" starttime="20200521 14:29:13.086"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:29:13.087" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:29:13.087" starttime="20200521 14:29:13.087"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.088" starttime="20200521 14:29:13.087"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.089" starttime="20200521 14:29:13.088"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.090" starttime="20200521 14:29:13.089"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.091" starttime="20200521 14:29:13.091"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.091" starttime="20200521 14:29:13.090"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.091" starttime="20200521 14:29:13.062"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.091" starttime="20200521 14:29:13.062"></status>
</kw>
<kw type="foritem" name="${ID} = 8">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:13.103" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/8</msg>
<msg timestamp="20200521 14:29:13.114" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/8: 0.000347 seconds.</msg>
<msg timestamp="20200521 14:29:13.114" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:13 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:29:13.114" starttime="20200521 14:29:13.092"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:29:13.115" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:29:13.115" starttime="20200521 14:29:13.115"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:29:13.116" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:29:13.116" starttime="20200521 14:29:13.115"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:29:13.116" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:29:13.116" starttime="20200521 14:29:13.116"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.118" starttime="20200521 14:29:13.118"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.126" starttime="20200521 14:29:13.124"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.128" starttime="20200521 14:29:13.126"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.130" starttime="20200521 14:29:13.130"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.130" starttime="20200521 14:29:13.129"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.130" starttime="20200521 14:29:13.091"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.130" starttime="20200521 14:29:13.091"></status>
</kw>
<kw type="foritem" name="${ID} = 9">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:13.140" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/9</msg>
<msg timestamp="20200521 14:29:13.153" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/9: 0.000420999999999 seconds.</msg>
<msg timestamp="20200521 14:29:13.154" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:13 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:29:13.154" starttime="20200521 14:29:13.131"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:29:13.155" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:29:13.155" starttime="20200521 14:29:13.154"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:29:13.156" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:29:13.156" starttime="20200521 14:29:13.156"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:29:13.157" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:29:13.157" starttime="20200521 14:29:13.156"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.159" starttime="20200521 14:29:13.157"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.162" starttime="20200521 14:29:13.160"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.163" starttime="20200521 14:29:13.163"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.165" starttime="20200521 14:29:13.165"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.165" starttime="20200521 14:29:13.164"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.168" starttime="20200521 14:29:13.130"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.168" starttime="20200521 14:29:13.130"></status>
</kw>
<kw type="foritem" name="${ID} = 10">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:13.181" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/10</msg>
<msg timestamp="20200521 14:29:13.193" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/10: 0.000505 seconds.</msg>
<msg timestamp="20200521 14:29:13.194" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:13 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:29:13.194" starttime="20200521 14:29:13.169"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:29:13.195" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:29:13.195" starttime="20200521 14:29:13.194"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:29:13.196" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:29:13.196" starttime="20200521 14:29:13.195"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:29:13.196" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:29:13.196" starttime="20200521 14:29:13.196"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.197" starttime="20200521 14:29:13.197"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.198" starttime="20200521 14:29:13.198"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.201" starttime="20200521 14:29:13.199"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.204" starttime="20200521 14:29:13.202"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.204" starttime="20200521 14:29:13.201"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.205" starttime="20200521 14:29:13.169"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.205" starttime="20200521 14:29:13.168"></status>
</kw>
<kw type="foritem" name="${ID} = 11">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:13.237" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/11</msg>
<msg timestamp="20200521 14:29:13.249" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/11: 0.000651 seconds.</msg>
<msg timestamp="20200521 14:29:13.249" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:13 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:29:13.250" starttime="20200521 14:29:13.206"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:29:13.250" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:29:13.251" starttime="20200521 14:29:13.250"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:29:13.251" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:29:13.251" starttime="20200521 14:29:13.251"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:29:13.252" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:29:13.252" starttime="20200521 14:29:13.252"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.255" starttime="20200521 14:29:13.253"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.257" starttime="20200521 14:29:13.257"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.258" starttime="20200521 14:29:13.258"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.260" starttime="20200521 14:29:13.260"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.260" starttime="20200521 14:29:13.259"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.260" starttime="20200521 14:29:13.205"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.260" starttime="20200521 14:29:13.205"></status>
</kw>
<kw type="foritem" name="${ID} = 12">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:13.271" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/12</msg>
<msg timestamp="20200521 14:29:13.282" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/12: 0.000653 seconds.</msg>
<msg timestamp="20200521 14:29:13.283" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:13 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:29:13.283" starttime="20200521 14:29:13.261"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:29:13.284" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:29:13.284" starttime="20200521 14:29:13.283"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:29:13.285" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:29:13.285" starttime="20200521 14:29:13.284"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:29:13.286" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:29:13.286" starttime="20200521 14:29:13.285"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.286" starttime="20200521 14:29:13.286"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.287" starttime="20200521 14:29:13.287"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.288" starttime="20200521 14:29:13.287"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.289" starttime="20200521 14:29:13.289"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.289" starttime="20200521 14:29:13.288"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.289" starttime="20200521 14:29:13.261"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.289" starttime="20200521 14:29:13.261"></status>
</kw>
<kw type="foritem" name="${ID} = 13">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:13.300" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/13</msg>
<msg timestamp="20200521 14:29:13.341" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/13: 0.000611999999999 seconds.</msg>
<msg timestamp="20200521 14:29:13.342" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:13 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:29:13.342" starttime="20200521 14:29:13.290"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:29:13.343" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:29:13.343" starttime="20200521 14:29:13.342"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:29:13.344" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:29:13.344" starttime="20200521 14:29:13.343"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:29:13.345" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:29:13.345" starttime="20200521 14:29:13.344"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.347" starttime="20200521 14:29:13.345"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.350" starttime="20200521 14:29:13.347"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.351" starttime="20200521 14:29:13.350"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.352" starttime="20200521 14:29:13.352"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.352" starttime="20200521 14:29:13.351"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.352" starttime="20200521 14:29:13.290"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.352" starttime="20200521 14:29:13.289"></status>
</kw>
<kw type="foritem" name="${ID} = 14">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:13.362" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/14</msg>
<msg timestamp="20200521 14:29:13.374" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/14: 0.000689000000001 seconds.</msg>
<msg timestamp="20200521 14:29:13.374" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:13 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:29:13.374" starttime="20200521 14:29:13.353"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:29:13.375" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:29:13.375" starttime="20200521 14:29:13.375"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:29:13.376" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:29:13.376" starttime="20200521 14:29:13.376"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:29:13.379" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:29:13.379" starttime="20200521 14:29:13.377"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.379" starttime="20200521 14:29:13.379"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.380" starttime="20200521 14:29:13.380"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.381" starttime="20200521 14:29:13.381"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.383" starttime="20200521 14:29:13.382"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.383" starttime="20200521 14:29:13.382"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.383" starttime="20200521 14:29:13.353"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.383" starttime="20200521 14:29:13.352"></status>
</kw>
<kw type="foritem" name="${ID} = 15">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:13.394" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/15</msg>
<msg timestamp="20200521 14:29:13.405" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/15: 0.000491 seconds.</msg>
<msg timestamp="20200521 14:29:13.406" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:13 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:29:13.406" starttime="20200521 14:29:13.385"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:29:13.407" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:29:13.407" starttime="20200521 14:29:13.406"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:29:13.408" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:29:13.408" starttime="20200521 14:29:13.407"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:29:13.408" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:29:13.408" starttime="20200521 14:29:13.408"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.409" starttime="20200521 14:29:13.409"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.437" starttime="20200521 14:29:13.436"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.438" starttime="20200521 14:29:13.437"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.439" starttime="20200521 14:29:13.439"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.439" starttime="20200521 14:29:13.438"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.439" starttime="20200521 14:29:13.383"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.439" starttime="20200521 14:29:13.383"></status>
</kw>
<kw type="foritem" name="${ID} = 16">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:13.453" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/16</msg>
<msg timestamp="20200521 14:29:13.470" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/16: 0.00079 seconds.</msg>
<msg timestamp="20200521 14:29:13.470" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:13 GMT
connection Keep-Alive
content-type application/json
content-length 2398


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:29:13.470" starttime="20200521 14:29:13.441"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:29:13.471" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:29:13.471" starttime="20200521 14:29:13.471"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:29:13.472" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200521 14:29:13.472" starttime="20200521 14:29:13.472"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:29:13.473" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:29:13.473" starttime="20200521 14:29:13.473"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.474" starttime="20200521 14:29:13.474"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.475" starttime="20200521 14:29:13.474"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.475" starttime="20200521 14:29:13.475"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
</arguments>
<kw name="Test Tx Op Up">
<tags>
<tag>Test tx_disable</tag>
</tags>
<doc>Test SFP port tx disable function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OP_UP)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 14:29:13.483" level="INFO">${payload} = {u'OperationalState': u'Up'}</msg>
<status status="PASS" endtime="20200521 14:29:13.483" starttime="20200521 14:29:13.478"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<msg timestamp="20200521 14:29:13.494" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/16</msg>
<msg timestamp="20200521 14:29:13.517" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/16: 0.000610999999999 seconds.</msg>
<status status="PASS" endtime="20200521 14:29:13.518" starttime="20200521 14:29:13.483"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.518" starttime="20200521 14:29:13.477"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.518" starttime="20200521 14:29:13.477"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.518" starttime="20200521 14:29:13.476"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.518" starttime="20200521 14:29:13.440"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.518" starttime="20200521 14:29:13.439"></status>
</kw>
<kw type="foritem" name="${ID} = 17">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:13.530" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/17</msg>
<msg timestamp="20200521 14:29:13.550" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/17: 0.000693 seconds.</msg>
<msg timestamp="20200521 14:29:13.550" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:13 GMT
connection Keep-Alive
content-type application/json
content-length 2451


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:29:13.551" starttime="20200521 14:29:13.519"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:29:13.551" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:29:13.552" starttime="20200521 14:29:13.551"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:29:13.553" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200521 14:29:13.553" starttime="20200521 14:29:13.552"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:29:13.555" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200521 14:29:13.555" starttime="20200521 14:29:13.554"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.555" starttime="20200521 14:29:13.555"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.556" starttime="20200521 14:29:13.556"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.558" starttime="20200521 14:29:13.556"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.560" starttime="20200521 14:29:13.559"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.560" starttime="20200521 14:29:13.559"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.560" starttime="20200521 14:29:13.519"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.560" starttime="20200521 14:29:13.518"></status>
</kw>
<kw type="foritem" name="${ID} = 18">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:13.572" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/18</msg>
<msg timestamp="20200521 14:29:13.585" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/18: 0.000490000000001 seconds.</msg>
<msg timestamp="20200521 14:29:13.586" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:13 GMT
connection Keep-Alive
content-type application/json
content-length 2430


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:29:13.586" starttime="20200521 14:29:13.561"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:29:13.587" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:29:13.587" starttime="20200521 14:29:13.586"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:29:13.588" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200521 14:29:13.588" starttime="20200521 14:29:13.587"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:29:13.589" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200521 14:29:13.589" starttime="20200521 14:29:13.588"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.590" starttime="20200521 14:29:13.589"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.591" starttime="20200521 14:29:13.590"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.593" starttime="20200521 14:29:13.592"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.594" starttime="20200521 14:29:13.594"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.594" starttime="20200521 14:29:13.593"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.595" starttime="20200521 14:29:13.560"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.595" starttime="20200521 14:29:13.560"></status>
</kw>
<kw type="foritem" name="${ID} = 19">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:29:13.605" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/19</msg>
<msg timestamp="20200521 14:29:13.614" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/19: 0.000467 seconds.</msg>
<msg timestamp="20200521 14:29:13.615" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:29:13 GMT
connection Keep-Alive
content-type application/json
content-length 1056


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:29:13.615" starttime="20200521 14:29:13.595"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:29:13.616" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:29:13.616" starttime="20200521 14:29:13.615"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:29:13.617" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:29:13.617" starttime="20200521 14:29:13.616"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:29:13.618" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200521 14:29:13.618" starttime="20200521 14:29:13.617"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.619" starttime="20200521 14:29:13.618"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.620" starttime="20200521 14:29:13.619"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.622" starttime="20200521 14:29:13.621"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:29:13.623" starttime="20200521 14:29:13.623"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.624" starttime="20200521 14:29:13.622"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.624" starttime="20200521 14:29:13.595"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.624" starttime="20200521 14:29:13.595"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.624" starttime="20200521 14:29:12.803"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.624" starttime="20200521 14:29:12.772"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.624" starttime="20200521 14:28:17.068"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200521 14:29:13.634" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200521 14:29:13.643" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000426000000001 seconds.</msg>
<msg timestamp="20200521 14:29:13.644" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200521 14:29:13.644" starttime="20200521 14:29:13.625"></status>
</kw>
<status status="PASS" endtime="20200521 14:29:13.644" starttime="20200521 14:29:13.624"></status>
</kw>
<doc>Test omci send</doc>
<tags>
<tag>Test omci send</tag>
</tags>
<status status="PASS" endtime="20200521 14:29:13.644" critical="yes" starttime="20200521 14:28:17.028"></status>
</test>
<doc>Test BAL Rstful functionality.</doc>
<status status="PASS" endtime="20200521 14:29:13.646" starttime="20200521 14:24:47.298"></status>
</suite>
<status status="PASS" endtime="20200521 14:29:13.682" starttime="20200521 14:24:47.269"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="4">Critical Tests</stat>
<stat fail="0" pass="4">All Tests</stat>
</total>
<tag>
<stat fail="0" pass="1">Test Bal Restful opertaion test</stat>
<stat fail="0" pass="1">Test Flow add</stat>
<stat fail="0" pass="1">Test omci send</stat>
<stat fail="0" pass="1">Test ONU Rnage test</stat>
</tag>
<suite>
<stat fail="0" id="s1" name="Bal Test" pass="4">Bal Test</stat>
<stat fail="0" id="s1-s1" name="Test Bal" pass="4">Bal Test.Test Bal</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
