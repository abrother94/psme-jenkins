<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200530 21:12:21.242" generator="Robot 3.1.1 (Python 2.7.12 on linux2)">
<suite source="/home/voltha/workspace/XGSPON/6_Bal_Resf_API_Test/RF_Auto_Test/bal_test" id="s1" name="Bal Test">
<suite source="/home/voltha/workspace/XGSPON/6_Bal_Resf_API_Test/RF_Auto_Test/bal_test/test_bal.robot" id="s1-s1" name="Test Bal">
<test id="s1-s1-t1" name="Verify Restful API for BAL Test">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200530 21:12:24.117" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200530 21:12:24.133" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.001462 seconds.</msg>
<msg timestamp="20200530 21:12:24.134" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200530 21:12:24.135" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200530 21:12:24.135" starttime="20200530 21:12:24.060"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:24.135" starttime="20200530 21:12:24.059"></status>
</kw>
<kw name="Test Bal Component">
<tags>
<tag>Bal_Component</tag>
</tags>
<doc>Do basic test 1.Enable All PON MAC PON NNI port enable/disable.</doc>
<kw name="Disable All Tx Port">
<tags>
<tag>Disable Pon Port Tx</tag>
</tags>
<doc>Disable all port function</doc>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:12:24.162" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/</msg>
<msg timestamp="20200530 21:12:24.341" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/: 0.00145 seconds.</msg>
<msg timestamp="20200530 21:12:24.343" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:12:25 GMT
connection Keep-Alive
content-type application/json
content-length 1467


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPortCollection.EthernetSwitchPor...</msg>
<status status="PASS" endtime="20200530 21:12:24.343" starttime="20200530 21:12:24.138"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200530 21:12:24.346" level="INFO">Length is 20</msg>
<msg timestamp="20200530 21:12:24.346" level="INFO">${item_count} = 20</msg>
<status status="PASS" endtime="20200530 21:12:24.346" starttime="20200530 21:12:24.344"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable All Pon Port ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:24.348" starttime="20200530 21:12:24.347"></status>
</kw>
<kw type="for" name="${ID} IN RANGE [ 1 | ${item_count} ]">
<kw type="foritem" name="${ID} = 1">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:12:24.370" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200530 21:12:24.438" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.001262 seconds.</msg>
<msg timestamp="20200530 21:12:24.439" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:12:25 GMT
connection Keep-Alive
content-type application/json
content-length 2321


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200530 21:12:24.439" starttime="20200530 21:12:24.352"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:12:24.443" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:12:24.443" starttime="20200530 21:12:24.441"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200530 21:12:24.446" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200530 21:12:24.446" starttime="20200530 21:12:24.444"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200530 21:12:24.449" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200530 21:12:24.449" starttime="20200530 21:12:24.447"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:24.451" starttime="20200530 21:12:24.450"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:24.454" starttime="20200530 21:12:24.452"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:24.458" starttime="20200530 21:12:24.456"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
</arguments>
<kw name="Test Tx Op Down">
<tags>
<tag>Test tx_disable</tag>
</tags>
<doc>Test SFP port tx disable function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OP_DOWN)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200530 21:12:24.474" level="INFO">${payload} = {u'OperationalState': u'Down'}</msg>
<status status="PASS" endtime="20200530 21:12:24.474" starttime="20200530 21:12:24.466"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<msg timestamp="20200530 21:12:24.485" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200530 21:12:24.538" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000581 seconds.</msg>
<status status="PASS" endtime="20200530 21:12:24.540" starttime="20200530 21:12:24.475"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:24.540" starttime="20200530 21:12:24.464"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:24.540" starttime="20200530 21:12:24.462"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:24.540" starttime="20200530 21:12:24.460"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:24.540" starttime="20200530 21:12:24.350"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:24.541" starttime="20200530 21:12:24.350"></status>
</kw>
<kw type="foritem" name="${ID} = 2">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:12:24.558" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/2</msg>
<msg timestamp="20200530 21:12:24.575" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/2: 0.000856 seconds.</msg>
<msg timestamp="20200530 21:12:24.576" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:12:25 GMT
connection Keep-Alive
content-type application/json
content-length 2303


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200530 21:12:24.577" starttime="20200530 21:12:24.542"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:12:24.578" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:12:24.578" starttime="20200530 21:12:24.577"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200530 21:12:24.580" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200530 21:12:24.580" starttime="20200530 21:12:24.579"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200530 21:12:24.581" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200530 21:12:24.581" starttime="20200530 21:12:24.580"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:24.582" starttime="20200530 21:12:24.582"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:24.584" starttime="20200530 21:12:24.583"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:24.586" starttime="20200530 21:12:24.585"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
</arguments>
<kw name="Test Tx Op Down">
<tags>
<tag>Test tx_disable</tag>
</tags>
<doc>Test SFP port tx disable function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OP_DOWN)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200530 21:12:24.597" level="INFO">${payload} = {u'OperationalState': u'Down'}</msg>
<status status="PASS" endtime="20200530 21:12:24.597" starttime="20200530 21:12:24.590"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<msg timestamp="20200530 21:12:24.608" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/2</msg>
<msg timestamp="20200530 21:12:24.664" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/2: 0.000922 seconds.</msg>
<status status="PASS" endtime="20200530 21:12:24.665" starttime="20200530 21:12:24.597"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:24.665" starttime="20200530 21:12:24.589"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:24.665" starttime="20200530 21:12:24.589"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:24.665" starttime="20200530 21:12:24.587"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:24.666" starttime="20200530 21:12:24.541"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:24.666" starttime="20200530 21:12:24.541"></status>
</kw>
<kw type="foritem" name="${ID} = 3">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:12:24.683" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/3</msg>
<msg timestamp="20200530 21:12:24.696" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/3: 0.000974 seconds.</msg>
<msg timestamp="20200530 21:12:24.697" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:12:25 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200530 21:12:24.697" starttime="20200530 21:12:24.667"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:12:24.699" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:12:24.699" starttime="20200530 21:12:24.698"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200530 21:12:24.701" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200530 21:12:24.701" starttime="20200530 21:12:24.699"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200530 21:12:24.702" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200530 21:12:24.702" starttime="20200530 21:12:24.701"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:24.703" starttime="20200530 21:12:24.703"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:24.705" starttime="20200530 21:12:24.704"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:24.707" starttime="20200530 21:12:24.706"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:24.711" starttime="20200530 21:12:24.710"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:24.711" starttime="20200530 21:12:24.708"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:24.711" starttime="20200530 21:12:24.666"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:24.711" starttime="20200530 21:12:24.666"></status>
</kw>
<kw type="foritem" name="${ID} = 4">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:12:24.721" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/4</msg>
<msg timestamp="20200530 21:12:24.754" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/4: 0.000483 seconds.</msg>
<msg timestamp="20200530 21:12:24.754" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:12:25 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200530 21:12:24.754" starttime="20200530 21:12:24.712"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:12:24.755" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:12:24.755" starttime="20200530 21:12:24.755"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200530 21:12:24.756" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200530 21:12:24.756" starttime="20200530 21:12:24.755"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200530 21:12:24.757" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200530 21:12:24.757" starttime="20200530 21:12:24.756"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:24.757" starttime="20200530 21:12:24.757"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:24.758" starttime="20200530 21:12:24.758"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:24.759" starttime="20200530 21:12:24.759"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:24.761" starttime="20200530 21:12:24.760"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:24.761" starttime="20200530 21:12:24.760"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:24.761" starttime="20200530 21:12:24.712"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:24.761" starttime="20200530 21:12:24.711"></status>
</kw>
<kw type="foritem" name="${ID} = 5">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:12:24.769" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/5</msg>
<msg timestamp="20200530 21:12:24.781" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/5: 0.000437 seconds.</msg>
<msg timestamp="20200530 21:12:24.782" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:12:25 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200530 21:12:24.782" starttime="20200530 21:12:24.762"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:12:24.783" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:12:24.783" starttime="20200530 21:12:24.782"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200530 21:12:24.784" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200530 21:12:24.784" starttime="20200530 21:12:24.783"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200530 21:12:24.784" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200530 21:12:24.784" starttime="20200530 21:12:24.784"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:24.785" starttime="20200530 21:12:24.784"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:24.786" starttime="20200530 21:12:24.785"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:24.786" starttime="20200530 21:12:24.786"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:24.787" starttime="20200530 21:12:24.787"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:24.788" starttime="20200530 21:12:24.786"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:24.788" starttime="20200530 21:12:24.761"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:24.788" starttime="20200530 21:12:24.761"></status>
</kw>
<kw type="foritem" name="${ID} = 6">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:12:24.796" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/6</msg>
<msg timestamp="20200530 21:12:24.807" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/6: 0.000357 seconds.</msg>
<msg timestamp="20200530 21:12:24.808" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:12:25 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200530 21:12:24.808" starttime="20200530 21:12:24.788"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:12:24.808" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:12:24.808" starttime="20200530 21:12:24.808"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200530 21:12:24.809" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200530 21:12:24.809" starttime="20200530 21:12:24.809"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200530 21:12:24.810" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200530 21:12:24.810" starttime="20200530 21:12:24.809"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:24.810" starttime="20200530 21:12:24.810"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:24.811" starttime="20200530 21:12:24.810"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:24.812" starttime="20200530 21:12:24.811"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:24.813" starttime="20200530 21:12:24.813"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:24.813" starttime="20200530 21:12:24.812"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:24.813" starttime="20200530 21:12:24.788"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:24.813" starttime="20200530 21:12:24.788"></status>
</kw>
<kw type="foritem" name="${ID} = 7">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:12:24.820" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/7</msg>
<msg timestamp="20200530 21:12:24.858" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/7: 0.000502 seconds.</msg>
<msg timestamp="20200530 21:12:24.858" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:12:25 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200530 21:12:24.858" starttime="20200530 21:12:24.814"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:12:24.859" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:12:24.859" starttime="20200530 21:12:24.859"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200530 21:12:24.860" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200530 21:12:24.860" starttime="20200530 21:12:24.860"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200530 21:12:24.861" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200530 21:12:24.861" starttime="20200530 21:12:24.861"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:24.862" starttime="20200530 21:12:24.862"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:24.863" starttime="20200530 21:12:24.862"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:24.864" starttime="20200530 21:12:24.863"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:24.866" starttime="20200530 21:12:24.866"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:24.866" starttime="20200530 21:12:24.865"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:24.866" starttime="20200530 21:12:24.814"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:24.866" starttime="20200530 21:12:24.813"></status>
</kw>
<kw type="foritem" name="${ID} = 8">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:12:24.876" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/8</msg>
<msg timestamp="20200530 21:12:24.888" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/8: 0.000481 seconds.</msg>
<msg timestamp="20200530 21:12:24.889" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:12:25 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200530 21:12:24.889" starttime="20200530 21:12:24.867"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:12:24.890" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:12:24.890" starttime="20200530 21:12:24.889"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200530 21:12:24.891" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200530 21:12:24.891" starttime="20200530 21:12:24.890"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200530 21:12:24.892" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200530 21:12:24.892" starttime="20200530 21:12:24.891"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:24.893" starttime="20200530 21:12:24.892"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:24.894" starttime="20200530 21:12:24.894"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:24.895" starttime="20200530 21:12:24.894"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:24.897" starttime="20200530 21:12:24.896"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:24.897" starttime="20200530 21:12:24.896"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:24.897" starttime="20200530 21:12:24.867"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:24.897" starttime="20200530 21:12:24.866"></status>
</kw>
<kw type="foritem" name="${ID} = 9">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:12:24.907" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/9</msg>
<msg timestamp="20200530 21:12:24.919" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/9: 0.000485 seconds.</msg>
<msg timestamp="20200530 21:12:24.920" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:12:25 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200530 21:12:24.920" starttime="20200530 21:12:24.898"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:12:24.921" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:12:24.921" starttime="20200530 21:12:24.920"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200530 21:12:24.922" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200530 21:12:24.922" starttime="20200530 21:12:24.921"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200530 21:12:24.923" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200530 21:12:24.923" starttime="20200530 21:12:24.922"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:24.924" starttime="20200530 21:12:24.923"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:24.924" starttime="20200530 21:12:24.924"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:24.925" starttime="20200530 21:12:24.925"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:24.927" starttime="20200530 21:12:24.927"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:24.927" starttime="20200530 21:12:24.926"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:24.927" starttime="20200530 21:12:24.897"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:24.927" starttime="20200530 21:12:24.897"></status>
</kw>
<kw type="foritem" name="${ID} = 10">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:12:24.936" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/10</msg>
<msg timestamp="20200530 21:12:24.959" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/10: 0.000557 seconds.</msg>
<msg timestamp="20200530 21:12:24.959" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:12:25 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200530 21:12:24.960" starttime="20200530 21:12:24.928"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:12:24.960" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:12:24.961" starttime="20200530 21:12:24.960"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200530 21:12:24.961" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200530 21:12:24.961" starttime="20200530 21:12:24.961"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200530 21:12:24.962" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200530 21:12:24.962" starttime="20200530 21:12:24.961"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:24.963" starttime="20200530 21:12:24.962"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:24.964" starttime="20200530 21:12:24.963"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:24.965" starttime="20200530 21:12:24.964"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:24.967" starttime="20200530 21:12:24.966"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:24.967" starttime="20200530 21:12:24.966"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:24.967" starttime="20200530 21:12:24.928"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:24.967" starttime="20200530 21:12:24.928"></status>
</kw>
<kw type="foritem" name="${ID} = 11">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:12:24.976" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/11</msg>
<msg timestamp="20200530 21:12:24.987" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/11: 0.000463 seconds.</msg>
<msg timestamp="20200530 21:12:24.988" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:12:25 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200530 21:12:24.988" starttime="20200530 21:12:24.968"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:12:24.989" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:12:24.989" starttime="20200530 21:12:24.988"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200530 21:12:24.989" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200530 21:12:24.989" starttime="20200530 21:12:24.989"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200530 21:12:24.990" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200530 21:12:24.990" starttime="20200530 21:12:24.990"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:24.991" starttime="20200530 21:12:24.990"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:24.992" starttime="20200530 21:12:24.991"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:24.993" starttime="20200530 21:12:24.992"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:24.994" starttime="20200530 21:12:24.994"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:24.994" starttime="20200530 21:12:24.993"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:24.994" starttime="20200530 21:12:24.968"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:24.994" starttime="20200530 21:12:24.967"></status>
</kw>
<kw type="foritem" name="${ID} = 12">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:12:25.002" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/12</msg>
<msg timestamp="20200530 21:12:25.014" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/12: 0.000327 seconds.</msg>
<msg timestamp="20200530 21:12:25.014" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:12:25 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200530 21:12:25.014" starttime="20200530 21:12:24.995"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:12:25.015" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:12:25.015" starttime="20200530 21:12:25.014"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200530 21:12:25.016" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200530 21:12:25.016" starttime="20200530 21:12:25.015"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200530 21:12:25.016" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200530 21:12:25.016" starttime="20200530 21:12:25.016"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:25.017" starttime="20200530 21:12:25.017"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:25.018" starttime="20200530 21:12:25.017"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:25.019" starttime="20200530 21:12:25.018"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:25.020" starttime="20200530 21:12:25.020"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:25.020" starttime="20200530 21:12:25.019"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:25.020" starttime="20200530 21:12:24.994"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:25.020" starttime="20200530 21:12:24.994"></status>
</kw>
<kw type="foritem" name="${ID} = 13">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:12:25.028" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/13</msg>
<msg timestamp="20200530 21:12:25.039" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/13: 0.00032 seconds.</msg>
<msg timestamp="20200530 21:12:25.039" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:12:25 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200530 21:12:25.039" starttime="20200530 21:12:25.021"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:12:25.040" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:12:25.040" starttime="20200530 21:12:25.040"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200530 21:12:25.041" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200530 21:12:25.041" starttime="20200530 21:12:25.040"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200530 21:12:25.041" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200530 21:12:25.041" starttime="20200530 21:12:25.041"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:25.042" starttime="20200530 21:12:25.042"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:25.043" starttime="20200530 21:12:25.042"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:25.050" starttime="20200530 21:12:25.049"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:25.052" starttime="20200530 21:12:25.052"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:25.052" starttime="20200530 21:12:25.051"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:25.053" starttime="20200530 21:12:25.021"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:25.053" starttime="20200530 21:12:25.020"></status>
</kw>
<kw type="foritem" name="${ID} = 14">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:12:25.060" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/14</msg>
<msg timestamp="20200530 21:12:25.070" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/14: 0.000336 seconds.</msg>
<msg timestamp="20200530 21:12:25.071" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:12:25 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200530 21:12:25.071" starttime="20200530 21:12:25.053"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:12:25.072" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:12:25.072" starttime="20200530 21:12:25.071"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200530 21:12:25.072" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200530 21:12:25.072" starttime="20200530 21:12:25.072"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200530 21:12:25.073" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200530 21:12:25.073" starttime="20200530 21:12:25.072"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:25.074" starttime="20200530 21:12:25.073"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:25.074" starttime="20200530 21:12:25.074"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:25.075" starttime="20200530 21:12:25.075"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:25.076" starttime="20200530 21:12:25.076"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:25.077" starttime="20200530 21:12:25.076"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:25.077" starttime="20200530 21:12:25.053"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:25.077" starttime="20200530 21:12:25.053"></status>
</kw>
<kw type="foritem" name="${ID} = 15">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:12:25.085" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/15</msg>
<msg timestamp="20200530 21:12:25.097" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/15: 0.000451 seconds.</msg>
<msg timestamp="20200530 21:12:25.098" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:12:25 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200530 21:12:25.098" starttime="20200530 21:12:25.078"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:12:25.098" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:12:25.098" starttime="20200530 21:12:25.098"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200530 21:12:25.099" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200530 21:12:25.099" starttime="20200530 21:12:25.099"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200530 21:12:25.100" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200530 21:12:25.100" starttime="20200530 21:12:25.099"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:25.101" starttime="20200530 21:12:25.100"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:25.101" starttime="20200530 21:12:25.101"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:25.102" starttime="20200530 21:12:25.102"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:25.104" starttime="20200530 21:12:25.103"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:25.104" starttime="20200530 21:12:25.103"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:25.104" starttime="20200530 21:12:25.077"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:25.104" starttime="20200530 21:12:25.077"></status>
</kw>
<kw type="foritem" name="${ID} = 16">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:12:25.111" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/16</msg>
<msg timestamp="20200530 21:12:25.122" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/16: 0.000482 seconds.</msg>
<msg timestamp="20200530 21:12:25.123" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:12:25 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200530 21:12:25.123" starttime="20200530 21:12:25.105"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:12:25.124" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:12:25.124" starttime="20200530 21:12:25.123"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200530 21:12:25.124" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200530 21:12:25.124" starttime="20200530 21:12:25.124"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200530 21:12:25.125" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200530 21:12:25.125" starttime="20200530 21:12:25.125"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:25.126" starttime="20200530 21:12:25.125"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:25.126" starttime="20200530 21:12:25.126"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:25.127" starttime="20200530 21:12:25.127"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:25.129" starttime="20200530 21:12:25.128"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:25.129" starttime="20200530 21:12:25.128"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:25.129" starttime="20200530 21:12:25.104"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:25.129" starttime="20200530 21:12:25.104"></status>
</kw>
<kw type="foritem" name="${ID} = 17">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:12:25.136" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/17</msg>
<msg timestamp="20200530 21:12:25.351" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/17: 0.001519 seconds.</msg>
<msg timestamp="20200530 21:12:25.353" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:12:26 GMT
connection Keep-Alive
content-type application/json
content-length 2440


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200530 21:12:25.353" starttime="20200530 21:12:25.130"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:12:25.355" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:12:25.356" starttime="20200530 21:12:25.354"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200530 21:12:25.358" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200530 21:12:25.358" starttime="20200530 21:12:25.357"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200530 21:12:25.361" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200530 21:12:25.361" starttime="20200530 21:12:25.359"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:25.363" starttime="20200530 21:12:25.362"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:25.366" starttime="20200530 21:12:25.365"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:25.370" starttime="20200530 21:12:25.368"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:25.375" starttime="20200530 21:12:25.374"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:25.376" starttime="20200530 21:12:25.372"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:25.376" starttime="20200530 21:12:25.129"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:25.376" starttime="20200530 21:12:25.129"></status>
</kw>
<kw type="foritem" name="${ID} = 18">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:12:25.390" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/18</msg>
<msg timestamp="20200530 21:12:25.401" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/18: 0.000355 seconds.</msg>
<msg timestamp="20200530 21:12:25.401" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:12:26 GMT
connection Keep-Alive
content-type application/json
content-length 1056


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200530 21:12:25.401" starttime="20200530 21:12:25.378"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:12:25.402" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:12:25.402" starttime="20200530 21:12:25.402"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200530 21:12:25.403" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200530 21:12:25.403" starttime="20200530 21:12:25.403"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200530 21:12:25.404" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200530 21:12:25.404" starttime="20200530 21:12:25.403"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:25.405" starttime="20200530 21:12:25.404"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:25.405" starttime="20200530 21:12:25.405"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:25.406" starttime="20200530 21:12:25.406"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:25.444" starttime="20200530 21:12:25.407"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:25.444" starttime="20200530 21:12:25.406"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:25.444" starttime="20200530 21:12:25.377"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:25.444" starttime="20200530 21:12:25.376"></status>
</kw>
<kw type="foritem" name="${ID} = 19">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:12:25.457" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/19</msg>
<msg timestamp="20200530 21:12:25.469" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/19: 0.000639 seconds.</msg>
<msg timestamp="20200530 21:12:25.470" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:12:26 GMT
connection Keep-Alive
content-type application/json
content-length 1056


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200530 21:12:25.470" starttime="20200530 21:12:25.445"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:12:25.471" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:12:25.471" starttime="20200530 21:12:25.470"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200530 21:12:25.472" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200530 21:12:25.472" starttime="20200530 21:12:25.472"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200530 21:12:25.473" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200530 21:12:25.473" starttime="20200530 21:12:25.473"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:25.474" starttime="20200530 21:12:25.474"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:25.476" starttime="20200530 21:12:25.475"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:25.477" starttime="20200530 21:12:25.476"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:25.479" starttime="20200530 21:12:25.478"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:25.479" starttime="20200530 21:12:25.478"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:25.479" starttime="20200530 21:12:25.445"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:25.479" starttime="20200530 21:12:25.445"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:25.479" starttime="20200530 21:12:24.349"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:25.480" starttime="20200530 21:12:24.137"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PON_TYPE}' == 'GPON'</arg>
<arg>Log to console</arg>
<arg>"####### GPON TESTING ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### XGSPON TESTING ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### XGSPON TESTING ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:25.481" starttime="20200530 21:12:25.481"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:25.481" starttime="20200530 21:12:25.480"></status>
</kw>
<kw name="Test Bal Enable">
<tags>
<tag>Verify_Bal_Enable</tag>
</tags>
<doc>Enable Bal</doc>
<kw type="for" name="${i} IN RANGE [ 1 | 80 ]">
<kw type="foritem" name="${i} = 1">
<kw name="Test Wait Bal Enable">
<tags>
<tag>Verify_Waut_Bal_Enable</tag>
</tags>
<doc>Wait Enable Bal</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:25.483" starttime="20200530 21:12:25.483"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:12:25.492" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200530 21:12:25.502" level="INFO">Response Time to /redfish/v1/Olt: 0.000297 seconds.</msg>
<msg timestamp="20200530 21:12:25.502" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:12:26 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200530 21:12:25.503" starttime="20200530 21:12:25.484"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:12:25.503" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:12:25.503" starttime="20200530 21:12:25.503"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['BalState']}</arg>
</arguments>
<assign>
<var>${BAL_STATE}</var>
</assign>
<msg timestamp="20200530 21:12:25.504" level="INFO">${BAL_STATE} = up</msg>
<status status="PASS" endtime="20200530 21:12:25.504" starttime="20200530 21:12:25.504"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BAL_STATE}' == 'up'</arg>
<arg>Log to console</arg>
<arg>"####### Up ######"</arg>
<arg>${bal_state} =</arg>
<arg>"up"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Up ######"</arg>
<arg>${bal_state} =</arg>
<arg>"up"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:25.506" starttime="20200530 21:12:25.505"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:25.506" starttime="20200530 21:12:25.505"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200530 21:12:26.509" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200530 21:12:26.510" starttime="20200530 21:12:25.506"></status>
</kw>
<msg timestamp="20200530 21:12:26.511" level="INFO">${result} = up</msg>
<status status="PASS" endtime="20200530 21:12:26.511" starttime="20200530 21:12:25.482"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:26.513" starttime="20200530 21:12:26.512"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${result}' == 'up'</arg>
</arguments>
<msg timestamp="20200530 21:12:26.517" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20200530 21:12:26.517" starttime="20200530 21:12:26.515"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:26.517" starttime="20200530 21:12:25.482"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:26.517" starttime="20200530 21:12:25.482"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${result}</arg>
<arg>up</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:26.520" starttime="20200530 21:12:26.518"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OPT_ENABLE)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200530 21:12:26.535" level="INFO">${payload} = {u'OltOperateState': True}</msg>
<status status="PASS" endtime="20200530 21:12:26.535" starttime="20200530 21:12:26.520"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:12:26.561" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200530 21:12:28.178" level="INFO">Response Time to /redfish/v1/Olt: 0.001096 seconds.</msg>
<msg timestamp="20200530 21:12:28.179" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:12:28 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:12:28.179" starttime="20200530 21:12:26.536"></status>
</kw>
<kw type="for" name="${i} IN RANGE [ 1 | 60 ]">
<kw type="foritem" name="${i} = 1">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:28.183" starttime="20200530 21:12:28.183"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:12:28.208" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200530 21:12:28.221" level="INFO">Response Time to /redfish/v1/Olt: 0.000528 seconds.</msg>
<msg timestamp="20200530 21:12:28.222" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:12:28 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200530 21:12:28.222" starttime="20200530 21:12:28.184"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:12:28.223" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:12:28.223" starttime="20200530 21:12:28.222"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200530 21:12:28.224" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200530 21:12:28.224" starttime="20200530 21:12:28.223"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:28.225" starttime="20200530 21:12:28.225"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:28.227" starttime="20200530 21:12:28.227"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:28.227" starttime="20200530 21:12:28.226"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200530 21:12:29.229" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200530 21:12:29.229" starttime="20200530 21:12:28.228"></status>
</kw>
<msg timestamp="20200530 21:12:29.230" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200530 21:12:29.230" starttime="20200530 21:12:28.181"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:29.233" starttime="20200530 21:12:29.231"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:29.236" starttime="20200530 21:12:29.235"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:29.236" starttime="20200530 21:12:28.180"></status>
</kw>
<kw type="foritem" name="${i} = 2">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:29.239" starttime="20200530 21:12:29.238"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:12:29.262" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200530 21:12:29.273" level="INFO">Response Time to /redfish/v1/Olt: 0.00047 seconds.</msg>
<msg timestamp="20200530 21:12:29.273" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:12:30 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200530 21:12:29.274" starttime="20200530 21:12:29.241"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:12:29.274" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:12:29.275" starttime="20200530 21:12:29.274"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200530 21:12:29.275" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200530 21:12:29.275" starttime="20200530 21:12:29.275"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:29.277" starttime="20200530 21:12:29.276"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:29.279" starttime="20200530 21:12:29.278"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:29.279" starttime="20200530 21:12:29.277"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200530 21:12:30.280" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200530 21:12:30.281" starttime="20200530 21:12:29.280"></status>
</kw>
<msg timestamp="20200530 21:12:30.282" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200530 21:12:30.282" starttime="20200530 21:12:29.236"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:30.285" starttime="20200530 21:12:30.283"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:30.287" starttime="20200530 21:12:30.286"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:30.287" starttime="20200530 21:12:29.236"></status>
</kw>
<kw type="foritem" name="${i} = 3">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:30.291" starttime="20200530 21:12:30.289"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:12:30.314" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200530 21:12:30.325" level="INFO">Response Time to /redfish/v1/Olt: 0.000513 seconds.</msg>
<msg timestamp="20200530 21:12:30.326" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:12:31 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200530 21:12:30.326" starttime="20200530 21:12:30.292"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:12:30.327" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:12:30.327" starttime="20200530 21:12:30.326"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200530 21:12:30.328" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200530 21:12:30.328" starttime="20200530 21:12:30.328"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:30.330" starttime="20200530 21:12:30.329"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:30.335" starttime="20200530 21:12:30.334"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:30.335" starttime="20200530 21:12:30.333"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200530 21:12:31.337" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200530 21:12:31.337" starttime="20200530 21:12:30.336"></status>
</kw>
<msg timestamp="20200530 21:12:31.338" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200530 21:12:31.338" starttime="20200530 21:12:30.288"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:31.341" starttime="20200530 21:12:31.339"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:31.343" starttime="20200530 21:12:31.343"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:31.344" starttime="20200530 21:12:30.287"></status>
</kw>
<kw type="foritem" name="${i} = 4">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:31.347" starttime="20200530 21:12:31.346"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:12:31.373" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200530 21:12:31.384" level="INFO">Response Time to /redfish/v1/Olt: 0.00054 seconds.</msg>
<msg timestamp="20200530 21:12:31.385" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:12:32 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200530 21:12:31.385" starttime="20200530 21:12:31.349"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:12:31.386" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:12:31.386" starttime="20200530 21:12:31.385"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200530 21:12:31.387" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200530 21:12:31.387" starttime="20200530 21:12:31.387"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:31.388" starttime="20200530 21:12:31.388"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:31.390" starttime="20200530 21:12:31.390"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:31.390" starttime="20200530 21:12:31.389"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200530 21:12:32.425" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200530 21:12:32.425" starttime="20200530 21:12:31.391"></status>
</kw>
<msg timestamp="20200530 21:12:32.426" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200530 21:12:32.426" starttime="20200530 21:12:31.344"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:32.429" starttime="20200530 21:12:32.427"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:32.433" starttime="20200530 21:12:32.431"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:32.433" starttime="20200530 21:12:31.344"></status>
</kw>
<kw type="foritem" name="${i} = 5">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:32.437" starttime="20200530 21:12:32.436"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:12:32.461" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200530 21:12:32.472" level="INFO">Response Time to /redfish/v1/Olt: 0.000474 seconds.</msg>
<msg timestamp="20200530 21:12:32.473" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:12:33 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200530 21:12:32.473" starttime="20200530 21:12:32.438"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:12:32.474" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:12:32.474" starttime="20200530 21:12:32.473"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200530 21:12:32.475" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200530 21:12:32.475" starttime="20200530 21:12:32.474"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:32.475" starttime="20200530 21:12:32.475"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:32.477" starttime="20200530 21:12:32.477"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:32.477" starttime="20200530 21:12:32.476"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200530 21:12:33.478" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200530 21:12:33.479" starttime="20200530 21:12:32.477"></status>
</kw>
<msg timestamp="20200530 21:12:33.479" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200530 21:12:33.480" starttime="20200530 21:12:32.434"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:33.484" starttime="20200530 21:12:33.481"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:33.486" starttime="20200530 21:12:33.485"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:33.486" starttime="20200530 21:12:32.433"></status>
</kw>
<kw type="foritem" name="${i} = 6">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:33.489" starttime="20200530 21:12:33.488"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:12:33.513" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200530 21:12:33.524" level="INFO">Response Time to /redfish/v1/Olt: 0.000573 seconds.</msg>
<msg timestamp="20200530 21:12:33.524" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:12:34 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200530 21:12:33.525" starttime="20200530 21:12:33.490"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:12:33.526" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:12:33.526" starttime="20200530 21:12:33.525"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200530 21:12:33.527" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200530 21:12:33.527" starttime="20200530 21:12:33.526"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:33.528" starttime="20200530 21:12:33.528"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:33.530" starttime="20200530 21:12:33.530"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:33.530" starttime="20200530 21:12:33.529"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200530 21:12:34.534" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200530 21:12:34.534" starttime="20200530 21:12:33.531"></status>
</kw>
<msg timestamp="20200530 21:12:34.535" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200530 21:12:34.535" starttime="20200530 21:12:33.486"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:34.539" starttime="20200530 21:12:34.537"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:34.542" starttime="20200530 21:12:34.540"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:34.542" starttime="20200530 21:12:33.486"></status>
</kw>
<kw type="foritem" name="${i} = 7">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:34.547" starttime="20200530 21:12:34.545"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:12:34.569" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200530 21:12:34.580" level="INFO">Response Time to /redfish/v1/Olt: 0.000485 seconds.</msg>
<msg timestamp="20200530 21:12:34.580" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:12:35 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200530 21:12:34.580" starttime="20200530 21:12:34.548"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:12:34.581" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:12:34.581" starttime="20200530 21:12:34.581"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200530 21:12:34.582" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200530 21:12:34.582" starttime="20200530 21:12:34.582"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:34.583" starttime="20200530 21:12:34.582"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:34.584" starttime="20200530 21:12:34.584"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:34.584" starttime="20200530 21:12:34.583"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200530 21:12:35.586" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200530 21:12:35.586" starttime="20200530 21:12:34.585"></status>
</kw>
<msg timestamp="20200530 21:12:35.587" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200530 21:12:35.587" starttime="20200530 21:12:34.543"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:35.591" starttime="20200530 21:12:35.588"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:35.592" starttime="20200530 21:12:35.592"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:35.593" starttime="20200530 21:12:34.542"></status>
</kw>
<kw type="foritem" name="${i} = 8">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:35.598" starttime="20200530 21:12:35.595"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:12:35.617" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200530 21:12:35.628" level="INFO">Response Time to /redfish/v1/Olt: 0.000428 seconds.</msg>
<msg timestamp="20200530 21:12:35.629" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:12:36 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200530 21:12:35.629" starttime="20200530 21:12:35.598"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:12:35.630" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:12:35.630" starttime="20200530 21:12:35.630"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200530 21:12:35.631" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200530 21:12:35.631" starttime="20200530 21:12:35.631"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:35.632" starttime="20200530 21:12:35.631"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:35.634" starttime="20200530 21:12:35.633"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:35.634" starttime="20200530 21:12:35.633"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200530 21:12:36.647" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200530 21:12:36.648" starttime="20200530 21:12:35.634"></status>
</kw>
<msg timestamp="20200530 21:12:36.648" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200530 21:12:36.649" starttime="20200530 21:12:35.593"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:36.651" starttime="20200530 21:12:36.650"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:36.654" starttime="20200530 21:12:36.653"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:36.654" starttime="20200530 21:12:35.593"></status>
</kw>
<kw type="foritem" name="${i} = 9">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:36.657" starttime="20200530 21:12:36.656"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:12:36.680" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200530 21:12:36.692" level="INFO">Response Time to /redfish/v1/Olt: 0.00066 seconds.</msg>
<msg timestamp="20200530 21:12:36.692" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:12:37 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200530 21:12:36.693" starttime="20200530 21:12:36.658"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:12:36.694" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:12:36.694" starttime="20200530 21:12:36.693"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200530 21:12:36.695" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200530 21:12:36.695" starttime="20200530 21:12:36.694"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:36.696" starttime="20200530 21:12:36.695"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:36.698" starttime="20200530 21:12:36.697"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:36.698" starttime="20200530 21:12:36.696"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200530 21:12:37.700" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200530 21:12:37.700" starttime="20200530 21:12:36.699"></status>
</kw>
<msg timestamp="20200530 21:12:37.701" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200530 21:12:37.701" starttime="20200530 21:12:36.655"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:37.704" starttime="20200530 21:12:37.702"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:37.707" starttime="20200530 21:12:37.706"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:37.707" starttime="20200530 21:12:36.654"></status>
</kw>
<kw type="foritem" name="${i} = 10">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:37.710" starttime="20200530 21:12:37.709"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:12:37.733" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200530 21:12:37.740" level="INFO">Response Time to /redfish/v1/Olt: 0.00056 seconds.</msg>
<msg timestamp="20200530 21:12:37.741" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:12:38 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200530 21:12:37.741" starttime="20200530 21:12:37.711"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:12:37.742" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:12:37.742" starttime="20200530 21:12:37.741"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200530 21:12:37.743" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200530 21:12:37.743" starttime="20200530 21:12:37.743"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:37.744" starttime="20200530 21:12:37.744"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:37.746" starttime="20200530 21:12:37.746"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:37.747" starttime="20200530 21:12:37.745"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200530 21:12:38.748" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200530 21:12:38.749" starttime="20200530 21:12:37.747"></status>
</kw>
<msg timestamp="20200530 21:12:38.749" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200530 21:12:38.750" starttime="20200530 21:12:37.708"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:38.753" starttime="20200530 21:12:38.751"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:38.755" starttime="20200530 21:12:38.754"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:38.755" starttime="20200530 21:12:37.707"></status>
</kw>
<kw type="foritem" name="${i} = 11">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:38.759" starttime="20200530 21:12:38.758"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:12:38.781" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200530 21:12:38.792" level="INFO">Response Time to /redfish/v1/Olt: 0.000487 seconds.</msg>
<msg timestamp="20200530 21:12:38.793" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:12:39 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200530 21:12:38.793" starttime="20200530 21:12:38.759"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:12:38.794" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:12:38.794" starttime="20200530 21:12:38.793"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200530 21:12:38.795" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200530 21:12:38.795" starttime="20200530 21:12:38.794"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:38.796" starttime="20200530 21:12:38.795"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:38.797" starttime="20200530 21:12:38.797"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:38.797" starttime="20200530 21:12:38.796"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200530 21:12:39.799" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200530 21:12:39.800" starttime="20200530 21:12:38.798"></status>
</kw>
<msg timestamp="20200530 21:12:39.800" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200530 21:12:39.801" starttime="20200530 21:12:38.756"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:39.803" starttime="20200530 21:12:39.802"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:39.806" starttime="20200530 21:12:39.805"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:39.806" starttime="20200530 21:12:38.755"></status>
</kw>
<kw type="foritem" name="${i} = 12">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:39.810" starttime="20200530 21:12:39.808"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:12:39.832" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200530 21:12:39.844" level="INFO">Response Time to /redfish/v1/Olt: 0.000483 seconds.</msg>
<msg timestamp="20200530 21:12:39.844" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:12:40 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200530 21:12:39.845" starttime="20200530 21:12:39.810"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:12:39.846" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:12:39.846" starttime="20200530 21:12:39.845"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200530 21:12:39.846" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200530 21:12:39.847" starttime="20200530 21:12:39.846"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:39.847" starttime="20200530 21:12:39.847"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:39.850" starttime="20200530 21:12:39.849"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:39.850" starttime="20200530 21:12:39.848"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200530 21:12:40.865" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200530 21:12:40.865" starttime="20200530 21:12:39.850"></status>
</kw>
<msg timestamp="20200530 21:12:40.866" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200530 21:12:40.866" starttime="20200530 21:12:39.806"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:40.869" starttime="20200530 21:12:40.867"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:40.872" starttime="20200530 21:12:40.871"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:40.872" starttime="20200530 21:12:39.806"></status>
</kw>
<kw type="foritem" name="${i} = 13">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:40.876" starttime="20200530 21:12:40.875"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:12:40.901" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200530 21:12:40.915" level="INFO">Response Time to /redfish/v1/Olt: 0.000718 seconds.</msg>
<msg timestamp="20200530 21:12:40.916" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:12:41 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200530 21:12:40.916" starttime="20200530 21:12:40.878"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:12:40.918" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:12:40.918" starttime="20200530 21:12:40.917"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200530 21:12:40.920" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200530 21:12:40.920" starttime="20200530 21:12:40.919"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:40.922" starttime="20200530 21:12:40.921"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:40.925" starttime="20200530 21:12:40.924"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:40.925" starttime="20200530 21:12:40.923"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200530 21:12:41.927" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200530 21:12:41.927" starttime="20200530 21:12:40.925"></status>
</kw>
<msg timestamp="20200530 21:12:41.928" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200530 21:12:41.929" starttime="20200530 21:12:40.873"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:41.932" starttime="20200530 21:12:41.930"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:41.934" starttime="20200530 21:12:41.933"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:41.934" starttime="20200530 21:12:40.873"></status>
</kw>
<kw type="foritem" name="${i} = 14">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:41.937" starttime="20200530 21:12:41.936"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:12:41.960" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200530 21:12:41.970" level="INFO">Response Time to /redfish/v1/Olt: 0.000555 seconds.</msg>
<msg timestamp="20200530 21:12:41.971" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:12:42 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200530 21:12:41.971" starttime="20200530 21:12:41.938"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:12:41.972" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:12:41.972" starttime="20200530 21:12:41.972"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200530 21:12:41.973" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200530 21:12:41.973" starttime="20200530 21:12:41.973"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:41.974" starttime="20200530 21:12:41.974"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:41.976" starttime="20200530 21:12:41.975"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:41.976" starttime="20200530 21:12:41.975"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200530 21:12:42.977" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200530 21:12:42.978" starttime="20200530 21:12:41.976"></status>
</kw>
<msg timestamp="20200530 21:12:42.979" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200530 21:12:42.979" starttime="20200530 21:12:41.935"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:42.981" starttime="20200530 21:12:42.980"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:42.984" starttime="20200530 21:12:42.982"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:42.984" starttime="20200530 21:12:41.934"></status>
</kw>
<kw type="foritem" name="${i} = 15">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:42.987" starttime="20200530 21:12:42.986"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:12:43.011" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200530 21:12:43.022" level="INFO">Response Time to /redfish/v1/Olt: 0.000475 seconds.</msg>
<msg timestamp="20200530 21:12:43.023" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:12:43 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200530 21:12:43.023" starttime="20200530 21:12:42.988"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:12:43.024" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:12:43.024" starttime="20200530 21:12:43.024"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200530 21:12:43.025" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200530 21:12:43.025" starttime="20200530 21:12:43.025"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:43.026" starttime="20200530 21:12:43.026"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:43.028" starttime="20200530 21:12:43.027"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:43.028" starttime="20200530 21:12:43.027"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200530 21:12:44.029" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200530 21:12:44.029" starttime="20200530 21:12:43.028"></status>
</kw>
<msg timestamp="20200530 21:12:44.030" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200530 21:12:44.030" starttime="20200530 21:12:42.985"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:44.033" starttime="20200530 21:12:44.031"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:44.035" starttime="20200530 21:12:44.034"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:44.035" starttime="20200530 21:12:42.984"></status>
</kw>
<kw type="foritem" name="${i} = 16">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:44.039" starttime="20200530 21:12:44.038"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:12:44.062" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200530 21:12:44.073" level="INFO">Response Time to /redfish/v1/Olt: 0.000573 seconds.</msg>
<msg timestamp="20200530 21:12:44.074" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:12:44 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200530 21:12:44.074" starttime="20200530 21:12:44.040"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:12:44.075" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:12:44.075" starttime="20200530 21:12:44.074"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200530 21:12:44.076" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200530 21:12:44.076" starttime="20200530 21:12:44.075"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:44.077" starttime="20200530 21:12:44.076"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:44.078" starttime="20200530 21:12:44.078"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:44.078" starttime="20200530 21:12:44.077"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200530 21:12:45.079" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200530 21:12:45.080" starttime="20200530 21:12:44.078"></status>
</kw>
<msg timestamp="20200530 21:12:45.081" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200530 21:12:45.081" starttime="20200530 21:12:44.036"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:45.084" starttime="20200530 21:12:45.082"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:45.087" starttime="20200530 21:12:45.085"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:45.087" starttime="20200530 21:12:44.035"></status>
</kw>
<kw type="foritem" name="${i} = 17">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:45.091" starttime="20200530 21:12:45.089"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:12:45.113" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200530 21:12:46.131" level="INFO">Response Time to /redfish/v1/Olt: 0.001219 seconds.</msg>
<msg timestamp="20200530 21:12:46.133" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:12:46 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200530 21:12:46.133" starttime="20200530 21:12:45.091"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:12:46.136" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:12:46.136" starttime="20200530 21:12:46.134"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200530 21:12:46.138" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200530 21:12:46.139" starttime="20200530 21:12:46.137"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:46.141" starttime="20200530 21:12:46.140"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:46.145" starttime="20200530 21:12:46.144"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:46.145" starttime="20200530 21:12:46.142"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200530 21:12:47.148" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200530 21:12:47.148" starttime="20200530 21:12:46.146"></status>
</kw>
<msg timestamp="20200530 21:12:47.149" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200530 21:12:47.149" starttime="20200530 21:12:45.088"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:47.152" starttime="20200530 21:12:47.150"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:47.153" starttime="20200530 21:12:47.153"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:47.154" starttime="20200530 21:12:45.087"></status>
</kw>
<kw type="foritem" name="${i} = 18">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:47.157" starttime="20200530 21:12:47.156"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:12:47.180" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200530 21:12:47.191" level="INFO">Response Time to /redfish/v1/Olt: 0.000557 seconds.</msg>
<msg timestamp="20200530 21:12:47.192" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:12:47 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200530 21:12:47.192" starttime="20200530 21:12:47.158"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:12:47.194" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:12:47.194" starttime="20200530 21:12:47.193"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200530 21:12:47.195" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200530 21:12:47.195" starttime="20200530 21:12:47.194"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:47.196" starttime="20200530 21:12:47.195"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:47.198" starttime="20200530 21:12:47.197"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:47.198" starttime="20200530 21:12:47.196"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200530 21:12:48.199" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200530 21:12:48.200" starttime="20200530 21:12:47.199"></status>
</kw>
<msg timestamp="20200530 21:12:48.201" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200530 21:12:48.201" starttime="20200530 21:12:47.154"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:48.203" starttime="20200530 21:12:48.202"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:48.206" starttime="20200530 21:12:48.205"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:48.206" starttime="20200530 21:12:47.154"></status>
</kw>
<kw type="foritem" name="${i} = 19">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:48.209" starttime="20200530 21:12:48.208"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:12:48.230" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200530 21:12:48.242" level="INFO">Response Time to /redfish/v1/Olt: 0.000559 seconds.</msg>
<msg timestamp="20200530 21:12:48.243" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:12:49 GMT
connection Keep-Alive
content-type application/json
content-length 40


{"BalState":"up","OltOperateState":true}</msg>
<status status="PASS" endtime="20200530 21:12:48.243" starttime="20200530 21:12:48.210"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:12:48.244" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:12:48.244" starttime="20200530 21:12:48.243"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200530 21:12:48.245" level="INFO">${bal_opt_state} = True</msg>
<status status="PASS" endtime="20200530 21:12:48.245" starttime="20200530 21:12:48.244"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:48.246" starttime="20200530 21:12:48.246"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Up ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:48.248" starttime="20200530 21:12:48.247"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:48.248" starttime="20200530 21:12:48.247"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200530 21:12:49.249" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200530 21:12:49.250" starttime="20200530 21:12:48.248"></status>
</kw>
<msg timestamp="20200530 21:12:49.250" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20200530 21:12:49.251" starttime="20200530 21:12:48.207"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:49.254" starttime="20200530 21:12:49.251"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20200530 21:12:49.256" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20200530 21:12:49.257" starttime="20200530 21:12:49.255"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:49.257" starttime="20200530 21:12:48.206"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:49.257" starttime="20200530 21:12:28.180"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:49.258" starttime="20200530 21:12:49.258"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:49.259" starttime="20200530 21:12:25.482"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200530 21:12:54.261" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20200530 21:12:54.261" starttime="20200530 21:12:49.260"></status>
</kw>
<kw name="Test Port Present">
<tags>
<tag>Test pon_status present</tag>
</tags>
<doc>Test Pon port present function</doc>
<arguments>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:12:54.284" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200530 21:12:54.338" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.001608 seconds.</msg>
<msg timestamp="20200530 21:12:54.341" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:12:55 GMT
connection Keep-Alive
content-type application/json
content-length 2403


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200530 21:12:54.341" starttime="20200530 21:12:54.264"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:12:54.344" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:12:54.344" starttime="20200530 21:12:54.342"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200530 21:12:54.347" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200530 21:12:54.347" starttime="20200530 21:12:54.345"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200530 21:12:54.350" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200530 21:12:54.350" starttime="20200530 21:12:54.348"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:54.353" starttime="20200530 21:12:54.351"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:54.355" starttime="20200530 21:12:54.354"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${PORT_ENABLE}'</arg>
<arg>'Enabled'</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:54.358" starttime="20200530 21:12:54.357"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:54.358" starttime="20200530 21:12:54.262"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200530 21:12:59.360" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20200530 21:12:59.361" starttime="20200530 21:12:54.359"></status>
</kw>
<kw name="Enable Port">
<tags>
<tag>Enable Port</tag>
</tags>
<doc>Enable port function</doc>
<arguments>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Enable Port ${ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:59.365" starttime="20200530 21:12:59.363"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($ADM_UP)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200530 21:12:59.381" level="INFO">${payload} = {u'AdministrativeState': u'Up'}</msg>
<status status="PASS" endtime="20200530 21:12:59.382" starttime="20200530 21:12:59.367"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:12:59.399" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200530 21:12:59.629" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.00144 seconds.</msg>
<msg timestamp="20200530 21:12:59.631" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:00 GMT
connection Keep-Alive
content-type application/json
content-length 2401


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200530 21:12:59.631" starttime="20200530 21:12:59.382"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:12:59.634" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:12:59.634" starttime="20200530 21:12:59.632"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:12:59.657" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200530 21:12:59.674" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.00068 seconds.</msg>
<msg timestamp="20200530 21:12:59.675" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:00 GMT
connection Keep-Alive
content-type application/json
content-length 2401


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200530 21:12:59.675" starttime="20200530 21:12:59.635"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:12:59.677" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:12:59.677" starttime="20200530 21:12:59.676"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['AdministrativeState']}</arg>
</arguments>
<assign>
<var>${ADM_STAT}</var>
</assign>
<msg timestamp="20200530 21:12:59.678" level="INFO">${ADM_STAT} = Up</msg>
<status status="PASS" endtime="20200530 21:12:59.678" starttime="20200530 21:12:59.677"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${ADM_STAT}'</arg>
<arg>'Up'</arg>
</arguments>
<status status="PASS" endtime="20200530 21:12:59.679" starttime="20200530 21:12:59.679"></status>
</kw>
<status status="PASS" endtime="20200530 21:12:59.679" starttime="20200530 21:12:59.361"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200530 21:13:04.680" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20200530 21:13:04.681" starttime="20200530 21:12:59.680"></status>
</kw>
<kw name="Test NNI Port Enable">
<tags>
<tag>Verify_nni_enable</tag>
</tags>
<doc>Verify NNI port enable function</doc>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:04.704" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/</msg>
<msg timestamp="20200530 21:13:04.724" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/: 0.000957 seconds.</msg>
<msg timestamp="20200530 21:13:04.725" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:05 GMT
connection Keep-Alive
content-type application/json
content-length 1467


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPortCollection.EthernetSwitchPor...</msg>
<status status="PASS" endtime="20200530 21:13:04.725" starttime="20200530 21:13:04.683"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:13:04.727" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:13:04.727" starttime="20200530 21:13:04.726"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200530 21:13:04.729" level="INFO">Length is 20</msg>
<msg timestamp="20200530 21:13:04.729" level="INFO">${item_count} = 20</msg>
<status status="PASS" endtime="20200530 21:13:04.729" starttime="20200530 21:13:04.728"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### num ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:04.730" starttime="20200530 21:13:04.730"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PON_TYPE}' == 'GPON'</arg>
<arg>set variable</arg>
<arg>${65}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${17}</arg>
</arguments>
<assign>
<var>${NNI_PORT}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${17}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:04.733" starttime="20200530 21:13:04.733"></status>
</kw>
<msg timestamp="20200530 21:13:04.733" level="INFO">${NNI_PORT} = 17</msg>
<status status="PASS" endtime="20200530 21:13:04.734" starttime="20200530 21:13:04.731"></status>
</kw>
<kw name="Test Port Present">
<tags>
<tag>Test pon_status present</tag>
</tags>
<doc>Test Pon port present function</doc>
<arguments>
<arg>${NNI_PORT}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:04.746" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/17</msg>
<msg timestamp="20200530 21:13:04.759" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/17: 0.000391 seconds.</msg>
<msg timestamp="20200530 21:13:04.760" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:05 GMT
connection Keep-Alive
content-type application/json
content-length 2440


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200530 21:13:04.760" starttime="20200530 21:13:04.735"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:13:04.761" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:13:04.761" starttime="20200530 21:13:04.760"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200530 21:13:04.761" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200530 21:13:04.761" starttime="20200530 21:13:04.761"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200530 21:13:04.762" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200530 21:13:04.762" starttime="20200530 21:13:04.762"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:04.763" starttime="20200530 21:13:04.762"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:04.764" starttime="20200530 21:13:04.763"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${PORT_ENABLE}'</arg>
<arg>'Enabled'</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:04.765" starttime="20200530 21:13:04.764"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:04.765" starttime="20200530 21:13:04.734"></status>
</kw>
<kw name="Enable Port">
<tags>
<tag>Enable Port</tag>
</tags>
<doc>Enable port function</doc>
<arguments>
<arg>${NNI_PORT}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Enable Port ${ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:04.766" starttime="20200530 21:13:04.765"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($ADM_UP)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200530 21:13:04.770" level="INFO">${payload} = {u'AdministrativeState': u'Up'}</msg>
<status status="PASS" endtime="20200530 21:13:04.770" starttime="20200530 21:13:04.766"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:04.777" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/17</msg>
<msg timestamp="20200530 21:13:04.997" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/17: 0.001782 seconds.</msg>
<msg timestamp="20200530 21:13:04.999" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:05 GMT
connection Keep-Alive
content-type application/json
content-length 2440


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200530 21:13:05.000" starttime="20200530 21:13:04.770"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:13:05.002" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:13:05.002" starttime="20200530 21:13:05.001"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:05.027" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/17</msg>
<msg timestamp="20200530 21:13:05.042" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/17: 0.000866 seconds.</msg>
<msg timestamp="20200530 21:13:05.043" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:05 GMT
connection Keep-Alive
content-type application/json
content-length 2440


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200530 21:13:05.043" starttime="20200530 21:13:05.003"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:13:05.044" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:13:05.045" starttime="20200530 21:13:05.043"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['AdministrativeState']}</arg>
</arguments>
<assign>
<var>${ADM_STAT}</var>
</assign>
<msg timestamp="20200530 21:13:05.046" level="INFO">${ADM_STAT} = Up</msg>
<status status="PASS" endtime="20200530 21:13:05.046" starttime="20200530 21:13:05.045"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${ADM_STAT}'</arg>
<arg>'Up'</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:05.047" starttime="20200530 21:13:05.046"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:05.047" starttime="20200530 21:13:04.765"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:05.047" starttime="20200530 21:13:04.682"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:05.047" starttime="20200530 21:12:24.136"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200530 21:13:05.059" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200530 21:13:05.070" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000595 seconds.</msg>
<msg timestamp="20200530 21:13:05.071" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200530 21:13:05.071" starttime="20200530 21:13:05.048"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:05.071" starttime="20200530 21:13:05.048"></status>
</kw>
<doc>Test BAL Restful Status</doc>
<tags>
<tag>Test Bal Restful opertaion test</tag>
</tags>
<status status="PASS" endtime="20200530 21:13:05.071" critical="yes" starttime="20200530 21:12:24.058"></status>
</test>
<test id="s1-s1-t2" name="Verify Restful API for ONU Range Test">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200530 21:13:05.084" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200530 21:13:05.100" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000886 seconds.</msg>
<msg timestamp="20200530 21:13:05.101" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200530 21:13:05.101" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200530 21:13:05.101" starttime="20200530 21:13:05.076"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:05.101" starttime="20200530 21:13:05.075"></status>
</kw>
<kw name="Test ONU Range">
<tags>
<tag>ONU Range</tag>
</tags>
<doc>ONU Ranging Test</doc>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PON_TYPE}' == 'GPON'</arg>
<arg>set variable</arg>
<arg>${150}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${255}</arg>
</arguments>
<assign>
<var>${ONU_ID_RANGE}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${255}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:05.104" starttime="20200530 21:13:05.103"></status>
</kw>
<msg timestamp="20200530 21:13:05.104" level="INFO">${ONU_ID_RANGE} = 255</msg>
<status status="PASS" endtime="20200530 21:13:05.104" starttime="20200530 21:13:05.102"></status>
</kw>
<kw type="for" name="${id} IN RANGE [ 1 | ${ONU_ID_RANGE} | 50 ]">
<kw type="foritem" name="${id} = 1">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200530 21:13:12.106" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200530 21:13:12.106" starttime="20200530 21:13:05.105"></status>
</kw>
<kw name="Test Active ONU">
<tags>
<tag>Test Active ONU</tag>
</tags>
<doc>Test Active ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${SPECIFIC_ID}</arg>
<arg>${SPECIFIC_NUM}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onu_id": ${ONU_ID},</arg>
<arg>"vendor_id": "${VEN_ID}",</arg>
<arg>"vendor_specific":"${VEN_SPEC}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200530 21:13:12.111" level="INFO">${JSTRING} = { "onu_id": 1, "vendor_id": "ISKT", "vendor_specific":"71E83268" }</msg>
<status status="PASS" endtime="20200530 21:13:12.111" starttime="20200530 21:13:12.109"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### active onu ${JSTRING} ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:12.113" starttime="20200530 21:13:12.112"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200530 21:13:12.131" level="INFO">${payload} = {u'onu_id': 1, u'vendor_id': u'ISKT', u'vendor_specific': u'71E83268'}</msg>
<status status="PASS" endtime="20200530 21:13:12.131" starttime="20200530 21:13:12.115"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:12.146" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200530 21:13:12.160" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.00105 seconds.</msg>
<msg timestamp="20200530 21:13:12.161" level="INFO">${resp} = 201
date Sat, 30 May 2020 13:13:12 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:12.161" starttime="20200530 21:13:12.132"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200530 21:13:12.165" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:13:12.166" starttime="20200530 21:13:12.164"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:12.166" starttime="20200530 21:13:12.162"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6s</arg>
</arguments>
<msg timestamp="20200530 21:13:18.167" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20200530 21:13:18.168" starttime="20200530 21:13:12.166"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:18.192" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200530 21:13:18.206" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000761000000001 seconds.</msg>
<msg timestamp="20200530 21:13:18.207" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:18 GMT
connection Keep-Alive
content-type application/json
content-length 344


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200530 21:13:18.207" starttime="20200530 21:13:18.169"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### onu res ${resp} ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:18.209" starttime="20200530 21:13:18.208"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200530 21:13:18.211" level="INFO">Length is 0</msg>
<msg timestamp="20200530 21:13:18.211" level="INFO">${item_count} = 0</msg>
<status status="PASS" endtime="20200530 21:13:18.211" starttime="20200530 21:13:18.210"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Onu num ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:18.212" starttime="20200530 21:13:18.212"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200530 21:13:18.216" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200530 21:13:18.217" level="FAIL">0 != 1</msg>
<status status="FAIL" endtime="20200530 21:13:18.217" starttime="20200530 21:13:18.215"></status>
</kw>
<status status="FAIL" endtime="20200530 21:13:18.217" starttime="20200530 21:13:18.213"></status>
</kw>
<status status="FAIL" endtime="20200530 21:13:18.217" starttime="20200530 21:13:12.107"></status>
</kw>
<status status="FAIL" endtime="20200530 21:13:18.217" starttime="20200530 21:13:05.104"></status>
</kw>
<status status="FAIL" endtime="20200530 21:13:18.217" starttime="20200530 21:13:05.104"></status>
</kw>
<status status="FAIL" endtime="20200530 21:13:18.217" starttime="20200530 21:13:05.101"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200530 21:13:18.233" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200530 21:13:18.244" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.001173 seconds.</msg>
<msg timestamp="20200530 21:13:18.246" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200530 21:13:18.246" starttime="20200530 21:13:18.219"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:18.246" starttime="20200530 21:13:18.218"></status>
</kw>
<doc>Test ONU Range</doc>
<tags>
<tag>Test ONU Rnage test</tag>
</tags>
<status status="FAIL" endtime="20200530 21:13:18.247" critical="yes" starttime="20200530 21:13:05.073">0 != 1</status>
</test>
<test id="s1-s1-t3" name="Verify Restful API for flow add">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200530 21:13:18.261" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200530 21:13:18.276" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000643 seconds.</msg>
<msg timestamp="20200530 21:13:18.276" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200530 21:13:18.277" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200530 21:13:18.277" starttime="20200530 21:13:18.252"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:18.277" starttime="20200530 21:13:18.251"></status>
</kw>
<kw name="Test US DS Flow Add">
<tags>
<tag>US DS Flow Add/Remove</tag>
</tags>
<doc>Flow Add/Remove</doc>
<kw type="for" name="${flow_id} IN RANGE [ 0 | 2047 | 500 ]">
<kw type="foritem" name="${flow_id} = 0">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200530 21:13:19.279" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200530 21:13:19.280" starttime="20200530 21:13:18.278"></status>
</kw>
<kw name="Test Flow Add">
<tags>
<tag>UP/DOWN stream flow add</tag>
</tags>
<doc>Test Flow Add</doc>
<arguments>
<arg>1</arg>
<arg>${flow_id}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PON_ID} - ${1}</arg>
</arguments>
<assign>
<var>${PON_ID}</var>
</assign>
<msg timestamp="20200530 21:13:19.284" level="INFO">${PON_ID} = 0</msg>
<status status="PASS" endtime="20200530 21:13:19.284" starttime="20200530 21:13:19.283"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024,</arg>
<arg>"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":"BCMOLT_ACTION_CMD_ID_ADD_OUTER_TAG",</arg>
<arg>"ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,"EtherType":0,"IpProto":0,"SrcPort":0,</arg>
<arg>"DstPort":0},"ClassVal":[{"OVid":20,"IVid":0,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200530 21:13:19.287" level="INFO">${JSTRING} = { "onuId":1,"FlowId":0,"PortId":0,"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024, "Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":...</msg>
<status status="PASS" endtime="20200530 21:13:19.287" starttime="20200530 21:13:19.285"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200530 21:13:19.301" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'single_tag', u'GemportId': 1024, u'FlowId': 0, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 20, u'IPbits': 0, u'IVid': 0, u'O...</msg>
<status status="PASS" endtime="20200530 21:13:19.301" starttime="20200530 21:13:19.287"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:19.316" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200530 21:13:19.337" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000463 seconds.</msg>
<msg timestamp="20200530 21:13:19.337" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:20 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:19.337" starttime="20200530 21:13:19.302"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:13:19.339" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:13:19.339" starttime="20200530 21:13:19.338"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:19.339" starttime="20200530 21:13:19.338"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"downstream","PktTagType":"double_tag",</arg>
<arg>"GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOLT_ACTION_ID_O_VID",</arg>
<arg>"ActionCmd":"BCMOLT_ACTION_CMD_ID_REMOVE_OUTER_TAG","ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,</arg>
<arg>"EtherType":0,"IpProto":0,"SrcPort":0,"DstPort":0},</arg>
<arg>"ClassVal":[{"OVid":10,"IVid":20,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0</arg>
<arg>}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200530 21:13:19.340" level="INFO">${JSTRING} = { "onuId":1,"FlowId":0,"PortId":0,"NniId":0,"FlowType":"downstream","PktTagType":"double_tag", "GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOL...</msg>
<status status="PASS" endtime="20200530 21:13:19.340" starttime="20200530 21:13:19.339"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200530 21:13:19.345" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'double_tag', u'GemportId': 1024, u'FlowId': 0, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 10, u'IPbits': 0, u'IVid': 20, u'...</msg>
<status status="PASS" endtime="20200530 21:13:19.345" starttime="20200530 21:13:19.340"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:19.353" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200530 21:13:19.368" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.001095 seconds.</msg>
<msg timestamp="20200530 21:13:19.370" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:20 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:19.370" starttime="20200530 21:13:19.345"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:13:19.374" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:13:19.374" starttime="20200530 21:13:19.373"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:19.375" starttime="20200530 21:13:19.371"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:19.375" starttime="20200530 21:13:19.280"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200530 21:13:20.385" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200530 21:13:20.385" starttime="20200530 21:13:19.376"></status>
</kw>
<kw name="Test Flow Del">
<tags>
<tag>UP/DOWN stream flow del</tag>
</tags>
<doc>Test Flow Del</doc>
<arguments>
<arg>${flow_id}</arg>
</arguments>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_upstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:20.411" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/0_upstream</msg>
<msg timestamp="20200530 21:13:20.426" level="INFO">Response Time to /redfish/v1/Olt/Flow/0_upstream: 0.000982 seconds.</msg>
<msg timestamp="20200530 21:13:20.427" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:21 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:20.427" starttime="20200530 21:13:20.388"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:13:20.429" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:13:20.429" starttime="20200530 21:13:20.428"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_downstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:20.452" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/0_downstream</msg>
<msg timestamp="20200530 21:13:20.475" level="INFO">Response Time to /redfish/v1/Olt/Flow/0_downstream: 0.000614 seconds.</msg>
<msg timestamp="20200530 21:13:20.476" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:21 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:20.476" starttime="20200530 21:13:20.430"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:13:20.477" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:13:20.477" starttime="20200530 21:13:20.476"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:20.477" starttime="20200530 21:13:20.386"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:20.477" starttime="20200530 21:13:18.278"></status>
</kw>
<kw type="foritem" name="${flow_id} = 500">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200530 21:13:21.479" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200530 21:13:21.479" starttime="20200530 21:13:20.478"></status>
</kw>
<kw name="Test Flow Add">
<tags>
<tag>UP/DOWN stream flow add</tag>
</tags>
<doc>Test Flow Add</doc>
<arguments>
<arg>1</arg>
<arg>${flow_id}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PON_ID} - ${1}</arg>
</arguments>
<assign>
<var>${PON_ID}</var>
</assign>
<msg timestamp="20200530 21:13:21.484" level="INFO">${PON_ID} = 0</msg>
<status status="PASS" endtime="20200530 21:13:21.484" starttime="20200530 21:13:21.482"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024,</arg>
<arg>"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":"BCMOLT_ACTION_CMD_ID_ADD_OUTER_TAG",</arg>
<arg>"ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,"EtherType":0,"IpProto":0,"SrcPort":0,</arg>
<arg>"DstPort":0},"ClassVal":[{"OVid":20,"IVid":0,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200530 21:13:21.486" level="INFO">${JSTRING} = { "onuId":1,"FlowId":500,"PortId":0,"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024, "Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd...</msg>
<status status="PASS" endtime="20200530 21:13:21.486" starttime="20200530 21:13:21.485"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200530 21:13:21.502" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'single_tag', u'GemportId': 1024, u'FlowId': 500, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 20, u'IPbits': 0, u'IVid': 0, u...</msg>
<status status="PASS" endtime="20200530 21:13:21.502" starttime="20200530 21:13:21.487"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:21.518" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200530 21:13:21.536" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000398000000001 seconds.</msg>
<msg timestamp="20200530 21:13:21.536" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:22 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:21.536" starttime="20200530 21:13:21.503"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:13:21.538" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:13:21.538" starttime="20200530 21:13:21.537"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:21.538" starttime="20200530 21:13:21.537"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"downstream","PktTagType":"double_tag",</arg>
<arg>"GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOLT_ACTION_ID_O_VID",</arg>
<arg>"ActionCmd":"BCMOLT_ACTION_CMD_ID_REMOVE_OUTER_TAG","ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,</arg>
<arg>"EtherType":0,"IpProto":0,"SrcPort":0,"DstPort":0},</arg>
<arg>"ClassVal":[{"OVid":10,"IVid":20,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0</arg>
<arg>}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200530 21:13:21.539" level="INFO">${JSTRING} = { "onuId":1,"FlowId":500,"PortId":0,"NniId":0,"FlowType":"downstream","PktTagType":"double_tag", "GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCM...</msg>
<status status="PASS" endtime="20200530 21:13:21.539" starttime="20200530 21:13:21.538"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200530 21:13:21.545" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'double_tag', u'GemportId': 1024, u'FlowId': 500, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 10, u'IPbits': 0, u'IVid': 20, ...</msg>
<status status="PASS" endtime="20200530 21:13:21.545" starttime="20200530 21:13:21.539"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:21.553" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200530 21:13:21.567" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000357999999999 seconds.</msg>
<msg timestamp="20200530 21:13:21.567" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:22 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:21.568" starttime="20200530 21:13:21.546"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:13:21.569" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:13:21.569" starttime="20200530 21:13:21.569"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:21.569" starttime="20200530 21:13:21.568"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:21.569" starttime="20200530 21:13:21.480"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200530 21:13:22.579" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200530 21:13:22.580" starttime="20200530 21:13:21.569"></status>
</kw>
<kw name="Test Flow Del">
<tags>
<tag>UP/DOWN stream flow del</tag>
</tags>
<doc>Test Flow Del</doc>
<arguments>
<arg>${flow_id}</arg>
</arguments>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_upstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:22.603" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/500_upstream</msg>
<msg timestamp="20200530 21:13:22.617" level="INFO">Response Time to /redfish/v1/Olt/Flow/500_upstream: 0.000719 seconds.</msg>
<msg timestamp="20200530 21:13:22.618" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:23 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:22.618" starttime="20200530 21:13:22.582"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:13:22.619" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:13:22.620" starttime="20200530 21:13:22.618"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_downstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:22.632" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/500_downstream</msg>
<msg timestamp="20200530 21:13:22.656" level="INFO">Response Time to /redfish/v1/Olt/Flow/500_downstream: 0.000402 seconds.</msg>
<msg timestamp="20200530 21:13:22.657" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:23 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:22.657" starttime="20200530 21:13:22.620"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:13:22.657" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:13:22.658" starttime="20200530 21:13:22.657"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:22.658" starttime="20200530 21:13:22.580"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:22.658" starttime="20200530 21:13:20.477"></status>
</kw>
<kw type="foritem" name="${flow_id} = 1000">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200530 21:13:23.659" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200530 21:13:23.660" starttime="20200530 21:13:22.658"></status>
</kw>
<kw name="Test Flow Add">
<tags>
<tag>UP/DOWN stream flow add</tag>
</tags>
<doc>Test Flow Add</doc>
<arguments>
<arg>1</arg>
<arg>${flow_id}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PON_ID} - ${1}</arg>
</arguments>
<assign>
<var>${PON_ID}</var>
</assign>
<msg timestamp="20200530 21:13:23.664" level="INFO">${PON_ID} = 0</msg>
<status status="PASS" endtime="20200530 21:13:23.664" starttime="20200530 21:13:23.662"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024,</arg>
<arg>"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":"BCMOLT_ACTION_CMD_ID_ADD_OUTER_TAG",</arg>
<arg>"ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,"EtherType":0,"IpProto":0,"SrcPort":0,</arg>
<arg>"DstPort":0},"ClassVal":[{"OVid":20,"IVid":0,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200530 21:13:23.666" level="INFO">${JSTRING} = { "onuId":1,"FlowId":1000,"PortId":0,"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024, "Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCm...</msg>
<status status="PASS" endtime="20200530 21:13:23.666" starttime="20200530 21:13:23.664"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200530 21:13:23.680" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'single_tag', u'GemportId': 1024, u'FlowId': 1000, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 20, u'IPbits': 0, u'IVid': 0, ...</msg>
<status status="PASS" endtime="20200530 21:13:23.680" starttime="20200530 21:13:23.667"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:23.696" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200530 21:13:23.730" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000439999999999 seconds.</msg>
<msg timestamp="20200530 21:13:23.731" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:24 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:23.731" starttime="20200530 21:13:23.681"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:13:23.732" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:13:23.733" starttime="20200530 21:13:23.732"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:23.733" starttime="20200530 21:13:23.731"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"downstream","PktTagType":"double_tag",</arg>
<arg>"GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOLT_ACTION_ID_O_VID",</arg>
<arg>"ActionCmd":"BCMOLT_ACTION_CMD_ID_REMOVE_OUTER_TAG","ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,</arg>
<arg>"EtherType":0,"IpProto":0,"SrcPort":0,"DstPort":0},</arg>
<arg>"ClassVal":[{"OVid":10,"IVid":20,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0</arg>
<arg>}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200530 21:13:23.733" level="INFO">${JSTRING} = { "onuId":1,"FlowId":1000,"PortId":0,"NniId":0,"FlowType":"downstream","PktTagType":"double_tag", "GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BC...</msg>
<status status="PASS" endtime="20200530 21:13:23.733" starttime="20200530 21:13:23.733"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200530 21:13:23.738" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'double_tag', u'GemportId': 1024, u'FlowId': 1000, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 10, u'IPbits': 0, u'IVid': 20,...</msg>
<status status="PASS" endtime="20200530 21:13:23.738" starttime="20200530 21:13:23.734"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:23.746" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200530 21:13:23.758" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000388999999999 seconds.</msg>
<msg timestamp="20200530 21:13:23.759" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:24 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:23.759" starttime="20200530 21:13:23.739"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:13:23.760" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:13:23.761" starttime="20200530 21:13:23.760"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:23.761" starttime="20200530 21:13:23.759"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:23.761" starttime="20200530 21:13:23.660"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200530 21:13:24.762" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200530 21:13:24.762" starttime="20200530 21:13:23.761"></status>
</kw>
<kw name="Test Flow Del">
<tags>
<tag>UP/DOWN stream flow del</tag>
</tags>
<doc>Test Flow Del</doc>
<arguments>
<arg>${flow_id}</arg>
</arguments>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_upstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:24.787" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/1000_upstream</msg>
<msg timestamp="20200530 21:13:24.801" level="INFO">Response Time to /redfish/v1/Olt/Flow/1000_upstream: 0.000996000000001 seconds.</msg>
<msg timestamp="20200530 21:13:24.803" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:25 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:24.803" starttime="20200530 21:13:24.764"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:13:24.805" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:13:24.808" starttime="20200530 21:13:24.804"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_downstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:24.840" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/1000_downstream</msg>
<msg timestamp="20200530 21:13:24.872" level="INFO">Response Time to /redfish/v1/Olt/Flow/1000_downstream: 0.000901 seconds.</msg>
<msg timestamp="20200530 21:13:24.873" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:25 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:24.873" starttime="20200530 21:13:24.809"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:13:24.875" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:13:24.875" starttime="20200530 21:13:24.874"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:24.876" starttime="20200530 21:13:24.763"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:24.876" starttime="20200530 21:13:22.658"></status>
</kw>
<kw type="foritem" name="${flow_id} = 1500">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200530 21:13:25.879" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200530 21:13:25.880" starttime="20200530 21:13:24.877"></status>
</kw>
<kw name="Test Flow Add">
<tags>
<tag>UP/DOWN stream flow add</tag>
</tags>
<doc>Test Flow Add</doc>
<arguments>
<arg>1</arg>
<arg>${flow_id}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PON_ID} - ${1}</arg>
</arguments>
<assign>
<var>${PON_ID}</var>
</assign>
<msg timestamp="20200530 21:13:25.884" level="INFO">${PON_ID} = 0</msg>
<status status="PASS" endtime="20200530 21:13:25.884" starttime="20200530 21:13:25.883"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024,</arg>
<arg>"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":"BCMOLT_ACTION_CMD_ID_ADD_OUTER_TAG",</arg>
<arg>"ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,"EtherType":0,"IpProto":0,"SrcPort":0,</arg>
<arg>"DstPort":0},"ClassVal":[{"OVid":20,"IVid":0,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200530 21:13:25.886" level="INFO">${JSTRING} = { "onuId":1,"FlowId":1500,"PortId":0,"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024, "Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCm...</msg>
<status status="PASS" endtime="20200530 21:13:25.886" starttime="20200530 21:13:25.885"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200530 21:13:25.901" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'single_tag', u'GemportId': 1024, u'FlowId': 1500, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 20, u'IPbits': 0, u'IVid': 0, ...</msg>
<status status="PASS" endtime="20200530 21:13:25.901" starttime="20200530 21:13:25.887"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:25.916" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200530 21:13:25.935" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000438 seconds.</msg>
<msg timestamp="20200530 21:13:25.935" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:26 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:25.935" starttime="20200530 21:13:25.902"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:13:25.937" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:13:25.937" starttime="20200530 21:13:25.936"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:25.937" starttime="20200530 21:13:25.936"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"downstream","PktTagType":"double_tag",</arg>
<arg>"GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOLT_ACTION_ID_O_VID",</arg>
<arg>"ActionCmd":"BCMOLT_ACTION_CMD_ID_REMOVE_OUTER_TAG","ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,</arg>
<arg>"EtherType":0,"IpProto":0,"SrcPort":0,"DstPort":0},</arg>
<arg>"ClassVal":[{"OVid":10,"IVid":20,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0</arg>
<arg>}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200530 21:13:25.937" level="INFO">${JSTRING} = { "onuId":1,"FlowId":1500,"PortId":0,"NniId":0,"FlowType":"downstream","PktTagType":"double_tag", "GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BC...</msg>
<status status="PASS" endtime="20200530 21:13:25.938" starttime="20200530 21:13:25.937"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200530 21:13:25.942" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'double_tag', u'GemportId': 1024, u'FlowId': 1500, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 10, u'IPbits': 0, u'IVid': 20,...</msg>
<status status="PASS" endtime="20200530 21:13:25.942" starttime="20200530 21:13:25.938"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:25.950" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200530 21:13:25.963" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000393000000001 seconds.</msg>
<msg timestamp="20200530 21:13:25.965" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:26 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:25.965" starttime="20200530 21:13:25.943"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:13:25.967" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:13:25.967" starttime="20200530 21:13:25.966"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:25.967" starttime="20200530 21:13:25.965"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:25.967" starttime="20200530 21:13:25.880"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200530 21:13:26.968" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200530 21:13:26.969" starttime="20200530 21:13:25.968"></status>
</kw>
<kw name="Test Flow Del">
<tags>
<tag>UP/DOWN stream flow del</tag>
</tags>
<doc>Test Flow Del</doc>
<arguments>
<arg>${flow_id}</arg>
</arguments>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_upstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:26.995" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/1500_upstream</msg>
<msg timestamp="20200530 21:13:27.009" level="INFO">Response Time to /redfish/v1/Olt/Flow/1500_upstream: 0.000956 seconds.</msg>
<msg timestamp="20200530 21:13:27.010" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:27 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:27.010" starttime="20200530 21:13:26.972"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:13:27.012" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:13:27.012" starttime="20200530 21:13:27.011"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_downstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:27.027" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/1500_downstream</msg>
<msg timestamp="20200530 21:13:27.056" level="INFO">Response Time to /redfish/v1/Olt/Flow/1500_downstream: 0.000836000000001 seconds.</msg>
<msg timestamp="20200530 21:13:27.057" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:27 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:27.057" starttime="20200530 21:13:27.012"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:13:27.059" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:13:27.059" starttime="20200530 21:13:27.058"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:27.059" starttime="20200530 21:13:26.970"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:27.059" starttime="20200530 21:13:24.876"></status>
</kw>
<kw type="foritem" name="${flow_id} = 2000">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200530 21:13:28.061" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200530 21:13:28.062" starttime="20200530 21:13:27.060"></status>
</kw>
<kw name="Test Flow Add">
<tags>
<tag>UP/DOWN stream flow add</tag>
</tags>
<doc>Test Flow Add</doc>
<arguments>
<arg>1</arg>
<arg>${flow_id}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PON_ID} - ${1}</arg>
</arguments>
<assign>
<var>${PON_ID}</var>
</assign>
<msg timestamp="20200530 21:13:28.066" level="INFO">${PON_ID} = 0</msg>
<status status="PASS" endtime="20200530 21:13:28.066" starttime="20200530 21:13:28.065"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024,</arg>
<arg>"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":"BCMOLT_ACTION_CMD_ID_ADD_OUTER_TAG",</arg>
<arg>"ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,"EtherType":0,"IpProto":0,"SrcPort":0,</arg>
<arg>"DstPort":0},"ClassVal":[{"OVid":20,"IVid":0,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200530 21:13:28.068" level="INFO">${JSTRING} = { "onuId":1,"FlowId":2000,"PortId":0,"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024, "Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCm...</msg>
<status status="PASS" endtime="20200530 21:13:28.068" starttime="20200530 21:13:28.067"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200530 21:13:28.084" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'single_tag', u'GemportId': 1024, u'FlowId': 2000, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 20, u'IPbits': 0, u'IVid': 0, ...</msg>
<status status="PASS" endtime="20200530 21:13:28.084" starttime="20200530 21:13:28.070"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:28.101" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200530 21:13:28.119" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000382 seconds.</msg>
<msg timestamp="20200530 21:13:28.120" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:28 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:28.120" starttime="20200530 21:13:28.084"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:13:28.121" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:13:28.121" starttime="20200530 21:13:28.121"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:28.121" starttime="20200530 21:13:28.120"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"downstream","PktTagType":"double_tag",</arg>
<arg>"GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOLT_ACTION_ID_O_VID",</arg>
<arg>"ActionCmd":"BCMOLT_ACTION_CMD_ID_REMOVE_OUTER_TAG","ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,</arg>
<arg>"EtherType":0,"IpProto":0,"SrcPort":0,"DstPort":0},</arg>
<arg>"ClassVal":[{"OVid":10,"IVid":20,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0</arg>
<arg>}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200530 21:13:28.122" level="INFO">${JSTRING} = { "onuId":1,"FlowId":2000,"PortId":0,"NniId":0,"FlowType":"downstream","PktTagType":"double_tag", "GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BC...</msg>
<status status="PASS" endtime="20200530 21:13:28.122" starttime="20200530 21:13:28.122"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200530 21:13:28.127" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'double_tag', u'GemportId': 1024, u'FlowId': 2000, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 10, u'IPbits': 0, u'IVid': 20,...</msg>
<status status="PASS" endtime="20200530 21:13:28.127" starttime="20200530 21:13:28.122"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:28.135" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200530 21:13:28.150" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000422 seconds.</msg>
<msg timestamp="20200530 21:13:28.151" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:28 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:28.151" starttime="20200530 21:13:28.127"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:13:28.153" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:13:28.153" starttime="20200530 21:13:28.152"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:28.153" starttime="20200530 21:13:28.151"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:28.153" starttime="20200530 21:13:28.062"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200530 21:13:29.154" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200530 21:13:29.154" starttime="20200530 21:13:28.153"></status>
</kw>
<kw name="Test Flow Del">
<tags>
<tag>UP/DOWN stream flow del</tag>
</tags>
<doc>Test Flow Del</doc>
<arguments>
<arg>${flow_id}</arg>
</arguments>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_upstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:29.181" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/2000_upstream</msg>
<msg timestamp="20200530 21:13:29.195" level="INFO">Response Time to /redfish/v1/Olt/Flow/2000_upstream: 0.000722000000001 seconds.</msg>
<msg timestamp="20200530 21:13:29.196" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:29 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:29.196" starttime="20200530 21:13:29.157"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:13:29.197" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:13:29.197" starttime="20200530 21:13:29.196"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_downstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:29.224" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/2000_downstream</msg>
<msg timestamp="20200530 21:13:29.251" level="INFO">Response Time to /redfish/v1/Olt/Flow/2000_downstream: 0.001295 seconds.</msg>
<msg timestamp="20200530 21:13:29.252" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:30 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:29.252" starttime="20200530 21:13:29.198"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:13:29.255" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:13:29.255" starttime="20200530 21:13:29.253"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:29.256" starttime="20200530 21:13:29.155"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:29.256" starttime="20200530 21:13:27.060"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:29.256" starttime="20200530 21:13:18.277"></status>
</kw>
<kw name="Test Flow Add">
<tags>
<tag>UP/DOWN stream flow add</tag>
</tags>
<doc>Test Flow Add</doc>
<arguments>
<arg>1</arg>
<arg>2048</arg>
<arg>${PON_PORT_ID}</arg>
<arg>NOTONUID_IN_RANGE</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PON_ID} - ${1}</arg>
</arguments>
<assign>
<var>${PON_ID}</var>
</assign>
<msg timestamp="20200530 21:13:29.259" level="INFO">${PON_ID} = 0</msg>
<status status="PASS" endtime="20200530 21:13:29.260" starttime="20200530 21:13:29.258"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024,</arg>
<arg>"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":"BCMOLT_ACTION_CMD_ID_ADD_OUTER_TAG",</arg>
<arg>"ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,"EtherType":0,"IpProto":0,"SrcPort":0,</arg>
<arg>"DstPort":0},"ClassVal":[{"OVid":20,"IVid":0,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200530 21:13:29.262" level="INFO">${JSTRING} = { "onuId":1,"FlowId":2048,"PortId":0,"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024, "Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCm...</msg>
<status status="PASS" endtime="20200530 21:13:29.262" starttime="20200530 21:13:29.260"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200530 21:13:29.274" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'single_tag', u'GemportId': 1024, u'FlowId': 2048, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 20, u'IPbits': 0, u'IVid': 0, ...</msg>
<status status="PASS" endtime="20200530 21:13:29.274" starttime="20200530 21:13:29.263"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:29.285" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200530 21:13:29.295" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000351 seconds.</msg>
<msg timestamp="20200530 21:13:29.295" level="INFO">${resp} = 500
date Sat, 30 May 2020 13:13:30 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:29.295" starttime="20200530 21:13:29.275"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:13:29.297" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:13:29.297" starttime="20200530 21:13:29.297"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:29.297" starttime="20200530 21:13:29.296"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"downstream","PktTagType":"double_tag",</arg>
<arg>"GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOLT_ACTION_ID_O_VID",</arg>
<arg>"ActionCmd":"BCMOLT_ACTION_CMD_ID_REMOVE_OUTER_TAG","ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,</arg>
<arg>"EtherType":0,"IpProto":0,"SrcPort":0,"DstPort":0},</arg>
<arg>"ClassVal":[{"OVid":10,"IVid":20,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0</arg>
<arg>}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200530 21:13:29.298" level="INFO">${JSTRING} = { "onuId":1,"FlowId":2048,"PortId":0,"NniId":0,"FlowType":"downstream","PktTagType":"double_tag", "GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BC...</msg>
<status status="PASS" endtime="20200530 21:13:29.298" starttime="20200530 21:13:29.297"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200530 21:13:29.301" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'double_tag', u'GemportId': 1024, u'FlowId': 2048, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 10, u'IPbits': 0, u'IVid': 20,...</msg>
<status status="PASS" endtime="20200530 21:13:29.301" starttime="20200530 21:13:29.298"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:29.328" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200530 21:13:29.338" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000373000000001 seconds.</msg>
<msg timestamp="20200530 21:13:29.339" level="INFO">${resp} = 500
date Sat, 30 May 2020 13:13:30 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:29.339" starttime="20200530 21:13:29.302"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:13:29.340" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:13:29.341" starttime="20200530 21:13:29.340"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:29.341" starttime="20200530 21:13:29.339"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:29.341" starttime="20200530 21:13:29.257"></status>
</kw>
<kw name="Test Flow Add">
<tags>
<tag>UP/DOWN stream flow add</tag>
</tags>
<doc>Test Flow Add</doc>
<arguments>
<arg>1</arg>
<arg>16</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PON_ID} - ${1}</arg>
</arguments>
<assign>
<var>${PON_ID}</var>
</assign>
<msg timestamp="20200530 21:13:29.342" level="INFO">${PON_ID} = 0</msg>
<status status="PASS" endtime="20200530 21:13:29.342" starttime="20200530 21:13:29.341"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024,</arg>
<arg>"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":"BCMOLT_ACTION_CMD_ID_ADD_OUTER_TAG",</arg>
<arg>"ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,"EtherType":0,"IpProto":0,"SrcPort":0,</arg>
<arg>"DstPort":0},"ClassVal":[{"OVid":20,"IVid":0,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200530 21:13:29.342" level="INFO">${JSTRING} = { "onuId":1,"FlowId":16,"PortId":0,"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024, "Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd"...</msg>
<status status="PASS" endtime="20200530 21:13:29.342" starttime="20200530 21:13:29.342"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200530 21:13:29.347" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'single_tag', u'GemportId': 1024, u'FlowId': 16, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 20, u'IPbits': 0, u'IVid': 0, u'...</msg>
<status status="PASS" endtime="20200530 21:13:29.347" starttime="20200530 21:13:29.343"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:29.354" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200530 21:13:29.372" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000399 seconds.</msg>
<msg timestamp="20200530 21:13:29.372" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:30 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:29.373" starttime="20200530 21:13:29.347"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:13:29.374" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:13:29.374" starttime="20200530 21:13:29.374"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:29.374" starttime="20200530 21:13:29.373"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"downstream","PktTagType":"double_tag",</arg>
<arg>"GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOLT_ACTION_ID_O_VID",</arg>
<arg>"ActionCmd":"BCMOLT_ACTION_CMD_ID_REMOVE_OUTER_TAG","ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,</arg>
<arg>"EtherType":0,"IpProto":0,"SrcPort":0,"DstPort":0},</arg>
<arg>"ClassVal":[{"OVid":10,"IVid":20,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0</arg>
<arg>}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200530 21:13:29.375" level="INFO">${JSTRING} = { "onuId":1,"FlowId":16,"PortId":0,"NniId":0,"FlowType":"downstream","PktTagType":"double_tag", "GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMO...</msg>
<status status="PASS" endtime="20200530 21:13:29.375" starttime="20200530 21:13:29.374"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200530 21:13:29.380" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'double_tag', u'GemportId': 1024, u'FlowId': 16, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 10, u'IPbits': 0, u'IVid': 20, u...</msg>
<status status="PASS" endtime="20200530 21:13:29.380" starttime="20200530 21:13:29.375"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:29.387" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200530 21:13:29.402" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000973 seconds.</msg>
<msg timestamp="20200530 21:13:29.403" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:30 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:29.403" starttime="20200530 21:13:29.380"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:13:29.407" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:13:29.407" starttime="20200530 21:13:29.406"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:29.407" starttime="20200530 21:13:29.404"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:29.408" starttime="20200530 21:13:29.341"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:29.408" starttime="20200530 21:13:18.277"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200530 21:13:29.441" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200530 21:13:29.452" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000675 seconds.</msg>
<msg timestamp="20200530 21:13:29.454" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200530 21:13:29.454" starttime="20200530 21:13:29.410"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:29.454" starttime="20200530 21:13:29.409"></status>
</kw>
<doc>Test flow add</doc>
<tags>
<tag>Test Flow add</tag>
</tags>
<status status="PASS" endtime="20200530 21:13:29.454" critical="yes" starttime="20200530 21:13:18.249"></status>
</test>
<test id="s1-s1-t4" name="Verify Restful API for omci send">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200530 21:13:29.467" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200530 21:13:29.483" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000765 seconds.</msg>
<msg timestamp="20200530 21:13:29.484" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200530 21:13:29.484" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200530 21:13:29.484" starttime="20200530 21:13:29.458"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:29.484" starttime="20200530 21:13:29.457"></status>
</kw>
<kw name="Test omci send">
<tags>
<tag>omci send</tag>
</tags>
<doc>Send omci raw data</doc>
<kw name="Test Send Omci">
<tags>
<tag>Send Omci function</tag>
</tags>
<doc>Send Omci function</doc>
<arguments>
<arg>1</arg>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OMCI_RAW)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload_}</var>
</assign>
<msg timestamp="20200530 21:13:29.491" level="INFO">${payload_} = {u'raw_data': [{u'Omci': u'00B34F0A00020000000000000000000000000000000000000000000000000000000000000000000000000028'}, {u'Omci': u'00B44F0A0002000000000000000000000000000000000000000000000000000000000...</msg>
<status status="PASS" endtime="20200530 21:13:29.491" starttime="20200530 21:13:29.486"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${payload_["raw_data"]</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200530 21:13:29.491" level="INFO">Length is 22</msg>
<msg timestamp="20200530 21:13:29.491" level="INFO">${length} = 22</msg>
<status status="PASS" endtime="20200530 21:13:29.491" starttime="20200530 21:13:29.491"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>====================length ${length} ================</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:29.492" starttime="20200530 21:13:29.492"></status>
</kw>
<kw type="for" name="${i} IN RANGE [ 0 | 171 ]">
<kw type="foritem" name="${i} = 0">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:29.493" starttime="20200530 21:13:29.493"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:29.797" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:29.798" starttime="20200530 21:13:29.494"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:29.824" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:29.836" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000679 seconds.</msg>
<msg timestamp="20200530 21:13:29.837" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:30 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:29.838" starttime="20200530 21:13:29.800"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:29.838" starttime="20200530 21:13:29.492"></status>
</kw>
<kw type="foritem" name="${i} = 1">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:29.839" starttime="20200530 21:13:29.838"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:30.149" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:30.150" starttime="20200530 21:13:29.840"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:30.175" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:30.188" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000782 seconds.</msg>
<msg timestamp="20200530 21:13:30.188" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:30 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:30.189" starttime="20200530 21:13:30.151"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:30.189" starttime="20200530 21:13:29.838"></status>
</kw>
<kw type="foritem" name="${i} = 2">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:30.191" starttime="20200530 21:13:30.189"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:30.499" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:30.500" starttime="20200530 21:13:30.192"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:30.526" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:30.539" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000686 seconds.</msg>
<msg timestamp="20200530 21:13:30.540" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:31 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:30.540" starttime="20200530 21:13:30.500"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:30.540" starttime="20200530 21:13:30.189"></status>
</kw>
<kw type="foritem" name="${i} = 3">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:30.542" starttime="20200530 21:13:30.541"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:30.845" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:30.845" starttime="20200530 21:13:30.544"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:30.871" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:30.883" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000732999999999 seconds.</msg>
<msg timestamp="20200530 21:13:30.884" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:31 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:30.884" starttime="20200530 21:13:30.846"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:30.884" starttime="20200530 21:13:30.540"></status>
</kw>
<kw type="foritem" name="${i} = 4">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:30.886" starttime="20200530 21:13:30.885"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:31.188" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:31.189" starttime="20200530 21:13:30.887"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:31.215" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:31.228" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000691 seconds.</msg>
<msg timestamp="20200530 21:13:31.228" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:31 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:31.229" starttime="20200530 21:13:31.190"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:31.229" starttime="20200530 21:13:30.885"></status>
</kw>
<kw type="foritem" name="${i} = 5">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:31.231" starttime="20200530 21:13:31.230"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:31.532" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:31.533" starttime="20200530 21:13:31.231"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:31.564" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:31.576" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000526 seconds.</msg>
<msg timestamp="20200530 21:13:31.577" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:32 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:31.577" starttime="20200530 21:13:31.534"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:31.577" starttime="20200530 21:13:31.229"></status>
</kw>
<kw type="foritem" name="${i} = 6">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:31.579" starttime="20200530 21:13:31.578"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:31.880" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:31.881" starttime="20200530 21:13:31.579"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:31.905" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:31.917" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000693 seconds.</msg>
<msg timestamp="20200530 21:13:31.918" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:32 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:31.918" starttime="20200530 21:13:31.881"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:31.919" starttime="20200530 21:13:31.577"></status>
</kw>
<kw type="foritem" name="${i} = 7">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:31.921" starttime="20200530 21:13:31.920"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:32.225" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:32.226" starttime="20200530 21:13:31.921"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:32.251" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:32.263" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000658 seconds.</msg>
<msg timestamp="20200530 21:13:32.264" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:33 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:32.264" starttime="20200530 21:13:32.227"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:32.264" starttime="20200530 21:13:31.919"></status>
</kw>
<kw type="foritem" name="${i} = 8">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:32.266" starttime="20200530 21:13:32.265"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:32.569" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:32.569" starttime="20200530 21:13:32.267"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:32.592" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:32.605" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000667 seconds.</msg>
<msg timestamp="20200530 21:13:32.606" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:33 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:32.606" starttime="20200530 21:13:32.570"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:32.606" starttime="20200530 21:13:32.265"></status>
</kw>
<kw type="foritem" name="${i} = 9">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:32.608" starttime="20200530 21:13:32.607"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:32.925" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:32.925" starttime="20200530 21:13:32.609"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:32.951" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:32.963" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000975 seconds.</msg>
<msg timestamp="20200530 21:13:32.964" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:33 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:32.964" starttime="20200530 21:13:32.926"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:32.964" starttime="20200530 21:13:32.607"></status>
</kw>
<kw type="foritem" name="${i} = 10">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:32.967" starttime="20200530 21:13:32.965"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:33.269" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:33.269" starttime="20200530 21:13:32.968"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:33.295" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:33.308" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000855 seconds.</msg>
<msg timestamp="20200530 21:13:33.309" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:34 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:33.309" starttime="20200530 21:13:33.270"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:33.309" starttime="20200530 21:13:32.964"></status>
</kw>
<kw type="foritem" name="${i} = 11">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:33.312" starttime="20200530 21:13:33.310"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:33.617" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:33.618" starttime="20200530 21:13:33.312"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:33.644" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:33.657" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00068 seconds.</msg>
<msg timestamp="20200530 21:13:33.658" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:34 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:33.658" starttime="20200530 21:13:33.619"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:33.658" starttime="20200530 21:13:33.309"></status>
</kw>
<kw type="foritem" name="${i} = 12">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:33.660" starttime="20200530 21:13:33.659"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:33.962" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:33.962" starttime="20200530 21:13:33.660"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:33.988" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:34.000" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000574 seconds.</msg>
<msg timestamp="20200530 21:13:34.001" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:34 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:34.001" starttime="20200530 21:13:33.963"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:34.001" starttime="20200530 21:13:33.658"></status>
</kw>
<kw type="foritem" name="${i} = 13">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:34.002" starttime="20200530 21:13:34.002"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:34.304" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:34.305" starttime="20200530 21:13:34.003"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:34.330" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:34.343" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000704 seconds.</msg>
<msg timestamp="20200530 21:13:34.343" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:35 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:34.344" starttime="20200530 21:13:34.305"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:34.344" starttime="20200530 21:13:34.001"></status>
</kw>
<kw type="foritem" name="${i} = 14">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:34.345" starttime="20200530 21:13:34.344"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:34.648" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:34.649" starttime="20200530 21:13:34.346"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:34.674" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:34.688" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000728 seconds.</msg>
<msg timestamp="20200530 21:13:34.688" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:35 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:34.689" starttime="20200530 21:13:34.649"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:34.689" starttime="20200530 21:13:34.344"></status>
</kw>
<kw type="foritem" name="${i} = 15">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:34.691" starttime="20200530 21:13:34.690"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:34.999" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:35.000" starttime="20200530 21:13:34.692"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:35.026" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:35.040" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.001012 seconds.</msg>
<msg timestamp="20200530 21:13:35.041" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:35 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:35.041" starttime="20200530 21:13:35.001"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:35.041" starttime="20200530 21:13:34.689"></status>
</kw>
<kw type="foritem" name="${i} = 16">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:35.044" starttime="20200530 21:13:35.042"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:35.346" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:35.347" starttime="20200530 21:13:35.045"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:35.372" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:35.385" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000986999999999 seconds.</msg>
<msg timestamp="20200530 21:13:35.386" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:36 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:35.386" starttime="20200530 21:13:35.347"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:35.387" starttime="20200530 21:13:35.041"></status>
</kw>
<kw type="foritem" name="${i} = 17">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:35.389" starttime="20200530 21:13:35.388"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:35.691" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:35.692" starttime="20200530 21:13:35.390"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:35.716" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:35.730" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.001022 seconds.</msg>
<msg timestamp="20200530 21:13:35.731" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:36 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:35.731" starttime="20200530 21:13:35.693"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:35.731" starttime="20200530 21:13:35.387"></status>
</kw>
<kw type="foritem" name="${i} = 18">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:35.734" starttime="20200530 21:13:35.733"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:36.037" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:36.037" starttime="20200530 21:13:35.735"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:36.063" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:36.072" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000659000000001 seconds.</msg>
<msg timestamp="20200530 21:13:36.073" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:36 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:36.073" starttime="20200530 21:13:36.038"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:36.073" starttime="20200530 21:13:35.732"></status>
</kw>
<kw type="foritem" name="${i} = 19">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:36.075" starttime="20200530 21:13:36.074"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:36.379" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:36.380" starttime="20200530 21:13:36.076"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:36.404" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:36.418" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.001098 seconds.</msg>
<msg timestamp="20200530 21:13:36.419" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:37 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:36.419" starttime="20200530 21:13:36.380"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:36.419" starttime="20200530 21:13:36.073"></status>
</kw>
<kw type="foritem" name="${i} = 20">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:36.422" starttime="20200530 21:13:36.421"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:36.729" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:36.730" starttime="20200530 21:13:36.423"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:36.754" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:36.766" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000696 seconds.</msg>
<msg timestamp="20200530 21:13:36.767" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:37 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:36.767" starttime="20200530 21:13:36.730"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:36.767" starttime="20200530 21:13:36.420"></status>
</kw>
<kw type="foritem" name="${i} = 21">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:36.769" starttime="20200530 21:13:36.768"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:37.071" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:37.072" starttime="20200530 21:13:36.770"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:37.097" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:37.108" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000551 seconds.</msg>
<msg timestamp="20200530 21:13:37.109" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:37 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:37.109" starttime="20200530 21:13:37.072"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:37.109" starttime="20200530 21:13:36.767"></status>
</kw>
<kw type="foritem" name="${i} = 22">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:37.111" starttime="20200530 21:13:37.110"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:37.419" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:37.420" starttime="20200530 21:13:37.112"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:37.445" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:37.458" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000844 seconds.</msg>
<msg timestamp="20200530 21:13:37.459" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:38 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:37.459" starttime="20200530 21:13:37.420"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:37.459" starttime="20200530 21:13:37.109"></status>
</kw>
<kw type="foritem" name="${i} = 23">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:37.461" starttime="20200530 21:13:37.460"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:37.765" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:37.765" starttime="20200530 21:13:37.462"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:37.792" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:37.804" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000728 seconds.</msg>
<msg timestamp="20200530 21:13:37.805" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:38 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:37.805" starttime="20200530 21:13:37.766"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:37.805" starttime="20200530 21:13:37.459"></status>
</kw>
<kw type="foritem" name="${i} = 24">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:37.807" starttime="20200530 21:13:37.806"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:38.116" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:38.116" starttime="20200530 21:13:37.808"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:38.141" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:38.155" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000951000000001 seconds.</msg>
<msg timestamp="20200530 21:13:38.156" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:38 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:38.157" starttime="20200530 21:13:38.117"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:38.157" starttime="20200530 21:13:37.806"></status>
</kw>
<kw type="foritem" name="${i} = 25">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:38.159" starttime="20200530 21:13:38.158"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:38.464" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:38.464" starttime="20200530 21:13:38.160"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:38.491" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:38.503" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000706 seconds.</msg>
<msg timestamp="20200530 21:13:38.504" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:39 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:38.504" starttime="20200530 21:13:38.465"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:38.504" starttime="20200530 21:13:38.157"></status>
</kw>
<kw type="foritem" name="${i} = 26">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:38.506" starttime="20200530 21:13:38.505"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:38.808" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:38.808" starttime="20200530 21:13:38.507"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:38.836" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:38.848" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000655 seconds.</msg>
<msg timestamp="20200530 21:13:38.849" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:39 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:38.849" starttime="20200530 21:13:38.809"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:38.849" starttime="20200530 21:13:38.504"></status>
</kw>
<kw type="foritem" name="${i} = 27">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:38.850" starttime="20200530 21:13:38.849"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:39.152" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:39.152" starttime="20200530 21:13:38.851"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:39.178" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:39.191" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000744 seconds.</msg>
<msg timestamp="20200530 21:13:39.192" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:39 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:39.192" starttime="20200530 21:13:39.153"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:39.192" starttime="20200530 21:13:38.849"></status>
</kw>
<kw type="foritem" name="${i} = 28">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:39.194" starttime="20200530 21:13:39.193"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:39.496" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:39.496" starttime="20200530 21:13:39.195"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:39.521" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:39.533" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000661 seconds.</msg>
<msg timestamp="20200530 21:13:39.534" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:40 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:39.534" starttime="20200530 21:13:39.497"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:39.534" starttime="20200530 21:13:39.192"></status>
</kw>
<kw type="foritem" name="${i} = 29">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:39.536" starttime="20200530 21:13:39.535"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:39.870" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:39.871" starttime="20200530 21:13:39.537"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:39.898" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:39.912" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.001066 seconds.</msg>
<msg timestamp="20200530 21:13:39.913" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:40 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:39.913" starttime="20200530 21:13:39.872"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:39.914" starttime="20200530 21:13:39.534"></status>
</kw>
<kw type="foritem" name="${i} = 30">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:39.917" starttime="20200530 21:13:39.915"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:40.219" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:40.220" starttime="20200530 21:13:39.918"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:40.244" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:40.256" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000556 seconds.</msg>
<msg timestamp="20200530 21:13:40.257" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:41 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:40.257" starttime="20200530 21:13:40.221"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:40.257" starttime="20200530 21:13:39.914"></status>
</kw>
<kw type="foritem" name="${i} = 31">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:40.258" starttime="20200530 21:13:40.258"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:40.560" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:40.560" starttime="20200530 21:13:40.259"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:40.583" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:40.595" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000656 seconds.</msg>
<msg timestamp="20200530 21:13:40.596" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:41 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:40.596" starttime="20200530 21:13:40.561"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:40.596" starttime="20200530 21:13:40.257"></status>
</kw>
<kw type="foritem" name="${i} = 32">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:40.598" starttime="20200530 21:13:40.597"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:40.899" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:40.900" starttime="20200530 21:13:40.599"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:40.925" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:40.937" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000886 seconds.</msg>
<msg timestamp="20200530 21:13:40.938" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:41 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:40.939" starttime="20200530 21:13:40.901"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:40.939" starttime="20200530 21:13:40.596"></status>
</kw>
<kw type="foritem" name="${i} = 33">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:40.942" starttime="20200530 21:13:40.940"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:41.243" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:41.244" starttime="20200530 21:13:40.942"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:41.271" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:41.285" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000729 seconds.</msg>
<msg timestamp="20200530 21:13:41.285" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:42 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:41.286" starttime="20200530 21:13:41.245"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:41.286" starttime="20200530 21:13:40.939"></status>
</kw>
<kw type="foritem" name="${i} = 34">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:41.287" starttime="20200530 21:13:41.286"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:41.589" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:41.590" starttime="20200530 21:13:41.288"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:41.613" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:41.625" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000683 seconds.</msg>
<msg timestamp="20200530 21:13:41.626" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:42 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:41.626" starttime="20200530 21:13:41.591"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:41.626" starttime="20200530 21:13:41.286"></status>
</kw>
<kw type="foritem" name="${i} = 35">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:41.628" starttime="20200530 21:13:41.627"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:41.930" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:41.930" starttime="20200530 21:13:41.628"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:41.955" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:41.969" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000755 seconds.</msg>
<msg timestamp="20200530 21:13:41.969" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:42 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:41.969" starttime="20200530 21:13:41.931"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:41.970" starttime="20200530 21:13:41.626"></status>
</kw>
<kw type="foritem" name="${i} = 36">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:41.971" starttime="20200530 21:13:41.970"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:42.274" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:42.275" starttime="20200530 21:13:41.972"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:42.301" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:42.315" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00097 seconds.</msg>
<msg timestamp="20200530 21:13:42.317" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:43 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:42.317" starttime="20200530 21:13:42.276"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:42.317" starttime="20200530 21:13:41.970"></status>
</kw>
<kw type="foritem" name="${i} = 37">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:42.320" starttime="20200530 21:13:42.318"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:42.645" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:42.645" starttime="20200530 21:13:42.321"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:42.669" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:42.682" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00071 seconds.</msg>
<msg timestamp="20200530 21:13:42.682" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:43 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:42.683" starttime="20200530 21:13:42.646"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:42.683" starttime="20200530 21:13:42.317"></status>
</kw>
<kw type="foritem" name="${i} = 38">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:42.685" starttime="20200530 21:13:42.684"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:42.987" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:42.987" starttime="20200530 21:13:42.686"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:43.013" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:43.023" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00055 seconds.</msg>
<msg timestamp="20200530 21:13:43.024" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:43 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:43.024" starttime="20200530 21:13:42.988"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:43.024" starttime="20200530 21:13:42.683"></status>
</kw>
<kw type="foritem" name="${i} = 39">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:43.026" starttime="20200530 21:13:43.025"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:43.328" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:43.329" starttime="20200530 21:13:43.026"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:43.355" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:43.369" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000726999999999 seconds.</msg>
<msg timestamp="20200530 21:13:43.369" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:44 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:43.369" starttime="20200530 21:13:43.330"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:43.370" starttime="20200530 21:13:43.024"></status>
</kw>
<kw type="foritem" name="${i} = 40">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:43.371" starttime="20200530 21:13:43.370"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:43.679" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:43.680" starttime="20200530 21:13:43.372"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:43.704" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:43.718" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000665 seconds.</msg>
<msg timestamp="20200530 21:13:43.718" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:44 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:43.718" starttime="20200530 21:13:43.681"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:43.719" starttime="20200530 21:13:43.370"></status>
</kw>
<kw type="foritem" name="${i} = 41">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:43.720" starttime="20200530 21:13:43.719"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:44.035" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:44.035" starttime="20200530 21:13:43.722"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:44.061" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:44.075" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000997 seconds.</msg>
<msg timestamp="20200530 21:13:44.076" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:44 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:44.077" starttime="20200530 21:13:44.036"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:44.077" starttime="20200530 21:13:43.719"></status>
</kw>
<kw type="foritem" name="${i} = 42">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:44.079" starttime="20200530 21:13:44.078"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:44.382" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:44.382" starttime="20200530 21:13:44.080"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:44.408" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:44.421" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000691 seconds.</msg>
<msg timestamp="20200530 21:13:44.422" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:45 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:44.422" starttime="20200530 21:13:44.383"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:44.422" starttime="20200530 21:13:44.077"></status>
</kw>
<kw type="foritem" name="${i} = 43">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:44.424" starttime="20200530 21:13:44.423"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:44.726" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:44.726" starttime="20200530 21:13:44.425"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:44.752" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:44.763" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000704000000001 seconds.</msg>
<msg timestamp="20200530 21:13:44.764" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:45 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:44.765" starttime="20200530 21:13:44.727"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:44.765" starttime="20200530 21:13:44.423"></status>
</kw>
<kw type="foritem" name="${i} = 44">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:44.767" starttime="20200530 21:13:44.766"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:45.069" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:45.069" starttime="20200530 21:13:44.768"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:45.085" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:45.096" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000448 seconds.</msg>
<msg timestamp="20200530 21:13:45.096" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:45 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:45.096" starttime="20200530 21:13:45.070"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:45.096" starttime="20200530 21:13:44.765"></status>
</kw>
<kw type="foritem" name="${i} = 45">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:45.098" starttime="20200530 21:13:45.097"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:45.399" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:45.400" starttime="20200530 21:13:45.099"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:45.426" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:45.438" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000544000000001 seconds.</msg>
<msg timestamp="20200530 21:13:45.438" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:46 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:45.438" starttime="20200530 21:13:45.401"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:45.438" starttime="20200530 21:13:45.096"></status>
</kw>
<kw type="foritem" name="${i} = 46">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:45.441" starttime="20200530 21:13:45.439"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:45.742" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:45.742" starttime="20200530 21:13:45.442"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:45.750" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:45.760" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000405 seconds.</msg>
<msg timestamp="20200530 21:13:45.761" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:46 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:45.761" starttime="20200530 21:13:45.743"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:45.761" starttime="20200530 21:13:45.439"></status>
</kw>
<kw type="foritem" name="${i} = 47">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:45.762" starttime="20200530 21:13:45.761"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:46.063" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:46.064" starttime="20200530 21:13:45.763"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:46.091" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:46.101" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000539 seconds.</msg>
<msg timestamp="20200530 21:13:46.102" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:46 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:46.102" starttime="20200530 21:13:46.065"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:46.102" starttime="20200530 21:13:45.761"></status>
</kw>
<kw type="foritem" name="${i} = 48">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:46.104" starttime="20200530 21:13:46.103"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:46.405" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:46.406" starttime="20200530 21:13:46.105"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:46.433" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:46.448" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.001209 seconds.</msg>
<msg timestamp="20200530 21:13:46.449" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:47 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:46.449" starttime="20200530 21:13:46.407"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:46.449" starttime="20200530 21:13:46.102"></status>
</kw>
<kw type="foritem" name="${i} = 49">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:46.452" starttime="20200530 21:13:46.450"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:46.755" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:46.755" starttime="20200530 21:13:46.453"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:46.779" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:46.792" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000691 seconds.</msg>
<msg timestamp="20200530 21:13:46.793" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:47 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:46.793" starttime="20200530 21:13:46.756"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:46.793" starttime="20200530 21:13:46.449"></status>
</kw>
<kw type="foritem" name="${i} = 50">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:46.795" starttime="20200530 21:13:46.794"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:47.098" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:47.099" starttime="20200530 21:13:46.796"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:47.128" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:47.139" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00056 seconds.</msg>
<msg timestamp="20200530 21:13:47.140" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:47 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:47.140" starttime="20200530 21:13:47.100"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:47.140" starttime="20200530 21:13:46.793"></status>
</kw>
<kw type="foritem" name="${i} = 51">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:47.142" starttime="20200530 21:13:47.141"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:47.448" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:47.448" starttime="20200530 21:13:47.142"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:47.474" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:47.486" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000695 seconds.</msg>
<msg timestamp="20200530 21:13:47.487" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:48 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:47.487" starttime="20200530 21:13:47.449"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:47.487" starttime="20200530 21:13:47.141"></status>
</kw>
<kw type="foritem" name="${i} = 52">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:47.489" starttime="20200530 21:13:47.488"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:47.806" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:47.806" starttime="20200530 21:13:47.489"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:47.833" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:47.846" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000953 seconds.</msg>
<msg timestamp="20200530 21:13:47.847" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:48 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:47.848" starttime="20200530 21:13:47.807"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:47.848" starttime="20200530 21:13:47.487"></status>
</kw>
<kw type="foritem" name="${i} = 53">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:47.850" starttime="20200530 21:13:47.849"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:48.159" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:48.160" starttime="20200530 21:13:47.852"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:48.185" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:48.198" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000678 seconds.</msg>
<msg timestamp="20200530 21:13:48.199" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:48 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:48.199" starttime="20200530 21:13:48.161"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:48.199" starttime="20200530 21:13:47.848"></status>
</kw>
<kw type="foritem" name="${i} = 54">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:48.201" starttime="20200530 21:13:48.200"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:48.509" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:48.510" starttime="20200530 21:13:48.202"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:48.537" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:48.552" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.001104 seconds.</msg>
<msg timestamp="20200530 21:13:48.553" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:49 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:48.553" starttime="20200530 21:13:48.510"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:48.553" starttime="20200530 21:13:48.199"></status>
</kw>
<kw type="foritem" name="${i} = 55">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:48.557" starttime="20200530 21:13:48.555"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:48.860" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:48.861" starttime="20200530 21:13:48.559"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:48.886" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:48.899" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000702 seconds.</msg>
<msg timestamp="20200530 21:13:48.899" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:49 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:48.900" starttime="20200530 21:13:48.862"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:48.900" starttime="20200530 21:13:48.554"></status>
</kw>
<kw type="foritem" name="${i} = 56">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:48.902" starttime="20200530 21:13:48.901"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:49.209" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:49.210" starttime="20200530 21:13:48.903"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:49.234" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:49.246" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000667 seconds.</msg>
<msg timestamp="20200530 21:13:49.247" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:50 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:49.248" starttime="20200530 21:13:49.211"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:49.248" starttime="20200530 21:13:48.900"></status>
</kw>
<kw type="foritem" name="${i} = 57">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:49.250" starttime="20200530 21:13:49.249"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:49.559" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:49.559" starttime="20200530 21:13:49.250"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:49.582" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:49.594" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00066 seconds.</msg>
<msg timestamp="20200530 21:13:49.594" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:50 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:49.594" starttime="20200530 21:13:49.560"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:49.594" starttime="20200530 21:13:49.248"></status>
</kw>
<kw type="foritem" name="${i} = 58">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:49.596" starttime="20200530 21:13:49.595"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:49.899" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:49.899" starttime="20200530 21:13:49.597"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:49.926" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:49.938" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000681999999999 seconds.</msg>
<msg timestamp="20200530 21:13:49.938" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:50 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:49.938" starttime="20200530 21:13:49.901"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:49.939" starttime="20200530 21:13:49.595"></status>
</kw>
<kw type="foritem" name="${i} = 59">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:49.941" starttime="20200530 21:13:49.939"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:50.249" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:50.250" starttime="20200530 21:13:49.942"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:50.275" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:50.286" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00067 seconds.</msg>
<msg timestamp="20200530 21:13:50.287" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:51 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:50.287" starttime="20200530 21:13:50.250"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:50.287" starttime="20200530 21:13:49.939"></status>
</kw>
<kw type="foritem" name="${i} = 60">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:50.289" starttime="20200530 21:13:50.288"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:50.595" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:50.596" starttime="20200530 21:13:50.290"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:50.620" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:50.633" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000959 seconds.</msg>
<msg timestamp="20200530 21:13:50.634" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:51 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:50.634" starttime="20200530 21:13:50.597"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:50.634" starttime="20200530 21:13:50.287"></status>
</kw>
<kw type="foritem" name="${i} = 61">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:50.637" starttime="20200530 21:13:50.636"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:50.939" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:50.940" starttime="20200530 21:13:50.638"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:50.963" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:50.977" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000959 seconds.</msg>
<msg timestamp="20200530 21:13:50.978" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:51 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:50.978" starttime="20200530 21:13:50.941"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:50.978" starttime="20200530 21:13:50.635"></status>
</kw>
<kw type="foritem" name="${i} = 62">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:50.981" starttime="20200530 21:13:50.979"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:51.283" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:51.284" starttime="20200530 21:13:50.982"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:51.309" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:51.322" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000743 seconds.</msg>
<msg timestamp="20200530 21:13:51.323" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:52 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:51.323" starttime="20200530 21:13:51.285"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:51.323" starttime="20200530 21:13:50.979"></status>
</kw>
<kw type="foritem" name="${i} = 63">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:51.325" starttime="20200530 21:13:51.324"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:51.627" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:51.628" starttime="20200530 21:13:51.326"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:51.651" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:51.664" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000707999999999 seconds.</msg>
<msg timestamp="20200530 21:13:51.665" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:52 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:51.665" starttime="20200530 21:13:51.629"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:51.666" starttime="20200530 21:13:51.323"></status>
</kw>
<kw type="foritem" name="${i} = 64">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:51.667" starttime="20200530 21:13:51.666"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:51.970" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:51.970" starttime="20200530 21:13:51.669"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:51.995" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:52.007" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000751999999999 seconds.</msg>
<msg timestamp="20200530 21:13:52.008" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:52 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:52.008" starttime="20200530 21:13:51.971"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:52.008" starttime="20200530 21:13:51.666"></status>
</kw>
<kw type="foritem" name="${i} = 65">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:52.010" starttime="20200530 21:13:52.009"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:52.312" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:52.313" starttime="20200530 21:13:52.011"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:52.337" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:52.349" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00071 seconds.</msg>
<msg timestamp="20200530 21:13:52.350" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:53 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:52.350" starttime="20200530 21:13:52.314"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:52.350" starttime="20200530 21:13:52.009"></status>
</kw>
<kw type="foritem" name="${i} = 66">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:52.352" starttime="20200530 21:13:52.351"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:52.654" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:52.655" starttime="20200530 21:13:52.353"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:52.682" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:52.694" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000779000000001 seconds.</msg>
<msg timestamp="20200530 21:13:52.696" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:53 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:52.696" starttime="20200530 21:13:52.656"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:52.696" starttime="20200530 21:13:52.350"></status>
</kw>
<kw type="foritem" name="${i} = 67">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:52.698" starttime="20200530 21:13:52.697"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:53.000" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:53.000" starttime="20200530 21:13:52.698"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:53.025" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:53.038" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000726 seconds.</msg>
<msg timestamp="20200530 21:13:53.039" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:53 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:53.039" starttime="20200530 21:13:53.001"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:53.039" starttime="20200530 21:13:52.696"></status>
</kw>
<kw type="foritem" name="${i} = 68">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:53.042" starttime="20200530 21:13:53.041"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:53.344" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:53.344" starttime="20200530 21:13:53.042"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:53.371" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:53.384" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000835 seconds.</msg>
<msg timestamp="20200530 21:13:53.385" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:54 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:53.385" starttime="20200530 21:13:53.345"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:53.385" starttime="20200530 21:13:53.040"></status>
</kw>
<kw type="foritem" name="${i} = 69">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:53.387" starttime="20200530 21:13:53.386"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:53.689" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:53.689" starttime="20200530 21:13:53.388"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:53.714" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:53.727" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000815 seconds.</msg>
<msg timestamp="20200530 21:13:53.728" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:54 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:53.728" starttime="20200530 21:13:53.690"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:53.728" starttime="20200530 21:13:53.385"></status>
</kw>
<kw type="foritem" name="${i} = 70">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:53.730" starttime="20200530 21:13:53.729"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:54.032" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:54.033" starttime="20200530 21:13:53.731"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:54.058" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:54.072" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000853 seconds.</msg>
<msg timestamp="20200530 21:13:54.073" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:54 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:54.073" starttime="20200530 21:13:54.034"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:54.073" starttime="20200530 21:13:53.728"></status>
</kw>
<kw type="foritem" name="${i} = 71">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:54.075" starttime="20200530 21:13:54.074"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:54.377" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:54.377" starttime="20200530 21:13:54.076"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:54.402" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:54.414" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000748 seconds.</msg>
<msg timestamp="20200530 21:13:54.415" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:55 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:54.415" starttime="20200530 21:13:54.378"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:54.416" starttime="20200530 21:13:54.073"></status>
</kw>
<kw type="foritem" name="${i} = 72">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:54.417" starttime="20200530 21:13:54.416"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:54.719" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:54.720" starttime="20200530 21:13:54.418"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:54.744" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:54.758" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.001056 seconds.</msg>
<msg timestamp="20200530 21:13:54.759" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:55 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:54.759" starttime="20200530 21:13:54.720"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:54.759" starttime="20200530 21:13:54.416"></status>
</kw>
<kw type="foritem" name="${i} = 73">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:54.762" starttime="20200530 21:13:54.760"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:55.068" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:55.068" starttime="20200530 21:13:54.763"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:55.092" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:55.106" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.001048 seconds.</msg>
<msg timestamp="20200530 21:13:55.107" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:55 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:55.107" starttime="20200530 21:13:55.069"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:55.108" starttime="20200530 21:13:54.759"></status>
</kw>
<kw type="foritem" name="${i} = 74">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:55.111" starttime="20200530 21:13:55.109"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:55.413" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:55.414" starttime="20200530 21:13:55.112"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:55.439" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:55.452" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000842 seconds.</msg>
<msg timestamp="20200530 21:13:55.453" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:56 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:55.453" starttime="20200530 21:13:55.414"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:55.453" starttime="20200530 21:13:55.108"></status>
</kw>
<kw type="foritem" name="${i} = 75">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:55.455" starttime="20200530 21:13:55.454"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:55.757" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:55.758" starttime="20200530 21:13:55.456"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:55.783" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:55.795" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00056 seconds.</msg>
<msg timestamp="20200530 21:13:55.796" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:56 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:55.796" starttime="20200530 21:13:55.758"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:55.796" starttime="20200530 21:13:55.454"></status>
</kw>
<kw type="foritem" name="${i} = 76">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:55.797" starttime="20200530 21:13:55.796"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:56.099" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:56.099" starttime="20200530 21:13:55.798"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:56.125" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:56.136" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000755 seconds.</msg>
<msg timestamp="20200530 21:13:56.137" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:56 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:56.137" starttime="20200530 21:13:56.100"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:56.138" starttime="20200530 21:13:55.796"></status>
</kw>
<kw type="foritem" name="${i} = 77">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:56.140" starttime="20200530 21:13:56.138"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:56.441" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:56.442" starttime="20200530 21:13:56.140"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:56.468" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:56.480" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000735000000001 seconds.</msg>
<msg timestamp="20200530 21:13:56.481" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:57 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:56.482" starttime="20200530 21:13:56.443"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:56.482" starttime="20200530 21:13:56.138"></status>
</kw>
<kw type="foritem" name="${i} = 78">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:56.483" starttime="20200530 21:13:56.482"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:56.785" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:56.786" starttime="20200530 21:13:56.484"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:56.811" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:56.824" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000737 seconds.</msg>
<msg timestamp="20200530 21:13:56.825" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:57 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:56.825" starttime="20200530 21:13:56.787"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:56.825" starttime="20200530 21:13:56.482"></status>
</kw>
<kw type="foritem" name="${i} = 79">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:56.827" starttime="20200530 21:13:56.826"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:57.129" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:57.130" starttime="20200530 21:13:56.828"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:57.158" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:57.169" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000626 seconds.</msg>
<msg timestamp="20200530 21:13:57.170" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:57 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:57.170" starttime="20200530 21:13:57.131"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:57.170" starttime="20200530 21:13:56.825"></status>
</kw>
<kw type="foritem" name="${i} = 80">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:57.172" starttime="20200530 21:13:57.171"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:57.474" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:57.474" starttime="20200530 21:13:57.173"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:57.499" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:57.512" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000737999999999 seconds.</msg>
<msg timestamp="20200530 21:13:57.513" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:58 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:57.513" starttime="20200530 21:13:57.475"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:57.513" starttime="20200530 21:13:57.170"></status>
</kw>
<kw type="foritem" name="${i} = 81">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:57.515" starttime="20200530 21:13:57.514"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:57.817" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:57.817" starttime="20200530 21:13:57.515"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:57.842" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:57.855" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000725 seconds.</msg>
<msg timestamp="20200530 21:13:57.856" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:58 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:57.856" starttime="20200530 21:13:57.818"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:57.856" starttime="20200530 21:13:57.513"></status>
</kw>
<kw type="foritem" name="${i} = 82">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:57.858" starttime="20200530 21:13:57.857"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:58.162" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:58.162" starttime="20200530 21:13:57.859"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:58.188" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:58.201" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000706 seconds.</msg>
<msg timestamp="20200530 21:13:58.202" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:58 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:58.202" starttime="20200530 21:13:58.163"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:58.202" starttime="20200530 21:13:57.856"></status>
</kw>
<kw type="foritem" name="${i} = 83">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:58.205" starttime="20200530 21:13:58.203"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:58.509" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:58.509" starttime="20200530 21:13:58.206"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:58.536" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:58.548" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000484 seconds.</msg>
<msg timestamp="20200530 21:13:58.549" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:59 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:58.549" starttime="20200530 21:13:58.510"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:58.549" starttime="20200530 21:13:58.202"></status>
</kw>
<kw type="foritem" name="${i} = 84">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:58.550" starttime="20200530 21:13:58.550"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:58.878" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:58.878" starttime="20200530 21:13:58.551"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:58.904" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:58.916" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000732000000001 seconds.</msg>
<msg timestamp="20200530 21:13:58.917" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:13:59 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:58.917" starttime="20200530 21:13:58.879"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:58.917" starttime="20200530 21:13:58.549"></status>
</kw>
<kw type="foritem" name="${i} = 85">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:58.919" starttime="20200530 21:13:58.918"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:59.222" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:59.222" starttime="20200530 21:13:58.920"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:59.248" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:59.259" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000544999999999 seconds.</msg>
<msg timestamp="20200530 21:13:59.260" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:00 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:59.260" starttime="20200530 21:13:59.223"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:59.260" starttime="20200530 21:13:58.917"></status>
</kw>
<kw type="foritem" name="${i} = 86">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:59.262" starttime="20200530 21:13:59.261"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:59.574" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:59.575" starttime="20200530 21:13:59.262"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:59.598" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:59.609" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000541 seconds.</msg>
<msg timestamp="20200530 21:13:59.609" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:00 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:59.610" starttime="20200530 21:13:59.576"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:59.610" starttime="20200530 21:13:59.260"></status>
</kw>
<kw type="foritem" name="${i} = 87">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:59.611" starttime="20200530 21:13:59.610"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:13:59.913" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:13:59.913" starttime="20200530 21:13:59.612"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:13:59.938" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:13:59.951" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000672999999999 seconds.</msg>
<msg timestamp="20200530 21:13:59.952" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:00 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:13:59.952" starttime="20200530 21:13:59.914"></status>
</kw>
<status status="PASS" endtime="20200530 21:13:59.952" starttime="20200530 21:13:59.610"></status>
</kw>
<kw type="foritem" name="${i} = 88">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:13:59.954" starttime="20200530 21:13:59.953"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:00.271" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:00.272" starttime="20200530 21:13:59.955"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:00.296" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:00.308" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000703 seconds.</msg>
<msg timestamp="20200530 21:14:00.309" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:01 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:00.309" starttime="20200530 21:14:00.273"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:00.309" starttime="20200530 21:13:59.952"></status>
</kw>
<kw type="foritem" name="${i} = 89">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:00.311" starttime="20200530 21:14:00.310"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:00.613" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:00.614" starttime="20200530 21:14:00.312"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:00.642" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:00.653" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000541999999999 seconds.</msg>
<msg timestamp="20200530 21:14:00.654" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:01 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:00.654" starttime="20200530 21:14:00.615"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:00.654" starttime="20200530 21:14:00.310"></status>
</kw>
<kw type="foritem" name="${i} = 90">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:00.656" starttime="20200530 21:14:00.655"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:00.958" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:00.958" starttime="20200530 21:14:00.657"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:00.986" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:00.998" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000694999999999 seconds.</msg>
<msg timestamp="20200530 21:14:00.999" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:01 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:00.999" starttime="20200530 21:14:00.959"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:00.999" starttime="20200530 21:14:00.654"></status>
</kw>
<kw type="foritem" name="${i} = 91">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:01.001" starttime="20200530 21:14:01.000"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:01.304" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:01.304" starttime="20200530 21:14:01.003"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:01.329" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:01.342" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000722000000001 seconds.</msg>
<msg timestamp="20200530 21:14:01.343" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:02 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:01.344" starttime="20200530 21:14:01.305"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:01.344" starttime="20200530 21:14:00.999"></status>
</kw>
<kw type="foritem" name="${i} = 92">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:01.347" starttime="20200530 21:14:01.345"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:01.648" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:01.649" starttime="20200530 21:14:01.347"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:01.675" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:01.688" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000775000000001 seconds.</msg>
<msg timestamp="20200530 21:14:01.688" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:02 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:01.689" starttime="20200530 21:14:01.650"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:01.689" starttime="20200530 21:14:01.344"></status>
</kw>
<kw type="foritem" name="${i} = 93">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:01.691" starttime="20200530 21:14:01.689"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:01.995" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:01.995" starttime="20200530 21:14:01.691"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:02.021" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:02.033" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000665 seconds.</msg>
<msg timestamp="20200530 21:14:02.033" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:02 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:02.033" starttime="20200530 21:14:01.996"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:02.033" starttime="20200530 21:14:01.689"></status>
</kw>
<kw type="foritem" name="${i} = 94">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:02.036" starttime="20200530 21:14:02.034"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:02.348" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:02.348" starttime="20200530 21:14:02.036"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:02.374" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:02.387" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000859 seconds.</msg>
<msg timestamp="20200530 21:14:02.388" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:03 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:02.388" starttime="20200530 21:14:02.349"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:02.388" starttime="20200530 21:14:02.034"></status>
</kw>
<kw type="foritem" name="${i} = 95">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:02.390" starttime="20200530 21:14:02.389"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:02.693" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:02.693" starttime="20200530 21:14:02.391"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:02.717" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:02.731" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000960999999998 seconds.</msg>
<msg timestamp="20200530 21:14:02.732" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:03 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:02.732" starttime="20200530 21:14:02.694"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:02.732" starttime="20200530 21:14:02.389"></status>
</kw>
<kw type="foritem" name="${i} = 96">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:02.735" starttime="20200530 21:14:02.733"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:03.037" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:03.038" starttime="20200530 21:14:02.736"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:03.063" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:03.074" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000557000000001 seconds.</msg>
<msg timestamp="20200530 21:14:03.075" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:03 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:03.075" starttime="20200530 21:14:03.038"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:03.075" starttime="20200530 21:14:02.732"></status>
</kw>
<kw type="foritem" name="${i} = 97">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:03.077" starttime="20200530 21:14:03.076"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:03.379" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:03.379" starttime="20200530 21:14:03.078"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:03.406" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:03.418" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000793 seconds.</msg>
<msg timestamp="20200530 21:14:03.419" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:04 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:03.419" starttime="20200530 21:14:03.380"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:03.419" starttime="20200530 21:14:03.075"></status>
</kw>
<kw type="foritem" name="${i} = 98">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:03.421" starttime="20200530 21:14:03.420"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:03.724" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:03.724" starttime="20200530 21:14:03.423"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:03.750" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:03.761" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000629999999999 seconds.</msg>
<msg timestamp="20200530 21:14:03.762" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:04 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:03.762" starttime="20200530 21:14:03.725"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:03.762" starttime="20200530 21:14:03.419"></status>
</kw>
<kw type="foritem" name="${i} = 99">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:03.764" starttime="20200530 21:14:03.763"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:04.066" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:04.066" starttime="20200530 21:14:03.765"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:04.093" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:04.104" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000563 seconds.</msg>
<msg timestamp="20200530 21:14:04.105" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:04 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:04.105" starttime="20200530 21:14:04.067"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:04.105" starttime="20200530 21:14:03.762"></status>
</kw>
<kw type="foritem" name="${i} = 100">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:04.106" starttime="20200530 21:14:04.105"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:04.409" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:04.409" starttime="20200530 21:14:04.107"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:04.435" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:04.447" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000656000000001 seconds.</msg>
<msg timestamp="20200530 21:14:04.447" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:05 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:04.448" starttime="20200530 21:14:04.410"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:04.448" starttime="20200530 21:14:04.105"></status>
</kw>
<kw type="foritem" name="${i} = 101">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:04.450" starttime="20200530 21:14:04.449"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:04.759" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:04.760" starttime="20200530 21:14:04.450"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:04.785" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:04.797" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000720000000001 seconds.</msg>
<msg timestamp="20200530 21:14:04.797" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:05 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:04.798" starttime="20200530 21:14:04.760"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:04.798" starttime="20200530 21:14:04.448"></status>
</kw>
<kw type="foritem" name="${i} = 102">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:04.800" starttime="20200530 21:14:04.798"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:05.104" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:05.105" starttime="20200530 21:14:04.801"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:05.129" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:05.142" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000718000000001 seconds.</msg>
<msg timestamp="20200530 21:14:05.143" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:05 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:05.143" starttime="20200530 21:14:05.106"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:05.144" starttime="20200530 21:14:04.798"></status>
</kw>
<kw type="foritem" name="${i} = 103">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:05.145" starttime="20200530 21:14:05.145"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:05.447" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:05.448" starttime="20200530 21:14:05.146"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:05.471" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:05.485" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.001036 seconds.</msg>
<msg timestamp="20200530 21:14:05.487" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:06 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:05.487" starttime="20200530 21:14:05.449"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:05.487" starttime="20200530 21:14:05.144"></status>
</kw>
<kw type="foritem" name="${i} = 104">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:05.490" starttime="20200530 21:14:05.488"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:05.792" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:05.792" starttime="20200530 21:14:05.490"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:05.818" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:05.831" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000710000000002 seconds.</msg>
<msg timestamp="20200530 21:14:05.832" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:06 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:05.832" starttime="20200530 21:14:05.793"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:05.832" starttime="20200530 21:14:05.487"></status>
</kw>
<kw type="foritem" name="${i} = 105">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:05.834" starttime="20200530 21:14:05.833"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:06.136" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:06.137" starttime="20200530 21:14:05.835"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:06.161" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:06.174" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000718000000001 seconds.</msg>
<msg timestamp="20200530 21:14:06.175" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:06 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:06.175" starttime="20200530 21:14:06.137"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:06.175" starttime="20200530 21:14:05.833"></status>
</kw>
<kw type="foritem" name="${i} = 106">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:06.177" starttime="20200530 21:14:06.176"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:06.479" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:06.479" starttime="20200530 21:14:06.177"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:06.505" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:06.518" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000853000000001 seconds.</msg>
<msg timestamp="20200530 21:14:06.519" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:07 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:06.519" starttime="20200530 21:14:06.480"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:06.519" starttime="20200530 21:14:06.175"></status>
</kw>
<kw type="foritem" name="${i} = 107">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:06.522" starttime="20200530 21:14:06.520"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:06.824" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:06.824" starttime="20200530 21:14:06.522"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:06.849" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:06.861" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000535999999999 seconds.</msg>
<msg timestamp="20200530 21:14:06.861" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:07 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:06.862" starttime="20200530 21:14:06.825"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:06.862" starttime="20200530 21:14:06.520"></status>
</kw>
<kw type="foritem" name="${i} = 108">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:06.863" starttime="20200530 21:14:06.862"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:07.165" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:07.166" starttime="20200530 21:14:06.864"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:07.190" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:07.204" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000772000000001 seconds.</msg>
<msg timestamp="20200530 21:14:07.205" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:07 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:07.205" starttime="20200530 21:14:07.166"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:07.205" starttime="20200530 21:14:06.862"></status>
</kw>
<kw type="foritem" name="${i} = 109">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:07.207" starttime="20200530 21:14:07.206"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:07.520" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:07.520" starttime="20200530 21:14:07.209"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:07.550" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:07.561" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000432 seconds.</msg>
<msg timestamp="20200530 21:14:07.562" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:08 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:07.562" starttime="20200530 21:14:07.521"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:07.562" starttime="20200530 21:14:07.205"></status>
</kw>
<kw type="foritem" name="${i} = 110">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:07.563" starttime="20200530 21:14:07.562"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:07.868" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:07.868" starttime="20200530 21:14:07.564"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:07.893" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:07.907" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.001053 seconds.</msg>
<msg timestamp="20200530 21:14:07.908" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:08 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:07.908" starttime="20200530 21:14:07.869"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:07.908" starttime="20200530 21:14:07.562"></status>
</kw>
<kw type="foritem" name="${i} = 111">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:07.911" starttime="20200530 21:14:07.909"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:08.219" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:08.220" starttime="20200530 21:14:07.912"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:08.245" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:08.257" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000682000000001 seconds.</msg>
<msg timestamp="20200530 21:14:08.258" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:09 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:08.258" starttime="20200530 21:14:08.221"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:08.258" starttime="20200530 21:14:07.908"></status>
</kw>
<kw type="foritem" name="${i} = 112">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:08.260" starttime="20200530 21:14:08.259"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:08.595" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:08.595" starttime="20200530 21:14:08.261"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:08.620" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:08.632" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000646999999999 seconds.</msg>
<msg timestamp="20200530 21:14:08.633" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:09 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:08.633" starttime="20200530 21:14:08.596"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:08.633" starttime="20200530 21:14:08.258"></status>
</kw>
<kw type="foritem" name="${i} = 113">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:08.636" starttime="20200530 21:14:08.634"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:08.937" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:08.938" starttime="20200530 21:14:08.637"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:08.963" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:08.976" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.001066 seconds.</msg>
<msg timestamp="20200530 21:14:08.977" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:09 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:08.978" starttime="20200530 21:14:08.939"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:08.978" starttime="20200530 21:14:08.634"></status>
</kw>
<kw type="foritem" name="${i} = 114">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:08.981" starttime="20200530 21:14:08.979"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:09.290" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:09.290" starttime="20200530 21:14:08.982"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:09.316" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:09.328" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000719999999999 seconds.</msg>
<msg timestamp="20200530 21:14:09.329" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:10 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:09.329" starttime="20200530 21:14:09.291"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:09.329" starttime="20200530 21:14:08.978"></status>
</kw>
<kw type="foritem" name="${i} = 115">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:09.331" starttime="20200530 21:14:09.330"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:09.634" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:09.635" starttime="20200530 21:14:09.332"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:09.661" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:09.675" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.001022 seconds.</msg>
<msg timestamp="20200530 21:14:09.676" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:10 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:09.676" starttime="20200530 21:14:09.635"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:09.676" starttime="20200530 21:14:09.329"></status>
</kw>
<kw type="foritem" name="${i} = 116">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:09.678" starttime="20200530 21:14:09.677"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:09.979" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:09.980" starttime="20200530 21:14:09.679"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:10.005" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:10.017" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000732000000001 seconds.</msg>
<msg timestamp="20200530 21:14:10.018" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:10 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:10.019" starttime="20200530 21:14:09.981"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:10.019" starttime="20200530 21:14:09.676"></status>
</kw>
<kw type="foritem" name="${i} = 117">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:10.021" starttime="20200530 21:14:10.020"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:10.323" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:10.324" starttime="20200530 21:14:10.021"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:10.348" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:10.362" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.001024 seconds.</msg>
<msg timestamp="20200530 21:14:10.363" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:11 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:10.363" starttime="20200530 21:14:10.325"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:10.364" starttime="20200530 21:14:10.019"></status>
</kw>
<kw type="foritem" name="${i} = 118">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:10.366" starttime="20200530 21:14:10.365"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:10.669" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:10.669" starttime="20200530 21:14:10.367"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:10.694" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:10.707" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000781 seconds.</msg>
<msg timestamp="20200530 21:14:10.708" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:11 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:10.708" starttime="20200530 21:14:10.670"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:10.709" starttime="20200530 21:14:10.364"></status>
</kw>
<kw type="foritem" name="${i} = 119">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:10.710" starttime="20200530 21:14:10.709"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:11.013" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:11.013" starttime="20200530 21:14:10.711"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:11.041" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:11.055" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.001011 seconds.</msg>
<msg timestamp="20200530 21:14:11.056" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:11 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:11.056" starttime="20200530 21:14:11.014"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:11.056" starttime="20200530 21:14:10.709"></status>
</kw>
<kw type="foritem" name="${i} = 120">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:11.060" starttime="20200530 21:14:11.057"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:11.369" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:11.370" starttime="20200530 21:14:11.061"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:11.396" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:11.408" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000897999999999 seconds.</msg>
<msg timestamp="20200530 21:14:11.409" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:12 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:11.409" starttime="20200530 21:14:11.371"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:11.409" starttime="20200530 21:14:11.056"></status>
</kw>
<kw type="foritem" name="${i} = 121">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:11.411" starttime="20200530 21:14:11.410"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:11.713" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:11.713" starttime="20200530 21:14:11.412"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:11.739" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:11.750" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000511000000001 seconds.</msg>
<msg timestamp="20200530 21:14:11.751" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:12 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:11.751" starttime="20200530 21:14:11.714"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:11.751" starttime="20200530 21:14:11.409"></status>
</kw>
<kw type="foritem" name="${i} = 122">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:11.753" starttime="20200530 21:14:11.751"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:12.054" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:12.054" starttime="20200530 21:14:11.753"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:12.079" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:12.091" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000632000000001 seconds.</msg>
<msg timestamp="20200530 21:14:12.092" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:12 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:12.092" starttime="20200530 21:14:12.055"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:12.092" starttime="20200530 21:14:11.751"></status>
</kw>
<kw type="foritem" name="${i} = 123">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:12.093" starttime="20200530 21:14:12.092"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:12.394" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:12.395" starttime="20200530 21:14:12.094"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:12.419" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:12.432" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000669 seconds.</msg>
<msg timestamp="20200530 21:14:12.433" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:13 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:12.433" starttime="20200530 21:14:12.396"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:12.433" starttime="20200530 21:14:12.092"></status>
</kw>
<kw type="foritem" name="${i} = 124">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:12.436" starttime="20200530 21:14:12.434"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:12.739" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:12.740" starttime="20200530 21:14:12.437"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:12.765" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:12.778" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000659000000001 seconds.</msg>
<msg timestamp="20200530 21:14:12.778" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:13 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:12.778" starttime="20200530 21:14:12.741"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:12.778" starttime="20200530 21:14:12.433"></status>
</kw>
<kw type="foritem" name="${i} = 125">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:12.781" starttime="20200530 21:14:12.779"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:13.084" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:13.085" starttime="20200530 21:14:12.782"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:13.110" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:13.123" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000681 seconds.</msg>
<msg timestamp="20200530 21:14:13.123" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:13 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:13.123" starttime="20200530 21:14:13.085"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:13.123" starttime="20200530 21:14:12.779"></status>
</kw>
<kw type="foritem" name="${i} = 126">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:13.125" starttime="20200530 21:14:13.124"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:13.427" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:13.428" starttime="20200530 21:14:13.126"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:13.455" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:13.467" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000679 seconds.</msg>
<msg timestamp="20200530 21:14:13.468" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:14 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:13.468" starttime="20200530 21:14:13.429"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:13.468" starttime="20200530 21:14:13.124"></status>
</kw>
<kw type="foritem" name="${i} = 127">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:13.470" starttime="20200530 21:14:13.469"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:13.772" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:13.773" starttime="20200530 21:14:13.471"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:13.796" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:13.810" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000959999999999 seconds.</msg>
<msg timestamp="20200530 21:14:13.811" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:14 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:13.811" starttime="20200530 21:14:13.773"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:13.811" starttime="20200530 21:14:13.469"></status>
</kw>
<kw type="foritem" name="${i} = 128">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:13.814" starttime="20200530 21:14:13.812"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:14.125" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:14.126" starttime="20200530 21:14:13.815"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:14.151" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:14.165" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.001087 seconds.</msg>
<msg timestamp="20200530 21:14:14.166" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:14 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:14.166" starttime="20200530 21:14:14.126"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:14.166" starttime="20200530 21:14:13.811"></status>
</kw>
<kw type="foritem" name="${i} = 129">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:14.169" starttime="20200530 21:14:14.167"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:14.471" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:14.471" starttime="20200530 21:14:14.170"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:14.499" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:14.511" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000776999999999 seconds.</msg>
<msg timestamp="20200530 21:14:14.512" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:15 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:14.512" starttime="20200530 21:14:14.472"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:14.512" starttime="20200530 21:14:14.166"></status>
</kw>
<kw type="foritem" name="${i} = 130">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:14.514" starttime="20200530 21:14:14.513"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:14.820" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:14.820" starttime="20200530 21:14:14.515"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:14.846" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:14.859" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000732000000001 seconds.</msg>
<msg timestamp="20200530 21:14:14.860" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:15 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:14.860" starttime="20200530 21:14:14.821"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:14.860" starttime="20200530 21:14:14.512"></status>
</kw>
<kw type="foritem" name="${i} = 131">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:14.862" starttime="20200530 21:14:14.861"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:15.164" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:15.164" starttime="20200530 21:14:14.862"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:15.189" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:15.202" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000712999999999 seconds.</msg>
<msg timestamp="20200530 21:14:15.203" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:15 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:15.203" starttime="20200530 21:14:15.165"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:15.203" starttime="20200530 21:14:14.860"></status>
</kw>
<kw type="foritem" name="${i} = 132">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:15.205" starttime="20200530 21:14:15.204"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:15.507" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:15.507" starttime="20200530 21:14:15.206"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:15.532" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:15.546" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.001384 seconds.</msg>
<msg timestamp="20200530 21:14:15.548" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:16 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:15.548" starttime="20200530 21:14:15.508"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:15.549" starttime="20200530 21:14:15.203"></status>
</kw>
<kw type="foritem" name="${i} = 133">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:15.551" starttime="20200530 21:14:15.550"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:15.859" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:15.860" starttime="20200530 21:14:15.552"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:15.885" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:15.899" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.001068 seconds.</msg>
<msg timestamp="20200530 21:14:15.900" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:16 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:15.900" starttime="20200530 21:14:15.860"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:15.900" starttime="20200530 21:14:15.549"></status>
</kw>
<kw type="foritem" name="${i} = 134">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:15.903" starttime="20200530 21:14:15.902"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:16.209" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:16.209" starttime="20200530 21:14:15.905"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:16.230" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:16.241" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00043 seconds.</msg>
<msg timestamp="20200530 21:14:16.242" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:17 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:16.242" starttime="20200530 21:14:16.210"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:16.242" starttime="20200530 21:14:15.901"></status>
</kw>
<kw type="foritem" name="${i} = 135">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:16.243" starttime="20200530 21:14:16.242"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:16.545" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:16.545" starttime="20200530 21:14:16.244"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:16.570" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:16.582" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000530000000001 seconds.</msg>
<msg timestamp="20200530 21:14:16.582" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:17 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:16.582" starttime="20200530 21:14:16.546"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:16.582" starttime="20200530 21:14:16.242"></status>
</kw>
<kw type="foritem" name="${i} = 136">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:16.584" starttime="20200530 21:14:16.583"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:16.885" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:16.885" starttime="20200530 21:14:16.584"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:16.911" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:16.925" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00095 seconds.</msg>
<msg timestamp="20200530 21:14:16.926" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:17 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:16.926" starttime="20200530 21:14:16.886"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:16.926" starttime="20200530 21:14:16.582"></status>
</kw>
<kw type="foritem" name="${i} = 137">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:16.929" starttime="20200530 21:14:16.927"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:17.250" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:17.251" starttime="20200530 21:14:16.930"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:17.276" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:17.289" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000691 seconds.</msg>
<msg timestamp="20200530 21:14:17.290" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:18 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:17.290" starttime="20200530 21:14:17.252"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:17.290" starttime="20200530 21:14:16.926"></status>
</kw>
<kw type="foritem" name="${i} = 138">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:17.292" starttime="20200530 21:14:17.291"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:17.602" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:17.603" starttime="20200530 21:14:17.293"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:17.627" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:17.640" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000756000000001 seconds.</msg>
<msg timestamp="20200530 21:14:17.640" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:18 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:17.641" starttime="20200530 21:14:17.604"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:17.641" starttime="20200530 21:14:17.290"></status>
</kw>
<kw type="foritem" name="${i} = 139">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:17.643" starttime="20200530 21:14:17.642"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:17.949" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:17.950" starttime="20200530 21:14:17.643"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:17.973" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:17.987" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000966999999999 seconds.</msg>
<msg timestamp="20200530 21:14:17.988" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:18 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:17.988" starttime="20200530 21:14:17.950"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:17.988" starttime="20200530 21:14:17.641"></status>
</kw>
<kw type="foritem" name="${i} = 140">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:17.991" starttime="20200530 21:14:17.989"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:18.295" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:18.296" starttime="20200530 21:14:17.992"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:18.321" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:18.333" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000663000000001 seconds.</msg>
<msg timestamp="20200530 21:14:18.334" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:19 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:18.334" starttime="20200530 21:14:18.296"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:18.334" starttime="20200530 21:14:17.988"></status>
</kw>
<kw type="foritem" name="${i} = 141">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:18.336" starttime="20200530 21:14:18.335"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:18.638" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:18.638" starttime="20200530 21:14:18.337"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:18.664" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:18.675" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000535000000001 seconds.</msg>
<msg timestamp="20200530 21:14:18.676" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:19 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:18.676" starttime="20200530 21:14:18.639"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:18.676" starttime="20200530 21:14:18.334"></status>
</kw>
<kw type="foritem" name="${i} = 142">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:18.678" starttime="20200530 21:14:18.677"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:18.981" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:18.981" starttime="20200530 21:14:18.679"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:19.007" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:19.020" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000644999999999 seconds.</msg>
<msg timestamp="20200530 21:14:19.021" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:19 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:19.021" starttime="20200530 21:14:18.982"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:19.021" starttime="20200530 21:14:18.676"></status>
</kw>
<kw type="foritem" name="${i} = 143">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:19.023" starttime="20200530 21:14:19.022"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:19.325" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:19.326" starttime="20200530 21:14:19.025"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:19.354" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:19.365" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000589 seconds.</msg>
<msg timestamp="20200530 21:14:19.366" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:20 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:19.366" starttime="20200530 21:14:19.327"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:19.366" starttime="20200530 21:14:19.021"></status>
</kw>
<kw type="foritem" name="${i} = 144">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:19.367" starttime="20200530 21:14:19.367"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:19.669" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:19.670" starttime="20200530 21:14:19.369"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:19.693" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:19.706" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00067 seconds.</msg>
<msg timestamp="20200530 21:14:19.707" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:20 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:19.707" starttime="20200530 21:14:19.671"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:19.708" starttime="20200530 21:14:19.366"></status>
</kw>
<kw type="foritem" name="${i} = 145">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:19.710" starttime="20200530 21:14:19.709"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:20.012" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:20.013" starttime="20200530 21:14:19.711"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:20.039" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:20.052" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000882000000001 seconds.</msg>
<msg timestamp="20200530 21:14:20.053" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:20 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:20.053" starttime="20200530 21:14:20.014"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:20.053" starttime="20200530 21:14:19.708"></status>
</kw>
<kw type="foritem" name="${i} = 146">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:20.055" starttime="20200530 21:14:20.054"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:20.358" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:20.358" starttime="20200530 21:14:20.057"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:20.384" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:20.397" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000748 seconds.</msg>
<msg timestamp="20200530 21:14:20.398" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:21 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:20.398" starttime="20200530 21:14:20.359"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:20.398" starttime="20200530 21:14:20.054"></status>
</kw>
<kw type="foritem" name="${i} = 147">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:20.400" starttime="20200530 21:14:20.399"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:20.703" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:20.703" starttime="20200530 21:14:20.401"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:20.729" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:20.743" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.001125 seconds.</msg>
<msg timestamp="20200530 21:14:20.744" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:21 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:20.744" starttime="20200530 21:14:20.704"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:20.744" starttime="20200530 21:14:20.398"></status>
</kw>
<kw type="foritem" name="${i} = 148">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:20.746" starttime="20200530 21:14:20.745"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:21.049" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:21.050" starttime="20200530 21:14:20.746"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:21.076" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:21.089" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000730000000001 seconds.</msg>
<msg timestamp="20200530 21:14:21.090" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:21 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:21.090" starttime="20200530 21:14:21.050"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:21.090" starttime="20200530 21:14:20.744"></status>
</kw>
<kw type="foritem" name="${i} = 149">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:21.092" starttime="20200530 21:14:21.091"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:21.399" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:21.399" starttime="20200530 21:14:21.093"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:21.425" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:21.437" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000758000000001 seconds.</msg>
<msg timestamp="20200530 21:14:21.438" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:22 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:21.438" starttime="20200530 21:14:21.400"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:21.438" starttime="20200530 21:14:21.090"></status>
</kw>
<kw type="foritem" name="${i} = 150">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:21.441" starttime="20200530 21:14:21.439"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:21.743" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:21.744" starttime="20200530 21:14:21.442"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:21.770" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:21.782" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000818000000001 seconds.</msg>
<msg timestamp="20200530 21:14:21.783" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:22 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:21.784" starttime="20200530 21:14:21.745"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:21.784" starttime="20200530 21:14:21.438"></status>
</kw>
<kw type="foritem" name="${i} = 151">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:21.786" starttime="20200530 21:14:21.785"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:22.091" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:22.091" starttime="20200530 21:14:21.787"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:22.115" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:22.127" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000688 seconds.</msg>
<msg timestamp="20200530 21:14:22.128" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:22 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:22.128" starttime="20200530 21:14:22.092"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:22.129" starttime="20200530 21:14:21.784"></status>
</kw>
<kw type="foritem" name="${i} = 152">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:22.131" starttime="20200530 21:14:22.129"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:22.445" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:22.446" starttime="20200530 21:14:22.132"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:22.472" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:22.486" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000987 seconds.</msg>
<msg timestamp="20200530 21:14:22.487" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:23 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:22.487" starttime="20200530 21:14:22.446"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:22.487" starttime="20200530 21:14:22.129"></status>
</kw>
<kw type="foritem" name="${i} = 153">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:22.490" starttime="20200530 21:14:22.489"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:22.793" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:22.793" starttime="20200530 21:14:22.492"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:22.817" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:22.830" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000703 seconds.</msg>
<msg timestamp="20200530 21:14:22.831" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:23 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:22.831" starttime="20200530 21:14:22.794"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:22.831" starttime="20200530 21:14:22.488"></status>
</kw>
<kw type="foritem" name="${i} = 154">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:22.833" starttime="20200530 21:14:22.832"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:23.136" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:23.137" starttime="20200530 21:14:22.834"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:23.163" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:23.177" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000752 seconds.</msg>
<msg timestamp="20200530 21:14:23.178" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:23 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:23.178" starttime="20200530 21:14:23.138"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:23.178" starttime="20200530 21:14:22.831"></status>
</kw>
<kw type="foritem" name="${i} = 155">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:23.180" starttime="20200530 21:14:23.179"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:23.486" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:23.486" starttime="20200530 21:14:23.181"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:23.513" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:23.527" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000696000000001 seconds.</msg>
<msg timestamp="20200530 21:14:23.528" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:24 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:23.528" starttime="20200530 21:14:23.487"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:23.528" starttime="20200530 21:14:23.178"></status>
</kw>
<kw type="foritem" name="${i} = 156">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:23.530" starttime="20200530 21:14:23.529"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:23.833" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:23.833" starttime="20200530 21:14:23.530"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:23.858" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:23.872" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.001355 seconds.</msg>
<msg timestamp="20200530 21:14:23.873" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:24 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:23.874" starttime="20200530 21:14:23.834"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:23.874" starttime="20200530 21:14:23.528"></status>
</kw>
<kw type="foritem" name="${i} = 157">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:23.877" starttime="20200530 21:14:23.875"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:24.178" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:24.179" starttime="20200530 21:14:23.877"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:24.204" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:24.217" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000712 seconds.</msg>
<msg timestamp="20200530 21:14:24.218" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:24 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:24.218" starttime="20200530 21:14:24.180"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:24.218" starttime="20200530 21:14:23.874"></status>
</kw>
<kw type="foritem" name="${i} = 158">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:24.220" starttime="20200530 21:14:24.219"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:24.522" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:24.522" starttime="20200530 21:14:24.221"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:24.549" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:24.560" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000547000000001 seconds.</msg>
<msg timestamp="20200530 21:14:24.561" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:25 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:24.561" starttime="20200530 21:14:24.523"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:24.561" starttime="20200530 21:14:24.218"></status>
</kw>
<kw type="foritem" name="${i} = 159">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:24.563" starttime="20200530 21:14:24.562"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:24.864" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:24.865" starttime="20200530 21:14:24.563"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:24.889" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:24.902" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000715 seconds.</msg>
<msg timestamp="20200530 21:14:24.902" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:25 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:24.903" starttime="20200530 21:14:24.866"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:24.903" starttime="20200530 21:14:24.561"></status>
</kw>
<kw type="foritem" name="${i} = 160">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:24.905" starttime="20200530 21:14:24.904"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:25.207" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:25.207" starttime="20200530 21:14:24.905"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:25.233" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:25.245" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00071 seconds.</msg>
<msg timestamp="20200530 21:14:25.246" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:26 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:25.246" starttime="20200530 21:14:25.208"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:25.246" starttime="20200530 21:14:24.903"></status>
</kw>
<kw type="foritem" name="${i} = 161">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:25.248" starttime="20200530 21:14:25.247"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:25.550" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:25.551" starttime="20200530 21:14:25.249"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:25.573" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:25.586" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000821 seconds.</msg>
<msg timestamp="20200530 21:14:25.586" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:26 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:25.587" starttime="20200530 21:14:25.552"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:25.587" starttime="20200530 21:14:25.246"></status>
</kw>
<kw type="foritem" name="${i} = 162">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:25.590" starttime="20200530 21:14:25.587"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:25.899" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:25.900" starttime="20200530 21:14:25.591"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:25.925" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:25.938" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000724 seconds.</msg>
<msg timestamp="20200530 21:14:25.939" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:26 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:25.939" starttime="20200530 21:14:25.900"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:25.939" starttime="20200530 21:14:25.587"></status>
</kw>
<kw type="foritem" name="${i} = 163">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:25.941" starttime="20200530 21:14:25.940"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:26.243" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:26.243" starttime="20200530 21:14:25.942"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:26.268" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:26.281" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000700999999999 seconds.</msg>
<msg timestamp="20200530 21:14:26.281" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:27 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:26.282" starttime="20200530 21:14:26.244"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:26.282" starttime="20200530 21:14:25.939"></status>
</kw>
<kw type="foritem" name="${i} = 164">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:26.284" starttime="20200530 21:14:26.283"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:26.585" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:26.586" starttime="20200530 21:14:26.284"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:26.609" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:26.620" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000525 seconds.</msg>
<msg timestamp="20200530 21:14:26.621" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:27 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:26.621" starttime="20200530 21:14:26.586"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:26.621" starttime="20200530 21:14:26.282"></status>
</kw>
<kw type="foritem" name="${i} = 165">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:26.622" starttime="20200530 21:14:26.622"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:26.927" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:26.927" starttime="20200530 21:14:26.623"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:26.954" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:26.966" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000756000000001 seconds.</msg>
<msg timestamp="20200530 21:14:26.967" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:27 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:26.967" starttime="20200530 21:14:26.928"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:26.967" starttime="20200530 21:14:26.621"></status>
</kw>
<kw type="foritem" name="${i} = 166">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:26.969" starttime="20200530 21:14:26.968"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:27.271" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:27.272" starttime="20200530 21:14:26.970"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:27.294" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:27.308" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.001007 seconds.</msg>
<msg timestamp="20200530 21:14:27.309" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:28 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:27.309" starttime="20200530 21:14:27.273"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:27.309" starttime="20200530 21:14:26.967"></status>
</kw>
<kw type="foritem" name="${i} = 167">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:27.312" starttime="20200530 21:14:27.310"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:27.616" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:27.616" starttime="20200530 21:14:27.314"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:27.643" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:27.654" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000845999999999 seconds.</msg>
<msg timestamp="20200530 21:14:27.655" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:28 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:27.655" starttime="20200530 21:14:27.617"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:27.655" starttime="20200530 21:14:27.310"></status>
</kw>
<kw type="foritem" name="${i} = 168">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:27.657" starttime="20200530 21:14:27.656"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:27.959" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:27.959" starttime="20200530 21:14:27.658"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:27.985" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:27.995" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000705999999999 seconds.</msg>
<msg timestamp="20200530 21:14:27.996" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:28 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:27.996" starttime="20200530 21:14:27.960"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:27.996" starttime="20200530 21:14:27.655"></status>
</kw>
<kw type="foritem" name="${i} = 169">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:27.998" starttime="20200530 21:14:27.997"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:28.299" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:28.300" starttime="20200530 21:14:27.998"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:28.324" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:28.337" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000795999999999 seconds.</msg>
<msg timestamp="20200530 21:14:28.339" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:29 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:28.339" starttime="20200530 21:14:28.301"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:28.339" starttime="20200530 21:14:27.996"></status>
</kw>
<kw type="foritem" name="${i} = 170">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:28.341" starttime="20200530 21:14:28.340"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200530 21:14:28.643" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200530 21:14:28.644" starttime="20200530 21:14:28.342"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:28.667" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200530 21:14:28.682" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.001124 seconds.</msg>
<msg timestamp="20200530 21:14:28.683" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:29 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200530 21:14:28.683" starttime="20200530 21:14:28.645"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:28.683" starttime="20200530 21:14:28.339"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:28.683" starttime="20200530 21:13:29.492"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:28.684" starttime="20200530 21:13:29.485"></status>
</kw>
<kw name="Enable All Tx Port">
<tags>
<tag>Enable Pon Port Tx</tag>
</tags>
<doc>Enable all port function</doc>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:28.748" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/</msg>
<msg timestamp="20200530 21:14:28.768" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/: 0.001218 seconds.</msg>
<msg timestamp="20200530 21:14:28.770" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:29 GMT
connection Keep-Alive
content-type application/json
content-length 1467


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPortCollection.EthernetSwitchPor...</msg>
<status status="PASS" endtime="20200530 21:14:28.770" starttime="20200530 21:14:28.686"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200530 21:14:28.772" level="INFO">Length is 20</msg>
<msg timestamp="20200530 21:14:28.772" level="INFO">${item_count} = 20</msg>
<status status="PASS" endtime="20200530 21:14:28.772" starttime="20200530 21:14:28.771"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Enable All Pon Port Tx ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:28.776" starttime="20200530 21:14:28.773"></status>
</kw>
<kw type="for" name="${ID} IN RANGE [ 1 | ${item_count} ]">
<kw type="foritem" name="${ID} = 1">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:28.798" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200530 21:14:28.819" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000565000000002 seconds.</msg>
<msg timestamp="20200530 21:14:28.820" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:29 GMT
connection Keep-Alive
content-type application/json
content-length 2401


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200530 21:14:28.820" starttime="20200530 21:14:28.778"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:14:28.821" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:14:28.821" starttime="20200530 21:14:28.820"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200530 21:14:28.822" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200530 21:14:28.822" starttime="20200530 21:14:28.821"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200530 21:14:28.823" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200530 21:14:28.823" starttime="20200530 21:14:28.822"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:28.824" starttime="20200530 21:14:28.823"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:28.825" starttime="20200530 21:14:28.824"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:28.826" starttime="20200530 21:14:28.825"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
</arguments>
<kw name="Test Tx Op Up">
<tags>
<tag>Test tx_disable</tag>
</tags>
<doc>Test SFP port tx disable function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OP_UP)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200530 21:14:28.834" level="INFO">${payload} = {u'OperationalState': u'Up'}</msg>
<status status="PASS" endtime="20200530 21:14:28.834" starttime="20200530 21:14:28.829"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<msg timestamp="20200530 21:14:28.869" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200530 21:14:28.900" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.00079 seconds.</msg>
<status status="PASS" endtime="20200530 21:14:28.900" starttime="20200530 21:14:28.856"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:28.900" starttime="20200530 21:14:28.828"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:28.901" starttime="20200530 21:14:28.827"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:28.901" starttime="20200530 21:14:28.826"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:28.901" starttime="20200530 21:14:28.777"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:28.901" starttime="20200530 21:14:28.777"></status>
</kw>
<kw type="foritem" name="${ID} = 2">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:28.923" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/2</msg>
<msg timestamp="20200530 21:14:28.948" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/2: 0.001264 seconds.</msg>
<msg timestamp="20200530 21:14:28.949" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:29 GMT
connection Keep-Alive
content-type application/json
content-length 2396


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200530 21:14:28.949" starttime="20200530 21:14:28.902"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:14:28.952" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:14:28.952" starttime="20200530 21:14:28.950"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200530 21:14:28.954" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200530 21:14:28.954" starttime="20200530 21:14:28.953"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200530 21:14:28.962" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200530 21:14:28.963" starttime="20200530 21:14:28.961"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:28.965" starttime="20200530 21:14:28.963"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:28.967" starttime="20200530 21:14:28.966"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:28.970" starttime="20200530 21:14:28.968"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
</arguments>
<kw name="Test Tx Op Up">
<tags>
<tag>Test tx_disable</tag>
</tags>
<doc>Test SFP port tx disable function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OP_UP)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200530 21:14:28.987" level="INFO">${payload} = {u'OperationalState': u'Up'}</msg>
<status status="PASS" endtime="20200530 21:14:28.987" starttime="20200530 21:14:28.976"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<msg timestamp="20200530 21:14:28.999" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/2</msg>
<msg timestamp="20200530 21:14:29.051" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/2: 0.001229 seconds.</msg>
<status status="PASS" endtime="20200530 21:14:29.052" starttime="20200530 21:14:28.987"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.052" starttime="20200530 21:14:28.974"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.053" starttime="20200530 21:14:28.973"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.053" starttime="20200530 21:14:28.971"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.053" starttime="20200530 21:14:28.901"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.053" starttime="20200530 21:14:28.901"></status>
</kw>
<kw type="foritem" name="${ID} = 3">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:29.079" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/3</msg>
<msg timestamp="20200530 21:14:29.091" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/3: 0.000557000000001 seconds.</msg>
<msg timestamp="20200530 21:14:29.092" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:29 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200530 21:14:29.092" starttime="20200530 21:14:29.056"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:14:29.093" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:14:29.093" starttime="20200530 21:14:29.092"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200530 21:14:29.094" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200530 21:14:29.094" starttime="20200530 21:14:29.094"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200530 21:14:29.095" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200530 21:14:29.096" starttime="20200530 21:14:29.095"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.096" starttime="20200530 21:14:29.096"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.098" starttime="20200530 21:14:29.097"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.099" starttime="20200530 21:14:29.098"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.101" starttime="20200530 21:14:29.100"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.101" starttime="20200530 21:14:29.099"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.101" starttime="20200530 21:14:29.054"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.101" starttime="20200530 21:14:29.054"></status>
</kw>
<kw type="foritem" name="${ID} = 4">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:29.111" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/4</msg>
<msg timestamp="20200530 21:14:29.122" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/4: 0.000394 seconds.</msg>
<msg timestamp="20200530 21:14:29.122" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:29 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200530 21:14:29.122" starttime="20200530 21:14:29.102"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:14:29.123" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:14:29.123" starttime="20200530 21:14:29.123"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200530 21:14:29.124" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200530 21:14:29.124" starttime="20200530 21:14:29.123"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200530 21:14:29.124" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200530 21:14:29.124" starttime="20200530 21:14:29.124"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.125" starttime="20200530 21:14:29.125"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.125" starttime="20200530 21:14:29.125"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.126" starttime="20200530 21:14:29.126"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.127" starttime="20200530 21:14:29.127"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.127" starttime="20200530 21:14:29.126"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.127" starttime="20200530 21:14:29.101"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.127" starttime="20200530 21:14:29.101"></status>
</kw>
<kw type="foritem" name="${ID} = 5">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:29.134" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/5</msg>
<msg timestamp="20200530 21:14:29.144" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/5: 0.000278 seconds.</msg>
<msg timestamp="20200530 21:14:29.144" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:29 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200530 21:14:29.144" starttime="20200530 21:14:29.128"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:14:29.145" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:14:29.145" starttime="20200530 21:14:29.145"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200530 21:14:29.146" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200530 21:14:29.146" starttime="20200530 21:14:29.145"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200530 21:14:29.146" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200530 21:14:29.146" starttime="20200530 21:14:29.146"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.147" starttime="20200530 21:14:29.146"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.147" starttime="20200530 21:14:29.147"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.148" starttime="20200530 21:14:29.147"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.149" starttime="20200530 21:14:29.149"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.149" starttime="20200530 21:14:29.148"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.149" starttime="20200530 21:14:29.127"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.149" starttime="20200530 21:14:29.127"></status>
</kw>
<kw type="foritem" name="${ID} = 6">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:29.155" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/6</msg>
<msg timestamp="20200530 21:14:29.186" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/6: 0.000397999999999 seconds.</msg>
<msg timestamp="20200530 21:14:29.187" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:29 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200530 21:14:29.187" starttime="20200530 21:14:29.150"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:14:29.188" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:14:29.188" starttime="20200530 21:14:29.187"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200530 21:14:29.188" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200530 21:14:29.189" starttime="20200530 21:14:29.188"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200530 21:14:29.189" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200530 21:14:29.189" starttime="20200530 21:14:29.189"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.190" starttime="20200530 21:14:29.189"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.190" starttime="20200530 21:14:29.190"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.191" starttime="20200530 21:14:29.191"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.192" starttime="20200530 21:14:29.192"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.192" starttime="20200530 21:14:29.192"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.193" starttime="20200530 21:14:29.149"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.193" starttime="20200530 21:14:29.149"></status>
</kw>
<kw type="foritem" name="${ID} = 7">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:29.201" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/7</msg>
<msg timestamp="20200530 21:14:29.212" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/7: 0.000427999999999 seconds.</msg>
<msg timestamp="20200530 21:14:29.213" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:29 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200530 21:14:29.213" starttime="20200530 21:14:29.193"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:14:29.213" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:14:29.214" starttime="20200530 21:14:29.213"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200530 21:14:29.214" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200530 21:14:29.214" starttime="20200530 21:14:29.214"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200530 21:14:29.215" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200530 21:14:29.215" starttime="20200530 21:14:29.214"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.215" starttime="20200530 21:14:29.215"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.216" starttime="20200530 21:14:29.216"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.217" starttime="20200530 21:14:29.216"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.218" starttime="20200530 21:14:29.218"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.218" starttime="20200530 21:14:29.217"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.218" starttime="20200530 21:14:29.193"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.218" starttime="20200530 21:14:29.193"></status>
</kw>
<kw type="foritem" name="${ID} = 8">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:29.226" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/8</msg>
<msg timestamp="20200530 21:14:29.237" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/8: 0.000335999999999 seconds.</msg>
<msg timestamp="20200530 21:14:29.237" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:29 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200530 21:14:29.237" starttime="20200530 21:14:29.219"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:14:29.238" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:14:29.238" starttime="20200530 21:14:29.237"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200530 21:14:29.239" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200530 21:14:29.239" starttime="20200530 21:14:29.238"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200530 21:14:29.239" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200530 21:14:29.239" starttime="20200530 21:14:29.239"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.240" starttime="20200530 21:14:29.239"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.240" starttime="20200530 21:14:29.240"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.241" starttime="20200530 21:14:29.241"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.242" starttime="20200530 21:14:29.242"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.242" starttime="20200530 21:14:29.242"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.243" starttime="20200530 21:14:29.219"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.243" starttime="20200530 21:14:29.219"></status>
</kw>
<kw type="foritem" name="${ID} = 9">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:29.250" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/9</msg>
<msg timestamp="20200530 21:14:29.261" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/9: 0.000328000000001 seconds.</msg>
<msg timestamp="20200530 21:14:29.261" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:30 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200530 21:14:29.261" starttime="20200530 21:14:29.243"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:14:29.262" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:14:29.262" starttime="20200530 21:14:29.262"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200530 21:14:29.263" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200530 21:14:29.263" starttime="20200530 21:14:29.262"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200530 21:14:29.263" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200530 21:14:29.263" starttime="20200530 21:14:29.263"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.264" starttime="20200530 21:14:29.263"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.264" starttime="20200530 21:14:29.264"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.265" starttime="20200530 21:14:29.265"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.266" starttime="20200530 21:14:29.266"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.266" starttime="20200530 21:14:29.265"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.267" starttime="20200530 21:14:29.243"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.267" starttime="20200530 21:14:29.243"></status>
</kw>
<kw type="foritem" name="${ID} = 10">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:29.274" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/10</msg>
<msg timestamp="20200530 21:14:29.296" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/10: 0.000575 seconds.</msg>
<msg timestamp="20200530 21:14:29.297" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:30 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200530 21:14:29.297" starttime="20200530 21:14:29.267"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:14:29.297" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:14:29.298" starttime="20200530 21:14:29.297"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200530 21:14:29.298" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200530 21:14:29.298" starttime="20200530 21:14:29.298"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200530 21:14:29.299" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200530 21:14:29.299" starttime="20200530 21:14:29.299"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.300" starttime="20200530 21:14:29.299"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.301" starttime="20200530 21:14:29.300"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.302" starttime="20200530 21:14:29.301"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.303" starttime="20200530 21:14:29.303"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.303" starttime="20200530 21:14:29.302"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.303" starttime="20200530 21:14:29.267"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.303" starttime="20200530 21:14:29.267"></status>
</kw>
<kw type="foritem" name="${ID} = 11">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:29.313" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/11</msg>
<msg timestamp="20200530 21:14:29.324" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/11: 0.000489 seconds.</msg>
<msg timestamp="20200530 21:14:29.324" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:30 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200530 21:14:29.324" starttime="20200530 21:14:29.304"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:14:29.325" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:14:29.325" starttime="20200530 21:14:29.325"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200530 21:14:29.326" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200530 21:14:29.326" starttime="20200530 21:14:29.326"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200530 21:14:29.327" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200530 21:14:29.327" starttime="20200530 21:14:29.327"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.328" starttime="20200530 21:14:29.327"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.329" starttime="20200530 21:14:29.328"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.330" starttime="20200530 21:14:29.329"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.331" starttime="20200530 21:14:29.331"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.331" starttime="20200530 21:14:29.330"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.331" starttime="20200530 21:14:29.304"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.331" starttime="20200530 21:14:29.304"></status>
</kw>
<kw type="foritem" name="${ID} = 12">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:29.340" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/12</msg>
<msg timestamp="20200530 21:14:29.351" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/12: 0.000318999999999 seconds.</msg>
<msg timestamp="20200530 21:14:29.351" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:30 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200530 21:14:29.351" starttime="20200530 21:14:29.332"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:14:29.352" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:14:29.352" starttime="20200530 21:14:29.351"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200530 21:14:29.353" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200530 21:14:29.353" starttime="20200530 21:14:29.352"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200530 21:14:29.353" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200530 21:14:29.353" starttime="20200530 21:14:29.353"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.354" starttime="20200530 21:14:29.353"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.355" starttime="20200530 21:14:29.354"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.355" starttime="20200530 21:14:29.355"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.356" starttime="20200530 21:14:29.356"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.356" starttime="20200530 21:14:29.356"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.356" starttime="20200530 21:14:29.332"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.356" starttime="20200530 21:14:29.331"></status>
</kw>
<kw type="foritem" name="${ID} = 13">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:29.364" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/13</msg>
<msg timestamp="20200530 21:14:29.402" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/13: 0.001102 seconds.</msg>
<msg timestamp="20200530 21:14:29.404" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:30 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200530 21:14:29.404" starttime="20200530 21:14:29.357"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:14:29.406" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:14:29.406" starttime="20200530 21:14:29.405"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200530 21:14:29.408" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200530 21:14:29.408" starttime="20200530 21:14:29.407"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200530 21:14:29.410" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200530 21:14:29.410" starttime="20200530 21:14:29.409"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.412" starttime="20200530 21:14:29.411"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.414" starttime="20200530 21:14:29.413"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.417" starttime="20200530 21:14:29.415"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.421" starttime="20200530 21:14:29.420"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.421" starttime="20200530 21:14:29.418"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.422" starttime="20200530 21:14:29.357"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.422" starttime="20200530 21:14:29.357"></status>
</kw>
<kw type="foritem" name="${ID} = 14">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:29.435" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/14</msg>
<msg timestamp="20200530 21:14:29.447" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/14: 0.000366 seconds.</msg>
<msg timestamp="20200530 21:14:29.447" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:30 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200530 21:14:29.447" starttime="20200530 21:14:29.423"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:14:29.448" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:14:29.448" starttime="20200530 21:14:29.448"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200530 21:14:29.449" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200530 21:14:29.449" starttime="20200530 21:14:29.448"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200530 21:14:29.449" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200530 21:14:29.449" starttime="20200530 21:14:29.449"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.450" starttime="20200530 21:14:29.449"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.451" starttime="20200530 21:14:29.450"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.452" starttime="20200530 21:14:29.451"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.454" starttime="20200530 21:14:29.453"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.454" starttime="20200530 21:14:29.452"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.455" starttime="20200530 21:14:29.422"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.455" starttime="20200530 21:14:29.422"></status>
</kw>
<kw type="foritem" name="${ID} = 15">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:29.501" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/15</msg>
<msg timestamp="20200530 21:14:29.512" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/15: 0.000685000000001 seconds.</msg>
<msg timestamp="20200530 21:14:29.513" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:30 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200530 21:14:29.513" starttime="20200530 21:14:29.455"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:14:29.514" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:14:29.514" starttime="20200530 21:14:29.513"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200530 21:14:29.516" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200530 21:14:29.516" starttime="20200530 21:14:29.514"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200530 21:14:29.517" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200530 21:14:29.517" starttime="20200530 21:14:29.516"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.518" starttime="20200530 21:14:29.517"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.519" starttime="20200530 21:14:29.518"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.520" starttime="20200530 21:14:29.519"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.522" starttime="20200530 21:14:29.522"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.522" starttime="20200530 21:14:29.521"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.523" starttime="20200530 21:14:29.455"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.523" starttime="20200530 21:14:29.455"></status>
</kw>
<kw type="foritem" name="${ID} = 16">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:29.535" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/16</msg>
<msg timestamp="20200530 21:14:29.547" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/16: 0.000391 seconds.</msg>
<msg timestamp="20200530 21:14:29.547" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:30 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200530 21:14:29.547" starttime="20200530 21:14:29.524"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:14:29.548" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:14:29.548" starttime="20200530 21:14:29.548"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200530 21:14:29.549" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200530 21:14:29.549" starttime="20200530 21:14:29.548"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200530 21:14:29.549" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200530 21:14:29.549" starttime="20200530 21:14:29.549"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.550" starttime="20200530 21:14:29.550"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.551" starttime="20200530 21:14:29.550"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.551" starttime="20200530 21:14:29.551"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.552" starttime="20200530 21:14:29.552"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.553" starttime="20200530 21:14:29.552"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.553" starttime="20200530 21:14:29.523"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.553" starttime="20200530 21:14:29.523"></status>
</kw>
<kw type="foritem" name="${ID} = 17">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:29.561" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/17</msg>
<msg timestamp="20200530 21:14:29.842" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/17: 0.00145 seconds.</msg>
<msg timestamp="20200530 21:14:29.843" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:30 GMT
connection Keep-Alive
content-type application/json
content-length 2440


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200530 21:14:29.843" starttime="20200530 21:14:29.553"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:14:29.846" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:14:29.846" starttime="20200530 21:14:29.844"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200530 21:14:29.848" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200530 21:14:29.849" starttime="20200530 21:14:29.847"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200530 21:14:29.851" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200530 21:14:29.851" starttime="20200530 21:14:29.849"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.853" starttime="20200530 21:14:29.852"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.856" starttime="20200530 21:14:29.855"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.859" starttime="20200530 21:14:29.857"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.863" starttime="20200530 21:14:29.862"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.864" starttime="20200530 21:14:29.860"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.864" starttime="20200530 21:14:29.553"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.864" starttime="20200530 21:14:29.553"></status>
</kw>
<kw type="foritem" name="${ID} = 18">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:29.880" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/18</msg>
<msg timestamp="20200530 21:14:29.892" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/18: 0.000388000000001 seconds.</msg>
<msg timestamp="20200530 21:14:29.892" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:30 GMT
connection Keep-Alive
content-type application/json
content-length 1056


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200530 21:14:29.892" starttime="20200530 21:14:29.867"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:14:29.893" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:14:29.893" starttime="20200530 21:14:29.893"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200530 21:14:29.894" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200530 21:14:29.894" starttime="20200530 21:14:29.893"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200530 21:14:29.894" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200530 21:14:29.894" starttime="20200530 21:14:29.894"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.895" starttime="20200530 21:14:29.895"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.896" starttime="20200530 21:14:29.895"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.897" starttime="20200530 21:14:29.896"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.898" starttime="20200530 21:14:29.897"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.898" starttime="20200530 21:14:29.897"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.898" starttime="20200530 21:14:29.865"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.898" starttime="20200530 21:14:29.865"></status>
</kw>
<kw type="foritem" name="${ID} = 19">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200530 21:14:29.906" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/19</msg>
<msg timestamp="20200530 21:14:29.917" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/19: 0.000435999999999 seconds.</msg>
<msg timestamp="20200530 21:14:29.917" level="INFO">${resp} = 200
date Sat, 30 May 2020 13:14:30 GMT
connection Keep-Alive
content-type application/json
content-length 1056


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200530 21:14:29.917" starttime="20200530 21:14:29.899"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200530 21:14:29.918" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200530 21:14:29.918" starttime="20200530 21:14:29.918"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200530 21:14:29.919" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200530 21:14:29.919" starttime="20200530 21:14:29.918"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200530 21:14:29.919" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200530 21:14:29.919" starttime="20200530 21:14:29.919"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.920" starttime="20200530 21:14:29.920"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.921" starttime="20200530 21:14:29.920"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.922" starttime="20200530 21:14:29.921"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200530 21:14:29.923" starttime="20200530 21:14:29.923"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.923" starttime="20200530 21:14:29.922"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.924" starttime="20200530 21:14:29.898"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.924" starttime="20200530 21:14:29.898"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.924" starttime="20200530 21:14:28.776"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.924" starttime="20200530 21:14:28.685"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.924" starttime="20200530 21:13:29.485"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200530 21:14:29.931" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200530 21:14:29.943" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.001023 seconds.</msg>
<msg timestamp="20200530 21:14:29.944" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200530 21:14:29.945" starttime="20200530 21:14:29.925"></status>
</kw>
<status status="PASS" endtime="20200530 21:14:29.945" starttime="20200530 21:14:29.924"></status>
</kw>
<doc>Test omci send</doc>
<tags>
<tag>Test omci send</tag>
</tags>
<status status="PASS" endtime="20200530 21:14:29.945" critical="yes" starttime="20200530 21:13:29.455"></status>
</test>
<doc>Test BAL Rstful functionality.</doc>
<status status="FAIL" endtime="20200530 21:14:29.949" starttime="20200530 21:12:21.335"></status>
</suite>
<status status="FAIL" endtime="20200530 21:14:29.956" starttime="20200530 21:12:21.243"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="3">Critical Tests</stat>
<stat fail="1" pass="3">All Tests</stat>
</total>
<tag>
<stat fail="0" pass="1">Test Bal Restful opertaion test</stat>
<stat fail="0" pass="1">Test Flow add</stat>
<stat fail="0" pass="1">Test omci send</stat>
<stat fail="1" pass="0">Test ONU Rnage test</stat>
</tag>
<suite>
<stat fail="1" id="s1" name="Bal Test" pass="3">Bal Test</stat>
<stat fail="1" id="s1-s1" name="Test Bal" pass="3">Bal Test.Test Bal</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
