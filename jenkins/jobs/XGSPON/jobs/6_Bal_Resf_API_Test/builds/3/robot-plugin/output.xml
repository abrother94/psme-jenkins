<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200521 14:03:45.629" generator="Robot 3.1.1 (Python 2.7.12 on linux2)">
<suite source="/home/voltha/workspace/XGSPON/Bal_Resf_API_Test/RF_Auto_Test/bal_test" id="s1" name="Bal Test">
<suite source="/home/voltha/workspace/XGSPON/Bal_Resf_API_Test/RF_Auto_Test/bal_test/test_bal.robot" id="s1-s1" name="Test Bal">
<test id="s1-s1-t1" name="Verify Restful API for BAL Test">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200521 14:03:47.367" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200521 14:03:47.386" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000748 seconds.</msg>
<msg timestamp="20200521 14:03:47.386" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200521 14:03:47.386" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200521 14:03:47.387" starttime="20200521 14:03:47.358"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:47.387" starttime="20200521 14:03:47.357"></status>
</kw>
<kw name="Test Bal Component">
<tags>
<tag>Bal_Component</tag>
</tags>
<doc>Do basic test 1.Enable All PON MAC PON NNI port enable/disable.</doc>
<kw name="Disable All Tx Port">
<tags>
<tag>Disable Pon Port Tx</tag>
</tags>
<doc>Disable all port function</doc>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:03:47.411" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/</msg>
<msg timestamp="20200521 14:03:47.534" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/: 0.00053 seconds.</msg>
<msg timestamp="20200521 14:03:47.535" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:03:47 GMT
connection Keep-Alive
content-type application/json
content-length 1467


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPortCollection.EthernetSwitchPor...</msg>
<status status="PASS" endtime="20200521 14:03:47.535" starttime="20200521 14:03:47.388"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200521 14:03:47.536" level="INFO">Length is 20</msg>
<msg timestamp="20200521 14:03:47.536" level="INFO">${item_count} = 20</msg>
<status status="PASS" endtime="20200521 14:03:47.536" starttime="20200521 14:03:47.535"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable All Pon Port ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:47.537" starttime="20200521 14:03:47.537"></status>
</kw>
<kw type="for" name="${ID} IN RANGE [ 1 | ${item_count} ]">
<kw type="foritem" name="${ID} = 1">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:03:47.553" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200521 14:03:47.588" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000555 seconds.</msg>
<msg timestamp="20200521 14:03:47.588" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:03:47 GMT
connection Keep-Alive
content-type application/json
content-length 2310


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:03:47.589" starttime="20200521 14:03:47.538"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:03:47.590" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:03:47.590" starttime="20200521 14:03:47.589"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:03:47.591" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200521 14:03:47.591" starttime="20200521 14:03:47.590"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:03:47.592" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:03:47.592" starttime="20200521 14:03:47.592"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:47.595" starttime="20200521 14:03:47.593"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:47.598" starttime="20200521 14:03:47.597"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:47.602" starttime="20200521 14:03:47.602"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
</arguments>
<kw name="Test Tx Op Down">
<tags>
<tag>Test tx_disable</tag>
</tags>
<doc>Test SFP port tx disable function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OP_DOWN)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 14:03:47.611" level="INFO">${payload} = {u'OperationalState': u'Down'}</msg>
<status status="PASS" endtime="20200521 14:03:47.611" starttime="20200521 14:03:47.606"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<msg timestamp="20200521 14:03:47.627" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200521 14:03:47.649" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000711 seconds.</msg>
<status status="PASS" endtime="20200521 14:03:47.650" starttime="20200521 14:03:47.612"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:47.650" starttime="20200521 14:03:47.605"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:47.651" starttime="20200521 14:03:47.604"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:47.651" starttime="20200521 14:03:47.603"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:47.651" starttime="20200521 14:03:47.538"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:47.651" starttime="20200521 14:03:47.537"></status>
</kw>
<kw type="foritem" name="${ID} = 2">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:03:47.665" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/2</msg>
<msg timestamp="20200521 14:03:47.675" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/2: 0.000517 seconds.</msg>
<msg timestamp="20200521 14:03:47.675" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:03:47 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:03:47.676" starttime="20200521 14:03:47.652"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:03:47.677" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:03:47.677" starttime="20200521 14:03:47.676"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:03:47.678" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:03:47.678" starttime="20200521 14:03:47.677"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:03:47.679" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:03:47.679" starttime="20200521 14:03:47.678"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:47.680" starttime="20200521 14:03:47.679"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:47.681" starttime="20200521 14:03:47.680"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:47.684" starttime="20200521 14:03:47.683"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:47.686" starttime="20200521 14:03:47.685"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:47.686" starttime="20200521 14:03:47.684"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:47.686" starttime="20200521 14:03:47.651"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:47.686" starttime="20200521 14:03:47.651"></status>
</kw>
<kw type="foritem" name="${ID} = 3">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:03:47.714" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/3</msg>
<msg timestamp="20200521 14:03:47.728" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/3: 0.000678 seconds.</msg>
<msg timestamp="20200521 14:03:47.729" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:03:48 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:03:47.730" starttime="20200521 14:03:47.687"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:03:47.731" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:03:47.731" starttime="20200521 14:03:47.730"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:03:47.732" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:03:47.732" starttime="20200521 14:03:47.731"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:03:47.733" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:03:47.733" starttime="20200521 14:03:47.732"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:47.734" starttime="20200521 14:03:47.733"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:47.739" starttime="20200521 14:03:47.738"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:47.741" starttime="20200521 14:03:47.740"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:47.743" starttime="20200521 14:03:47.742"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:47.743" starttime="20200521 14:03:47.742"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:47.743" starttime="20200521 14:03:47.686"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:47.744" starttime="20200521 14:03:47.686"></status>
</kw>
<kw type="foritem" name="${ID} = 4">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:03:47.770" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/4</msg>
<msg timestamp="20200521 14:03:47.782" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/4: 0.000784 seconds.</msg>
<msg timestamp="20200521 14:03:47.783" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:03:48 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:03:47.783" starttime="20200521 14:03:47.745"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:03:47.784" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:03:47.784" starttime="20200521 14:03:47.784"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:03:47.785" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:03:47.785" starttime="20200521 14:03:47.785"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:03:47.786" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:03:47.786" starttime="20200521 14:03:47.785"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:47.787" starttime="20200521 14:03:47.786"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:47.788" starttime="20200521 14:03:47.787"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:47.789" starttime="20200521 14:03:47.789"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:47.791" starttime="20200521 14:03:47.791"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:47.792" starttime="20200521 14:03:47.790"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:47.792" starttime="20200521 14:03:47.744"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:47.792" starttime="20200521 14:03:47.744"></status>
</kw>
<kw type="foritem" name="${ID} = 5">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:03:47.804" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/5</msg>
<msg timestamp="20200521 14:03:47.820" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/5: 0.000546 seconds.</msg>
<msg timestamp="20200521 14:03:47.821" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:03:48 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:03:47.821" starttime="20200521 14:03:47.793"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:03:47.822" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:03:47.822" starttime="20200521 14:03:47.821"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:03:47.823" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:03:47.823" starttime="20200521 14:03:47.822"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:03:47.824" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:03:47.824" starttime="20200521 14:03:47.823"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:47.825" starttime="20200521 14:03:47.824"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:47.826" starttime="20200521 14:03:47.825"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:47.827" starttime="20200521 14:03:47.826"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:47.829" starttime="20200521 14:03:47.828"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:47.829" starttime="20200521 14:03:47.827"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:47.829" starttime="20200521 14:03:47.792"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:47.829" starttime="20200521 14:03:47.792"></status>
</kw>
<kw type="foritem" name="${ID} = 6">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:03:47.840" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/6</msg>
<msg timestamp="20200521 14:03:47.852" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/6: 0.000726 seconds.</msg>
<msg timestamp="20200521 14:03:47.852" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:03:48 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:03:47.853" starttime="20200521 14:03:47.830"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:03:47.854" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:03:47.854" starttime="20200521 14:03:47.853"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:03:47.855" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:03:47.855" starttime="20200521 14:03:47.854"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:03:47.856" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:03:47.856" starttime="20200521 14:03:47.855"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:47.856" starttime="20200521 14:03:47.856"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:47.857" starttime="20200521 14:03:47.857"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:47.858" starttime="20200521 14:03:47.858"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:47.860" starttime="20200521 14:03:47.860"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:47.860" starttime="20200521 14:03:47.859"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:47.860" starttime="20200521 14:03:47.829"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:47.860" starttime="20200521 14:03:47.829"></status>
</kw>
<kw type="foritem" name="${ID} = 7">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:03:47.873" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/7</msg>
<msg timestamp="20200521 14:03:47.885" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/7: 0.00051 seconds.</msg>
<msg timestamp="20200521 14:03:47.886" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:03:48 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:03:47.912" starttime="20200521 14:03:47.861"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:03:47.913" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:03:47.913" starttime="20200521 14:03:47.912"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:03:47.914" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:03:47.914" starttime="20200521 14:03:47.913"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:03:47.915" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:03:47.915" starttime="20200521 14:03:47.914"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:47.916" starttime="20200521 14:03:47.915"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:47.917" starttime="20200521 14:03:47.916"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:47.918" starttime="20200521 14:03:47.917"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:47.920" starttime="20200521 14:03:47.919"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:47.920" starttime="20200521 14:03:47.919"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:47.920" starttime="20200521 14:03:47.861"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:47.920" starttime="20200521 14:03:47.860"></status>
</kw>
<kw type="foritem" name="${ID} = 8">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:03:47.932" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/8</msg>
<msg timestamp="20200521 14:03:47.944" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/8: 0.000609 seconds.</msg>
<msg timestamp="20200521 14:03:47.945" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:03:48 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:03:47.945" starttime="20200521 14:03:47.921"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:03:47.947" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:03:47.947" starttime="20200521 14:03:47.945"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:03:47.948" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:03:47.948" starttime="20200521 14:03:47.947"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:03:47.948" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:03:47.949" starttime="20200521 14:03:47.948"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:47.949" starttime="20200521 14:03:47.949"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:47.950" starttime="20200521 14:03:47.950"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:47.951" starttime="20200521 14:03:47.950"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:47.953" starttime="20200521 14:03:47.952"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:47.953" starttime="20200521 14:03:47.951"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:47.953" starttime="20200521 14:03:47.920"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:47.953" starttime="20200521 14:03:47.920"></status>
</kw>
<kw type="foritem" name="${ID} = 9">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:03:47.965" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/9</msg>
<msg timestamp="20200521 14:03:47.977" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/9: 0.000583 seconds.</msg>
<msg timestamp="20200521 14:03:47.977" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:03:48 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:03:47.977" starttime="20200521 14:03:47.954"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:03:47.978" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:03:47.979" starttime="20200521 14:03:47.978"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:03:47.979" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:03:47.980" starttime="20200521 14:03:47.979"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:03:47.980" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:03:47.980" starttime="20200521 14:03:47.980"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:48.018" starttime="20200521 14:03:47.981"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:48.019" starttime="20200521 14:03:48.019"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:48.020" starttime="20200521 14:03:48.020"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:48.023" starttime="20200521 14:03:48.022"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:48.023" starttime="20200521 14:03:48.021"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:48.023" starttime="20200521 14:03:47.953"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:48.023" starttime="20200521 14:03:47.953"></status>
</kw>
<kw type="foritem" name="${ID} = 10">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:03:48.035" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/10</msg>
<msg timestamp="20200521 14:03:48.046" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/10: 0.000651 seconds.</msg>
<msg timestamp="20200521 14:03:48.047" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:03:48 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:03:48.047" starttime="20200521 14:03:48.024"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:03:48.048" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:03:48.048" starttime="20200521 14:03:48.047"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:03:48.049" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:03:48.049" starttime="20200521 14:03:48.048"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:03:48.050" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:03:48.050" starttime="20200521 14:03:48.049"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:48.051" starttime="20200521 14:03:48.050"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:48.051" starttime="20200521 14:03:48.051"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:48.052" starttime="20200521 14:03:48.052"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:48.054" starttime="20200521 14:03:48.054"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:48.054" starttime="20200521 14:03:48.053"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:48.054" starttime="20200521 14:03:48.023"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:48.054" starttime="20200521 14:03:48.023"></status>
</kw>
<kw type="foritem" name="${ID} = 11">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:03:48.066" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/11</msg>
<msg timestamp="20200521 14:03:48.076" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/11: 0.000497 seconds.</msg>
<msg timestamp="20200521 14:03:48.077" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:03:48 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:03:48.077" starttime="20200521 14:03:48.055"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:03:48.078" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:03:48.078" starttime="20200521 14:03:48.077"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:03:48.079" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:03:48.079" starttime="20200521 14:03:48.078"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:03:48.080" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:03:48.080" starttime="20200521 14:03:48.080"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:48.081" starttime="20200521 14:03:48.081"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:48.082" starttime="20200521 14:03:48.082"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:48.083" starttime="20200521 14:03:48.083"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:48.121" starttime="20200521 14:03:48.121"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:48.121" starttime="20200521 14:03:48.084"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:48.122" starttime="20200521 14:03:48.055"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:48.122" starttime="20200521 14:03:48.055"></status>
</kw>
<kw type="foritem" name="${ID} = 12">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:03:48.133" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/12</msg>
<msg timestamp="20200521 14:03:48.145" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/12: 0.000579 seconds.</msg>
<msg timestamp="20200521 14:03:48.146" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:03:48 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:03:48.146" starttime="20200521 14:03:48.123"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:03:48.147" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:03:48.147" starttime="20200521 14:03:48.146"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:03:48.148" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:03:48.148" starttime="20200521 14:03:48.147"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:03:48.149" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:03:48.149" starttime="20200521 14:03:48.148"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:48.150" starttime="20200521 14:03:48.149"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:48.151" starttime="20200521 14:03:48.151"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:48.152" starttime="20200521 14:03:48.151"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:48.154" starttime="20200521 14:03:48.154"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:48.154" starttime="20200521 14:03:48.153"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:48.155" starttime="20200521 14:03:48.122"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:48.155" starttime="20200521 14:03:48.122"></status>
</kw>
<kw type="foritem" name="${ID} = 13">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:03:48.166" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/13</msg>
<msg timestamp="20200521 14:03:48.183" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/13: 0.003499 seconds.</msg>
<msg timestamp="20200521 14:03:48.184" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:03:48 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:03:48.184" starttime="20200521 14:03:48.156"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:03:48.185" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:03:48.185" starttime="20200521 14:03:48.184"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:03:48.186" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:03:48.186" starttime="20200521 14:03:48.185"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:03:48.187" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:03:48.187" starttime="20200521 14:03:48.186"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:48.188" starttime="20200521 14:03:48.187"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:48.189" starttime="20200521 14:03:48.188"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:48.191" starttime="20200521 14:03:48.189"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:48.193" starttime="20200521 14:03:48.192"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:48.193" starttime="20200521 14:03:48.191"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:48.193" starttime="20200521 14:03:48.155"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:48.193" starttime="20200521 14:03:48.155"></status>
</kw>
<kw type="foritem" name="${ID} = 14">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:03:48.208" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/14</msg>
<msg timestamp="20200521 14:03:48.218" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/14: 0.000516 seconds.</msg>
<msg timestamp="20200521 14:03:48.219" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:03:48 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:03:48.219" starttime="20200521 14:03:48.194"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:03:48.220" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:03:48.220" starttime="20200521 14:03:48.220"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:03:48.221" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:03:48.221" starttime="20200521 14:03:48.221"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:03:48.222" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:03:48.222" starttime="20200521 14:03:48.222"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:48.223" starttime="20200521 14:03:48.222"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:48.224" starttime="20200521 14:03:48.224"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:48.225" starttime="20200521 14:03:48.225"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:48.227" starttime="20200521 14:03:48.227"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:48.228" starttime="20200521 14:03:48.226"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:48.228" starttime="20200521 14:03:48.193"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:48.228" starttime="20200521 14:03:48.193"></status>
</kw>
<kw type="foritem" name="${ID} = 15">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:03:48.239" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/15</msg>
<msg timestamp="20200521 14:03:48.251" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/15: 0.00071 seconds.</msg>
<msg timestamp="20200521 14:03:48.251" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:03:48 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:03:48.251" starttime="20200521 14:03:48.229"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:03:48.252" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:03:48.252" starttime="20200521 14:03:48.252"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:03:48.255" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:03:48.255" starttime="20200521 14:03:48.253"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:03:48.256" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:03:48.256" starttime="20200521 14:03:48.255"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:48.257" starttime="20200521 14:03:48.256"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:48.258" starttime="20200521 14:03:48.257"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:48.259" starttime="20200521 14:03:48.258"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:48.261" starttime="20200521 14:03:48.261"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:48.262" starttime="20200521 14:03:48.260"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:48.262" starttime="20200521 14:03:48.228"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:48.262" starttime="20200521 14:03:48.228"></status>
</kw>
<kw type="foritem" name="${ID} = 16">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:03:48.276" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/16</msg>
<msg timestamp="20200521 14:03:48.292" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/16: 0.00054 seconds.</msg>
<msg timestamp="20200521 14:03:48.293" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:03:48 GMT
connection Keep-Alive
content-type application/json
content-length 2310


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:03:48.293" starttime="20200521 14:03:48.263"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:03:48.294" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:03:48.294" starttime="20200521 14:03:48.293"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:03:48.295" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200521 14:03:48.295" starttime="20200521 14:03:48.294"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:03:48.296" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:03:48.296" starttime="20200521 14:03:48.296"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:48.323" starttime="20200521 14:03:48.297"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:48.324" starttime="20200521 14:03:48.323"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:48.325" starttime="20200521 14:03:48.324"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
</arguments>
<kw name="Test Tx Op Down">
<tags>
<tag>Test tx_disable</tag>
</tags>
<doc>Test SFP port tx disable function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OP_DOWN)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 14:03:48.333" level="INFO">${payload} = {u'OperationalState': u'Down'}</msg>
<status status="PASS" endtime="20200521 14:03:48.333" starttime="20200521 14:03:48.328"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<msg timestamp="20200521 14:03:48.345" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/16</msg>
<msg timestamp="20200521 14:03:48.367" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/16: 0.000701 seconds.</msg>
<status status="PASS" endtime="20200521 14:03:48.368" starttime="20200521 14:03:48.333"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:48.368" starttime="20200521 14:03:48.327"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:48.368" starttime="20200521 14:03:48.326"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:48.368" starttime="20200521 14:03:48.326"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:48.368" starttime="20200521 14:03:48.262"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:48.368" starttime="20200521 14:03:48.262"></status>
</kw>
<kw type="foritem" name="${ID} = 17">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:03:48.382" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/17</msg>
<msg timestamp="20200521 14:03:48.395" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/17: 0.000572 seconds.</msg>
<msg timestamp="20200521 14:03:48.396" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:03:48 GMT
connection Keep-Alive
content-type application/json
content-length 2438


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:03:48.396" starttime="20200521 14:03:48.370"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:03:48.397" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:03:48.397" starttime="20200521 14:03:48.397"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:03:48.398" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200521 14:03:48.398" starttime="20200521 14:03:48.398"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:03:48.399" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200521 14:03:48.399" starttime="20200521 14:03:48.399"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:48.400" starttime="20200521 14:03:48.400"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:48.401" starttime="20200521 14:03:48.401"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:48.403" starttime="20200521 14:03:48.402"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:48.404" starttime="20200521 14:03:48.404"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:48.425" starttime="20200521 14:03:48.403"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:48.425" starttime="20200521 14:03:48.369"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:48.425" starttime="20200521 14:03:48.369"></status>
</kw>
<kw type="foritem" name="${ID} = 18">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:03:48.436" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/18</msg>
<msg timestamp="20200521 14:03:48.451" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/18: 0.000692 seconds.</msg>
<msg timestamp="20200521 14:03:48.452" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:03:48 GMT
connection Keep-Alive
content-type application/json
content-length 2430


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:03:48.452" starttime="20200521 14:03:48.426"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:03:48.453" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:03:48.454" starttime="20200521 14:03:48.453"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:03:48.455" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200521 14:03:48.455" starttime="20200521 14:03:48.454"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:03:48.455" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200521 14:03:48.456" starttime="20200521 14:03:48.455"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:48.457" starttime="20200521 14:03:48.456"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:48.458" starttime="20200521 14:03:48.457"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:48.459" starttime="20200521 14:03:48.458"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:48.461" starttime="20200521 14:03:48.460"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:48.461" starttime="20200521 14:03:48.460"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:48.461" starttime="20200521 14:03:48.425"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:48.461" starttime="20200521 14:03:48.425"></status>
</kw>
<kw type="foritem" name="${ID} = 19">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:03:48.472" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/19</msg>
<msg timestamp="20200521 14:03:48.484" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/19: 0.000491 seconds.</msg>
<msg timestamp="20200521 14:03:48.484" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:03:48 GMT
connection Keep-Alive
content-type application/json
content-length 1056


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:03:48.484" starttime="20200521 14:03:48.462"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:03:48.486" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:03:48.486" starttime="20200521 14:03:48.485"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:03:48.487" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:03:48.487" starttime="20200521 14:03:48.486"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:03:48.488" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200521 14:03:48.488" starttime="20200521 14:03:48.487"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:48.489" starttime="20200521 14:03:48.488"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:48.490" starttime="20200521 14:03:48.489"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:48.491" starttime="20200521 14:03:48.490"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:48.492" starttime="20200521 14:03:48.492"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:48.492" starttime="20200521 14:03:48.491"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:48.493" starttime="20200521 14:03:48.461"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:48.493" starttime="20200521 14:03:48.461"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:48.493" starttime="20200521 14:03:47.537"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:48.493" starttime="20200521 14:03:47.388"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PON_TYPE}' == 'GPON'</arg>
<arg>Log to console</arg>
<arg>"####### GPON TESTING ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### XGSPON TESTING ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### XGSPON TESTING ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:48.495" starttime="20200521 14:03:48.494"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:48.495" starttime="20200521 14:03:48.493"></status>
</kw>
<kw name="Test Bal Enable">
<tags>
<tag>Verify_Bal_Enable</tag>
</tags>
<doc>Enable Bal</doc>
<kw type="for" name="${i} IN RANGE [ 1 | 30 ]">
<kw type="foritem" name="${i} = 1">
<kw name="Test Wait Bal Enable">
<tags>
<tag>Verify_Waut_Bal_Enable</tag>
</tags>
<doc>Wait Enable Bal</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:48.497" starttime="20200521 14:03:48.496"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:03:48.539" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:03:48.549" level="INFO">Response Time to /redfish/v1/Olt: 0.000493 seconds.</msg>
<msg timestamp="20200521 14:03:48.550" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:03:48 GMT
connection Keep-Alive
content-type application/json
content-length 43


{"BalState":"down","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:03:48.550" starttime="20200521 14:03:48.528"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:03:48.551" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:03:48.551" starttime="20200521 14:03:48.551"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['BalState']}</arg>
</arguments>
<assign>
<var>${BAL_STATE}</var>
</assign>
<msg timestamp="20200521 14:03:48.552" level="INFO">${BAL_STATE} = down</msg>
<status status="PASS" endtime="20200521 14:03:48.552" starttime="20200521 14:03:48.552"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BAL_STATE}' == 'up'</arg>
<arg>Log to console</arg>
<arg>"####### Up ######"</arg>
<arg>${bal_state} =</arg>
<arg>"up"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:48.554" starttime="20200521 14:03:48.554"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:48.554" starttime="20200521 14:03:48.553"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:03:49.555" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:03:49.556" starttime="20200521 14:03:48.555"></status>
</kw>
<msg timestamp="20200521 14:03:49.556" level="INFO">${result} = down</msg>
<status status="PASS" endtime="20200521 14:03:49.556" starttime="20200521 14:03:48.496"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:49.557" starttime="20200521 14:03:49.556"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${result}' == 'up'</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:49.558" starttime="20200521 14:03:49.557"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:49.558" starttime="20200521 14:03:48.495"></status>
</kw>
<kw type="foritem" name="${i} = 2">
<kw name="Test Wait Bal Enable">
<tags>
<tag>Verify_Waut_Bal_Enable</tag>
</tags>
<doc>Wait Enable Bal</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:49.559" starttime="20200521 14:03:49.559"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:03:49.570" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:03:49.583" level="INFO">Response Time to /redfish/v1/Olt: 0.000493 seconds.</msg>
<msg timestamp="20200521 14:03:49.583" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:03:49 GMT
connection Keep-Alive
content-type application/json
content-length 43


{"BalState":"down","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:03:49.584" starttime="20200521 14:03:49.559"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:03:49.585" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:03:49.585" starttime="20200521 14:03:49.584"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['BalState']}</arg>
</arguments>
<assign>
<var>${BAL_STATE}</var>
</assign>
<msg timestamp="20200521 14:03:49.586" level="INFO">${BAL_STATE} = down</msg>
<status status="PASS" endtime="20200521 14:03:49.586" starttime="20200521 14:03:49.585"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BAL_STATE}' == 'up'</arg>
<arg>Log to console</arg>
<arg>"####### Up ######"</arg>
<arg>${bal_state} =</arg>
<arg>"up"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:49.588" starttime="20200521 14:03:49.587"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:49.588" starttime="20200521 14:03:49.586"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:03:50.589" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:03:50.589" starttime="20200521 14:03:49.588"></status>
</kw>
<msg timestamp="20200521 14:03:50.589" level="INFO">${result} = down</msg>
<status status="PASS" endtime="20200521 14:03:50.589" starttime="20200521 14:03:49.558"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:50.590" starttime="20200521 14:03:50.590"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${result}' == 'up'</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:50.592" starttime="20200521 14:03:50.591"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:50.592" starttime="20200521 14:03:49.558"></status>
</kw>
<kw type="foritem" name="${i} = 3">
<kw name="Test Wait Bal Enable">
<tags>
<tag>Verify_Waut_Bal_Enable</tag>
</tags>
<doc>Wait Enable Bal</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:50.593" starttime="20200521 14:03:50.593"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:03:50.604" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:03:50.616" level="INFO">Response Time to /redfish/v1/Olt: 0.000521 seconds.</msg>
<msg timestamp="20200521 14:03:50.617" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:03:50 GMT
connection Keep-Alive
content-type application/json
content-length 43


{"BalState":"down","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:03:50.617" starttime="20200521 14:03:50.594"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:03:50.618" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:03:50.618" starttime="20200521 14:03:50.618"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['BalState']}</arg>
</arguments>
<assign>
<var>${BAL_STATE}</var>
</assign>
<msg timestamp="20200521 14:03:50.619" level="INFO">${BAL_STATE} = down</msg>
<status status="PASS" endtime="20200521 14:03:50.619" starttime="20200521 14:03:50.619"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BAL_STATE}' == 'up'</arg>
<arg>Log to console</arg>
<arg>"####### Up ######"</arg>
<arg>${bal_state} =</arg>
<arg>"up"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:50.621" starttime="20200521 14:03:50.620"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:50.621" starttime="20200521 14:03:50.620"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:03:51.622" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:03:51.622" starttime="20200521 14:03:50.621"></status>
</kw>
<msg timestamp="20200521 14:03:51.622" level="INFO">${result} = down</msg>
<status status="PASS" endtime="20200521 14:03:51.622" starttime="20200521 14:03:50.592"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:51.623" starttime="20200521 14:03:51.623"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${result}' == 'up'</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:51.624" starttime="20200521 14:03:51.624"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:51.624" starttime="20200521 14:03:50.592"></status>
</kw>
<kw type="foritem" name="${i} = 4">
<kw name="Test Wait Bal Enable">
<tags>
<tag>Verify_Waut_Bal_Enable</tag>
</tags>
<doc>Wait Enable Bal</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:51.626" starttime="20200521 14:03:51.625"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:03:51.636" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:03:51.646" level="INFO">Response Time to /redfish/v1/Olt: 0.00058 seconds.</msg>
<msg timestamp="20200521 14:03:51.647" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:03:51 GMT
connection Keep-Alive
content-type application/json
content-length 43


{"BalState":"down","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:03:51.647" starttime="20200521 14:03:51.626"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:03:51.648" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:03:51.648" starttime="20200521 14:03:51.648"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['BalState']}</arg>
</arguments>
<assign>
<var>${BAL_STATE}</var>
</assign>
<msg timestamp="20200521 14:03:51.651" level="INFO">${BAL_STATE} = down</msg>
<status status="PASS" endtime="20200521 14:03:51.651" starttime="20200521 14:03:51.649"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BAL_STATE}' == 'up'</arg>
<arg>Log to console</arg>
<arg>"####### Up ######"</arg>
<arg>${bal_state} =</arg>
<arg>"up"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:51.654" starttime="20200521 14:03:51.653"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:51.654" starttime="20200521 14:03:51.652"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:03:52.655" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:03:52.655" starttime="20200521 14:03:51.654"></status>
</kw>
<msg timestamp="20200521 14:03:52.655" level="INFO">${result} = down</msg>
<status status="PASS" endtime="20200521 14:03:52.656" starttime="20200521 14:03:51.625"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:52.656" starttime="20200521 14:03:52.656"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${result}' == 'up'</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:52.657" starttime="20200521 14:03:52.657"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:52.657" starttime="20200521 14:03:51.624"></status>
</kw>
<kw type="foritem" name="${i} = 5">
<kw name="Test Wait Bal Enable">
<tags>
<tag>Verify_Waut_Bal_Enable</tag>
</tags>
<doc>Wait Enable Bal</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:52.659" starttime="20200521 14:03:52.658"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:03:52.669" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:03:52.679" level="INFO">Response Time to /redfish/v1/Olt: 0.000607 seconds.</msg>
<msg timestamp="20200521 14:03:52.680" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:03:52 GMT
connection Keep-Alive
content-type application/json
content-length 43


{"BalState":"down","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:03:52.680" starttime="20200521 14:03:52.659"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:03:52.681" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:03:52.681" starttime="20200521 14:03:52.681"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['BalState']}</arg>
</arguments>
<assign>
<var>${BAL_STATE}</var>
</assign>
<msg timestamp="20200521 14:03:52.682" level="INFO">${BAL_STATE} = down</msg>
<status status="PASS" endtime="20200521 14:03:52.682" starttime="20200521 14:03:52.682"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BAL_STATE}' == 'up'</arg>
<arg>Log to console</arg>
<arg>"####### Up ######"</arg>
<arg>${bal_state} =</arg>
<arg>"up"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:52.684" starttime="20200521 14:03:52.683"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:52.684" starttime="20200521 14:03:52.683"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:03:53.685" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:03:53.685" starttime="20200521 14:03:52.684"></status>
</kw>
<msg timestamp="20200521 14:03:53.685" level="INFO">${result} = down</msg>
<status status="PASS" endtime="20200521 14:03:53.686" starttime="20200521 14:03:52.658"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:53.686" starttime="20200521 14:03:53.686"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${result}' == 'up'</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:53.687" starttime="20200521 14:03:53.687"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:53.687" starttime="20200521 14:03:52.658"></status>
</kw>
<kw type="foritem" name="${i} = 6">
<kw name="Test Wait Bal Enable">
<tags>
<tag>Verify_Waut_Bal_Enable</tag>
</tags>
<doc>Wait Enable Bal</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:53.689" starttime="20200521 14:03:53.688"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:03:53.703" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:03:53.714" level="INFO">Response Time to /redfish/v1/Olt: 0.000576 seconds.</msg>
<msg timestamp="20200521 14:03:53.714" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:03:54 GMT
connection Keep-Alive
content-type application/json
content-length 43


{"BalState":"down","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:03:53.715" starttime="20200521 14:03:53.689"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:03:53.715" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:03:53.716" starttime="20200521 14:03:53.715"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['BalState']}</arg>
</arguments>
<assign>
<var>${BAL_STATE}</var>
</assign>
<msg timestamp="20200521 14:03:53.716" level="INFO">${BAL_STATE} = down</msg>
<status status="PASS" endtime="20200521 14:03:53.716" starttime="20200521 14:03:53.716"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BAL_STATE}' == 'up'</arg>
<arg>Log to console</arg>
<arg>"####### Up ######"</arg>
<arg>${bal_state} =</arg>
<arg>"up"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:53.719" starttime="20200521 14:03:53.718"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:53.719" starttime="20200521 14:03:53.717"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:03:54.719" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:03:54.720" starttime="20200521 14:03:53.719"></status>
</kw>
<msg timestamp="20200521 14:03:54.720" level="INFO">${result} = down</msg>
<status status="PASS" endtime="20200521 14:03:54.720" starttime="20200521 14:03:53.688"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:54.721" starttime="20200521 14:03:54.721"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${result}' == 'up'</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:54.722" starttime="20200521 14:03:54.722"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:54.722" starttime="20200521 14:03:53.688"></status>
</kw>
<kw type="foritem" name="${i} = 7">
<kw name="Test Wait Bal Enable">
<tags>
<tag>Verify_Waut_Bal_Enable</tag>
</tags>
<doc>Wait Enable Bal</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:54.724" starttime="20200521 14:03:54.723"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:03:54.734" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:03:54.746" level="INFO">Response Time to /redfish/v1/Olt: 0.000534 seconds.</msg>
<msg timestamp="20200521 14:03:54.746" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:03:55 GMT
connection Keep-Alive
content-type application/json
content-length 43


{"BalState":"down","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:03:54.746" starttime="20200521 14:03:54.724"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:03:54.747" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:03:54.747" starttime="20200521 14:03:54.747"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['BalState']}</arg>
</arguments>
<assign>
<var>${BAL_STATE}</var>
</assign>
<msg timestamp="20200521 14:03:54.748" level="INFO">${BAL_STATE} = down</msg>
<status status="PASS" endtime="20200521 14:03:54.748" starttime="20200521 14:03:54.748"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BAL_STATE}' == 'up'</arg>
<arg>Log to console</arg>
<arg>"####### Up ######"</arg>
<arg>${bal_state} =</arg>
<arg>"up"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:54.750" starttime="20200521 14:03:54.750"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:54.750" starttime="20200521 14:03:54.749"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:03:55.751" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:03:55.752" starttime="20200521 14:03:54.751"></status>
</kw>
<msg timestamp="20200521 14:03:55.752" level="INFO">${result} = down</msg>
<status status="PASS" endtime="20200521 14:03:55.752" starttime="20200521 14:03:54.723"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:55.753" starttime="20200521 14:03:55.752"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${result}' == 'up'</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:55.754" starttime="20200521 14:03:55.753"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:55.754" starttime="20200521 14:03:54.722"></status>
</kw>
<kw type="foritem" name="${i} = 8">
<kw name="Test Wait Bal Enable">
<tags>
<tag>Verify_Waut_Bal_Enable</tag>
</tags>
<doc>Wait Enable Bal</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:55.755" starttime="20200521 14:03:55.755"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:03:55.765" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:03:55.776" level="INFO">Response Time to /redfish/v1/Olt: 0.000568 seconds.</msg>
<msg timestamp="20200521 14:03:55.777" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:03:56 GMT
connection Keep-Alive
content-type application/json
content-length 43


{"BalState":"down","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:03:55.777" starttime="20200521 14:03:55.755"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:03:55.779" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:03:55.779" starttime="20200521 14:03:55.779"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['BalState']}</arg>
</arguments>
<assign>
<var>${BAL_STATE}</var>
</assign>
<msg timestamp="20200521 14:03:55.780" level="INFO">${BAL_STATE} = down</msg>
<status status="PASS" endtime="20200521 14:03:55.780" starttime="20200521 14:03:55.780"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BAL_STATE}' == 'up'</arg>
<arg>Log to console</arg>
<arg>"####### Up ######"</arg>
<arg>${bal_state} =</arg>
<arg>"up"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:55.782" starttime="20200521 14:03:55.782"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:55.782" starttime="20200521 14:03:55.781"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:03:56.783" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:03:56.783" starttime="20200521 14:03:55.783"></status>
</kw>
<msg timestamp="20200521 14:03:56.784" level="INFO">${result} = down</msg>
<status status="PASS" endtime="20200521 14:03:56.784" starttime="20200521 14:03:55.754"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:56.785" starttime="20200521 14:03:56.784"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${result}' == 'up'</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:56.786" starttime="20200521 14:03:56.785"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:56.786" starttime="20200521 14:03:55.754"></status>
</kw>
<kw type="foritem" name="${i} = 9">
<kw name="Test Wait Bal Enable">
<tags>
<tag>Verify_Waut_Bal_Enable</tag>
</tags>
<doc>Wait Enable Bal</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:56.787" starttime="20200521 14:03:56.787"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:03:56.798" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:03:56.808" level="INFO">Response Time to /redfish/v1/Olt: 0.000536 seconds.</msg>
<msg timestamp="20200521 14:03:56.809" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:03:57 GMT
connection Keep-Alive
content-type application/json
content-length 43


{"BalState":"down","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:03:56.809" starttime="20200521 14:03:56.787"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:03:56.810" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:03:56.810" starttime="20200521 14:03:56.809"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['BalState']}</arg>
</arguments>
<assign>
<var>${BAL_STATE}</var>
</assign>
<msg timestamp="20200521 14:03:56.811" level="INFO">${BAL_STATE} = down</msg>
<status status="PASS" endtime="20200521 14:03:56.811" starttime="20200521 14:03:56.810"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BAL_STATE}' == 'up'</arg>
<arg>Log to console</arg>
<arg>"####### Up ######"</arg>
<arg>${bal_state} =</arg>
<arg>"up"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:56.813" starttime="20200521 14:03:56.812"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:56.813" starttime="20200521 14:03:56.811"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:03:57.813" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:03:57.814" starttime="20200521 14:03:56.813"></status>
</kw>
<msg timestamp="20200521 14:03:57.814" level="INFO">${result} = down</msg>
<status status="PASS" endtime="20200521 14:03:57.814" starttime="20200521 14:03:56.786"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:57.815" starttime="20200521 14:03:57.815"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${result}' == 'up'</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:57.816" starttime="20200521 14:03:57.815"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:57.816" starttime="20200521 14:03:56.786"></status>
</kw>
<kw type="foritem" name="${i} = 10">
<kw name="Test Wait Bal Enable">
<tags>
<tag>Verify_Waut_Bal_Enable</tag>
</tags>
<doc>Wait Enable Bal</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:57.818" starttime="20200521 14:03:57.817"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:03:57.828" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:03:57.839" level="INFO">Response Time to /redfish/v1/Olt: 0.000542 seconds.</msg>
<msg timestamp="20200521 14:03:57.839" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:03:58 GMT
connection Keep-Alive
content-type application/json
content-length 43


{"BalState":"down","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:03:57.840" starttime="20200521 14:03:57.818"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:03:57.841" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:03:57.841" starttime="20200521 14:03:57.840"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['BalState']}</arg>
</arguments>
<assign>
<var>${BAL_STATE}</var>
</assign>
<msg timestamp="20200521 14:03:57.842" level="INFO">${BAL_STATE} = down</msg>
<status status="PASS" endtime="20200521 14:03:57.842" starttime="20200521 14:03:57.841"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BAL_STATE}' == 'up'</arg>
<arg>Log to console</arg>
<arg>"####### Up ######"</arg>
<arg>${bal_state} =</arg>
<arg>"up"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:57.843" starttime="20200521 14:03:57.843"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:57.844" starttime="20200521 14:03:57.842"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:03:58.844" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:03:58.845" starttime="20200521 14:03:57.844"></status>
</kw>
<msg timestamp="20200521 14:03:58.845" level="INFO">${result} = down</msg>
<status status="PASS" endtime="20200521 14:03:58.845" starttime="20200521 14:03:57.817"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:58.846" starttime="20200521 14:03:58.845"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${result}' == 'up'</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:58.847" starttime="20200521 14:03:58.847"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:58.847" starttime="20200521 14:03:57.816"></status>
</kw>
<kw type="foritem" name="${i} = 11">
<kw name="Test Wait Bal Enable">
<tags>
<tag>Verify_Waut_Bal_Enable</tag>
</tags>
<doc>Wait Enable Bal</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:58.849" starttime="20200521 14:03:58.848"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:03:58.861" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:03:58.873" level="INFO">Response Time to /redfish/v1/Olt: 0.000515 seconds.</msg>
<msg timestamp="20200521 14:03:58.874" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:03:59 GMT
connection Keep-Alive
content-type application/json
content-length 43


{"BalState":"down","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:03:58.874" starttime="20200521 14:03:58.849"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:03:58.875" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:03:58.875" starttime="20200521 14:03:58.874"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['BalState']}</arg>
</arguments>
<assign>
<var>${BAL_STATE}</var>
</assign>
<msg timestamp="20200521 14:03:58.876" level="INFO">${BAL_STATE} = down</msg>
<status status="PASS" endtime="20200521 14:03:58.876" starttime="20200521 14:03:58.875"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BAL_STATE}' == 'up'</arg>
<arg>Log to console</arg>
<arg>"####### Up ######"</arg>
<arg>${bal_state} =</arg>
<arg>"up"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:58.877" starttime="20200521 14:03:58.877"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:58.877" starttime="20200521 14:03:58.876"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:03:59.881" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:03:59.881" starttime="20200521 14:03:58.878"></status>
</kw>
<msg timestamp="20200521 14:03:59.882" level="INFO">${result} = down</msg>
<status status="PASS" endtime="20200521 14:03:59.882" starttime="20200521 14:03:58.848"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:59.883" starttime="20200521 14:03:59.882"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${result}' == 'up'</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:59.884" starttime="20200521 14:03:59.884"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:59.884" starttime="20200521 14:03:58.847"></status>
</kw>
<kw type="foritem" name="${i} = 12">
<kw name="Test Wait Bal Enable">
<tags>
<tag>Verify_Waut_Bal_Enable</tag>
</tags>
<doc>Wait Enable Bal</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:59.885" starttime="20200521 14:03:59.885"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:03:59.901" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:03:59.913" level="INFO">Response Time to /redfish/v1/Olt: 0.000711 seconds.</msg>
<msg timestamp="20200521 14:03:59.913" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:00 GMT
connection Keep-Alive
content-type application/json
content-length 43


{"BalState":"down","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:03:59.914" starttime="20200521 14:03:59.886"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:03:59.915" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:03:59.915" starttime="20200521 14:03:59.914"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['BalState']}</arg>
</arguments>
<assign>
<var>${BAL_STATE}</var>
</assign>
<msg timestamp="20200521 14:03:59.916" level="INFO">${BAL_STATE} = down</msg>
<status status="PASS" endtime="20200521 14:03:59.916" starttime="20200521 14:03:59.915"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BAL_STATE}' == 'up'</arg>
<arg>Log to console</arg>
<arg>"####### Up ######"</arg>
<arg>${bal_state} =</arg>
<arg>"up"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:03:59.919" starttime="20200521 14:03:59.917"></status>
</kw>
<status status="PASS" endtime="20200521 14:03:59.919" starttime="20200521 14:03:59.916"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:04:00.921" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:04:00.921" starttime="20200521 14:03:59.919"></status>
</kw>
<msg timestamp="20200521 14:04:00.921" level="INFO">${result} = down</msg>
<status status="PASS" endtime="20200521 14:04:00.921" starttime="20200521 14:03:59.884"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:00.923" starttime="20200521 14:04:00.922"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${result}' == 'up'</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:00.924" starttime="20200521 14:04:00.923"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:00.924" starttime="20200521 14:03:59.884"></status>
</kw>
<kw type="foritem" name="${i} = 13">
<kw name="Test Wait Bal Enable">
<tags>
<tag>Verify_Waut_Bal_Enable</tag>
</tags>
<doc>Wait Enable Bal</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:00.926" starttime="20200521 14:04:00.925"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:00.938" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:04:00.951" level="INFO">Response Time to /redfish/v1/Olt: 0.000508 seconds.</msg>
<msg timestamp="20200521 14:04:00.952" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:01 GMT
connection Keep-Alive
content-type application/json
content-length 43


{"BalState":"down","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:04:00.952" starttime="20200521 14:04:00.926"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:04:00.953" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:04:00.953" starttime="20200521 14:04:00.953"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['BalState']}</arg>
</arguments>
<assign>
<var>${BAL_STATE}</var>
</assign>
<msg timestamp="20200521 14:04:00.955" level="INFO">${BAL_STATE} = down</msg>
<status status="PASS" endtime="20200521 14:04:00.955" starttime="20200521 14:04:00.954"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BAL_STATE}' == 'up'</arg>
<arg>Log to console</arg>
<arg>"####### Up ######"</arg>
<arg>${bal_state} =</arg>
<arg>"up"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:00.957" starttime="20200521 14:04:00.956"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:00.957" starttime="20200521 14:04:00.955"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:04:01.958" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:04:01.958" starttime="20200521 14:04:00.957"></status>
</kw>
<msg timestamp="20200521 14:04:01.959" level="INFO">${result} = down</msg>
<status status="PASS" endtime="20200521 14:04:01.959" starttime="20200521 14:04:00.924"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:01.960" starttime="20200521 14:04:01.959"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${result}' == 'up'</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:01.961" starttime="20200521 14:04:01.960"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:01.961" starttime="20200521 14:04:00.924"></status>
</kw>
<kw type="foritem" name="${i} = 14">
<kw name="Test Wait Bal Enable">
<tags>
<tag>Verify_Waut_Bal_Enable</tag>
</tags>
<doc>Wait Enable Bal</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:01.963" starttime="20200521 14:04:01.962"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:01.977" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:04:01.988" level="INFO">Response Time to /redfish/v1/Olt: 0.000466 seconds.</msg>
<msg timestamp="20200521 14:04:01.989" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:02 GMT
connection Keep-Alive
content-type application/json
content-length 43


{"BalState":"down","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:04:01.989" starttime="20200521 14:04:01.963"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:04:01.990" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:04:01.990" starttime="20200521 14:04:01.990"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['BalState']}</arg>
</arguments>
<assign>
<var>${BAL_STATE}</var>
</assign>
<msg timestamp="20200521 14:04:01.991" level="INFO">${BAL_STATE} = down</msg>
<status status="PASS" endtime="20200521 14:04:01.991" starttime="20200521 14:04:01.991"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BAL_STATE}' == 'up'</arg>
<arg>Log to console</arg>
<arg>"####### Up ######"</arg>
<arg>${bal_state} =</arg>
<arg>"up"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:01.994" starttime="20200521 14:04:01.993"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:01.994" starttime="20200521 14:04:01.992"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:04:02.995" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:04:02.995" starttime="20200521 14:04:01.994"></status>
</kw>
<msg timestamp="20200521 14:04:02.996" level="INFO">${result} = down</msg>
<status status="PASS" endtime="20200521 14:04:02.996" starttime="20200521 14:04:01.961"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:02.997" starttime="20200521 14:04:02.996"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${result}' == 'up'</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:02.998" starttime="20200521 14:04:02.997"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:02.998" starttime="20200521 14:04:01.961"></status>
</kw>
<kw type="foritem" name="${i} = 15">
<kw name="Test Wait Bal Enable">
<tags>
<tag>Verify_Waut_Bal_Enable</tag>
</tags>
<doc>Wait Enable Bal</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:02.999" starttime="20200521 14:04:02.999"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:03.012" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:04:03.025" level="INFO">Response Time to /redfish/v1/Olt: 0.00072 seconds.</msg>
<msg timestamp="20200521 14:04:03.026" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:03 GMT
connection Keep-Alive
content-type application/json
content-length 43


{"BalState":"down","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:04:03.026" starttime="20200521 14:04:02.999"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:04:03.027" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:04:03.027" starttime="20200521 14:04:03.026"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['BalState']}</arg>
</arguments>
<assign>
<var>${BAL_STATE}</var>
</assign>
<msg timestamp="20200521 14:04:03.029" level="INFO">${BAL_STATE} = down</msg>
<status status="PASS" endtime="20200521 14:04:03.029" starttime="20200521 14:04:03.028"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BAL_STATE}' == 'up'</arg>
<arg>Log to console</arg>
<arg>"####### Up ######"</arg>
<arg>${bal_state} =</arg>
<arg>"up"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:03.031" starttime="20200521 14:04:03.030"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:03.031" starttime="20200521 14:04:03.029"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:04:04.032" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:04:04.032" starttime="20200521 14:04:03.031"></status>
</kw>
<msg timestamp="20200521 14:04:04.032" level="INFO">${result} = down</msg>
<status status="PASS" endtime="20200521 14:04:04.032" starttime="20200521 14:04:02.998"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:04.033" starttime="20200521 14:04:04.033"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${result}' == 'up'</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:04.034" starttime="20200521 14:04:04.034"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:04.034" starttime="20200521 14:04:02.998"></status>
</kw>
<kw type="foritem" name="${i} = 16">
<kw name="Test Wait Bal Enable">
<tags>
<tag>Verify_Waut_Bal_Enable</tag>
</tags>
<doc>Wait Enable Bal</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:04.036" starttime="20200521 14:04:04.036"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:04.050" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:04:04.067" level="INFO">Response Time to /redfish/v1/Olt: 0.000712 seconds.</msg>
<msg timestamp="20200521 14:04:04.067" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:04 GMT
connection Keep-Alive
content-type application/json
content-length 43


{"BalState":"down","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:04:04.067" starttime="20200521 14:04:04.036"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:04:04.068" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:04:04.069" starttime="20200521 14:04:04.068"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['BalState']}</arg>
</arguments>
<assign>
<var>${BAL_STATE}</var>
</assign>
<msg timestamp="20200521 14:04:04.069" level="INFO">${BAL_STATE} = down</msg>
<status status="PASS" endtime="20200521 14:04:04.070" starttime="20200521 14:04:04.069"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BAL_STATE}' == 'up'</arg>
<arg>Log to console</arg>
<arg>"####### Up ######"</arg>
<arg>${bal_state} =</arg>
<arg>"up"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:04.071" starttime="20200521 14:04:04.071"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:04.071" starttime="20200521 14:04:04.070"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:04:05.072" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:04:05.073" starttime="20200521 14:04:04.072"></status>
</kw>
<msg timestamp="20200521 14:04:05.073" level="INFO">${result} = down</msg>
<status status="PASS" endtime="20200521 14:04:05.073" starttime="20200521 14:04:04.035"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:05.074" starttime="20200521 14:04:05.073"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${result}' == 'up'</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:05.075" starttime="20200521 14:04:05.075"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:05.075" starttime="20200521 14:04:04.035"></status>
</kw>
<kw type="foritem" name="${i} = 17">
<kw name="Test Wait Bal Enable">
<tags>
<tag>Verify_Waut_Bal_Enable</tag>
</tags>
<doc>Wait Enable Bal</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:05.077" starttime="20200521 14:04:05.076"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:05.089" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:04:05.100" level="INFO">Response Time to /redfish/v1/Olt: 0.000518 seconds.</msg>
<msg timestamp="20200521 14:04:05.101" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:05 GMT
connection Keep-Alive
content-type application/json
content-length 43


{"BalState":"down","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:04:05.101" starttime="20200521 14:04:05.079"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:04:05.102" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:04:05.102" starttime="20200521 14:04:05.101"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['BalState']}</arg>
</arguments>
<assign>
<var>${BAL_STATE}</var>
</assign>
<msg timestamp="20200521 14:04:05.103" level="INFO">${BAL_STATE} = down</msg>
<status status="PASS" endtime="20200521 14:04:05.103" starttime="20200521 14:04:05.102"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BAL_STATE}' == 'up'</arg>
<arg>Log to console</arg>
<arg>"####### Up ######"</arg>
<arg>${bal_state} =</arg>
<arg>"up"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:05.105" starttime="20200521 14:04:05.104"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:05.105" starttime="20200521 14:04:05.104"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:04:06.106" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:04:06.106" starttime="20200521 14:04:05.105"></status>
</kw>
<msg timestamp="20200521 14:04:06.106" level="INFO">${result} = down</msg>
<status status="PASS" endtime="20200521 14:04:06.107" starttime="20200521 14:04:05.076"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:06.108" starttime="20200521 14:04:06.107"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${result}' == 'up'</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:06.109" starttime="20200521 14:04:06.109"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:06.109" starttime="20200521 14:04:05.075"></status>
</kw>
<kw type="foritem" name="${i} = 18">
<kw name="Test Wait Bal Enable">
<tags>
<tag>Verify_Waut_Bal_Enable</tag>
</tags>
<doc>Wait Enable Bal</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:06.112" starttime="20200521 14:04:06.111"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:06.125" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:04:06.135" level="INFO">Response Time to /redfish/v1/Olt: 0.00046 seconds.</msg>
<msg timestamp="20200521 14:04:06.135" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:06 GMT
connection Keep-Alive
content-type application/json
content-length 43


{"BalState":"down","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:04:06.136" starttime="20200521 14:04:06.112"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:04:06.137" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:04:06.137" starttime="20200521 14:04:06.136"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['BalState']}</arg>
</arguments>
<assign>
<var>${BAL_STATE}</var>
</assign>
<msg timestamp="20200521 14:04:06.138" level="INFO">${BAL_STATE} = down</msg>
<status status="PASS" endtime="20200521 14:04:06.138" starttime="20200521 14:04:06.137"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BAL_STATE}' == 'up'</arg>
<arg>Log to console</arg>
<arg>"####### Up ######"</arg>
<arg>${bal_state} =</arg>
<arg>"up"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:06.139" starttime="20200521 14:04:06.139"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:06.139" starttime="20200521 14:04:06.138"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:04:07.141" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:04:07.141" starttime="20200521 14:04:06.140"></status>
</kw>
<msg timestamp="20200521 14:04:07.142" level="INFO">${result} = down</msg>
<status status="PASS" endtime="20200521 14:04:07.142" starttime="20200521 14:04:06.110"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:07.143" starttime="20200521 14:04:07.142"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${result}' == 'up'</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:07.143" starttime="20200521 14:04:07.143"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:07.144" starttime="20200521 14:04:06.110"></status>
</kw>
<kw type="foritem" name="${i} = 19">
<kw name="Test Wait Bal Enable">
<tags>
<tag>Verify_Waut_Bal_Enable</tag>
</tags>
<doc>Wait Enable Bal</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:07.145" starttime="20200521 14:04:07.144"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:07.155" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:04:07.166" level="INFO">Response Time to /redfish/v1/Olt: 0.000561 seconds.</msg>
<msg timestamp="20200521 14:04:07.167" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:07 GMT
connection Keep-Alive
content-type application/json
content-length 43


{"BalState":"down","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:04:07.167" starttime="20200521 14:04:07.145"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:04:07.168" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:04:07.168" starttime="20200521 14:04:07.167"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['BalState']}</arg>
</arguments>
<assign>
<var>${BAL_STATE}</var>
</assign>
<msg timestamp="20200521 14:04:07.169" level="INFO">${BAL_STATE} = down</msg>
<status status="PASS" endtime="20200521 14:04:07.169" starttime="20200521 14:04:07.168"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BAL_STATE}' == 'up'</arg>
<arg>Log to console</arg>
<arg>"####### Up ######"</arg>
<arg>${bal_state} =</arg>
<arg>"up"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:07.170" starttime="20200521 14:04:07.170"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:07.171" starttime="20200521 14:04:07.169"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:04:08.173" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:04:08.173" starttime="20200521 14:04:07.171"></status>
</kw>
<msg timestamp="20200521 14:04:08.173" level="INFO">${result} = down</msg>
<status status="PASS" endtime="20200521 14:04:08.173" starttime="20200521 14:04:07.144"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:08.174" starttime="20200521 14:04:08.174"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${result}' == 'up'</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:08.175" starttime="20200521 14:04:08.175"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:08.175" starttime="20200521 14:04:07.144"></status>
</kw>
<kw type="foritem" name="${i} = 20">
<kw name="Test Wait Bal Enable">
<tags>
<tag>Verify_Waut_Bal_Enable</tag>
</tags>
<doc>Wait Enable Bal</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:08.176" starttime="20200521 14:04:08.176"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:08.190" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:04:08.199" level="INFO">Response Time to /redfish/v1/Olt: 0.000403 seconds.</msg>
<msg timestamp="20200521 14:04:08.200" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:08 GMT
connection Keep-Alive
content-type application/json
content-length 43


{"BalState":"down","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:04:08.200" starttime="20200521 14:04:08.176"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:04:08.201" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:04:08.201" starttime="20200521 14:04:08.200"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['BalState']}</arg>
</arguments>
<assign>
<var>${BAL_STATE}</var>
</assign>
<msg timestamp="20200521 14:04:08.202" level="INFO">${BAL_STATE} = down</msg>
<status status="PASS" endtime="20200521 14:04:08.202" starttime="20200521 14:04:08.201"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BAL_STATE}' == 'up'</arg>
<arg>Log to console</arg>
<arg>"####### Up ######"</arg>
<arg>${bal_state} =</arg>
<arg>"up"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:08.206" starttime="20200521 14:04:08.203"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:08.206" starttime="20200521 14:04:08.202"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:04:09.211" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:04:09.211" starttime="20200521 14:04:08.207"></status>
</kw>
<msg timestamp="20200521 14:04:09.212" level="INFO">${result} = down</msg>
<status status="PASS" endtime="20200521 14:04:09.212" starttime="20200521 14:04:08.175"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:09.213" starttime="20200521 14:04:09.212"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${result}' == 'up'</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:09.214" starttime="20200521 14:04:09.213"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:09.214" starttime="20200521 14:04:08.175"></status>
</kw>
<kw type="foritem" name="${i} = 21">
<kw name="Test Wait Bal Enable">
<tags>
<tag>Verify_Waut_Bal_Enable</tag>
</tags>
<doc>Wait Enable Bal</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:09.215" starttime="20200521 14:04:09.215"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:09.228" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:04:09.238" level="INFO">Response Time to /redfish/v1/Olt: 0.000497 seconds.</msg>
<msg timestamp="20200521 14:04:09.238" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:09 GMT
connection Keep-Alive
content-type application/json
content-length 43


{"BalState":"down","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:04:09.238" starttime="20200521 14:04:09.216"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:04:09.239" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:04:09.239" starttime="20200521 14:04:09.239"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['BalState']}</arg>
</arguments>
<assign>
<var>${BAL_STATE}</var>
</assign>
<msg timestamp="20200521 14:04:09.240" level="INFO">${BAL_STATE} = down</msg>
<status status="PASS" endtime="20200521 14:04:09.240" starttime="20200521 14:04:09.240"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BAL_STATE}' == 'up'</arg>
<arg>Log to console</arg>
<arg>"####### Up ######"</arg>
<arg>${bal_state} =</arg>
<arg>"up"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:09.242" starttime="20200521 14:04:09.241"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:09.242" starttime="20200521 14:04:09.240"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:04:10.243" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:04:10.243" starttime="20200521 14:04:09.242"></status>
</kw>
<msg timestamp="20200521 14:04:10.244" level="INFO">${result} = down</msg>
<status status="PASS" endtime="20200521 14:04:10.244" starttime="20200521 14:04:09.214"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:10.245" starttime="20200521 14:04:10.244"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${result}' == 'up'</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:10.246" starttime="20200521 14:04:10.245"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:10.246" starttime="20200521 14:04:09.214"></status>
</kw>
<kw type="foritem" name="${i} = 22">
<kw name="Test Wait Bal Enable">
<tags>
<tag>Verify_Waut_Bal_Enable</tag>
</tags>
<doc>Wait Enable Bal</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:10.247" starttime="20200521 14:04:10.247"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:10.258" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:04:10.268" level="INFO">Response Time to /redfish/v1/Olt: 0.000435 seconds.</msg>
<msg timestamp="20200521 14:04:10.269" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:10 GMT
connection Keep-Alive
content-type application/json
content-length 43


{"BalState":"down","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:04:10.269" starttime="20200521 14:04:10.248"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:04:10.270" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:04:10.270" starttime="20200521 14:04:10.269"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['BalState']}</arg>
</arguments>
<assign>
<var>${BAL_STATE}</var>
</assign>
<msg timestamp="20200521 14:04:10.271" level="INFO">${BAL_STATE} = down</msg>
<status status="PASS" endtime="20200521 14:04:10.271" starttime="20200521 14:04:10.270"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BAL_STATE}' == 'up'</arg>
<arg>Log to console</arg>
<arg>"####### Up ######"</arg>
<arg>${bal_state} =</arg>
<arg>"up"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:10.273" starttime="20200521 14:04:10.272"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:10.273" starttime="20200521 14:04:10.271"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:04:11.274" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:04:11.274" starttime="20200521 14:04:10.273"></status>
</kw>
<msg timestamp="20200521 14:04:11.274" level="INFO">${result} = down</msg>
<status status="PASS" endtime="20200521 14:04:11.275" starttime="20200521 14:04:10.246"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:11.276" starttime="20200521 14:04:11.275"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${result}' == 'up'</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:11.277" starttime="20200521 14:04:11.276"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:11.277" starttime="20200521 14:04:10.246"></status>
</kw>
<kw type="foritem" name="${i} = 23">
<kw name="Test Wait Bal Enable">
<tags>
<tag>Verify_Waut_Bal_Enable</tag>
</tags>
<doc>Wait Enable Bal</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:11.279" starttime="20200521 14:04:11.278"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:11.290" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:04:11.301" level="INFO">Response Time to /redfish/v1/Olt: 0.000609 seconds.</msg>
<msg timestamp="20200521 14:04:11.302" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:11 GMT
connection Keep-Alive
content-type application/json
content-length 43


{"BalState":"down","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:04:11.302" starttime="20200521 14:04:11.279"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:04:11.303" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:04:11.303" starttime="20200521 14:04:11.302"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['BalState']}</arg>
</arguments>
<assign>
<var>${BAL_STATE}</var>
</assign>
<msg timestamp="20200521 14:04:11.304" level="INFO">${BAL_STATE} = down</msg>
<status status="PASS" endtime="20200521 14:04:11.304" starttime="20200521 14:04:11.304"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BAL_STATE}' == 'up'</arg>
<arg>Log to console</arg>
<arg>"####### Up ######"</arg>
<arg>${bal_state} =</arg>
<arg>"up"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:11.308" starttime="20200521 14:04:11.305"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:11.308" starttime="20200521 14:04:11.304"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:04:12.310" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:04:12.310" starttime="20200521 14:04:11.309"></status>
</kw>
<msg timestamp="20200521 14:04:12.310" level="INFO">${result} = down</msg>
<status status="PASS" endtime="20200521 14:04:12.310" starttime="20200521 14:04:11.277"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:12.312" starttime="20200521 14:04:12.311"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${result}' == 'up'</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:12.313" starttime="20200521 14:04:12.312"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:12.313" starttime="20200521 14:04:11.277"></status>
</kw>
<kw type="foritem" name="${i} = 24">
<kw name="Test Wait Bal Enable">
<tags>
<tag>Verify_Waut_Bal_Enable</tag>
</tags>
<doc>Wait Enable Bal</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:12.315" starttime="20200521 14:04:12.314"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:12.326" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:04:12.345" level="INFO">Response Time to /redfish/v1/Olt: 0.000419 seconds.</msg>
<msg timestamp="20200521 14:04:12.346" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:12 GMT
connection Keep-Alive
content-type application/json
content-length 43


{"BalState":"down","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:04:12.346" starttime="20200521 14:04:12.315"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:04:12.347" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:04:12.347" starttime="20200521 14:04:12.347"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['BalState']}</arg>
</arguments>
<assign>
<var>${BAL_STATE}</var>
</assign>
<msg timestamp="20200521 14:04:12.348" level="INFO">${BAL_STATE} = down</msg>
<status status="PASS" endtime="20200521 14:04:12.348" starttime="20200521 14:04:12.348"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BAL_STATE}' == 'up'</arg>
<arg>Log to console</arg>
<arg>"####### Up ######"</arg>
<arg>${bal_state} =</arg>
<arg>"up"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:12.350" starttime="20200521 14:04:12.349"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:12.350" starttime="20200521 14:04:12.349"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:04:13.361" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:04:13.361" starttime="20200521 14:04:12.351"></status>
</kw>
<msg timestamp="20200521 14:04:13.362" level="INFO">${result} = down</msg>
<status status="PASS" endtime="20200521 14:04:13.362" starttime="20200521 14:04:12.313"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:13.363" starttime="20200521 14:04:13.362"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${result}' == 'up'</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:13.364" starttime="20200521 14:04:13.363"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:13.364" starttime="20200521 14:04:12.313"></status>
</kw>
<kw type="foritem" name="${i} = 25">
<kw name="Test Wait Bal Enable">
<tags>
<tag>Verify_Waut_Bal_Enable</tag>
</tags>
<doc>Wait Enable Bal</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:13.365" starttime="20200521 14:04:13.365"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:13.375" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:04:13.385" level="INFO">Response Time to /redfish/v1/Olt: 0.000418 seconds.</msg>
<msg timestamp="20200521 14:04:13.386" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:13 GMT
connection Keep-Alive
content-type application/json
content-length 43


{"BalState":"down","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:04:13.386" starttime="20200521 14:04:13.366"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:04:13.387" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:04:13.387" starttime="20200521 14:04:13.386"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['BalState']}</arg>
</arguments>
<assign>
<var>${BAL_STATE}</var>
</assign>
<msg timestamp="20200521 14:04:13.388" level="INFO">${BAL_STATE} = down</msg>
<status status="PASS" endtime="20200521 14:04:13.388" starttime="20200521 14:04:13.387"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BAL_STATE}' == 'up'</arg>
<arg>Log to console</arg>
<arg>"####### Up ######"</arg>
<arg>${bal_state} =</arg>
<arg>"up"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:13.390" starttime="20200521 14:04:13.389"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:13.390" starttime="20200521 14:04:13.388"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:04:14.390" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:04:14.391" starttime="20200521 14:04:13.390"></status>
</kw>
<msg timestamp="20200521 14:04:14.391" level="INFO">${result} = down</msg>
<status status="PASS" endtime="20200521 14:04:14.391" starttime="20200521 14:04:13.364"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:14.393" starttime="20200521 14:04:14.392"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${result}' == 'up'</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:14.394" starttime="20200521 14:04:14.393"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:14.394" starttime="20200521 14:04:13.364"></status>
</kw>
<kw type="foritem" name="${i} = 26">
<kw name="Test Wait Bal Enable">
<tags>
<tag>Verify_Waut_Bal_Enable</tag>
</tags>
<doc>Wait Enable Bal</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:14.395" starttime="20200521 14:04:14.394"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:14.406" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:04:14.419" level="INFO">Response Time to /redfish/v1/Olt: 0.003599 seconds.</msg>
<msg timestamp="20200521 14:04:14.420" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:14 GMT
connection Keep-Alive
content-type application/json
content-length 43


{"BalState":"down","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:04:14.420" starttime="20200521 14:04:14.396"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:04:14.421" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:04:14.421" starttime="20200521 14:04:14.420"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['BalState']}</arg>
</arguments>
<assign>
<var>${BAL_STATE}</var>
</assign>
<msg timestamp="20200521 14:04:14.422" level="INFO">${BAL_STATE} = down</msg>
<status status="PASS" endtime="20200521 14:04:14.422" starttime="20200521 14:04:14.421"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BAL_STATE}' == 'up'</arg>
<arg>Log to console</arg>
<arg>"####### Up ######"</arg>
<arg>${bal_state} =</arg>
<arg>"up"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:14.423" starttime="20200521 14:04:14.423"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:14.423" starttime="20200521 14:04:14.422"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:04:15.428" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:04:15.428" starttime="20200521 14:04:14.424"></status>
</kw>
<msg timestamp="20200521 14:04:15.429" level="INFO">${result} = down</msg>
<status status="PASS" endtime="20200521 14:04:15.429" starttime="20200521 14:04:14.394"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:15.430" starttime="20200521 14:04:15.429"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${result}' == 'up'</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:15.431" starttime="20200521 14:04:15.430"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:15.431" starttime="20200521 14:04:14.394"></status>
</kw>
<kw type="foritem" name="${i} = 27">
<kw name="Test Wait Bal Enable">
<tags>
<tag>Verify_Waut_Bal_Enable</tag>
</tags>
<doc>Wait Enable Bal</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:15.432" starttime="20200521 14:04:15.432"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:15.445" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:04:15.456" level="INFO">Response Time to /redfish/v1/Olt: 0.000529 seconds.</msg>
<msg timestamp="20200521 14:04:15.457" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:15 GMT
connection Keep-Alive
content-type application/json
content-length 43


{"BalState":"down","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:04:15.457" starttime="20200521 14:04:15.433"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:04:15.458" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:04:15.458" starttime="20200521 14:04:15.457"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['BalState']}</arg>
</arguments>
<assign>
<var>${BAL_STATE}</var>
</assign>
<msg timestamp="20200521 14:04:15.459" level="INFO">${BAL_STATE} = down</msg>
<status status="PASS" endtime="20200521 14:04:15.459" starttime="20200521 14:04:15.458"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BAL_STATE}' == 'up'</arg>
<arg>Log to console</arg>
<arg>"####### Up ######"</arg>
<arg>${bal_state} =</arg>
<arg>"up"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:15.461" starttime="20200521 14:04:15.460"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:15.461" starttime="20200521 14:04:15.459"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:04:16.462" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:04:16.463" starttime="20200521 14:04:15.462"></status>
</kw>
<msg timestamp="20200521 14:04:16.463" level="INFO">${result} = down</msg>
<status status="PASS" endtime="20200521 14:04:16.463" starttime="20200521 14:04:15.431"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:16.465" starttime="20200521 14:04:16.463"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${result}' == 'up'</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:16.466" starttime="20200521 14:04:16.465"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:16.466" starttime="20200521 14:04:15.431"></status>
</kw>
<kw type="foritem" name="${i} = 28">
<kw name="Test Wait Bal Enable">
<tags>
<tag>Verify_Waut_Bal_Enable</tag>
</tags>
<doc>Wait Enable Bal</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:16.468" starttime="20200521 14:04:16.467"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:16.479" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:04:16.490" level="INFO">Response Time to /redfish/v1/Olt: 0.000503 seconds.</msg>
<msg timestamp="20200521 14:04:16.491" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:16 GMT
connection Keep-Alive
content-type application/json
content-length 43


{"BalState":"down","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:04:16.491" starttime="20200521 14:04:16.468"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:04:16.492" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:04:16.493" starttime="20200521 14:04:16.492"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['BalState']}</arg>
</arguments>
<assign>
<var>${BAL_STATE}</var>
</assign>
<msg timestamp="20200521 14:04:16.493" level="INFO">${BAL_STATE} = down</msg>
<status status="PASS" endtime="20200521 14:04:16.494" starttime="20200521 14:04:16.493"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BAL_STATE}' == 'up'</arg>
<arg>Log to console</arg>
<arg>"####### Up ######"</arg>
<arg>${bal_state} =</arg>
<arg>"up"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:16.496" starttime="20200521 14:04:16.495"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:16.496" starttime="20200521 14:04:16.494"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:04:17.497" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:04:17.497" starttime="20200521 14:04:16.497"></status>
</kw>
<msg timestamp="20200521 14:04:17.498" level="INFO">${result} = down</msg>
<status status="PASS" endtime="20200521 14:04:17.498" starttime="20200521 14:04:16.466"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:17.499" starttime="20200521 14:04:17.498"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${result}' == 'up'</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:17.500" starttime="20200521 14:04:17.500"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:17.500" starttime="20200521 14:04:16.466"></status>
</kw>
<kw type="foritem" name="${i} = 29">
<kw name="Test Wait Bal Enable">
<tags>
<tag>Verify_Waut_Bal_Enable</tag>
</tags>
<doc>Wait Enable Bal</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:17.502" starttime="20200521 14:04:17.501"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:17.514" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 14:04:17.524" level="INFO">Response Time to /redfish/v1/Olt: 0.000444 seconds.</msg>
<msg timestamp="20200521 14:04:17.524" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:17 GMT
connection Keep-Alive
content-type application/json
content-length 43


{"BalState":"down","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 14:04:17.524" starttime="20200521 14:04:17.502"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:04:17.525" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:04:17.526" starttime="20200521 14:04:17.525"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['BalState']}</arg>
</arguments>
<assign>
<var>${BAL_STATE}</var>
</assign>
<msg timestamp="20200521 14:04:17.526" level="INFO">${BAL_STATE} = down</msg>
<status status="PASS" endtime="20200521 14:04:17.526" starttime="20200521 14:04:17.526"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BAL_STATE}' == 'up'</arg>
<arg>Log to console</arg>
<arg>"####### Up ######"</arg>
<arg>${bal_state} =</arg>
<arg>"up"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:17.529" starttime="20200521 14:04:17.528"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:17.529" starttime="20200521 14:04:17.527"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:04:18.530" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:04:18.530" starttime="20200521 14:04:17.529"></status>
</kw>
<msg timestamp="20200521 14:04:18.531" level="INFO">${result} = down</msg>
<status status="PASS" endtime="20200521 14:04:18.531" starttime="20200521 14:04:17.500"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:18.532" starttime="20200521 14:04:18.531"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${result}' == 'up'</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:18.533" starttime="20200521 14:04:18.533"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:18.533" starttime="20200521 14:04:17.500"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:18.533" starttime="20200521 14:03:48.495"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${result}</arg>
<arg>up</arg>
</arguments>
<msg timestamp="20200521 14:04:18.534" level="FAIL">down != up</msg>
<status status="FAIL" endtime="20200521 14:04:18.534" starttime="20200521 14:04:18.534"></status>
</kw>
<status status="FAIL" endtime="20200521 14:04:18.535" starttime="20200521 14:03:48.495"></status>
</kw>
<status status="FAIL" endtime="20200521 14:04:18.535" starttime="20200521 14:03:47.387"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200521 14:04:18.548" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200521 14:04:18.559" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000525 seconds.</msg>
<msg timestamp="20200521 14:04:18.560" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200521 14:04:18.560" starttime="20200521 14:04:18.537"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:18.560" starttime="20200521 14:04:18.535"></status>
</kw>
<doc>Test BAL Restful Status</doc>
<tags>
<tag>Test Bal Restful opertaion test</tag>
</tags>
<status status="FAIL" endtime="20200521 14:04:18.560" critical="yes" starttime="20200521 14:03:47.356">down != up</status>
</test>
<test id="s1-s1-t2" name="Verify Restful API for ONU Range Test">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200521 14:04:18.570" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200521 14:04:18.586" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000647 seconds.</msg>
<msg timestamp="20200521 14:04:18.587" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200521 14:04:18.587" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200521 14:04:18.587" starttime="20200521 14:04:18.563"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:18.588" starttime="20200521 14:04:18.562"></status>
</kw>
<kw name="Test ONU Range">
<tags>
<tag>ONU Range</tag>
</tags>
<doc>ONU Ranging Test</doc>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PON_TYPE}' == 'GPON'</arg>
<arg>set variable</arg>
<arg>${150}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${255}</arg>
</arguments>
<assign>
<var>${ONU_ID_RANGE}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${255}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:18.590" starttime="20200521 14:04:18.589"></status>
</kw>
<msg timestamp="20200521 14:04:18.590" level="INFO">${ONU_ID_RANGE} = 255</msg>
<status status="PASS" endtime="20200521 14:04:18.590" starttime="20200521 14:04:18.589"></status>
</kw>
<kw type="for" name="${id} IN RANGE [ 1 | ${ONU_ID_RANGE} | 50 ]">
<kw type="foritem" name="${id} = 1">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200521 14:04:25.591" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200521 14:04:25.591" starttime="20200521 14:04:18.591"></status>
</kw>
<kw name="Test Active ONU">
<tags>
<tag>Test Active ONU</tag>
</tags>
<doc>Test Active ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${SPECIFIC_ID}</arg>
<arg>${SPECIFIC_NUM}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onu_id": ${ONU_ID},</arg>
<arg>"vendor_id": "${VEN_ID}",</arg>
<arg>"vendor_specific":"${VEN_SPEC}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 14:04:25.593" level="INFO">${JSTRING} = { "onu_id": 1, "vendor_id": "ISKT", "vendor_specific":"71E83268" }</msg>
<status status="PASS" endtime="20200521 14:04:25.593" starttime="20200521 14:04:25.593"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### active onu ${JSTRING} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:25.595" starttime="20200521 14:04:25.594"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 14:04:25.601" level="INFO">${payload} = {u'onu_id': 1, u'vendor_id': u'ISKT', u'vendor_specific': u'71E83268'}</msg>
<status status="PASS" endtime="20200521 14:04:25.601" starttime="20200521 14:04:25.595"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:25.613" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 14:04:25.624" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.00053 seconds.</msg>
<msg timestamp="20200521 14:04:25.627" level="INFO">${resp} = 500
date Thu, 21 May 2020 06:04:25 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:25.627" starttime="20200521 14:04:25.602"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200521 14:04:25.628" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200521 14:04:25.629" level="FAIL">500 != 201</msg>
<status status="FAIL" endtime="20200521 14:04:25.629" starttime="20200521 14:04:25.628"></status>
</kw>
<status status="FAIL" endtime="20200521 14:04:25.629" starttime="20200521 14:04:25.627"></status>
</kw>
<status status="FAIL" endtime="20200521 14:04:25.629" starttime="20200521 14:04:25.592"></status>
</kw>
<status status="FAIL" endtime="20200521 14:04:25.629" starttime="20200521 14:04:18.590"></status>
</kw>
<status status="FAIL" endtime="20200521 14:04:25.629" starttime="20200521 14:04:18.590"></status>
</kw>
<status status="FAIL" endtime="20200521 14:04:25.630" starttime="20200521 14:04:18.588"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200521 14:04:25.640" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200521 14:04:25.652" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000499 seconds.</msg>
<msg timestamp="20200521 14:04:25.653" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200521 14:04:25.653" starttime="20200521 14:04:25.631"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:25.653" starttime="20200521 14:04:25.630"></status>
</kw>
<doc>Test ONU Range</doc>
<tags>
<tag>Test ONU Rnage test</tag>
</tags>
<status status="FAIL" endtime="20200521 14:04:25.653" critical="yes" starttime="20200521 14:04:18.561">500 != 201</status>
</test>
<test id="s1-s1-t3" name="Verify Restful API for flow add">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200521 14:04:25.663" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200521 14:04:25.678" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000781 seconds.</msg>
<msg timestamp="20200521 14:04:25.678" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200521 14:04:25.678" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200521 14:04:25.679" starttime="20200521 14:04:25.656"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:25.679" starttime="20200521 14:04:25.655"></status>
</kw>
<kw name="Test US DS Flow Add">
<tags>
<tag>US DS Flow Add/Remove</tag>
</tags>
<doc>Flow Add/Remove</doc>
<kw type="for" name="${flow_id} IN RANGE [ 0 | 2047 | 500 ]">
<kw type="foritem" name="${flow_id} = 0">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 14:04:26.681" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 14:04:26.681" starttime="20200521 14:04:25.680"></status>
</kw>
<kw name="Test Flow Add">
<tags>
<tag>UP/DOWN stream flow add</tag>
</tags>
<doc>Test Flow Add</doc>
<arguments>
<arg>1</arg>
<arg>${flow_id}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PON_ID} - ${1}</arg>
</arguments>
<assign>
<var>${PON_ID}</var>
</assign>
<msg timestamp="20200521 14:04:26.683" level="INFO">${PON_ID} = 0</msg>
<status status="PASS" endtime="20200521 14:04:26.683" starttime="20200521 14:04:26.682"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024,</arg>
<arg>"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":"BCMOLT_ACTION_CMD_ID_ADD_OUTER_TAG",</arg>
<arg>"ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,"EtherType":0,"IpProto":0,"SrcPort":0,</arg>
<arg>"DstPort":0},"ClassVal":[{"OVid":20,"IVid":0,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 14:04:26.684" level="INFO">${JSTRING} = { "onuId":1,"FlowId":0,"PortId":0,"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024, "Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":...</msg>
<status status="PASS" endtime="20200521 14:04:26.684" starttime="20200521 14:04:26.683"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 14:04:26.689" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'single_tag', u'GemportId': 1024, u'FlowId': 0, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 20, u'IPbits': 0, u'IVid': 0, u'O...</msg>
<status status="PASS" endtime="20200521 14:04:26.689" starttime="20200521 14:04:26.684"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:26.700" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200521 14:04:26.714" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000505 seconds.</msg>
<msg timestamp="20200521 14:04:26.714" level="INFO">${resp} = 500
date Thu, 21 May 2020 06:04:27 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:26.714" starttime="20200521 14:04:26.690"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:04:26.716" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200521 14:04:26.716" level="FAIL">500 != 200</msg>
<status status="FAIL" endtime="20200521 14:04:26.716" starttime="20200521 14:04:26.716"></status>
</kw>
<status status="FAIL" endtime="20200521 14:04:26.717" starttime="20200521 14:04:26.715"></status>
</kw>
<status status="FAIL" endtime="20200521 14:04:26.717" starttime="20200521 14:04:26.681"></status>
</kw>
<status status="FAIL" endtime="20200521 14:04:26.717" starttime="20200521 14:04:25.680"></status>
</kw>
<status status="FAIL" endtime="20200521 14:04:26.717" starttime="20200521 14:04:25.679"></status>
</kw>
<status status="FAIL" endtime="20200521 14:04:26.717" starttime="20200521 14:04:25.679"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200521 14:04:26.727" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200521 14:04:26.738" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000476 seconds.</msg>
<msg timestamp="20200521 14:04:26.738" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200521 14:04:26.738" starttime="20200521 14:04:26.718"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:26.739" starttime="20200521 14:04:26.717"></status>
</kw>
<doc>Test flow add</doc>
<tags>
<tag>Test Flow add</tag>
</tags>
<status status="FAIL" endtime="20200521 14:04:26.739" critical="yes" starttime="20200521 14:04:25.654">500 != 200</status>
</test>
<test id="s1-s1-t4" name="Verify Restful API for omci send">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200521 14:04:26.749" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200521 14:04:26.766" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000627 seconds.</msg>
<msg timestamp="20200521 14:04:26.766" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200521 14:04:26.766" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200521 14:04:26.766" starttime="20200521 14:04:26.742"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:26.766" starttime="20200521 14:04:26.742"></status>
</kw>
<kw name="Test omci send">
<tags>
<tag>omci send</tag>
</tags>
<doc>Send omci raw data</doc>
<kw name="Test Send Omci">
<tags>
<tag>Send Omci function</tag>
</tags>
<doc>Send Omci function</doc>
<arguments>
<arg>1</arg>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OMCI_RAW)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload_}</var>
</assign>
<msg timestamp="20200521 14:04:26.774" level="INFO">${payload_} = {u'raw_data': [{u'Omci': u'00B34F0A00020000000000000000000000000000000000000000000000000000000000000000000000000028'}, {u'Omci': u'00B44F0A0002000000000000000000000000000000000000000000000000000000000...</msg>
<status status="PASS" endtime="20200521 14:04:26.774" starttime="20200521 14:04:26.768"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${payload_["raw_data"]</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200521 14:04:26.775" level="INFO">Length is 22</msg>
<msg timestamp="20200521 14:04:26.775" level="INFO">${length} = 22</msg>
<status status="PASS" endtime="20200521 14:04:26.775" starttime="20200521 14:04:26.775"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>====================length ${length} ================</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:26.776" starttime="20200521 14:04:26.776"></status>
</kw>
<kw type="for" name="${i} IN RANGE [ 0 | 171 ]">
<kw type="foritem" name="${i} = 0">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:26.778" starttime="20200521 14:04:26.777"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:27.079" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:27.079" starttime="20200521 14:04:26.778"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:27.089" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:27.099" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000427 seconds.</msg>
<msg timestamp="20200521 14:04:27.100" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:27 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:27.100" starttime="20200521 14:04:27.079"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:27.100" starttime="20200521 14:04:26.777"></status>
</kw>
<kw type="foritem" name="${i} = 1">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:27.102" starttime="20200521 14:04:27.101"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:27.403" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:27.404" starttime="20200521 14:04:27.103"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:27.414" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:27.424" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000476 seconds.</msg>
<msg timestamp="20200521 14:04:27.425" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:27 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:27.425" starttime="20200521 14:04:27.404"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:27.425" starttime="20200521 14:04:27.100"></status>
</kw>
<kw type="foritem" name="${i} = 2">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:27.428" starttime="20200521 14:04:27.425"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:27.729" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:27.730" starttime="20200521 14:04:27.429"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:27.740" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:27.752" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000507 seconds.</msg>
<msg timestamp="20200521 14:04:27.752" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:28 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:27.752" starttime="20200521 14:04:27.730"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:27.753" starttime="20200521 14:04:27.425"></status>
</kw>
<kw type="foritem" name="${i} = 3">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:27.754" starttime="20200521 14:04:27.753"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:28.056" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:28.056" starttime="20200521 14:04:27.755"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:28.068" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:28.079" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000457 seconds.</msg>
<msg timestamp="20200521 14:04:28.079" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:28 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:28.079" starttime="20200521 14:04:28.057"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:28.079" starttime="20200521 14:04:27.753"></status>
</kw>
<kw type="foritem" name="${i} = 4">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:28.081" starttime="20200521 14:04:28.080"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:28.387" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:28.388" starttime="20200521 14:04:28.082"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:28.398" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:28.409" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000541 seconds.</msg>
<msg timestamp="20200521 14:04:28.410" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:28 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:28.410" starttime="20200521 14:04:28.388"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:28.410" starttime="20200521 14:04:28.079"></status>
</kw>
<kw type="foritem" name="${i} = 5">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:28.411" starttime="20200521 14:04:28.410"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:28.712" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:28.712" starttime="20200521 14:04:28.411"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:28.723" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:28.733" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000494 seconds.</msg>
<msg timestamp="20200521 14:04:28.734" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:29 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:28.734" starttime="20200521 14:04:28.713"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:28.734" starttime="20200521 14:04:28.410"></status>
</kw>
<kw type="foritem" name="${i} = 6">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:28.737" starttime="20200521 14:04:28.734"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:29.041" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:29.041" starttime="20200521 14:04:28.738"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:29.051" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:29.062" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000435 seconds.</msg>
<msg timestamp="20200521 14:04:29.063" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:29 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:29.063" starttime="20200521 14:04:29.042"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:29.063" starttime="20200521 14:04:28.734"></status>
</kw>
<kw type="foritem" name="${i} = 7">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:29.066" starttime="20200521 14:04:29.063"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:29.371" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:29.371" starttime="20200521 14:04:29.066"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:29.381" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:29.391" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000498 seconds.</msg>
<msg timestamp="20200521 14:04:29.392" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:29 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:29.392" starttime="20200521 14:04:29.372"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:29.392" starttime="20200521 14:04:29.063"></status>
</kw>
<kw type="foritem" name="${i} = 8">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:29.395" starttime="20200521 14:04:29.393"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:29.697" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:29.697" starttime="20200521 14:04:29.396"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:29.708" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:29.722" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000463 seconds.</msg>
<msg timestamp="20200521 14:04:29.723" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:30 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:29.723" starttime="20200521 14:04:29.697"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:29.723" starttime="20200521 14:04:29.393"></status>
</kw>
<kw type="foritem" name="${i} = 9">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:29.724" starttime="20200521 14:04:29.723"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:30.028" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:30.028" starttime="20200521 14:04:29.725"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:30.039" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:30.051" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000604 seconds.</msg>
<msg timestamp="20200521 14:04:30.052" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:30 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:30.052" starttime="20200521 14:04:30.028"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:30.052" starttime="20200521 14:04:29.723"></status>
</kw>
<kw type="foritem" name="${i} = 10">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:30.053" starttime="20200521 14:04:30.052"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:30.354" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:30.354" starttime="20200521 14:04:30.053"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:30.364" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:30.376" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000495 seconds.</msg>
<msg timestamp="20200521 14:04:30.376" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:30 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:30.376" starttime="20200521 14:04:30.354"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:30.376" starttime="20200521 14:04:30.052"></status>
</kw>
<kw type="foritem" name="${i} = 11">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:30.378" starttime="20200521 14:04:30.377"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:30.679" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:30.679" starttime="20200521 14:04:30.378"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:30.691" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:30.701" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000535 seconds.</msg>
<msg timestamp="20200521 14:04:30.702" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:31 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:30.702" starttime="20200521 14:04:30.679"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:30.702" starttime="20200521 14:04:30.377"></status>
</kw>
<kw type="foritem" name="${i} = 12">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:30.703" starttime="20200521 14:04:30.703"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:31.004" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:31.005" starttime="20200521 14:04:30.704"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:31.017" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:31.027" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000454 seconds.</msg>
<msg timestamp="20200521 14:04:31.028" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:31 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:31.028" starttime="20200521 14:04:31.005"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:31.028" starttime="20200521 14:04:30.702"></status>
</kw>
<kw type="foritem" name="${i} = 13">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:31.029" starttime="20200521 14:04:31.028"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:31.331" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:31.331" starttime="20200521 14:04:31.029"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:31.343" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:31.353" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000448 seconds.</msg>
<msg timestamp="20200521 14:04:31.354" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:31 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:31.354" starttime="20200521 14:04:31.332"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:31.354" starttime="20200521 14:04:31.028"></status>
</kw>
<kw type="foritem" name="${i} = 14">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:31.356" starttime="20200521 14:04:31.355"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:31.661" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:31.661" starttime="20200521 14:04:31.356"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:31.673" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:31.684" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000556 seconds.</msg>
<msg timestamp="20200521 14:04:31.685" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:31 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:31.685" starttime="20200521 14:04:31.662"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:31.685" starttime="20200521 14:04:31.354"></status>
</kw>
<kw type="foritem" name="${i} = 15">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:31.687" starttime="20200521 14:04:31.685"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:31.991" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:31.991" starttime="20200521 14:04:31.687"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:32.003" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:32.013" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000417 seconds.</msg>
<msg timestamp="20200521 14:04:32.014" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:32 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:32.014" starttime="20200521 14:04:31.992"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:32.014" starttime="20200521 14:04:31.685"></status>
</kw>
<kw type="foritem" name="${i} = 16">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:32.016" starttime="20200521 14:04:32.014"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:32.321" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:32.321" starttime="20200521 14:04:32.016"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:32.332" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:32.343" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000437 seconds.</msg>
<msg timestamp="20200521 14:04:32.343" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:32 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:32.343" starttime="20200521 14:04:32.322"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:32.343" starttime="20200521 14:04:32.014"></status>
</kw>
<kw type="foritem" name="${i} = 17">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:32.345" starttime="20200521 14:04:32.344"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:32.664" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:32.664" starttime="20200521 14:04:32.346"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:32.676" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:32.687" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000462 seconds.</msg>
<msg timestamp="20200521 14:04:32.688" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:33 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:32.688" starttime="20200521 14:04:32.664"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:32.688" starttime="20200521 14:04:32.343"></status>
</kw>
<kw type="foritem" name="${i} = 18">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:32.691" starttime="20200521 14:04:32.689"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:32.992" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:32.992" starttime="20200521 14:04:32.691"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:33.005" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:33.015" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000393 seconds.</msg>
<msg timestamp="20200521 14:04:33.016" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:33 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:33.016" starttime="20200521 14:04:32.993"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:33.016" starttime="20200521 14:04:32.688"></status>
</kw>
<kw type="foritem" name="${i} = 19">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:33.018" starttime="20200521 14:04:33.017"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:33.321" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:33.321" starttime="20200521 14:04:33.018"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:33.333" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:33.345" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000498 seconds.</msg>
<msg timestamp="20200521 14:04:33.345" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:33 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:33.345" starttime="20200521 14:04:33.322"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:33.345" starttime="20200521 14:04:33.016"></status>
</kw>
<kw type="foritem" name="${i} = 20">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:33.347" starttime="20200521 14:04:33.346"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:33.648" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:33.649" starttime="20200521 14:04:33.348"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:33.659" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:33.670" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000465 seconds.</msg>
<msg timestamp="20200521 14:04:33.670" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:33 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:33.670" starttime="20200521 14:04:33.649"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:33.670" starttime="20200521 14:04:33.345"></status>
</kw>
<kw type="foritem" name="${i} = 21">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:33.672" starttime="20200521 14:04:33.671"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:33.975" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:33.975" starttime="20200521 14:04:33.672"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:33.989" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:34.001" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000462 seconds.</msg>
<msg timestamp="20200521 14:04:34.002" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:34 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:34.002" starttime="20200521 14:04:33.975"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:34.002" starttime="20200521 14:04:33.671"></status>
</kw>
<kw type="foritem" name="${i} = 22">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:34.005" starttime="20200521 14:04:34.002"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:34.306" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:34.306" starttime="20200521 14:04:34.005"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:34.320" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:34.330" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000502 seconds.</msg>
<msg timestamp="20200521 14:04:34.331" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:34 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:34.331" starttime="20200521 14:04:34.306"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:34.331" starttime="20200521 14:04:34.002"></status>
</kw>
<kw type="foritem" name="${i} = 23">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:34.332" starttime="20200521 14:04:34.332"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:34.634" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:34.634" starttime="20200521 14:04:34.333"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:34.645" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:34.658" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000452 seconds.</msg>
<msg timestamp="20200521 14:04:34.659" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:34 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:34.659" starttime="20200521 14:04:34.634"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:34.659" starttime="20200521 14:04:34.331"></status>
</kw>
<kw type="foritem" name="${i} = 24">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:34.660" starttime="20200521 14:04:34.659"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:34.961" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:34.961" starttime="20200521 14:04:34.660"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:34.978" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:34.989" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000326 seconds.</msg>
<msg timestamp="20200521 14:04:34.989" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:35 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:34.989" starttime="20200521 14:04:34.962"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:34.989" starttime="20200521 14:04:34.659"></status>
</kw>
<kw type="foritem" name="${i} = 25">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:34.990" starttime="20200521 14:04:34.989"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:35.291" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:35.291" starttime="20200521 14:04:34.990"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:35.304" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:35.314" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000583 seconds.</msg>
<msg timestamp="20200521 14:04:35.315" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:35 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:35.315" starttime="20200521 14:04:35.291"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:35.315" starttime="20200521 14:04:34.989"></status>
</kw>
<kw type="foritem" name="${i} = 26">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:35.316" starttime="20200521 14:04:35.315"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:35.619" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:35.620" starttime="20200521 14:04:35.319"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:35.632" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:35.643" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000548 seconds.</msg>
<msg timestamp="20200521 14:04:35.643" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:35 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:35.644" starttime="20200521 14:04:35.620"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:35.644" starttime="20200521 14:04:35.315"></status>
</kw>
<kw type="foritem" name="${i} = 27">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:35.648" starttime="20200521 14:04:35.644"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:35.949" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:35.949" starttime="20200521 14:04:35.648"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:35.963" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:35.973" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000504 seconds.</msg>
<msg timestamp="20200521 14:04:35.974" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:36 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:35.974" starttime="20200521 14:04:35.949"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:35.974" starttime="20200521 14:04:35.644"></status>
</kw>
<kw type="foritem" name="${i} = 28">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:35.975" starttime="20200521 14:04:35.974"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:36.276" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:36.277" starttime="20200521 14:04:35.976"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:36.288" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:36.299" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000518 seconds.</msg>
<msg timestamp="20200521 14:04:36.299" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:36 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:36.299" starttime="20200521 14:04:36.277"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:36.300" starttime="20200521 14:04:35.974"></status>
</kw>
<kw type="foritem" name="${i} = 29">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:36.302" starttime="20200521 14:04:36.300"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:36.603" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:36.603" starttime="20200521 14:04:36.302"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:36.614" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:36.625" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000454 seconds.</msg>
<msg timestamp="20200521 14:04:36.625" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:36 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:36.626" starttime="20200521 14:04:36.604"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:36.626" starttime="20200521 14:04:36.300"></status>
</kw>
<kw type="foritem" name="${i} = 30">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:36.627" starttime="20200521 14:04:36.626"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:36.929" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:36.929" starttime="20200521 14:04:36.628"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:36.941" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:36.952" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00052 seconds.</msg>
<msg timestamp="20200521 14:04:36.952" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:37 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:36.952" starttime="20200521 14:04:36.929"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:36.952" starttime="20200521 14:04:36.626"></status>
</kw>
<kw type="foritem" name="${i} = 31">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:36.954" starttime="20200521 14:04:36.953"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:37.255" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:37.255" starttime="20200521 14:04:36.954"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:37.267" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:37.278" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000541 seconds.</msg>
<msg timestamp="20200521 14:04:37.278" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:37 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:37.278" starttime="20200521 14:04:37.255"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:37.278" starttime="20200521 14:04:36.952"></status>
</kw>
<kw type="foritem" name="${i} = 32">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:37.280" starttime="20200521 14:04:37.279"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:37.581" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:37.581" starttime="20200521 14:04:37.280"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:37.593" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:37.604" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000448 seconds.</msg>
<msg timestamp="20200521 14:04:37.604" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:37 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:37.605" starttime="20200521 14:04:37.582"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:37.605" starttime="20200521 14:04:37.279"></status>
</kw>
<kw type="foritem" name="${i} = 33">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:37.606" starttime="20200521 14:04:37.605"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:37.907" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:37.907" starttime="20200521 14:04:37.606"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:37.918" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:37.929" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000624 seconds.</msg>
<msg timestamp="20200521 14:04:37.930" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:38 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:37.930" starttime="20200521 14:04:37.908"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:37.930" starttime="20200521 14:04:37.605"></status>
</kw>
<kw type="foritem" name="${i} = 34">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:37.932" starttime="20200521 14:04:37.931"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:38.233" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:38.233" starttime="20200521 14:04:37.932"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:38.244" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:38.255" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000512 seconds.</msg>
<msg timestamp="20200521 14:04:38.255" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:38 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:38.255" starttime="20200521 14:04:38.233"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:38.255" starttime="20200521 14:04:37.930"></status>
</kw>
<kw type="foritem" name="${i} = 35">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:38.257" starttime="20200521 14:04:38.256"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:38.558" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:38.558" starttime="20200521 14:04:38.257"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:38.569" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:38.580" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000593 seconds.</msg>
<msg timestamp="20200521 14:04:38.581" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:38 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:38.581" starttime="20200521 14:04:38.559"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:38.581" starttime="20200521 14:04:38.256"></status>
</kw>
<kw type="foritem" name="${i} = 36">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:38.583" starttime="20200521 14:04:38.582"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:38.884" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:38.884" starttime="20200521 14:04:38.583"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:38.896" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:38.907" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000607 seconds.</msg>
<msg timestamp="20200521 14:04:38.908" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:39 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:38.908" starttime="20200521 14:04:38.884"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:38.908" starttime="20200521 14:04:38.581"></status>
</kw>
<kw type="foritem" name="${i} = 37">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:38.910" starttime="20200521 14:04:38.909"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:39.211" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:39.211" starttime="20200521 14:04:38.910"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:39.226" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:39.234" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000453 seconds.</msg>
<msg timestamp="20200521 14:04:39.235" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:39 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:39.235" starttime="20200521 14:04:39.211"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:39.235" starttime="20200521 14:04:38.908"></status>
</kw>
<kw type="foritem" name="${i} = 38">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:39.238" starttime="20200521 14:04:39.236"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:39.540" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:39.540" starttime="20200521 14:04:39.238"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:39.552" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:39.562" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000451 seconds.</msg>
<msg timestamp="20200521 14:04:39.563" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:39 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:39.563" starttime="20200521 14:04:39.541"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:39.563" starttime="20200521 14:04:39.235"></status>
</kw>
<kw type="foritem" name="${i} = 39">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:39.564" starttime="20200521 14:04:39.564"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:39.867" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:39.867" starttime="20200521 14:04:39.565"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:39.880" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:39.890" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000454 seconds.</msg>
<msg timestamp="20200521 14:04:39.890" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:40 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:39.891" starttime="20200521 14:04:39.868"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:39.891" starttime="20200521 14:04:39.563"></status>
</kw>
<kw type="foritem" name="${i} = 40">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:39.894" starttime="20200521 14:04:39.891"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:40.201" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:40.201" starttime="20200521 14:04:39.894"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:40.211" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:40.222" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000555 seconds.</msg>
<msg timestamp="20200521 14:04:40.222" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:40 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:40.222" starttime="20200521 14:04:40.202"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:40.222" starttime="20200521 14:04:39.891"></status>
</kw>
<kw type="foritem" name="${i} = 41">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:40.224" starttime="20200521 14:04:40.223"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:40.527" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:40.528" starttime="20200521 14:04:40.224"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:40.538" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:40.549" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000544000000001 seconds.</msg>
<msg timestamp="20200521 14:04:40.550" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:40 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:40.550" starttime="20200521 14:04:40.528"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:40.550" starttime="20200521 14:04:40.223"></status>
</kw>
<kw type="foritem" name="${i} = 42">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:40.552" starttime="20200521 14:04:40.551"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:40.862" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:40.862" starttime="20200521 14:04:40.552"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:40.873" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:40.883" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000526 seconds.</msg>
<msg timestamp="20200521 14:04:40.884" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:41 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:40.884" starttime="20200521 14:04:40.862"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:40.884" starttime="20200521 14:04:40.550"></status>
</kw>
<kw type="foritem" name="${i} = 43">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:40.885" starttime="20200521 14:04:40.884"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:41.191" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:41.191" starttime="20200521 14:04:40.886"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:41.202" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:41.213" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000541999999999 seconds.</msg>
<msg timestamp="20200521 14:04:41.213" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:41 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:41.213" starttime="20200521 14:04:41.192"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:41.213" starttime="20200521 14:04:40.884"></status>
</kw>
<kw type="foritem" name="${i} = 44">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:41.215" starttime="20200521 14:04:41.214"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:41.516" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:41.516" starttime="20200521 14:04:41.215"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:41.527" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:41.537" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000476 seconds.</msg>
<msg timestamp="20200521 14:04:41.537" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:41 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:41.538" starttime="20200521 14:04:41.516"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:41.538" starttime="20200521 14:04:41.213"></status>
</kw>
<kw type="foritem" name="${i} = 45">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:41.539" starttime="20200521 14:04:41.538"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:41.840" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:41.840" starttime="20200521 14:04:41.539"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:41.855" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:41.865" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000464 seconds.</msg>
<msg timestamp="20200521 14:04:41.866" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:42 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:41.866" starttime="20200521 14:04:41.841"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:41.866" starttime="20200521 14:04:41.538"></status>
</kw>
<kw type="foritem" name="${i} = 46">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:41.868" starttime="20200521 14:04:41.867"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:42.173" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:42.173" starttime="20200521 14:04:41.871"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:42.185" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:42.195" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000457 seconds.</msg>
<msg timestamp="20200521 14:04:42.196" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:42 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:42.196" starttime="20200521 14:04:42.174"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:42.196" starttime="20200521 14:04:41.866"></status>
</kw>
<kw type="foritem" name="${i} = 47">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:42.198" starttime="20200521 14:04:42.197"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:42.499" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:42.499" starttime="20200521 14:04:42.198"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:42.510" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:42.521" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000495000000001 seconds.</msg>
<msg timestamp="20200521 14:04:42.522" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:42 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:42.522" starttime="20200521 14:04:42.500"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:42.522" starttime="20200521 14:04:42.196"></status>
</kw>
<kw type="foritem" name="${i} = 48">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:42.524" starttime="20200521 14:04:42.523"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:42.825" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:42.825" starttime="20200521 14:04:42.524"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:42.836" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:42.848" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000721 seconds.</msg>
<msg timestamp="20200521 14:04:42.849" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:43 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:42.849" starttime="20200521 14:04:42.825"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:42.849" starttime="20200521 14:04:42.522"></status>
</kw>
<kw type="foritem" name="${i} = 49">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:42.853" starttime="20200521 14:04:42.850"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:43.155" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:43.155" starttime="20200521 14:04:42.854"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:43.165" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:43.176" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000511 seconds.</msg>
<msg timestamp="20200521 14:04:43.177" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:43 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:43.177" starttime="20200521 14:04:43.155"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:43.177" starttime="20200521 14:04:42.849"></status>
</kw>
<kw type="foritem" name="${i} = 50">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:43.183" starttime="20200521 14:04:43.178"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:43.484" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:43.484" starttime="20200521 14:04:43.183"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:43.496" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:43.507" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000472 seconds.</msg>
<msg timestamp="20200521 14:04:43.507" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:43 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:43.507" starttime="20200521 14:04:43.484"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:43.508" starttime="20200521 14:04:43.177"></status>
</kw>
<kw type="foritem" name="${i} = 51">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:43.509" starttime="20200521 14:04:43.508"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:43.810" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:43.810" starttime="20200521 14:04:43.509"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:43.821" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:43.833" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000524 seconds.</msg>
<msg timestamp="20200521 14:04:43.834" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:44 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:43.834" starttime="20200521 14:04:43.811"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:43.834" starttime="20200521 14:04:43.508"></status>
</kw>
<kw type="foritem" name="${i} = 52">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:43.835" starttime="20200521 14:04:43.834"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:44.136" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:44.137" starttime="20200521 14:04:43.836"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:44.146" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:44.157" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000482 seconds.</msg>
<msg timestamp="20200521 14:04:44.157" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:44 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:44.157" starttime="20200521 14:04:44.137"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:44.157" starttime="20200521 14:04:43.834"></status>
</kw>
<kw type="foritem" name="${i} = 53">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:44.159" starttime="20200521 14:04:44.158"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:44.460" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:44.460" starttime="20200521 14:04:44.159"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:44.471" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:44.481" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000741 seconds.</msg>
<msg timestamp="20200521 14:04:44.482" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:44 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:44.482" starttime="20200521 14:04:44.461"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:44.482" starttime="20200521 14:04:44.158"></status>
</kw>
<kw type="foritem" name="${i} = 54">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:44.483" starttime="20200521 14:04:44.482"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:44.784" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:44.784" starttime="20200521 14:04:44.484"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:44.797" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:44.809" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000748000000001 seconds.</msg>
<msg timestamp="20200521 14:04:44.810" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:45 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:44.810" starttime="20200521 14:04:44.785"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:44.810" starttime="20200521 14:04:44.482"></status>
</kw>
<kw type="foritem" name="${i} = 55">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:44.811" starttime="20200521 14:04:44.810"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:45.113" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:45.113" starttime="20200521 14:04:44.812"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:45.124" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:45.135" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000471 seconds.</msg>
<msg timestamp="20200521 14:04:45.135" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:45 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:45.136" starttime="20200521 14:04:45.114"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:45.136" starttime="20200521 14:04:44.810"></status>
</kw>
<kw type="foritem" name="${i} = 56">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:45.138" starttime="20200521 14:04:45.136"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:45.439" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:45.439" starttime="20200521 14:04:45.138"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:45.452" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:45.464" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000486 seconds.</msg>
<msg timestamp="20200521 14:04:45.465" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:45 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:45.465" starttime="20200521 14:04:45.439"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:45.465" starttime="20200521 14:04:45.136"></status>
</kw>
<kw type="foritem" name="${i} = 57">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:45.467" starttime="20200521 14:04:45.466"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:45.767" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:45.768" starttime="20200521 14:04:45.467"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:45.780" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:45.791" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000713 seconds.</msg>
<msg timestamp="20200521 14:04:45.792" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:46 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:45.792" starttime="20200521 14:04:45.768"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:45.792" starttime="20200521 14:04:45.465"></status>
</kw>
<kw type="foritem" name="${i} = 58">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:45.793" starttime="20200521 14:04:45.792"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:46.094" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:46.094" starttime="20200521 14:04:45.793"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:46.104" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:46.115" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000503 seconds.</msg>
<msg timestamp="20200521 14:04:46.115" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:46 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:46.115" starttime="20200521 14:04:46.094"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:46.115" starttime="20200521 14:04:45.792"></status>
</kw>
<kw type="foritem" name="${i} = 59">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:46.117" starttime="20200521 14:04:46.116"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:46.419" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:46.419" starttime="20200521 14:04:46.118"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:46.432" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:46.442" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000528 seconds.</msg>
<msg timestamp="20200521 14:04:46.443" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:46 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:46.443" starttime="20200521 14:04:46.419"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:46.443" starttime="20200521 14:04:46.116"></status>
</kw>
<kw type="foritem" name="${i} = 60">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:46.445" starttime="20200521 14:04:46.444"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:46.746" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:46.747" starttime="20200521 14:04:46.445"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:46.760" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:46.773" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000433 seconds.</msg>
<msg timestamp="20200521 14:04:46.773" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:47 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:46.773" starttime="20200521 14:04:46.747"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:46.773" starttime="20200521 14:04:46.443"></status>
</kw>
<kw type="foritem" name="${i} = 61">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:46.775" starttime="20200521 14:04:46.774"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:47.081" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:47.082" starttime="20200521 14:04:46.776"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:47.093" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:47.103" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000489 seconds.</msg>
<msg timestamp="20200521 14:04:47.104" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:47 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:47.104" starttime="20200521 14:04:47.082"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:47.104" starttime="20200521 14:04:46.774"></status>
</kw>
<kw type="foritem" name="${i} = 62">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:47.106" starttime="20200521 14:04:47.104"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:47.407" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:47.407" starttime="20200521 14:04:47.106"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:47.419" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:47.429" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000639 seconds.</msg>
<msg timestamp="20200521 14:04:47.430" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:47 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:47.430" starttime="20200521 14:04:47.408"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:47.430" starttime="20200521 14:04:47.104"></status>
</kw>
<kw type="foritem" name="${i} = 63">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:47.431" starttime="20200521 14:04:47.431"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:47.732" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:47.733" starttime="20200521 14:04:47.432"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:47.744" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:47.760" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00049 seconds.</msg>
<msg timestamp="20200521 14:04:47.760" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:48 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:47.761" starttime="20200521 14:04:47.733"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:47.761" starttime="20200521 14:04:47.430"></status>
</kw>
<kw type="foritem" name="${i} = 64">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:47.764" starttime="20200521 14:04:47.761"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:48.066" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:48.066" starttime="20200521 14:04:47.765"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:48.078" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:48.089" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000603 seconds.</msg>
<msg timestamp="20200521 14:04:48.089" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:48 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:48.089" starttime="20200521 14:04:48.067"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:48.089" starttime="20200521 14:04:47.761"></status>
</kw>
<kw type="foritem" name="${i} = 65">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:48.091" starttime="20200521 14:04:48.090"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:48.393" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:48.394" starttime="20200521 14:04:48.092"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:48.406" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:48.417" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000640000000001 seconds.</msg>
<msg timestamp="20200521 14:04:48.418" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:48 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:48.418" starttime="20200521 14:04:48.394"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:48.418" starttime="20200521 14:04:48.090"></status>
</kw>
<kw type="foritem" name="${i} = 66">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:48.419" starttime="20200521 14:04:48.418"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:48.721" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:48.722" starttime="20200521 14:04:48.420"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:48.733" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:48.744" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000414999999999 seconds.</msg>
<msg timestamp="20200521 14:04:48.744" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:49 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:48.744" starttime="20200521 14:04:48.722"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:48.744" starttime="20200521 14:04:48.418"></status>
</kw>
<kw type="foritem" name="${i} = 67">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:48.746" starttime="20200521 14:04:48.745"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:49.051" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:49.051" starttime="20200521 14:04:48.747"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:49.064" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:49.075" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000402 seconds.</msg>
<msg timestamp="20200521 14:04:49.075" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:49 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:49.075" starttime="20200521 14:04:49.052"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:49.075" starttime="20200521 14:04:48.745"></status>
</kw>
<kw type="foritem" name="${i} = 68">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:49.077" starttime="20200521 14:04:49.076"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:49.386" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:49.386" starttime="20200521 14:04:49.077"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:49.397" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:49.407" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000474 seconds.</msg>
<msg timestamp="20200521 14:04:49.408" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:49 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:49.408" starttime="20200521 14:04:49.387"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:49.408" starttime="20200521 14:04:49.075"></status>
</kw>
<kw type="foritem" name="${i} = 69">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:49.410" starttime="20200521 14:04:49.409"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:49.713" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:49.713" starttime="20200521 14:04:49.411"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:49.731" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:49.742" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000479 seconds.</msg>
<msg timestamp="20200521 14:04:49.743" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:50 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:49.743" starttime="20200521 14:04:49.713"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:49.743" starttime="20200521 14:04:49.408"></status>
</kw>
<kw type="foritem" name="${i} = 70">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:49.744" starttime="20200521 14:04:49.743"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:50.047" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:50.047" starttime="20200521 14:04:49.745"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:50.060" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:50.073" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000472 seconds.</msg>
<msg timestamp="20200521 14:04:50.074" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:50 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:50.074" starttime="20200521 14:04:50.048"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:50.074" starttime="20200521 14:04:49.743"></status>
</kw>
<kw type="foritem" name="${i} = 71">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:50.075" starttime="20200521 14:04:50.075"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:50.376" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:50.377" starttime="20200521 14:04:50.076"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:50.388" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:50.400" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000413 seconds.</msg>
<msg timestamp="20200521 14:04:50.401" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:50 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:50.401" starttime="20200521 14:04:50.377"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:50.401" starttime="20200521 14:04:50.074"></status>
</kw>
<kw type="foritem" name="${i} = 72">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:50.402" starttime="20200521 14:04:50.402"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:50.703" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:50.704" starttime="20200521 14:04:50.403"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:50.716" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:50.737" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000346 seconds.</msg>
<msg timestamp="20200521 14:04:50.737" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:51 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:50.737" starttime="20200521 14:04:50.704"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:50.737" starttime="20200521 14:04:50.401"></status>
</kw>
<kw type="foritem" name="${i} = 73">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:50.740" starttime="20200521 14:04:50.739"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:51.043" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:51.043" starttime="20200521 14:04:50.741"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:51.056" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:51.068" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000471 seconds.</msg>
<msg timestamp="20200521 14:04:51.069" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:51 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:51.069" starttime="20200521 14:04:51.044"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:51.069" starttime="20200521 14:04:50.738"></status>
</kw>
<kw type="foritem" name="${i} = 74">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:51.070" starttime="20200521 14:04:51.069"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:51.371" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:51.372" starttime="20200521 14:04:51.071"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:51.382" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:51.392" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000422 seconds.</msg>
<msg timestamp="20200521 14:04:51.392" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:51 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:51.392" starttime="20200521 14:04:51.372"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:51.392" starttime="20200521 14:04:51.069"></status>
</kw>
<kw type="foritem" name="${i} = 75">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:51.394" starttime="20200521 14:04:51.393"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:51.695" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:51.695" starttime="20200521 14:04:51.394"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:51.707" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:51.717" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000618 seconds.</msg>
<msg timestamp="20200521 14:04:51.718" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:52 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:51.718" starttime="20200521 14:04:51.696"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:51.718" starttime="20200521 14:04:51.392"></status>
</kw>
<kw type="foritem" name="${i} = 76">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:51.719" starttime="20200521 14:04:51.718"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:52.021" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:52.021" starttime="20200521 14:04:51.720"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:52.032" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:52.043" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000439 seconds.</msg>
<msg timestamp="20200521 14:04:52.044" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:52 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:52.044" starttime="20200521 14:04:52.022"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:52.044" starttime="20200521 14:04:51.718"></status>
</kw>
<kw type="foritem" name="${i} = 77">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:52.045" starttime="20200521 14:04:52.044"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:52.346" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:52.346" starttime="20200521 14:04:52.046"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:52.358" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:52.367" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000433999999999 seconds.</msg>
<msg timestamp="20200521 14:04:52.368" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:52 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:52.368" starttime="20200521 14:04:52.347"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:52.368" starttime="20200521 14:04:52.044"></status>
</kw>
<kw type="foritem" name="${i} = 78">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:52.369" starttime="20200521 14:04:52.368"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:52.671" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:52.671" starttime="20200521 14:04:52.370"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:52.682" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:52.695" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000618 seconds.</msg>
<msg timestamp="20200521 14:04:52.696" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:53 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:52.696" starttime="20200521 14:04:52.672"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:52.696" starttime="20200521 14:04:52.368"></status>
</kw>
<kw type="foritem" name="${i} = 79">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:52.698" starttime="20200521 14:04:52.697"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:52.999" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:52.999" starttime="20200521 14:04:52.698"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:53.010" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:53.024" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00042 seconds.</msg>
<msg timestamp="20200521 14:04:53.025" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:53 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:53.025" starttime="20200521 14:04:52.999"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:53.025" starttime="20200521 14:04:52.696"></status>
</kw>
<kw type="foritem" name="${i} = 80">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:53.028" starttime="20200521 14:04:53.025"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:53.329" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:53.329" starttime="20200521 14:04:53.029"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:53.343" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:53.353" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000479 seconds.</msg>
<msg timestamp="20200521 14:04:53.354" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:53 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:53.354" starttime="20200521 14:04:53.330"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:53.354" starttime="20200521 14:04:53.025"></status>
</kw>
<kw type="foritem" name="${i} = 81">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:53.355" starttime="20200521 14:04:53.355"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:53.661" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:53.661" starttime="20200521 14:04:53.356"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:53.671" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:53.684" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000446999999999 seconds.</msg>
<msg timestamp="20200521 14:04:53.686" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:53 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:53.686" starttime="20200521 14:04:53.662"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:53.686" starttime="20200521 14:04:53.354"></status>
</kw>
<kw type="foritem" name="${i} = 82">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:53.687" starttime="20200521 14:04:53.686"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:53.988" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:53.988" starttime="20200521 14:04:53.687"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:54.000" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:54.011" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000665 seconds.</msg>
<msg timestamp="20200521 14:04:54.012" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:54 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:54.012" starttime="20200521 14:04:53.988"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:54.012" starttime="20200521 14:04:53.686"></status>
</kw>
<kw type="foritem" name="${i} = 83">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:54.014" starttime="20200521 14:04:54.014"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:54.316" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:54.316" starttime="20200521 14:04:54.015"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:54.328" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:54.339" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000598999999999 seconds.</msg>
<msg timestamp="20200521 14:04:54.340" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:54 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:54.340" starttime="20200521 14:04:54.316"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:54.340" starttime="20200521 14:04:54.013"></status>
</kw>
<kw type="foritem" name="${i} = 84">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:54.341" starttime="20200521 14:04:54.340"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:54.643" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:54.643" starttime="20200521 14:04:54.343"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:54.654" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:54.664" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000407 seconds.</msg>
<msg timestamp="20200521 14:04:54.665" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:54 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:54.665" starttime="20200521 14:04:54.644"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:54.665" starttime="20200521 14:04:54.340"></status>
</kw>
<kw type="foritem" name="${i} = 85">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:54.666" starttime="20200521 14:04:54.666"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:54.971" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:54.971" starttime="20200521 14:04:54.667"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:54.982" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:54.994" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000401 seconds.</msg>
<msg timestamp="20200521 14:04:54.995" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:55 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:54.995" starttime="20200521 14:04:54.972"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:54.995" starttime="20200521 14:04:54.665"></status>
</kw>
<kw type="foritem" name="${i} = 86">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:54.996" starttime="20200521 14:04:54.996"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:55.298" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:55.298" starttime="20200521 14:04:54.997"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:55.308" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:55.319" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000581 seconds.</msg>
<msg timestamp="20200521 14:04:55.320" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:55 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:55.320" starttime="20200521 14:04:55.299"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:55.320" starttime="20200521 14:04:54.995"></status>
</kw>
<kw type="foritem" name="${i} = 87">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:55.321" starttime="20200521 14:04:55.321"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:55.623" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:55.623" starttime="20200521 14:04:55.322"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:55.634" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:55.644" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000449 seconds.</msg>
<msg timestamp="20200521 14:04:55.644" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:55 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:55.644" starttime="20200521 14:04:55.623"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:55.644" starttime="20200521 14:04:55.320"></status>
</kw>
<kw type="foritem" name="${i} = 88">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:55.646" starttime="20200521 14:04:55.645"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:55.949" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:55.949" starttime="20200521 14:04:55.647"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:55.959" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:55.970" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000496 seconds.</msg>
<msg timestamp="20200521 14:04:55.970" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:56 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:55.970" starttime="20200521 14:04:55.949"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:55.970" starttime="20200521 14:04:55.645"></status>
</kw>
<kw type="foritem" name="${i} = 89">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:55.972" starttime="20200521 14:04:55.971"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:56.278" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:56.278" starttime="20200521 14:04:55.973"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:56.285" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:56.295" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000397 seconds.</msg>
<msg timestamp="20200521 14:04:56.295" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:56 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:56.295" starttime="20200521 14:04:56.278"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:56.295" starttime="20200521 14:04:55.971"></status>
</kw>
<kw type="foritem" name="${i} = 90">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:56.298" starttime="20200521 14:04:56.296"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:56.600" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:56.600" starttime="20200521 14:04:56.299"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:56.611" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:56.622" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000533 seconds.</msg>
<msg timestamp="20200521 14:04:56.622" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:56 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:56.622" starttime="20200521 14:04:56.601"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:56.622" starttime="20200521 14:04:56.296"></status>
</kw>
<kw type="foritem" name="${i} = 91">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:56.623" starttime="20200521 14:04:56.623"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:56.927" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:56.927" starttime="20200521 14:04:56.626"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:56.939" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:56.951" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000388 seconds.</msg>
<msg timestamp="20200521 14:04:56.951" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:57 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:56.951" starttime="20200521 14:04:56.927"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:56.951" starttime="20200521 14:04:56.622"></status>
</kw>
<kw type="foritem" name="${i} = 92">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:56.953" starttime="20200521 14:04:56.952"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:57.261" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:57.261" starttime="20200521 14:04:56.954"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:57.272" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:57.282" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000465 seconds.</msg>
<msg timestamp="20200521 14:04:57.282" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:57 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:57.282" starttime="20200521 14:04:57.262"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:57.282" starttime="20200521 14:04:56.951"></status>
</kw>
<kw type="foritem" name="${i} = 93">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:57.284" starttime="20200521 14:04:57.283"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:57.588" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:57.588" starttime="20200521 14:04:57.285"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:57.598" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:57.608" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000509 seconds.</msg>
<msg timestamp="20200521 14:04:57.609" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:57 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:57.609" starttime="20200521 14:04:57.588"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:57.609" starttime="20200521 14:04:57.282"></status>
</kw>
<kw type="foritem" name="${i} = 94">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:57.611" starttime="20200521 14:04:57.610"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:57.918" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:57.918" starttime="20200521 14:04:57.611"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:57.929" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:57.942" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000521 seconds.</msg>
<msg timestamp="20200521 14:04:57.942" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:58 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:57.942" starttime="20200521 14:04:57.918"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:57.942" starttime="20200521 14:04:57.609"></status>
</kw>
<kw type="foritem" name="${i} = 95">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:57.944" starttime="20200521 14:04:57.943"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:58.251" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:58.251" starttime="20200521 14:04:57.944"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:58.262" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:58.271" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000501 seconds.</msg>
<msg timestamp="20200521 14:04:58.272" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:58 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:58.272" starttime="20200521 14:04:58.252"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:58.272" starttime="20200521 14:04:57.942"></status>
</kw>
<kw type="foritem" name="${i} = 96">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:58.274" starttime="20200521 14:04:58.273"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:58.581" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:58.581" starttime="20200521 14:04:58.274"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:58.591" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:58.601" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000482 seconds.</msg>
<msg timestamp="20200521 14:04:58.601" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:58 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:58.601" starttime="20200521 14:04:58.582"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:58.601" starttime="20200521 14:04:58.272"></status>
</kw>
<kw type="foritem" name="${i} = 97">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:58.603" starttime="20200521 14:04:58.602"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:58.911" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:58.911" starttime="20200521 14:04:58.603"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:58.923" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:58.934" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000402999999999 seconds.</msg>
<msg timestamp="20200521 14:04:58.935" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:59 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:58.935" starttime="20200521 14:04:58.912"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:58.935" starttime="20200521 14:04:58.602"></status>
</kw>
<kw type="foritem" name="${i} = 98">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:58.936" starttime="20200521 14:04:58.935"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:59.241" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:59.241" starttime="20200521 14:04:58.937"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:59.253" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:59.262" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000426999999999 seconds.</msg>
<msg timestamp="20200521 14:04:59.262" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:59 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:59.262" starttime="20200521 14:04:59.242"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:59.262" starttime="20200521 14:04:58.935"></status>
</kw>
<kw type="foritem" name="${i} = 99">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:59.264" starttime="20200521 14:04:59.263"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:59.566" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:59.566" starttime="20200521 14:04:59.264"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:59.577" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:59.587" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000457 seconds.</msg>
<msg timestamp="20200521 14:04:59.587" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:04:59 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:59.587" starttime="20200521 14:04:59.566"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:59.587" starttime="20200521 14:04:59.262"></status>
</kw>
<kw type="foritem" name="${i} = 100">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:59.588" starttime="20200521 14:04:59.588"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:04:59.891" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:04:59.891" starttime="20200521 14:04:59.589"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:04:59.902" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:04:59.912" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000426 seconds.</msg>
<msg timestamp="20200521 14:04:59.912" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:00 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:04:59.913" starttime="20200521 14:04:59.892"></status>
</kw>
<status status="PASS" endtime="20200521 14:04:59.913" starttime="20200521 14:04:59.587"></status>
</kw>
<kw type="foritem" name="${i} = 101">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:04:59.914" starttime="20200521 14:04:59.913"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:00.216" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:00.216" starttime="20200521 14:04:59.914"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:00.227" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:00.237" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000498 seconds.</msg>
<msg timestamp="20200521 14:05:00.237" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:00 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:00.237" starttime="20200521 14:05:00.216"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:00.238" starttime="20200521 14:04:59.913"></status>
</kw>
<kw type="foritem" name="${i} = 102">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:00.239" starttime="20200521 14:05:00.238"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:00.540" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:00.540" starttime="20200521 14:05:00.239"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:00.555" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:00.571" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.002272 seconds.</msg>
<msg timestamp="20200521 14:05:00.571" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:00 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:00.571" starttime="20200521 14:05:00.540"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:00.571" starttime="20200521 14:05:00.238"></status>
</kw>
<kw type="foritem" name="${i} = 103">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:00.573" starttime="20200521 14:05:00.572"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:00.881" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:00.881" starttime="20200521 14:05:00.573"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:00.892" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:00.903" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000449000000001 seconds.</msg>
<msg timestamp="20200521 14:05:00.903" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:01 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:00.904" starttime="20200521 14:05:00.882"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:00.904" starttime="20200521 14:05:00.571"></status>
</kw>
<kw type="foritem" name="${i} = 104">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:00.905" starttime="20200521 14:05:00.904"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:01.207" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:01.207" starttime="20200521 14:05:00.906"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:01.221" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:01.234" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000504 seconds.</msg>
<msg timestamp="20200521 14:05:01.234" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:01 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:01.234" starttime="20200521 14:05:01.207"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:01.234" starttime="20200521 14:05:00.904"></status>
</kw>
<kw type="foritem" name="${i} = 105">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:01.238" starttime="20200521 14:05:01.235"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:01.540" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:01.540" starttime="20200521 14:05:01.239"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:01.552" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:01.563" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00046 seconds.</msg>
<msg timestamp="20200521 14:05:01.563" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:01 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:01.563" starttime="20200521 14:05:01.540"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:01.564" starttime="20200521 14:05:01.235"></status>
</kw>
<kw type="foritem" name="${i} = 106">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:01.565" starttime="20200521 14:05:01.564"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:01.866" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:01.866" starttime="20200521 14:05:01.566"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:01.879" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:01.890" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000462000000001 seconds.</msg>
<msg timestamp="20200521 14:05:01.890" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:02 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:01.890" starttime="20200521 14:05:01.867"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:01.890" starttime="20200521 14:05:01.564"></status>
</kw>
<kw type="foritem" name="${i} = 107">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:01.892" starttime="20200521 14:05:01.891"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:02.193" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:02.193" starttime="20200521 14:05:01.892"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:02.206" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:02.216" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000455 seconds.</msg>
<msg timestamp="20200521 14:05:02.217" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:02 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:02.217" starttime="20200521 14:05:02.194"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:02.217" starttime="20200521 14:05:01.891"></status>
</kw>
<kw type="foritem" name="${i} = 108">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:02.221" starttime="20200521 14:05:02.218"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:02.522" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:02.522" starttime="20200521 14:05:02.221"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:02.533" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:02.543" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00054 seconds.</msg>
<msg timestamp="20200521 14:05:02.544" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:02 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:02.544" starttime="20200521 14:05:02.523"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:02.544" starttime="20200521 14:05:02.217"></status>
</kw>
<kw type="foritem" name="${i} = 109">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:02.545" starttime="20200521 14:05:02.544"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:02.846" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:02.846" starttime="20200521 14:05:02.545"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:02.857" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:02.867" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000507000000001 seconds.</msg>
<msg timestamp="20200521 14:05:02.868" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:03 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:02.868" starttime="20200521 14:05:02.847"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:02.868" starttime="20200521 14:05:02.544"></status>
</kw>
<kw type="foritem" name="${i} = 110">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:02.869" starttime="20200521 14:05:02.868"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:03.170" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:03.170" starttime="20200521 14:05:02.869"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:03.180" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:03.190" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000512 seconds.</msg>
<msg timestamp="20200521 14:05:03.191" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:03 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:03.191" starttime="20200521 14:05:03.171"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:03.191" starttime="20200521 14:05:02.868"></status>
</kw>
<kw type="foritem" name="${i} = 111">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:03.192" starttime="20200521 14:05:03.191"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:03.493" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:03.493" starttime="20200521 14:05:03.193"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:03.504" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:03.516" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000485 seconds.</msg>
<msg timestamp="20200521 14:05:03.516" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:03 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:03.516" starttime="20200521 14:05:03.494"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:03.516" starttime="20200521 14:05:03.191"></status>
</kw>
<kw type="foritem" name="${i} = 112">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:03.520" starttime="20200521 14:05:03.517"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:03.821" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:03.821" starttime="20200521 14:05:03.520"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:03.831" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:03.841" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000457 seconds.</msg>
<msg timestamp="20200521 14:05:03.842" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:04 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:03.842" starttime="20200521 14:05:03.822"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:03.842" starttime="20200521 14:05:03.516"></status>
</kw>
<kw type="foritem" name="${i} = 113">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:03.845" starttime="20200521 14:05:03.842"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:04.146" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:04.146" starttime="20200521 14:05:03.845"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:04.156" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:04.166" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00046 seconds.</msg>
<msg timestamp="20200521 14:05:04.166" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:04 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:04.166" starttime="20200521 14:05:04.146"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:04.166" starttime="20200521 14:05:03.842"></status>
</kw>
<kw type="foritem" name="${i} = 114">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:04.170" starttime="20200521 14:05:04.167"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:04.471" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:04.471" starttime="20200521 14:05:04.170"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:04.481" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:04.491" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000444 seconds.</msg>
<msg timestamp="20200521 14:05:04.492" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:04 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:04.492" starttime="20200521 14:05:04.472"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:04.492" starttime="20200521 14:05:04.166"></status>
</kw>
<kw type="foritem" name="${i} = 115">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:04.493" starttime="20200521 14:05:04.492"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:04.794" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:04.794" starttime="20200521 14:05:04.493"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:04.804" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:04.811" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000448 seconds.</msg>
<msg timestamp="20200521 14:05:04.811" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:05 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:04.812" starttime="20200521 14:05:04.794"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:04.812" starttime="20200521 14:05:04.492"></status>
</kw>
<kw type="foritem" name="${i} = 116">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:04.815" starttime="20200521 14:05:04.812"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:05.117" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:05.117" starttime="20200521 14:05:04.815"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:05.127" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:05.137" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000532 seconds.</msg>
<msg timestamp="20200521 14:05:05.138" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:05 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:05.138" starttime="20200521 14:05:05.117"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:05.138" starttime="20200521 14:05:04.812"></status>
</kw>
<kw type="foritem" name="${i} = 117">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:05.139" starttime="20200521 14:05:05.139"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:05.441" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:05.441" starttime="20200521 14:05:05.140"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:05.452" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:05.462" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000476999999999 seconds.</msg>
<msg timestamp="20200521 14:05:05.462" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:05 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:05.463" starttime="20200521 14:05:05.441"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:05.463" starttime="20200521 14:05:05.138"></status>
</kw>
<kw type="foritem" name="${i} = 118">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:05.464" starttime="20200521 14:05:05.463"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:05.765" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:05.765" starttime="20200521 14:05:05.464"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:05.774" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:05.784" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000504 seconds.</msg>
<msg timestamp="20200521 14:05:05.785" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:06 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:05.785" starttime="20200521 14:05:05.765"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:05.785" starttime="20200521 14:05:05.463"></status>
</kw>
<kw type="foritem" name="${i} = 119">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:05.788" starttime="20200521 14:05:05.786"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:06.089" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:06.090" starttime="20200521 14:05:05.789"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:06.100" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:06.110" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000528 seconds.</msg>
<msg timestamp="20200521 14:05:06.110" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:06 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:06.110" starttime="20200521 14:05:06.090"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:06.111" starttime="20200521 14:05:05.785"></status>
</kw>
<kw type="foritem" name="${i} = 120">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:06.112" starttime="20200521 14:05:06.111"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:06.414" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:06.414" starttime="20200521 14:05:06.112"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:06.424" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:06.434" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000501000000001 seconds.</msg>
<msg timestamp="20200521 14:05:06.435" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:06 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:06.435" starttime="20200521 14:05:06.414"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:06.435" starttime="20200521 14:05:06.111"></status>
</kw>
<kw type="foritem" name="${i} = 121">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:06.437" starttime="20200521 14:05:06.435"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:06.738" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:06.738" starttime="20200521 14:05:06.438"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:06.748" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:06.758" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000400000000001 seconds.</msg>
<msg timestamp="20200521 14:05:06.759" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:07 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:06.759" starttime="20200521 14:05:06.739"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:06.759" starttime="20200521 14:05:06.435"></status>
</kw>
<kw type="foritem" name="${i} = 122">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:06.760" starttime="20200521 14:05:06.759"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:07.061" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:07.061" starttime="20200521 14:05:06.760"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:07.073" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:07.082" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000319 seconds.</msg>
<msg timestamp="20200521 14:05:07.083" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:07 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:07.083" starttime="20200521 14:05:07.062"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:07.083" starttime="20200521 14:05:06.759"></status>
</kw>
<kw type="foritem" name="${i} = 123">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:07.084" starttime="20200521 14:05:07.083"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:07.385" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:07.385" starttime="20200521 14:05:07.084"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:07.395" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:07.404" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000464 seconds.</msg>
<msg timestamp="20200521 14:05:07.405" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:07 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:07.405" starttime="20200521 14:05:07.385"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:07.405" starttime="20200521 14:05:07.083"></status>
</kw>
<kw type="foritem" name="${i} = 124">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:07.406" starttime="20200521 14:05:07.406"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:07.707" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:07.707" starttime="20200521 14:05:07.407"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:07.717" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:07.727" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00051 seconds.</msg>
<msg timestamp="20200521 14:05:07.727" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:08 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:07.727" starttime="20200521 14:05:07.708"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:07.728" starttime="20200521 14:05:07.405"></status>
</kw>
<kw type="foritem" name="${i} = 125">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:07.729" starttime="20200521 14:05:07.728"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:08.030" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:08.030" starttime="20200521 14:05:07.729"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:08.041" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:08.051" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000576 seconds.</msg>
<msg timestamp="20200521 14:05:08.051" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:08 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:08.051" starttime="20200521 14:05:08.030"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:08.051" starttime="20200521 14:05:07.728"></status>
</kw>
<kw type="foritem" name="${i} = 126">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:08.053" starttime="20200521 14:05:08.052"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:08.361" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:08.361" starttime="20200521 14:05:08.053"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:08.371" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:08.381" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000490999999999 seconds.</msg>
<msg timestamp="20200521 14:05:08.381" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:08 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:08.382" starttime="20200521 14:05:08.362"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:08.382" starttime="20200521 14:05:08.051"></status>
</kw>
<kw type="foritem" name="${i} = 127">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:08.383" starttime="20200521 14:05:08.382"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:08.684" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:08.684" starttime="20200521 14:05:08.384"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:08.694" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:08.706" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000468 seconds.</msg>
<msg timestamp="20200521 14:05:08.706" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:09 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:08.706" starttime="20200521 14:05:08.685"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:08.706" starttime="20200521 14:05:08.382"></status>
</kw>
<kw type="foritem" name="${i} = 128">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:08.708" starttime="20200521 14:05:08.707"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:09.009" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:09.009" starttime="20200521 14:05:08.708"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:09.019" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:09.031" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000479 seconds.</msg>
<msg timestamp="20200521 14:05:09.032" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:09 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:09.032" starttime="20200521 14:05:09.009"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:09.032" starttime="20200521 14:05:08.706"></status>
</kw>
<kw type="foritem" name="${i} = 129">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:09.033" starttime="20200521 14:05:09.032"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:09.334" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:09.334" starttime="20200521 14:05:09.034"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:09.344" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:09.354" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000415 seconds.</msg>
<msg timestamp="20200521 14:05:09.355" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:09 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:09.355" starttime="20200521 14:05:09.335"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:09.355" starttime="20200521 14:05:09.032"></status>
</kw>
<kw type="foritem" name="${i} = 130">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:09.356" starttime="20200521 14:05:09.355"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:09.657" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:09.658" starttime="20200521 14:05:09.357"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:09.667" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:09.675" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00047 seconds.</msg>
<msg timestamp="20200521 14:05:09.675" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:09 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:09.675" starttime="20200521 14:05:09.658"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:09.675" starttime="20200521 14:05:09.355"></status>
</kw>
<kw type="foritem" name="${i} = 131">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:09.677" starttime="20200521 14:05:09.676"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:09.978" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:09.978" starttime="20200521 14:05:09.677"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:09.989" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:09.998" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000396 seconds.</msg>
<msg timestamp="20200521 14:05:09.998" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:10 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:09.998" starttime="20200521 14:05:09.978"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:09.998" starttime="20200521 14:05:09.675"></status>
</kw>
<kw type="foritem" name="${i} = 132">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:10.000" starttime="20200521 14:05:09.999"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:10.301" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:10.301" starttime="20200521 14:05:10.000"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:10.310" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:10.323" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000413 seconds.</msg>
<msg timestamp="20200521 14:05:10.324" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:10 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:10.324" starttime="20200521 14:05:10.301"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:10.324" starttime="20200521 14:05:09.999"></status>
</kw>
<kw type="foritem" name="${i} = 133">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:10.326" starttime="20200521 14:05:10.325"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:10.630" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:10.631" starttime="20200521 14:05:10.328"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:10.640" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:10.651" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000464 seconds.</msg>
<msg timestamp="20200521 14:05:10.652" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:10 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:10.652" starttime="20200521 14:05:10.631"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:10.652" starttime="20200521 14:05:10.324"></status>
</kw>
<kw type="foritem" name="${i} = 134">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:10.653" starttime="20200521 14:05:10.652"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:10.956" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:10.956" starttime="20200521 14:05:10.655"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:10.966" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:10.976" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000309000000001 seconds.</msg>
<msg timestamp="20200521 14:05:10.976" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:11 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:10.976" starttime="20200521 14:05:10.957"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:10.976" starttime="20200521 14:05:10.652"></status>
</kw>
<kw type="foritem" name="${i} = 135">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:10.977" starttime="20200521 14:05:10.977"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:11.278" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:11.279" starttime="20200521 14:05:10.978"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:11.289" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:11.299" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000529 seconds.</msg>
<msg timestamp="20200521 14:05:11.300" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:11 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:11.300" starttime="20200521 14:05:11.279"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:11.300" starttime="20200521 14:05:10.976"></status>
</kw>
<kw type="foritem" name="${i} = 136">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:11.302" starttime="20200521 14:05:11.301"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:11.603" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:11.603" starttime="20200521 14:05:11.302"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:11.613" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:11.623" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000462 seconds.</msg>
<msg timestamp="20200521 14:05:11.624" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:11 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:11.624" starttime="20200521 14:05:11.603"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:11.624" starttime="20200521 14:05:11.300"></status>
</kw>
<kw type="foritem" name="${i} = 137">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:11.625" starttime="20200521 14:05:11.624"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:11.926" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:11.926" starttime="20200521 14:05:11.626"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:11.936" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:11.946" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000455 seconds.</msg>
<msg timestamp="20200521 14:05:11.947" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:12 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:11.947" starttime="20200521 14:05:11.927"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:11.947" starttime="20200521 14:05:11.624"></status>
</kw>
<kw type="foritem" name="${i} = 138">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:11.949" starttime="20200521 14:05:11.948"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:12.251" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:12.252" starttime="20200521 14:05:11.951"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:12.262" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:12.272" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000503999999999 seconds.</msg>
<msg timestamp="20200521 14:05:12.273" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:12 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:12.273" starttime="20200521 14:05:12.252"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:12.273" starttime="20200521 14:05:11.947"></status>
</kw>
<kw type="foritem" name="${i} = 139">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:12.274" starttime="20200521 14:05:12.273"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:12.575" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:12.575" starttime="20200521 14:05:12.275"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:12.585" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:12.595" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000473 seconds.</msg>
<msg timestamp="20200521 14:05:12.596" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:12 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:12.596" starttime="20200521 14:05:12.576"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:12.596" starttime="20200521 14:05:12.273"></status>
</kw>
<kw type="foritem" name="${i} = 140">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:12.597" starttime="20200521 14:05:12.597"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:12.902" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:12.902" starttime="20200521 14:05:12.601"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:12.914" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:12.924" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000456 seconds.</msg>
<msg timestamp="20200521 14:05:12.924" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:13 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:12.924" starttime="20200521 14:05:12.903"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:12.925" starttime="20200521 14:05:12.596"></status>
</kw>
<kw type="foritem" name="${i} = 141">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:12.926" starttime="20200521 14:05:12.925"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:13.227" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:13.227" starttime="20200521 14:05:12.926"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:13.237" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:13.247" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000445 seconds.</msg>
<msg timestamp="20200521 14:05:13.247" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:13 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:13.247" starttime="20200521 14:05:13.228"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:13.247" starttime="20200521 14:05:12.925"></status>
</kw>
<kw type="foritem" name="${i} = 142">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:13.248" starttime="20200521 14:05:13.248"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:13.549" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:13.549" starttime="20200521 14:05:13.249"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:13.562" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:13.572" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000422 seconds.</msg>
<msg timestamp="20200521 14:05:13.572" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:13 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:13.572" starttime="20200521 14:05:13.550"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:13.572" starttime="20200521 14:05:13.248"></status>
</kw>
<kw type="foritem" name="${i} = 143">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:13.574" starttime="20200521 14:05:13.573"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:13.875" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:13.875" starttime="20200521 14:05:13.574"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:13.887" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:13.897" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000431000000001 seconds.</msg>
<msg timestamp="20200521 14:05:13.898" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:14 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:13.898" starttime="20200521 14:05:13.875"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:13.898" starttime="20200521 14:05:13.573"></status>
</kw>
<kw type="foritem" name="${i} = 144">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:13.899" starttime="20200521 14:05:13.898"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:14.200" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:14.200" starttime="20200521 14:05:13.899"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:14.210" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:14.220" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000424 seconds.</msg>
<msg timestamp="20200521 14:05:14.220" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:14 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:14.220" starttime="20200521 14:05:14.200"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:14.220" starttime="20200521 14:05:13.898"></status>
</kw>
<kw type="foritem" name="${i} = 145">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:14.222" starttime="20200521 14:05:14.221"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:14.523" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:14.523" starttime="20200521 14:05:14.222"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:14.534" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:14.542" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000468 seconds.</msg>
<msg timestamp="20200521 14:05:14.542" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:14 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:14.542" starttime="20200521 14:05:14.523"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:14.542" starttime="20200521 14:05:14.221"></status>
</kw>
<kw type="foritem" name="${i} = 146">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:14.544" starttime="20200521 14:05:14.543"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:14.845" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:14.845" starttime="20200521 14:05:14.544"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:14.856" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:14.866" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000489 seconds.</msg>
<msg timestamp="20200521 14:05:14.866" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:15 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:14.867" starttime="20200521 14:05:14.845"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:14.867" starttime="20200521 14:05:14.542"></status>
</kw>
<kw type="foritem" name="${i} = 147">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:14.868" starttime="20200521 14:05:14.867"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:15.169" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:15.169" starttime="20200521 14:05:14.868"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:15.179" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:15.188" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000413 seconds.</msg>
<msg timestamp="20200521 14:05:15.189" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:15 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:15.189" starttime="20200521 14:05:15.169"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:15.189" starttime="20200521 14:05:14.867"></status>
</kw>
<kw type="foritem" name="${i} = 148">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:15.190" starttime="20200521 14:05:15.190"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:15.491" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:15.491" starttime="20200521 14:05:15.191"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:15.501" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:15.511" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000444 seconds.</msg>
<msg timestamp="20200521 14:05:15.512" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:15 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:15.512" starttime="20200521 14:05:15.492"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:15.512" starttime="20200521 14:05:15.189"></status>
</kw>
<kw type="foritem" name="${i} = 149">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:15.513" starttime="20200521 14:05:15.512"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:15.814" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:15.814" starttime="20200521 14:05:15.513"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:15.824" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:15.834" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000428 seconds.</msg>
<msg timestamp="20200521 14:05:15.834" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:16 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:15.834" starttime="20200521 14:05:15.815"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:15.834" starttime="20200521 14:05:15.512"></status>
</kw>
<kw type="foritem" name="${i} = 150">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:15.835" starttime="20200521 14:05:15.835"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:16.137" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:16.137" starttime="20200521 14:05:15.836"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:16.147" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:16.157" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000501 seconds.</msg>
<msg timestamp="20200521 14:05:16.158" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:16 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:16.158" starttime="20200521 14:05:16.137"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:16.158" starttime="20200521 14:05:15.834"></status>
</kw>
<kw type="foritem" name="${i} = 151">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:16.159" starttime="20200521 14:05:16.158"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:16.461" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:16.461" starttime="20200521 14:05:16.160"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:16.473" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:16.483" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000506 seconds.</msg>
<msg timestamp="20200521 14:05:16.483" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:16 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:16.483" starttime="20200521 14:05:16.461"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:16.483" starttime="20200521 14:05:16.158"></status>
</kw>
<kw type="foritem" name="${i} = 152">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:16.487" starttime="20200521 14:05:16.484"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:16.788" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:16.788" starttime="20200521 14:05:16.487"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:16.797" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:16.808" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000467 seconds.</msg>
<msg timestamp="20200521 14:05:16.808" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:17 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:16.808" starttime="20200521 14:05:16.788"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:16.808" starttime="20200521 14:05:16.483"></status>
</kw>
<kw type="foritem" name="${i} = 153">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:16.811" starttime="20200521 14:05:16.809"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:17.116" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:17.117" starttime="20200521 14:05:16.811"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:17.128" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:17.138" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000383 seconds.</msg>
<msg timestamp="20200521 14:05:17.139" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:17 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:17.139" starttime="20200521 14:05:17.117"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:17.139" starttime="20200521 14:05:16.808"></status>
</kw>
<kw type="foritem" name="${i} = 154">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:17.142" starttime="20200521 14:05:17.139"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:17.445" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:17.446" starttime="20200521 14:05:17.142"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:17.459" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:17.470" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000526 seconds.</msg>
<msg timestamp="20200521 14:05:17.471" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:17 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:17.471" starttime="20200521 14:05:17.446"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:17.471" starttime="20200521 14:05:17.139"></status>
</kw>
<kw type="foritem" name="${i} = 155">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:17.472" starttime="20200521 14:05:17.471"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:17.791" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:17.792" starttime="20200521 14:05:17.472"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:17.803" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:17.814" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000627000000001 seconds.</msg>
<msg timestamp="20200521 14:05:17.815" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:18 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:17.815" starttime="20200521 14:05:17.792"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:17.815" starttime="20200521 14:05:17.471"></status>
</kw>
<kw type="foritem" name="${i} = 156">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:17.817" starttime="20200521 14:05:17.815"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:18.118" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:18.118" starttime="20200521 14:05:17.817"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:18.128" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:18.139" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000507000000001 seconds.</msg>
<msg timestamp="20200521 14:05:18.140" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:18 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:18.140" starttime="20200521 14:05:18.118"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:18.140" starttime="20200521 14:05:17.815"></status>
</kw>
<kw type="foritem" name="${i} = 157">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:18.142" starttime="20200521 14:05:18.141"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:18.443" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:18.443" starttime="20200521 14:05:18.142"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:18.452" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:18.463" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000438 seconds.</msg>
<msg timestamp="20200521 14:05:18.463" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:18 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:18.463" starttime="20200521 14:05:18.443"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:18.463" starttime="20200521 14:05:18.140"></status>
</kw>
<kw type="foritem" name="${i} = 158">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:18.465" starttime="20200521 14:05:18.464"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:18.766" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:18.766" starttime="20200521 14:05:18.465"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:18.777" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:18.791" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.003645 seconds.</msg>
<msg timestamp="20200521 14:05:18.792" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:19 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:18.792" starttime="20200521 14:05:18.766"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:18.792" starttime="20200521 14:05:18.463"></status>
</kw>
<kw type="foritem" name="${i} = 159">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:18.793" starttime="20200521 14:05:18.792"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:19.096" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:19.096" starttime="20200521 14:05:18.793"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:19.106" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:19.116" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000388 seconds.</msg>
<msg timestamp="20200521 14:05:19.116" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:19 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:19.117" starttime="20200521 14:05:19.096"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:19.117" starttime="20200521 14:05:18.792"></status>
</kw>
<kw type="foritem" name="${i} = 160">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:19.120" starttime="20200521 14:05:19.117"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:19.431" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:19.431" starttime="20200521 14:05:19.121"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:19.444" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:19.454" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000552 seconds.</msg>
<msg timestamp="20200521 14:05:19.454" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:19 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:19.454" starttime="20200521 14:05:19.432"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:19.454" starttime="20200521 14:05:19.117"></status>
</kw>
<kw type="foritem" name="${i} = 161">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:19.458" starttime="20200521 14:05:19.455"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:19.759" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:19.759" starttime="20200521 14:05:19.458"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:19.771" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:19.781" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000483999999999 seconds.</msg>
<msg timestamp="20200521 14:05:19.781" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:20 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:19.781" starttime="20200521 14:05:19.760"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:19.781" starttime="20200521 14:05:19.455"></status>
</kw>
<kw type="foritem" name="${i} = 162">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:19.783" starttime="20200521 14:05:19.782"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:20.084" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:20.084" starttime="20200521 14:05:19.783"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:20.095" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:20.105" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000337 seconds.</msg>
<msg timestamp="20200521 14:05:20.106" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:20 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:20.106" starttime="20200521 14:05:20.084"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:20.106" starttime="20200521 14:05:19.781"></status>
</kw>
<kw type="foritem" name="${i} = 163">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:20.108" starttime="20200521 14:05:20.107"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:20.409" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:20.409" starttime="20200521 14:05:20.108"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:20.420" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:20.430" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000483 seconds.</msg>
<msg timestamp="20200521 14:05:20.430" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:20 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:20.430" starttime="20200521 14:05:20.409"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:20.430" starttime="20200521 14:05:20.106"></status>
</kw>
<kw type="foritem" name="${i} = 164">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:20.432" starttime="20200521 14:05:20.431"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:20.734" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:20.734" starttime="20200521 14:05:20.433"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:20.744" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:20.756" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000454 seconds.</msg>
<msg timestamp="20200521 14:05:20.756" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:21 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:20.757" starttime="20200521 14:05:20.734"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:20.757" starttime="20200521 14:05:20.431"></status>
</kw>
<kw type="foritem" name="${i} = 165">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:20.758" starttime="20200521 14:05:20.757"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:21.060" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:21.061" starttime="20200521 14:05:20.759"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:21.073" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:21.083" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000427 seconds.</msg>
<msg timestamp="20200521 14:05:21.084" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:21 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:21.084" starttime="20200521 14:05:21.061"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:21.084" starttime="20200521 14:05:20.757"></status>
</kw>
<kw type="foritem" name="${i} = 166">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:21.085" starttime="20200521 14:05:21.084"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:21.386" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:21.387" starttime="20200521 14:05:21.086"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:21.399" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:21.409" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000521 seconds.</msg>
<msg timestamp="20200521 14:05:21.409" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:21 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:21.410" starttime="20200521 14:05:21.387"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:21.410" starttime="20200521 14:05:21.084"></status>
</kw>
<kw type="foritem" name="${i} = 167">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:21.411" starttime="20200521 14:05:21.410"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:21.712" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:21.712" starttime="20200521 14:05:21.412"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:21.723" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:21.733" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000434 seconds.</msg>
<msg timestamp="20200521 14:05:21.734" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:22 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:21.734" starttime="20200521 14:05:21.713"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:21.734" starttime="20200521 14:05:21.410"></status>
</kw>
<kw type="foritem" name="${i} = 168">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:21.736" starttime="20200521 14:05:21.734"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:22.036" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:22.037" starttime="20200521 14:05:21.736"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:22.047" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:22.057" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000354 seconds.</msg>
<msg timestamp="20200521 14:05:22.058" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:22 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:22.058" starttime="20200521 14:05:22.037"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:22.058" starttime="20200521 14:05:21.734"></status>
</kw>
<kw type="foritem" name="${i} = 169">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:22.060" starttime="20200521 14:05:22.058"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:22.362" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:22.362" starttime="20200521 14:05:22.061"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:22.373" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:22.382" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000419999999999 seconds.</msg>
<msg timestamp="20200521 14:05:22.383" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:22 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:22.383" starttime="20200521 14:05:22.362"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:22.383" starttime="20200521 14:05:22.058"></status>
</kw>
<kw type="foritem" name="${i} = 170">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:22.384" starttime="20200521 14:05:22.383"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 14:05:22.685" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 14:05:22.685" starttime="20200521 14:05:22.384"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:22.696" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 14:05:22.705" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000437000000001 seconds.</msg>
<msg timestamp="20200521 14:05:22.706" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:23 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 14:05:22.706" starttime="20200521 14:05:22.685"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:22.706" starttime="20200521 14:05:22.383"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:22.706" starttime="20200521 14:04:26.776"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:22.706" starttime="20200521 14:04:26.767"></status>
</kw>
<kw name="Enable All Tx Port">
<tags>
<tag>Enable Pon Port Tx</tag>
</tags>
<doc>Enable all port function</doc>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:22.716" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/</msg>
<msg timestamp="20200521 14:05:22.733" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/: 0.000525 seconds.</msg>
<msg timestamp="20200521 14:05:22.734" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:23 GMT
connection Keep-Alive
content-type application/json
content-length 1467


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPortCollection.EthernetSwitchPor...</msg>
<status status="PASS" endtime="20200521 14:05:22.734" starttime="20200521 14:05:22.707"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200521 14:05:22.735" level="INFO">Length is 20</msg>
<msg timestamp="20200521 14:05:22.735" level="INFO">${item_count} = 20</msg>
<status status="PASS" endtime="20200521 14:05:22.735" starttime="20200521 14:05:22.734"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Enable All Pon Port Tx ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:22.736" starttime="20200521 14:05:22.735"></status>
</kw>
<kw type="for" name="${ID} IN RANGE [ 1 | ${item_count} ]">
<kw type="foritem" name="${ID} = 1">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:22.748" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200521 14:05:22.761" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000591 seconds.</msg>
<msg timestamp="20200521 14:05:22.762" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:23 GMT
connection Keep-Alive
content-type application/json
content-length 2316


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:05:22.762" starttime="20200521 14:05:22.737"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:05:22.763" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:05:22.763" starttime="20200521 14:05:22.763"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:05:22.764" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200521 14:05:22.764" starttime="20200521 14:05:22.764"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:05:22.765" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:05:22.765" starttime="20200521 14:05:22.765"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:22.766" starttime="20200521 14:05:22.766"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:22.767" starttime="20200521 14:05:22.766"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:22.768" starttime="20200521 14:05:22.767"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
</arguments>
<kw name="Test Tx Op Up">
<tags>
<tag>Test tx_disable</tag>
</tags>
<doc>Test SFP port tx disable function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OP_UP)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 14:05:22.776" level="INFO">${payload} = {u'OperationalState': u'Up'}</msg>
<status status="PASS" endtime="20200521 14:05:22.776" starttime="20200521 14:05:22.770"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<msg timestamp="20200521 14:05:22.789" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200521 14:05:22.835" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000673 seconds.</msg>
<status status="PASS" endtime="20200521 14:05:22.835" starttime="20200521 14:05:22.777"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:22.835" starttime="20200521 14:05:22.770"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:22.835" starttime="20200521 14:05:22.769"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:22.836" starttime="20200521 14:05:22.768"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:22.836" starttime="20200521 14:05:22.737"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:22.836" starttime="20200521 14:05:22.736"></status>
</kw>
<kw type="foritem" name="${ID} = 2">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:22.846" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/2</msg>
<msg timestamp="20200521 14:05:22.857" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/2: 0.000544 seconds.</msg>
<msg timestamp="20200521 14:05:22.858" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:23 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:05:22.858" starttime="20200521 14:05:22.837"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:05:22.859" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:05:22.859" starttime="20200521 14:05:22.858"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:05:22.860" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:05:22.860" starttime="20200521 14:05:22.859"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:05:22.860" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:05:22.861" starttime="20200521 14:05:22.860"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:22.861" starttime="20200521 14:05:22.861"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:22.862" starttime="20200521 14:05:22.862"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:22.865" starttime="20200521 14:05:22.862"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:22.869" starttime="20200521 14:05:22.866"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:22.869" starttime="20200521 14:05:22.866"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:22.869" starttime="20200521 14:05:22.836"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:22.869" starttime="20200521 14:05:22.836"></status>
</kw>
<kw type="foritem" name="${ID} = 3">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:22.880" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/3</msg>
<msg timestamp="20200521 14:05:22.891" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/3: 0.000501 seconds.</msg>
<msg timestamp="20200521 14:05:22.892" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:23 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:05:22.892" starttime="20200521 14:05:22.870"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:05:22.893" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:05:22.893" starttime="20200521 14:05:22.892"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:05:22.894" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:05:22.894" starttime="20200521 14:05:22.893"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:05:22.895" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:05:22.895" starttime="20200521 14:05:22.894"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:22.896" starttime="20200521 14:05:22.895"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:22.897" starttime="20200521 14:05:22.896"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:22.898" starttime="20200521 14:05:22.897"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:22.899" starttime="20200521 14:05:22.899"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:22.899" starttime="20200521 14:05:22.898"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:22.900" starttime="20200521 14:05:22.870"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:22.900" starttime="20200521 14:05:22.870"></status>
</kw>
<kw type="foritem" name="${ID} = 4">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:22.910" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/4</msg>
<msg timestamp="20200521 14:05:22.935" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/4: 0.000461 seconds.</msg>
<msg timestamp="20200521 14:05:22.935" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:23 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:05:22.935" starttime="20200521 14:05:22.901"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:05:22.936" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:05:22.936" starttime="20200521 14:05:22.936"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:05:22.937" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:05:22.937" starttime="20200521 14:05:22.937"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:05:22.938" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:05:22.938" starttime="20200521 14:05:22.938"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:22.939" starttime="20200521 14:05:22.939"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:22.940" starttime="20200521 14:05:22.939"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:22.941" starttime="20200521 14:05:22.940"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:22.942" starttime="20200521 14:05:22.942"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:22.942" starttime="20200521 14:05:22.941"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:22.943" starttime="20200521 14:05:22.900"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:22.943" starttime="20200521 14:05:22.900"></status>
</kw>
<kw type="foritem" name="${ID} = 5">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:22.955" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/5</msg>
<msg timestamp="20200521 14:05:22.967" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/5: 0.00057 seconds.</msg>
<msg timestamp="20200521 14:05:22.967" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:23 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:05:22.967" starttime="20200521 14:05:22.944"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:05:22.968" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:05:22.969" starttime="20200521 14:05:22.968"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:05:22.970" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:05:22.970" starttime="20200521 14:05:22.969"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:05:22.970" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:05:22.971" starttime="20200521 14:05:22.970"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:22.973" starttime="20200521 14:05:22.971"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:22.975" starttime="20200521 14:05:22.973"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:22.976" starttime="20200521 14:05:22.976"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:22.978" starttime="20200521 14:05:22.978"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:22.978" starttime="20200521 14:05:22.977"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:22.978" starttime="20200521 14:05:22.943"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:22.978" starttime="20200521 14:05:22.943"></status>
</kw>
<kw type="foritem" name="${ID} = 6">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:22.989" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/6</msg>
<msg timestamp="20200521 14:05:23.000" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/6: 0.000612 seconds.</msg>
<msg timestamp="20200521 14:05:23.001" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:23 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:05:23.001" starttime="20200521 14:05:22.979"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:05:23.002" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:05:23.002" starttime="20200521 14:05:23.001"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:05:23.003" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:05:23.003" starttime="20200521 14:05:23.002"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:05:23.004" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:05:23.004" starttime="20200521 14:05:23.004"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.005" starttime="20200521 14:05:23.004"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.006" starttime="20200521 14:05:23.005"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.007" starttime="20200521 14:05:23.006"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.009" starttime="20200521 14:05:23.008"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.009" starttime="20200521 14:05:23.007"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.009" starttime="20200521 14:05:22.978"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.009" starttime="20200521 14:05:22.978"></status>
</kw>
<kw type="foritem" name="${ID} = 7">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:23.020" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/7</msg>
<msg timestamp="20200521 14:05:23.041" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/7: 0.000620000000001 seconds.</msg>
<msg timestamp="20200521 14:05:23.042" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:23 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:05:23.042" starttime="20200521 14:05:23.010"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:05:23.043" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:05:23.043" starttime="20200521 14:05:23.043"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:05:23.044" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:05:23.044" starttime="20200521 14:05:23.044"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:05:23.045" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:05:23.045" starttime="20200521 14:05:23.044"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.046" starttime="20200521 14:05:23.045"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.046" starttime="20200521 14:05:23.046"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.047" starttime="20200521 14:05:23.047"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.048" starttime="20200521 14:05:23.048"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.049" starttime="20200521 14:05:23.047"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.049" starttime="20200521 14:05:23.009"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.049" starttime="20200521 14:05:23.009"></status>
</kw>
<kw type="foritem" name="${ID} = 8">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:23.063" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/8</msg>
<msg timestamp="20200521 14:05:23.074" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/8: 0.000618999999999 seconds.</msg>
<msg timestamp="20200521 14:05:23.075" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:23 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:05:23.075" starttime="20200521 14:05:23.049"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:05:23.076" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:05:23.076" starttime="20200521 14:05:23.076"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:05:23.077" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:05:23.077" starttime="20200521 14:05:23.077"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:05:23.078" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:05:23.078" starttime="20200521 14:05:23.078"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.079" starttime="20200521 14:05:23.078"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.080" starttime="20200521 14:05:23.080"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.081" starttime="20200521 14:05:23.080"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.083" starttime="20200521 14:05:23.083"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.083" starttime="20200521 14:05:23.082"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.083" starttime="20200521 14:05:23.049"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.083" starttime="20200521 14:05:23.049"></status>
</kw>
<kw type="foritem" name="${ID} = 9">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:23.101" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/9</msg>
<msg timestamp="20200521 14:05:23.112" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/9: 0.000566 seconds.</msg>
<msg timestamp="20200521 14:05:23.113" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:23 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:05:23.113" starttime="20200521 14:05:23.085"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:05:23.114" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:05:23.114" starttime="20200521 14:05:23.114"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:05:23.115" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:05:23.115" starttime="20200521 14:05:23.115"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:05:23.116" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:05:23.116" starttime="20200521 14:05:23.116"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.117" starttime="20200521 14:05:23.117"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.119" starttime="20200521 14:05:23.118"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.121" starttime="20200521 14:05:23.120"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.123" starttime="20200521 14:05:23.122"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.123" starttime="20200521 14:05:23.122"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.123" starttime="20200521 14:05:23.084"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.124" starttime="20200521 14:05:23.084"></status>
</kw>
<kw type="foritem" name="${ID} = 10">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:23.137" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/10</msg>
<msg timestamp="20200521 14:05:23.149" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/10: 0.000818 seconds.</msg>
<msg timestamp="20200521 14:05:23.150" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:23 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:05:23.150" starttime="20200521 14:05:23.125"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:05:23.151" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:05:23.151" starttime="20200521 14:05:23.150"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:05:23.152" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:05:23.152" starttime="20200521 14:05:23.151"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:05:23.153" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:05:23.153" starttime="20200521 14:05:23.152"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.154" starttime="20200521 14:05:23.153"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.156" starttime="20200521 14:05:23.155"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.157" starttime="20200521 14:05:23.156"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.158" starttime="20200521 14:05:23.158"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.159" starttime="20200521 14:05:23.157"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.159" starttime="20200521 14:05:23.124"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.159" starttime="20200521 14:05:23.124"></status>
</kw>
<kw type="foritem" name="${ID} = 11">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:23.171" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/11</msg>
<msg timestamp="20200521 14:05:23.182" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/11: 0.000552 seconds.</msg>
<msg timestamp="20200521 14:05:23.183" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:23 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:05:23.183" starttime="20200521 14:05:23.160"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:05:23.184" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:05:23.184" starttime="20200521 14:05:23.183"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:05:23.185" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:05:23.185" starttime="20200521 14:05:23.185"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:05:23.186" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:05:23.186" starttime="20200521 14:05:23.186"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.189" starttime="20200521 14:05:23.187"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.190" starttime="20200521 14:05:23.189"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.191" starttime="20200521 14:05:23.190"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.198" starttime="20200521 14:05:23.193"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.198" starttime="20200521 14:05:23.192"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.199" starttime="20200521 14:05:23.159"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.199" starttime="20200521 14:05:23.159"></status>
</kw>
<kw type="foritem" name="${ID} = 12">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:23.211" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/12</msg>
<msg timestamp="20200521 14:05:23.243" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/12: 0.000551000000001 seconds.</msg>
<msg timestamp="20200521 14:05:23.243" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:23 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:05:23.243" starttime="20200521 14:05:23.200"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:05:23.244" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:05:23.244" starttime="20200521 14:05:23.244"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:05:23.245" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:05:23.245" starttime="20200521 14:05:23.245"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:05:23.246" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:05:23.246" starttime="20200521 14:05:23.246"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.247" starttime="20200521 14:05:23.247"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.248" starttime="20200521 14:05:23.248"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.251" starttime="20200521 14:05:23.249"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.253" starttime="20200521 14:05:23.253"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.253" starttime="20200521 14:05:23.252"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.254" starttime="20200521 14:05:23.199"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.254" starttime="20200521 14:05:23.199"></status>
</kw>
<kw type="foritem" name="${ID} = 13">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:23.266" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/13</msg>
<msg timestamp="20200521 14:05:23.278" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/13: 0.000565 seconds.</msg>
<msg timestamp="20200521 14:05:23.278" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:23 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:05:23.278" starttime="20200521 14:05:23.255"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:05:23.279" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:05:23.279" starttime="20200521 14:05:23.279"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:05:23.280" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:05:23.280" starttime="20200521 14:05:23.280"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:05:23.281" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:05:23.282" starttime="20200521 14:05:23.281"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.282" starttime="20200521 14:05:23.282"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.283" starttime="20200521 14:05:23.283"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.284" starttime="20200521 14:05:23.284"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.286" starttime="20200521 14:05:23.285"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.286" starttime="20200521 14:05:23.285"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.286" starttime="20200521 14:05:23.254"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.286" starttime="20200521 14:05:23.254"></status>
</kw>
<kw type="foritem" name="${ID} = 14">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:23.299" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/14</msg>
<msg timestamp="20200521 14:05:23.310" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/14: 0.000575 seconds.</msg>
<msg timestamp="20200521 14:05:23.311" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:23 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:05:23.311" starttime="20200521 14:05:23.287"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:05:23.312" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:05:23.312" starttime="20200521 14:05:23.312"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:05:23.313" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:05:23.314" starttime="20200521 14:05:23.313"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:05:23.315" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:05:23.315" starttime="20200521 14:05:23.314"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.316" starttime="20200521 14:05:23.315"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.317" starttime="20200521 14:05:23.316"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.344" starttime="20200521 14:05:23.343"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.347" starttime="20200521 14:05:23.346"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.347" starttime="20200521 14:05:23.345"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.347" starttime="20200521 14:05:23.286"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.347" starttime="20200521 14:05:23.286"></status>
</kw>
<kw type="foritem" name="${ID} = 15">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:23.360" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/15</msg>
<msg timestamp="20200521 14:05:23.374" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/15: 0.000538 seconds.</msg>
<msg timestamp="20200521 14:05:23.375" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:23 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:05:23.375" starttime="20200521 14:05:23.348"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:05:23.376" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:05:23.376" starttime="20200521 14:05:23.375"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:05:23.377" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:05:23.377" starttime="20200521 14:05:23.376"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:05:23.378" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:05:23.378" starttime="20200521 14:05:23.377"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.379" starttime="20200521 14:05:23.378"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.380" starttime="20200521 14:05:23.380"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.382" starttime="20200521 14:05:23.381"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.383" starttime="20200521 14:05:23.383"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.384" starttime="20200521 14:05:23.382"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.384" starttime="20200521 14:05:23.348"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.384" starttime="20200521 14:05:23.347"></status>
</kw>
<kw type="foritem" name="${ID} = 16">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:23.397" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/16</msg>
<msg timestamp="20200521 14:05:23.549" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/16: 0.000699 seconds.</msg>
<msg timestamp="20200521 14:05:23.551" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:23 GMT
connection Keep-Alive
content-type application/json
content-length 2314


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:05:23.551" starttime="20200521 14:05:23.385"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:05:23.553" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:05:23.553" starttime="20200521 14:05:23.552"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:05:23.555" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200521 14:05:23.555" starttime="20200521 14:05:23.554"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:05:23.556" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 14:05:23.556" starttime="20200521 14:05:23.555"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.557" starttime="20200521 14:05:23.556"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.558" starttime="20200521 14:05:23.557"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.564" starttime="20200521 14:05:23.563"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
</arguments>
<kw name="Test Tx Op Up">
<tags>
<tag>Test tx_disable</tag>
</tags>
<doc>Test SFP port tx disable function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OP_UP)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 14:05:23.577" level="INFO">${payload} = {u'OperationalState': u'Up'}</msg>
<status status="PASS" endtime="20200521 14:05:23.577" starttime="20200521 14:05:23.570"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<msg timestamp="20200521 14:05:23.591" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/16</msg>
<msg timestamp="20200521 14:05:23.613" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/16: 0.000668999999999 seconds.</msg>
<status status="PASS" endtime="20200521 14:05:23.613" starttime="20200521 14:05:23.577"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.613" starttime="20200521 14:05:23.570"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.614" starttime="20200521 14:05:23.569"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.614" starttime="20200521 14:05:23.568"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.614" starttime="20200521 14:05:23.384"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.614" starttime="20200521 14:05:23.384"></status>
</kw>
<kw type="foritem" name="${ID} = 17">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:23.626" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/17</msg>
<msg timestamp="20200521 14:05:23.664" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/17: 0.000526 seconds.</msg>
<msg timestamp="20200521 14:05:23.664" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:23 GMT
connection Keep-Alive
content-type application/json
content-length 2438


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:05:23.664" starttime="20200521 14:05:23.615"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:05:23.665" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:05:23.665" starttime="20200521 14:05:23.665"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:05:23.667" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200521 14:05:23.667" starttime="20200521 14:05:23.666"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:05:23.668" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200521 14:05:23.668" starttime="20200521 14:05:23.667"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.669" starttime="20200521 14:05:23.668"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.670" starttime="20200521 14:05:23.669"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.672" starttime="20200521 14:05:23.671"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.674" starttime="20200521 14:05:23.674"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.674" starttime="20200521 14:05:23.673"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.674" starttime="20200521 14:05:23.614"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.674" starttime="20200521 14:05:23.614"></status>
</kw>
<kw type="foritem" name="${ID} = 18">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:23.686" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/18</msg>
<msg timestamp="20200521 14:05:23.699" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/18: 0.000539 seconds.</msg>
<msg timestamp="20200521 14:05:23.699" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:24 GMT
connection Keep-Alive
content-type application/json
content-length 2430


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:05:23.699" starttime="20200521 14:05:23.675"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:05:23.700" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:05:23.700" starttime="20200521 14:05:23.700"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:05:23.702" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200521 14:05:23.702" starttime="20200521 14:05:23.701"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:05:23.703" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200521 14:05:23.703" starttime="20200521 14:05:23.702"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.704" starttime="20200521 14:05:23.703"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.705" starttime="20200521 14:05:23.704"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.706" starttime="20200521 14:05:23.705"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.708" starttime="20200521 14:05:23.708"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.708" starttime="20200521 14:05:23.707"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.708" starttime="20200521 14:05:23.675"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.708" starttime="20200521 14:05:23.674"></status>
</kw>
<kw type="foritem" name="${ID} = 19">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 14:05:23.720" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/19</msg>
<msg timestamp="20200521 14:05:23.757" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/19: 0.00068 seconds.</msg>
<msg timestamp="20200521 14:05:23.758" level="INFO">${resp} = 200
date Thu, 21 May 2020 06:05:24 GMT
connection Keep-Alive
content-type application/json
content-length 1056


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 14:05:23.758" starttime="20200521 14:05:23.709"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 14:05:23.759" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 14:05:23.759" starttime="20200521 14:05:23.758"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 14:05:23.760" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 14:05:23.760" starttime="20200521 14:05:23.759"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 14:05:23.761" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200521 14:05:23.761" starttime="20200521 14:05:23.761"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.762" starttime="20200521 14:05:23.762"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.763" starttime="20200521 14:05:23.762"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.765" starttime="20200521 14:05:23.764"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 14:05:23.766" starttime="20200521 14:05:23.766"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.767" starttime="20200521 14:05:23.765"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.767" starttime="20200521 14:05:23.709"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.767" starttime="20200521 14:05:23.708"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.767" starttime="20200521 14:05:22.736"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.767" starttime="20200521 14:05:22.706"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.767" starttime="20200521 14:04:26.767"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200521 14:05:23.778" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200521 14:05:23.787" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000557000000001 seconds.</msg>
<msg timestamp="20200521 14:05:23.788" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200521 14:05:23.788" starttime="20200521 14:05:23.768"></status>
</kw>
<status status="PASS" endtime="20200521 14:05:23.788" starttime="20200521 14:05:23.768"></status>
</kw>
<doc>Test omci send</doc>
<tags>
<tag>Test omci send</tag>
</tags>
<status status="PASS" endtime="20200521 14:05:23.788" critical="yes" starttime="20200521 14:04:26.740"></status>
</test>
<doc>Test BAL Rstful functionality.</doc>
<status status="FAIL" endtime="20200521 14:05:23.790" starttime="20200521 14:03:45.663"></status>
</suite>
<status status="FAIL" endtime="20200521 14:05:23.795" starttime="20200521 14:03:45.631"></status>
</suite>
<statistics>
<total>
<stat fail="3" pass="1">Critical Tests</stat>
<stat fail="3" pass="1">All Tests</stat>
</total>
<tag>
<stat fail="1" pass="0">Test Bal Restful opertaion test</stat>
<stat fail="1" pass="0">Test Flow add</stat>
<stat fail="0" pass="1">Test omci send</stat>
<stat fail="1" pass="0">Test ONU Rnage test</stat>
</tag>
<suite>
<stat fail="3" id="s1" name="Bal Test" pass="1">Bal Test</stat>
<stat fail="3" id="s1-s1" name="Test Bal" pass="1">Bal Test.Test Bal</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
