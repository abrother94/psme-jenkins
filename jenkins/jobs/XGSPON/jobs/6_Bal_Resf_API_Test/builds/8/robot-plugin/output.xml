<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200521 20:17:32.896" generator="Robot 3.1.1 (Python 2.7.12 on linux2)">
<suite source="/home/voltha/workspace/XGSPON/6_Bal_Resf_API_Test/RF_Auto_Test/bal_test" id="s1" name="Bal Test">
<suite source="/home/voltha/workspace/XGSPON/6_Bal_Resf_API_Test/RF_Auto_Test/bal_test/test_bal.robot" id="s1-s1" name="Test Bal">
<test id="s1-s1-t1" name="Verify Restful API for BAL Test">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200521 20:17:34.797" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200521 20:17:34.812" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000736 seconds.</msg>
<msg timestamp="20200521 20:17:34.813" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200521 20:17:34.813" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200521 20:17:34.813" starttime="20200521 20:17:34.789"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:34.813" starttime="20200521 20:17:34.788"></status>
</kw>
<kw name="Test Bal Component">
<tags>
<tag>Bal_Component</tag>
</tags>
<doc>Do basic test 1.Enable All PON MAC PON NNI port enable/disable.</doc>
<kw name="Disable All Tx Port">
<tags>
<tag>Disable Pon Port Tx</tag>
</tags>
<doc>Disable all port function</doc>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:17:34.825" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/</msg>
<msg timestamp="20200521 20:17:35.127" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/: 0.000538 seconds.</msg>
<msg timestamp="20200521 20:17:35.127" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:17:35 GMT
connection Keep-Alive
content-type application/json
content-length 1467


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPortCollection.EthernetSwitchPor...</msg>
<status status="PASS" endtime="20200521 20:17:35.127" starttime="20200521 20:17:34.815"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200521 20:17:35.129" level="INFO">Length is 20</msg>
<msg timestamp="20200521 20:17:35.129" level="INFO">${item_count} = 20</msg>
<status status="PASS" endtime="20200521 20:17:35.129" starttime="20200521 20:17:35.128"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable All Pon Port ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.130" starttime="20200521 20:17:35.129"></status>
</kw>
<kw type="for" name="${ID} IN RANGE [ 1 | ${item_count} ]">
<kw type="foritem" name="${ID} = 1">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:17:35.142" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200521 20:17:35.201" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000538 seconds.</msg>
<msg timestamp="20200521 20:17:35.201" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:17:35 GMT
connection Keep-Alive
content-type application/json
content-length 2310


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:17:35.201" starttime="20200521 20:17:35.131"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:17:35.202" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:17:35.203" starttime="20200521 20:17:35.202"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 20:17:35.203" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200521 20:17:35.203" starttime="20200521 20:17:35.203"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 20:17:35.204" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 20:17:35.204" starttime="20200521 20:17:35.204"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.205" starttime="20200521 20:17:35.205"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.207" starttime="20200521 20:17:35.206"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.208" starttime="20200521 20:17:35.207"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
</arguments>
<kw name="Test Tx Op Down">
<tags>
<tag>Test tx_disable</tag>
</tags>
<doc>Test SFP port tx disable function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OP_DOWN)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 20:17:35.216" level="INFO">${payload} = {u'OperationalState': u'Down'}</msg>
<status status="PASS" endtime="20200521 20:17:35.216" starttime="20200521 20:17:35.211"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<msg timestamp="20200521 20:17:35.229" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200521 20:17:35.252" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000594 seconds.</msg>
<status status="PASS" endtime="20200521 20:17:35.252" starttime="20200521 20:17:35.217"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.252" starttime="20200521 20:17:35.210"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.252" starttime="20200521 20:17:35.210"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.252" starttime="20200521 20:17:35.209"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.253" starttime="20200521 20:17:35.131"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.253" starttime="20200521 20:17:35.131"></status>
</kw>
<kw type="foritem" name="${ID} = 2">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:17:35.264" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/2</msg>
<msg timestamp="20200521 20:17:35.274" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/2: 0.000455 seconds.</msg>
<msg timestamp="20200521 20:17:35.275" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:17:35 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:17:35.275" starttime="20200521 20:17:35.254"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:17:35.276" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:17:35.276" starttime="20200521 20:17:35.275"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 20:17:35.277" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 20:17:35.277" starttime="20200521 20:17:35.276"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 20:17:35.278" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 20:17:35.278" starttime="20200521 20:17:35.277"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.279" starttime="20200521 20:17:35.278"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.280" starttime="20200521 20:17:35.279"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.282" starttime="20200521 20:17:35.281"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.283" starttime="20200521 20:17:35.283"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.284" starttime="20200521 20:17:35.282"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.284" starttime="20200521 20:17:35.253"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.284" starttime="20200521 20:17:35.253"></status>
</kw>
<kw type="foritem" name="${ID} = 3">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:17:35.295" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/3</msg>
<msg timestamp="20200521 20:17:35.306" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/3: 0.00047 seconds.</msg>
<msg timestamp="20200521 20:17:35.307" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:17:35 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:17:35.307" starttime="20200521 20:17:35.285"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:17:35.308" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:17:35.308" starttime="20200521 20:17:35.307"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 20:17:35.309" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 20:17:35.309" starttime="20200521 20:17:35.308"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 20:17:35.310" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 20:17:35.310" starttime="20200521 20:17:35.309"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.311" starttime="20200521 20:17:35.310"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.312" starttime="20200521 20:17:35.311"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.313" starttime="20200521 20:17:35.313"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.315" starttime="20200521 20:17:35.315"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.316" starttime="20200521 20:17:35.314"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.316" starttime="20200521 20:17:35.284"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.316" starttime="20200521 20:17:35.284"></status>
</kw>
<kw type="foritem" name="${ID} = 4">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:17:35.327" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/4</msg>
<msg timestamp="20200521 20:17:35.338" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/4: 0.000431 seconds.</msg>
<msg timestamp="20200521 20:17:35.339" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:17:35 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:17:35.339" starttime="20200521 20:17:35.317"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:17:35.340" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:17:35.340" starttime="20200521 20:17:35.339"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 20:17:35.341" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 20:17:35.341" starttime="20200521 20:17:35.340"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 20:17:35.342" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 20:17:35.342" starttime="20200521 20:17:35.341"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.343" starttime="20200521 20:17:35.342"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.344" starttime="20200521 20:17:35.344"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.346" starttime="20200521 20:17:35.345"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.348" starttime="20200521 20:17:35.347"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.348" starttime="20200521 20:17:35.346"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.348" starttime="20200521 20:17:35.316"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.348" starttime="20200521 20:17:35.316"></status>
</kw>
<kw type="foritem" name="${ID} = 5">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:17:35.391" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/5</msg>
<msg timestamp="20200521 20:17:35.402" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/5: 0.000495 seconds.</msg>
<msg timestamp="20200521 20:17:35.403" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:17:35 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:17:35.403" starttime="20200521 20:17:35.349"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:17:35.404" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:17:35.404" starttime="20200521 20:17:35.403"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 20:17:35.405" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 20:17:35.405" starttime="20200521 20:17:35.404"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 20:17:35.406" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 20:17:35.406" starttime="20200521 20:17:35.405"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.406" starttime="20200521 20:17:35.406"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.407" starttime="20200521 20:17:35.407"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.408" starttime="20200521 20:17:35.408"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.410" starttime="20200521 20:17:35.409"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.410" starttime="20200521 20:17:35.409"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.410" starttime="20200521 20:17:35.348"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.410" starttime="20200521 20:17:35.348"></status>
</kw>
<kw type="foritem" name="${ID} = 6">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:17:35.421" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/6</msg>
<msg timestamp="20200521 20:17:35.432" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/6: 0.000509 seconds.</msg>
<msg timestamp="20200521 20:17:35.433" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:17:35 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:17:35.433" starttime="20200521 20:17:35.412"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:17:35.434" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:17:35.434" starttime="20200521 20:17:35.433"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 20:17:35.435" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 20:17:35.435" starttime="20200521 20:17:35.434"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 20:17:35.436" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 20:17:35.436" starttime="20200521 20:17:35.435"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.436" starttime="20200521 20:17:35.436"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.437" starttime="20200521 20:17:35.437"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.438" starttime="20200521 20:17:35.438"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.440" starttime="20200521 20:17:35.439"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.440" starttime="20200521 20:17:35.438"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.440" starttime="20200521 20:17:35.410"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.440" starttime="20200521 20:17:35.410"></status>
</kw>
<kw type="foritem" name="${ID} = 7">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:17:35.451" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/7</msg>
<msg timestamp="20200521 20:17:35.462" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/7: 0.000597 seconds.</msg>
<msg timestamp="20200521 20:17:35.463" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:17:35 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:17:35.463" starttime="20200521 20:17:35.441"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:17:35.464" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:17:35.464" starttime="20200521 20:17:35.464"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 20:17:35.465" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 20:17:35.465" starttime="20200521 20:17:35.465"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 20:17:35.466" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 20:17:35.466" starttime="20200521 20:17:35.465"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.467" starttime="20200521 20:17:35.466"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.467" starttime="20200521 20:17:35.467"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.468" starttime="20200521 20:17:35.468"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.469" starttime="20200521 20:17:35.469"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.469" starttime="20200521 20:17:35.468"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.470" starttime="20200521 20:17:35.441"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.470" starttime="20200521 20:17:35.440"></status>
</kw>
<kw type="foritem" name="${ID} = 8">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:17:35.498" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/8</msg>
<msg timestamp="20200521 20:17:35.508" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/8: 0.000528 seconds.</msg>
<msg timestamp="20200521 20:17:35.509" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:17:35 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:17:35.509" starttime="20200521 20:17:35.486"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:17:35.510" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:17:35.510" starttime="20200521 20:17:35.509"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 20:17:35.511" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 20:17:35.511" starttime="20200521 20:17:35.510"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 20:17:35.512" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 20:17:35.512" starttime="20200521 20:17:35.511"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.512" starttime="20200521 20:17:35.512"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.513" starttime="20200521 20:17:35.513"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.516" starttime="20200521 20:17:35.514"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.517" starttime="20200521 20:17:35.517"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.517" starttime="20200521 20:17:35.516"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.518" starttime="20200521 20:17:35.485"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.518" starttime="20200521 20:17:35.470"></status>
</kw>
<kw type="foritem" name="${ID} = 9">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:17:35.528" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/9</msg>
<msg timestamp="20200521 20:17:35.537" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/9: 0.000882 seconds.</msg>
<msg timestamp="20200521 20:17:35.538" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:17:35 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:17:35.538" starttime="20200521 20:17:35.519"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:17:35.540" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:17:35.540" starttime="20200521 20:17:35.539"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 20:17:35.541" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 20:17:35.541" starttime="20200521 20:17:35.540"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 20:17:35.541" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 20:17:35.542" starttime="20200521 20:17:35.541"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.542" starttime="20200521 20:17:35.542"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.543" starttime="20200521 20:17:35.543"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.544" starttime="20200521 20:17:35.543"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.546" starttime="20200521 20:17:35.545"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.546" starttime="20200521 20:17:35.544"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.546" starttime="20200521 20:17:35.518"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.546" starttime="20200521 20:17:35.518"></status>
</kw>
<kw type="foritem" name="${ID} = 10">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:17:35.594" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/10</msg>
<msg timestamp="20200521 20:17:35.605" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/10: 0.000547 seconds.</msg>
<msg timestamp="20200521 20:17:35.606" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:17:35 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:17:35.606" starttime="20200521 20:17:35.547"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:17:35.607" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:17:35.607" starttime="20200521 20:17:35.607"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 20:17:35.608" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 20:17:35.608" starttime="20200521 20:17:35.608"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 20:17:35.609" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 20:17:35.609" starttime="20200521 20:17:35.609"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.610" starttime="20200521 20:17:35.610"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.611" starttime="20200521 20:17:35.610"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.612" starttime="20200521 20:17:35.611"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.613" starttime="20200521 20:17:35.613"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.613" starttime="20200521 20:17:35.612"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.613" starttime="20200521 20:17:35.546"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.613" starttime="20200521 20:17:35.546"></status>
</kw>
<kw type="foritem" name="${ID} = 11">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:17:35.626" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/11</msg>
<msg timestamp="20200521 20:17:35.636" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/11: 0.000606 seconds.</msg>
<msg timestamp="20200521 20:17:35.637" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:17:35 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:17:35.637" starttime="20200521 20:17:35.614"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:17:35.638" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:17:35.638" starttime="20200521 20:17:35.638"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 20:17:35.639" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 20:17:35.639" starttime="20200521 20:17:35.639"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 20:17:35.640" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 20:17:35.640" starttime="20200521 20:17:35.640"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.641" starttime="20200521 20:17:35.641"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.642" starttime="20200521 20:17:35.641"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.643" starttime="20200521 20:17:35.642"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.645" starttime="20200521 20:17:35.644"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.645" starttime="20200521 20:17:35.643"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.645" starttime="20200521 20:17:35.614"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.645" starttime="20200521 20:17:35.613"></status>
</kw>
<kw type="foritem" name="${ID} = 12">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:17:35.658" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/12</msg>
<msg timestamp="20200521 20:17:35.698" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/12: 0.000535 seconds.</msg>
<msg timestamp="20200521 20:17:35.699" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:17:35 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:17:35.699" starttime="20200521 20:17:35.646"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:17:35.700" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:17:35.700" starttime="20200521 20:17:35.699"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 20:17:35.701" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 20:17:35.701" starttime="20200521 20:17:35.700"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 20:17:35.702" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 20:17:35.702" starttime="20200521 20:17:35.701"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.703" starttime="20200521 20:17:35.702"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.704" starttime="20200521 20:17:35.703"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.706" starttime="20200521 20:17:35.704"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.709" starttime="20200521 20:17:35.707"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.709" starttime="20200521 20:17:35.706"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.709" starttime="20200521 20:17:35.645"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.710" starttime="20200521 20:17:35.645"></status>
</kw>
<kw type="foritem" name="${ID} = 13">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:17:35.720" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/13</msg>
<msg timestamp="20200521 20:17:35.731" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/13: 0.00046 seconds.</msg>
<msg timestamp="20200521 20:17:35.732" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:17:35 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:17:35.732" starttime="20200521 20:17:35.710"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:17:35.733" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:17:35.733" starttime="20200521 20:17:35.732"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 20:17:35.734" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 20:17:35.734" starttime="20200521 20:17:35.733"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 20:17:35.735" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 20:17:35.735" starttime="20200521 20:17:35.734"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.735" starttime="20200521 20:17:35.735"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.736" starttime="20200521 20:17:35.736"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.737" starttime="20200521 20:17:35.736"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.738" starttime="20200521 20:17:35.738"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.738" starttime="20200521 20:17:35.737"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.739" starttime="20200521 20:17:35.710"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.739" starttime="20200521 20:17:35.710"></status>
</kw>
<kw type="foritem" name="${ID} = 14">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:17:35.750" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/14</msg>
<msg timestamp="20200521 20:17:35.760" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/14: 0.000578 seconds.</msg>
<msg timestamp="20200521 20:17:35.760" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:17:35 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:17:35.760" starttime="20200521 20:17:35.740"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:17:35.763" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:17:35.763" starttime="20200521 20:17:35.763"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 20:17:35.764" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 20:17:35.764" starttime="20200521 20:17:35.764"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 20:17:35.765" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 20:17:35.765" starttime="20200521 20:17:35.765"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.769" starttime="20200521 20:17:35.766"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.771" starttime="20200521 20:17:35.769"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.794" starttime="20200521 20:17:35.771"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.796" starttime="20200521 20:17:35.795"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.796" starttime="20200521 20:17:35.794"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.796" starttime="20200521 20:17:35.739"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.796" starttime="20200521 20:17:35.739"></status>
</kw>
<kw type="foritem" name="${ID} = 15">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:17:35.806" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/15</msg>
<msg timestamp="20200521 20:17:35.817" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/15: 0.000572 seconds.</msg>
<msg timestamp="20200521 20:17:35.818" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:17:35 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:17:35.818" starttime="20200521 20:17:35.797"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:17:35.819" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:17:35.819" starttime="20200521 20:17:35.818"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 20:17:35.821" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 20:17:35.821" starttime="20200521 20:17:35.819"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 20:17:35.822" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 20:17:35.822" starttime="20200521 20:17:35.822"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.823" starttime="20200521 20:17:35.823"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.824" starttime="20200521 20:17:35.823"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.824" starttime="20200521 20:17:35.824"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.826" starttime="20200521 20:17:35.826"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.826" starttime="20200521 20:17:35.825"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.826" starttime="20200521 20:17:35.796"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.826" starttime="20200521 20:17:35.796"></status>
</kw>
<kw type="foritem" name="${ID} = 16">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:17:35.837" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/16</msg>
<msg timestamp="20200521 20:17:35.852" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/16: 0.000654 seconds.</msg>
<msg timestamp="20200521 20:17:35.853" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:17:35 GMT
connection Keep-Alive
content-type application/json
content-length 2310


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:17:35.853" starttime="20200521 20:17:35.827"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:17:35.854" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:17:35.854" starttime="20200521 20:17:35.854"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 20:17:35.855" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200521 20:17:35.855" starttime="20200521 20:17:35.855"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 20:17:35.856" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 20:17:35.856" starttime="20200521 20:17:35.856"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.859" starttime="20200521 20:17:35.857"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.859" starttime="20200521 20:17:35.859"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.860" starttime="20200521 20:17:35.860"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
</arguments>
<kw name="Test Tx Op Down">
<tags>
<tag>Test tx_disable</tag>
</tags>
<doc>Test SFP port tx disable function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OP_DOWN)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 20:17:35.868" level="INFO">${payload} = {u'OperationalState': u'Down'}</msg>
<status status="PASS" endtime="20200521 20:17:35.868" starttime="20200521 20:17:35.863"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<msg timestamp="20200521 20:17:35.909" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/16</msg>
<msg timestamp="20200521 20:17:35.931" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/16: 0.000653 seconds.</msg>
<status status="PASS" endtime="20200521 20:17:35.931" starttime="20200521 20:17:35.868"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.931" starttime="20200521 20:17:35.862"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.932" starttime="20200521 20:17:35.862"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.932" starttime="20200521 20:17:35.861"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.932" starttime="20200521 20:17:35.827"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.932" starttime="20200521 20:17:35.826"></status>
</kw>
<kw type="foritem" name="${ID} = 17">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:17:35.943" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/17</msg>
<msg timestamp="20200521 20:17:35.956" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/17: 0.000512 seconds.</msg>
<msg timestamp="20200521 20:17:35.956" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:17:35 GMT
connection Keep-Alive
content-type application/json
content-length 2440


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:17:35.956" starttime="20200521 20:17:35.933"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:17:35.958" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:17:35.958" starttime="20200521 20:17:35.957"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 20:17:35.959" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200521 20:17:35.959" starttime="20200521 20:17:35.958"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 20:17:35.959" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200521 20:17:35.960" starttime="20200521 20:17:35.959"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.960" starttime="20200521 20:17:35.960"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.961" starttime="20200521 20:17:35.960"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.962" starttime="20200521 20:17:35.961"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:35.964" starttime="20200521 20:17:35.963"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.964" starttime="20200521 20:17:35.962"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.964" starttime="20200521 20:17:35.932"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:35.964" starttime="20200521 20:17:35.932"></status>
</kw>
<kw type="foritem" name="${ID} = 18">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:17:35.975" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/18</msg>
<msg timestamp="20200521 20:17:35.998" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/18: 0.000593 seconds.</msg>
<msg timestamp="20200521 20:17:35.999" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:17:35 GMT
connection Keep-Alive
content-type application/json
content-length 2430


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:17:35.999" starttime="20200521 20:17:35.965"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:17:36.000" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:17:36.000" starttime="20200521 20:17:35.999"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 20:17:36.001" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200521 20:17:36.001" starttime="20200521 20:17:36.001"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 20:17:36.002" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200521 20:17:36.002" starttime="20200521 20:17:36.001"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:36.003" starttime="20200521 20:17:36.002"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:36.003" starttime="20200521 20:17:36.003"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:36.006" starttime="20200521 20:17:36.004"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:36.008" starttime="20200521 20:17:36.007"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:36.008" starttime="20200521 20:17:36.006"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:36.008" starttime="20200521 20:17:35.964"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:36.008" starttime="20200521 20:17:35.964"></status>
</kw>
<kw type="foritem" name="${ID} = 19">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:17:36.019" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/19</msg>
<msg timestamp="20200521 20:17:36.029" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/19: 0.000614 seconds.</msg>
<msg timestamp="20200521 20:17:36.030" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:17:36 GMT
connection Keep-Alive
content-type application/json
content-length 1056


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:17:36.030" starttime="20200521 20:17:36.009"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:17:36.031" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:17:36.031" starttime="20200521 20:17:36.030"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 20:17:36.032" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 20:17:36.032" starttime="20200521 20:17:36.031"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 20:17:36.033" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200521 20:17:36.033" starttime="20200521 20:17:36.032"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:36.036" starttime="20200521 20:17:36.033"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:36.037" starttime="20200521 20:17:36.037"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:36.038" starttime="20200521 20:17:36.037"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:36.039" starttime="20200521 20:17:36.039"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:36.039" starttime="20200521 20:17:36.038"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:36.040" starttime="20200521 20:17:36.008"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:36.040" starttime="20200521 20:17:36.008"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:36.040" starttime="20200521 20:17:35.130"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:36.040" starttime="20200521 20:17:34.814"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PON_TYPE}' == 'GPON'</arg>
<arg>Log to console</arg>
<arg>"####### GPON TESTING ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### XGSPON TESTING ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### XGSPON TESTING ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:36.043" starttime="20200521 20:17:36.041"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:36.043" starttime="20200521 20:17:36.040"></status>
</kw>
<kw name="Test Bal Enable">
<tags>
<tag>Verify_Bal_Enable</tag>
</tags>
<doc>Enable Bal</doc>
<kw type="for" name="${i} IN RANGE [ 1 | 80 ]">
<kw type="foritem" name="${i} = 1">
<kw name="Test Wait Bal Enable">
<tags>
<tag>Verify_Waut_Bal_Enable</tag>
</tags>
<doc>Wait Enable Bal</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:36.045" starttime="20200521 20:17:36.045"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:17:36.055" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 20:17:36.065" level="INFO">Response Time to /redfish/v1/Olt: 0.000498 seconds.</msg>
<msg timestamp="20200521 20:17:36.066" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:17:36 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 20:17:36.066" starttime="20200521 20:17:36.045"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:17:36.067" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:17:36.067" starttime="20200521 20:17:36.067"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['BalState']}</arg>
</arguments>
<assign>
<var>${BAL_STATE}</var>
</assign>
<msg timestamp="20200521 20:17:36.068" level="INFO">${BAL_STATE} = up</msg>
<status status="PASS" endtime="20200521 20:17:36.068" starttime="20200521 20:17:36.068"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BAL_STATE}' == 'up'</arg>
<arg>Log to console</arg>
<arg>"####### Up ######"</arg>
<arg>${bal_state} =</arg>
<arg>"up"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Up ######"</arg>
<arg>${bal_state} =</arg>
<arg>"up"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:36.070" starttime="20200521 20:17:36.069"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:36.070" starttime="20200521 20:17:36.068"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 20:17:37.071" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 20:17:37.071" starttime="20200521 20:17:36.070"></status>
</kw>
<msg timestamp="20200521 20:17:37.071" level="INFO">${result} = up</msg>
<status status="PASS" endtime="20200521 20:17:37.071" starttime="20200521 20:17:36.044"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:37.072" starttime="20200521 20:17:37.072"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${result}' == 'up'</arg>
</arguments>
<msg timestamp="20200521 20:17:37.073" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20200521 20:17:37.073" starttime="20200521 20:17:37.072"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:37.073" starttime="20200521 20:17:36.044"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:37.073" starttime="20200521 20:17:36.044"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${result}</arg>
<arg>up</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:37.074" starttime="20200521 20:17:37.074"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OPT_ENABLE)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 20:17:37.080" level="INFO">${payload} = {u'OltOperateState': True}</msg>
<status status="PASS" endtime="20200521 20:17:37.080" starttime="20200521 20:17:37.074"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:17:37.089" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 20:17:38.703" level="INFO">Response Time to /redfish/v1/Olt: 0.000512 seconds.</msg>
<msg timestamp="20200521 20:17:38.704" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:17:38 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:17:38.704" starttime="20200521 20:17:37.080"></status>
</kw>
<kw type="for" name="${i} IN RANGE [ 1 | 60 ]">
<kw type="foritem" name="${i} = 1">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:38.706" starttime="20200521 20:17:38.705"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:17:38.718" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 20:17:38.728" level="INFO">Response Time to /redfish/v1/Olt: 0.000416 seconds.</msg>
<msg timestamp="20200521 20:17:38.729" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:17:38 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 20:17:38.729" starttime="20200521 20:17:38.706"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:17:38.730" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:17:38.730" starttime="20200521 20:17:38.730"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 20:17:38.731" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 20:17:38.731" starttime="20200521 20:17:38.731"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:38.732" starttime="20200521 20:17:38.732"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:38.733" starttime="20200521 20:17:38.733"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:38.733" starttime="20200521 20:17:38.732"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 20:17:39.734" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 20:17:39.734" starttime="20200521 20:17:38.734"></status>
</kw>
<msg timestamp="20200521 20:17:39.735" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 20:17:39.735" starttime="20200521 20:17:38.705"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:39.736" starttime="20200521 20:17:39.735"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:39.736" starttime="20200521 20:17:39.736"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:39.736" starttime="20200521 20:17:38.704"></status>
</kw>
<kw type="foritem" name="${i} = 2">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:39.737" starttime="20200521 20:17:39.737"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:17:39.748" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 20:17:39.754" level="INFO">Response Time to /redfish/v1/Olt: 0.000518 seconds.</msg>
<msg timestamp="20200521 20:17:39.755" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:17:39 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 20:17:39.755" starttime="20200521 20:17:39.737"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:17:39.756" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:17:39.756" starttime="20200521 20:17:39.755"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 20:17:39.757" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 20:17:39.757" starttime="20200521 20:17:39.756"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:39.757" starttime="20200521 20:17:39.757"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:39.759" starttime="20200521 20:17:39.759"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:39.759" starttime="20200521 20:17:39.758"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 20:17:40.760" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 20:17:40.760" starttime="20200521 20:17:39.759"></status>
</kw>
<msg timestamp="20200521 20:17:40.761" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 20:17:40.761" starttime="20200521 20:17:39.736"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:40.762" starttime="20200521 20:17:40.761"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:40.762" starttime="20200521 20:17:40.762"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:40.762" starttime="20200521 20:17:39.736"></status>
</kw>
<kw type="foritem" name="${i} = 3">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:40.764" starttime="20200521 20:17:40.763"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:17:40.774" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 20:17:40.785" level="INFO">Response Time to /redfish/v1/Olt: 0.000458 seconds.</msg>
<msg timestamp="20200521 20:17:40.785" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:17:40 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 20:17:40.785" starttime="20200521 20:17:40.764"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:17:40.786" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:17:40.786" starttime="20200521 20:17:40.786"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 20:17:40.787" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 20:17:40.787" starttime="20200521 20:17:40.787"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:40.790" starttime="20200521 20:17:40.788"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:40.791" starttime="20200521 20:17:40.791"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:40.791" starttime="20200521 20:17:40.790"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 20:17:41.792" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 20:17:41.792" starttime="20200521 20:17:40.792"></status>
</kw>
<msg timestamp="20200521 20:17:41.793" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 20:17:41.793" starttime="20200521 20:17:40.763"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:41.794" starttime="20200521 20:17:41.793"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:41.794" starttime="20200521 20:17:41.794"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:41.794" starttime="20200521 20:17:40.762"></status>
</kw>
<kw type="foritem" name="${i} = 4">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:41.795" starttime="20200521 20:17:41.795"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:17:41.805" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 20:17:41.816" level="INFO">Response Time to /redfish/v1/Olt: 0.000607 seconds.</msg>
<msg timestamp="20200521 20:17:41.816" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:17:41 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 20:17:41.816" starttime="20200521 20:17:41.796"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:17:41.818" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:17:41.818" starttime="20200521 20:17:41.818"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 20:17:41.819" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 20:17:41.819" starttime="20200521 20:17:41.819"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:41.820" starttime="20200521 20:17:41.820"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:41.821" starttime="20200521 20:17:41.821"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:41.821" starttime="20200521 20:17:41.820"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 20:17:42.822" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 20:17:42.823" starttime="20200521 20:17:41.822"></status>
</kw>
<msg timestamp="20200521 20:17:42.823" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 20:17:42.823" starttime="20200521 20:17:41.795"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:42.824" starttime="20200521 20:17:42.823"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:42.824" starttime="20200521 20:17:42.824"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:42.824" starttime="20200521 20:17:41.794"></status>
</kw>
<kw type="foritem" name="${i} = 5">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:42.826" starttime="20200521 20:17:42.825"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:17:42.838" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 20:17:42.848" level="INFO">Response Time to /redfish/v1/Olt: 0.000575 seconds.</msg>
<msg timestamp="20200521 20:17:42.849" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:17:42 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 20:17:42.849" starttime="20200521 20:17:42.826"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:17:42.850" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:17:42.850" starttime="20200521 20:17:42.849"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 20:17:42.851" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 20:17:42.851" starttime="20200521 20:17:42.850"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:42.852" starttime="20200521 20:17:42.851"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:42.856" starttime="20200521 20:17:42.853"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:42.856" starttime="20200521 20:17:42.852"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 20:17:43.856" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 20:17:43.857" starttime="20200521 20:17:42.856"></status>
</kw>
<msg timestamp="20200521 20:17:43.857" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 20:17:43.857" starttime="20200521 20:17:42.825"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:43.858" starttime="20200521 20:17:43.858"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:43.859" starttime="20200521 20:17:43.858"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:43.859" starttime="20200521 20:17:42.824"></status>
</kw>
<kw type="foritem" name="${i} = 6">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:43.860" starttime="20200521 20:17:43.860"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:17:43.871" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 20:17:43.883" level="INFO">Response Time to /redfish/v1/Olt: 0.000455 seconds.</msg>
<msg timestamp="20200521 20:17:43.884" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:17:43 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 20:17:43.884" starttime="20200521 20:17:43.860"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:17:43.885" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:17:43.885" starttime="20200521 20:17:43.884"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 20:17:43.886" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 20:17:43.886" starttime="20200521 20:17:43.885"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:43.889" starttime="20200521 20:17:43.886"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:43.891" starttime="20200521 20:17:43.890"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:43.891" starttime="20200521 20:17:43.890"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 20:17:44.891" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 20:17:44.892" starttime="20200521 20:17:43.891"></status>
</kw>
<msg timestamp="20200521 20:17:44.892" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 20:17:44.892" starttime="20200521 20:17:43.859"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:44.894" starttime="20200521 20:17:44.893"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:44.895" starttime="20200521 20:17:44.894"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:44.895" starttime="20200521 20:17:43.859"></status>
</kw>
<kw type="foritem" name="${i} = 7">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:44.896" starttime="20200521 20:17:44.896"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:17:44.907" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 20:17:44.917" level="INFO">Response Time to /redfish/v1/Olt: 0.000507 seconds.</msg>
<msg timestamp="20200521 20:17:44.918" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:17:44 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 20:17:44.918" starttime="20200521 20:17:44.897"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:17:44.919" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:17:44.919" starttime="20200521 20:17:44.918"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 20:17:44.920" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 20:17:44.920" starttime="20200521 20:17:44.919"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:44.921" starttime="20200521 20:17:44.920"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:44.922" starttime="20200521 20:17:44.922"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:44.922" starttime="20200521 20:17:44.921"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 20:17:45.923" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 20:17:45.923" starttime="20200521 20:17:44.922"></status>
</kw>
<msg timestamp="20200521 20:17:45.923" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 20:17:45.924" starttime="20200521 20:17:44.895"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:45.924" starttime="20200521 20:17:45.924"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:45.925" starttime="20200521 20:17:45.925"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:45.925" starttime="20200521 20:17:44.895"></status>
</kw>
<kw type="foritem" name="${i} = 8">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:45.927" starttime="20200521 20:17:45.927"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:17:45.937" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 20:17:45.947" level="INFO">Response Time to /redfish/v1/Olt: 0.000438 seconds.</msg>
<msg timestamp="20200521 20:17:45.948" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:17:45 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 20:17:45.948" starttime="20200521 20:17:45.927"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:17:45.949" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:17:45.949" starttime="20200521 20:17:45.948"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 20:17:45.950" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 20:17:45.950" starttime="20200521 20:17:45.949"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:45.951" starttime="20200521 20:17:45.950"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:45.952" starttime="20200521 20:17:45.952"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:45.952" starttime="20200521 20:17:45.951"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 20:17:46.953" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 20:17:46.953" starttime="20200521 20:17:45.952"></status>
</kw>
<msg timestamp="20200521 20:17:46.953" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 20:17:46.953" starttime="20200521 20:17:45.925"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:46.954" starttime="20200521 20:17:46.954"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:46.955" starttime="20200521 20:17:46.955"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:46.955" starttime="20200521 20:17:45.925"></status>
</kw>
<kw type="foritem" name="${i} = 9">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:46.956" starttime="20200521 20:17:46.956"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:17:46.967" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 20:17:46.977" level="INFO">Response Time to /redfish/v1/Olt: 0.000562 seconds.</msg>
<msg timestamp="20200521 20:17:46.978" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:17:46 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 20:17:46.978" starttime="20200521 20:17:46.957"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:17:46.979" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:17:46.979" starttime="20200521 20:17:46.978"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 20:17:46.980" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 20:17:46.980" starttime="20200521 20:17:46.979"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:46.980" starttime="20200521 20:17:46.980"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:46.982" starttime="20200521 20:17:46.982"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:46.982" starttime="20200521 20:17:46.981"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 20:17:47.983" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 20:17:47.983" starttime="20200521 20:17:46.982"></status>
</kw>
<msg timestamp="20200521 20:17:47.983" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 20:17:47.983" starttime="20200521 20:17:46.955"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:47.984" starttime="20200521 20:17:47.984"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:47.985" starttime="20200521 20:17:47.985"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:47.985" starttime="20200521 20:17:46.955"></status>
</kw>
<kw type="foritem" name="${i} = 10">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:47.986" starttime="20200521 20:17:47.986"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:17:47.996" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 20:17:48.006" level="INFO">Response Time to /redfish/v1/Olt: 0.000504 seconds.</msg>
<msg timestamp="20200521 20:17:48.007" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:17:47 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 20:17:48.007" starttime="20200521 20:17:47.987"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:17:48.008" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:17:48.008" starttime="20200521 20:17:48.007"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 20:17:48.010" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 20:17:48.011" starttime="20200521 20:17:48.008"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:48.013" starttime="20200521 20:17:48.011"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:48.015" starttime="20200521 20:17:48.014"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:48.015" starttime="20200521 20:17:48.013"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 20:17:49.015" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 20:17:49.016" starttime="20200521 20:17:48.015"></status>
</kw>
<msg timestamp="20200521 20:17:49.016" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 20:17:49.016" starttime="20200521 20:17:47.985"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:49.017" starttime="20200521 20:17:49.016"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:49.018" starttime="20200521 20:17:49.017"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:49.018" starttime="20200521 20:17:47.985"></status>
</kw>
<kw type="foritem" name="${i} = 11">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:49.019" starttime="20200521 20:17:49.018"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:17:49.030" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 20:17:49.041" level="INFO">Response Time to /redfish/v1/Olt: 0.000487 seconds.</msg>
<msg timestamp="20200521 20:17:49.042" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:17:49 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 20:17:49.042" starttime="20200521 20:17:49.019"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:17:49.042" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:17:49.043" starttime="20200521 20:17:49.042"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 20:17:49.043" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 20:17:49.043" starttime="20200521 20:17:49.043"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:49.044" starttime="20200521 20:17:49.044"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:49.046" starttime="20200521 20:17:49.045"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:49.046" starttime="20200521 20:17:49.044"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 20:17:50.046" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 20:17:50.047" starttime="20200521 20:17:49.046"></status>
</kw>
<msg timestamp="20200521 20:17:50.047" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 20:17:50.047" starttime="20200521 20:17:49.018"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:50.048" starttime="20200521 20:17:50.048"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:50.049" starttime="20200521 20:17:50.048"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:50.049" starttime="20200521 20:17:49.018"></status>
</kw>
<kw type="foritem" name="${i} = 12">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:50.050" starttime="20200521 20:17:50.050"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:17:50.060" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 20:17:50.070" level="INFO">Response Time to /redfish/v1/Olt: 0.00048 seconds.</msg>
<msg timestamp="20200521 20:17:50.071" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:17:50 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 20:17:50.071" starttime="20200521 20:17:50.050"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:17:50.072" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:17:50.072" starttime="20200521 20:17:50.071"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 20:17:50.073" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 20:17:50.073" starttime="20200521 20:17:50.072"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:50.074" starttime="20200521 20:17:50.073"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:50.077" starttime="20200521 20:17:50.075"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:50.077" starttime="20200521 20:17:50.074"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 20:17:51.078" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 20:17:51.079" starttime="20200521 20:17:50.078"></status>
</kw>
<msg timestamp="20200521 20:17:51.079" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 20:17:51.079" starttime="20200521 20:17:50.049"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:51.080" starttime="20200521 20:17:51.079"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:51.081" starttime="20200521 20:17:51.080"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:51.081" starttime="20200521 20:17:50.049"></status>
</kw>
<kw type="foritem" name="${i} = 13">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:51.082" starttime="20200521 20:17:51.082"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:17:51.093" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 20:17:51.104" level="INFO">Response Time to /redfish/v1/Olt: 0.00046 seconds.</msg>
<msg timestamp="20200521 20:17:51.104" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:17:51 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 20:17:51.104" starttime="20200521 20:17:51.082"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:17:51.105" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:17:51.106" starttime="20200521 20:17:51.105"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 20:17:51.106" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 20:17:51.106" starttime="20200521 20:17:51.106"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:51.107" starttime="20200521 20:17:51.107"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:51.108" starttime="20200521 20:17:51.108"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:51.108" starttime="20200521 20:17:51.107"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 20:17:52.109" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 20:17:52.109" starttime="20200521 20:17:51.109"></status>
</kw>
<msg timestamp="20200521 20:17:52.110" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 20:17:52.110" starttime="20200521 20:17:51.081"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:52.111" starttime="20200521 20:17:52.110"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:52.111" starttime="20200521 20:17:52.111"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:52.112" starttime="20200521 20:17:51.081"></status>
</kw>
<kw type="foritem" name="${i} = 14">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:52.113" starttime="20200521 20:17:52.112"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:17:52.124" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 20:17:52.133" level="INFO">Response Time to /redfish/v1/Olt: 0.000475 seconds.</msg>
<msg timestamp="20200521 20:17:52.134" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:17:52 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 20:17:52.134" starttime="20200521 20:17:52.113"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:17:52.135" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:17:52.135" starttime="20200521 20:17:52.134"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 20:17:52.136" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 20:17:52.136" starttime="20200521 20:17:52.135"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:52.138" starttime="20200521 20:17:52.136"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:52.140" starttime="20200521 20:17:52.139"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:52.140" starttime="20200521 20:17:52.139"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 20:17:53.141" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 20:17:53.141" starttime="20200521 20:17:52.140"></status>
</kw>
<msg timestamp="20200521 20:17:53.141" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 20:17:53.141" starttime="20200521 20:17:52.112"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:53.142" starttime="20200521 20:17:53.142"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:53.143" starttime="20200521 20:17:53.142"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:53.143" starttime="20200521 20:17:52.112"></status>
</kw>
<kw type="foritem" name="${i} = 15">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:53.144" starttime="20200521 20:17:53.144"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:17:53.157" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 20:17:53.167" level="INFO">Response Time to /redfish/v1/Olt: 0.000515 seconds.</msg>
<msg timestamp="20200521 20:17:53.168" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:17:53 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 20:17:53.168" starttime="20200521 20:17:53.144"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:17:53.169" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:17:53.169" starttime="20200521 20:17:53.168"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 20:17:53.170" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 20:17:53.170" starttime="20200521 20:17:53.170"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:53.173" starttime="20200521 20:17:53.171"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:53.174" starttime="20200521 20:17:53.174"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:53.174" starttime="20200521 20:17:53.173"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 20:17:54.175" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 20:17:54.175" starttime="20200521 20:17:53.175"></status>
</kw>
<msg timestamp="20200521 20:17:54.176" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 20:17:54.176" starttime="20200521 20:17:53.143"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:54.177" starttime="20200521 20:17:54.176"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:54.177" starttime="20200521 20:17:54.177"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:54.177" starttime="20200521 20:17:53.143"></status>
</kw>
<kw type="foritem" name="${i} = 16">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:54.179" starttime="20200521 20:17:54.178"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:17:54.189" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 20:17:54.199" level="INFO">Response Time to /redfish/v1/Olt: 0.000546 seconds.</msg>
<msg timestamp="20200521 20:17:54.200" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:17:54 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 20:17:54.200" starttime="20200521 20:17:54.179"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:17:54.201" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:17:54.201" starttime="20200521 20:17:54.200"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 20:17:54.202" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 20:17:54.202" starttime="20200521 20:17:54.201"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:54.202" starttime="20200521 20:17:54.202"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:54.204" starttime="20200521 20:17:54.203"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:54.204" starttime="20200521 20:17:54.203"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 20:17:55.205" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 20:17:55.205" starttime="20200521 20:17:54.204"></status>
</kw>
<msg timestamp="20200521 20:17:55.205" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 20:17:55.205" starttime="20200521 20:17:54.177"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:55.206" starttime="20200521 20:17:55.206"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:55.206" starttime="20200521 20:17:55.206"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:55.207" starttime="20200521 20:17:54.177"></status>
</kw>
<kw type="foritem" name="${i} = 17">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:55.207" starttime="20200521 20:17:55.207"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:17:55.217" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 20:17:56.232" level="INFO">Response Time to /redfish/v1/Olt: 0.000516 seconds.</msg>
<msg timestamp="20200521 20:17:56.233" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:17:56 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 20:17:56.233" starttime="20200521 20:17:55.208"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:17:56.234" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:17:56.234" starttime="20200521 20:17:56.233"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 20:17:56.235" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 20:17:56.235" starttime="20200521 20:17:56.234"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:56.236" starttime="20200521 20:17:56.235"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:56.237" starttime="20200521 20:17:56.237"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:56.237" starttime="20200521 20:17:56.236"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 20:17:57.238" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 20:17:57.238" starttime="20200521 20:17:56.238"></status>
</kw>
<msg timestamp="20200521 20:17:57.239" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 20:17:57.239" starttime="20200521 20:17:55.207"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:57.240" starttime="20200521 20:17:57.239"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:57.240" starttime="20200521 20:17:57.240"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:57.240" starttime="20200521 20:17:55.207"></status>
</kw>
<kw type="foritem" name="${i} = 18">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:57.242" starttime="20200521 20:17:57.241"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:17:57.253" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 20:17:57.263" level="INFO">Response Time to /redfish/v1/Olt: 0.000551 seconds.</msg>
<msg timestamp="20200521 20:17:57.264" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:17:57 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200521 20:17:57.264" starttime="20200521 20:17:57.242"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:17:57.265" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:17:57.265" starttime="20200521 20:17:57.264"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 20:17:57.266" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200521 20:17:57.266" starttime="20200521 20:17:57.265"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:57.266" starttime="20200521 20:17:57.266"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:57.268" starttime="20200521 20:17:57.268"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:57.268" starttime="20200521 20:17:57.267"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 20:17:58.269" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 20:17:58.269" starttime="20200521 20:17:57.269"></status>
</kw>
<msg timestamp="20200521 20:17:58.270" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200521 20:17:58.270" starttime="20200521 20:17:57.241"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:58.271" starttime="20200521 20:17:58.270"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:58.271" starttime="20200521 20:17:58.271"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:58.271" starttime="20200521 20:17:57.241"></status>
</kw>
<kw type="foritem" name="${i} = 19">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:58.273" starttime="20200521 20:17:58.272"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:17:58.283" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200521 20:17:58.294" level="INFO">Response Time to /redfish/v1/Olt: 0.000551 seconds.</msg>
<msg timestamp="20200521 20:17:58.295" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:17:58 GMT
connection Keep-Alive
content-type application/json
content-length 40


{"BalState":"up","OltOperateState":true}</msg>
<status status="PASS" endtime="20200521 20:17:58.295" starttime="20200521 20:17:58.273"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:17:58.296" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:17:58.296" starttime="20200521 20:17:58.295"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200521 20:17:58.297" level="INFO">${bal_opt_state} = True</msg>
<status status="PASS" endtime="20200521 20:17:58.297" starttime="20200521 20:17:58.296"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:58.300" starttime="20200521 20:17:58.297"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Up ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:58.302" starttime="20200521 20:17:58.301"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:58.302" starttime="20200521 20:17:58.300"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 20:17:59.303" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 20:17:59.303" starttime="20200521 20:17:58.302"></status>
</kw>
<msg timestamp="20200521 20:17:59.303" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20200521 20:17:59.303" starttime="20200521 20:17:58.272"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:59.304" starttime="20200521 20:17:59.304"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20200521 20:17:59.305" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20200521 20:17:59.305" starttime="20200521 20:17:59.305"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:59.305" starttime="20200521 20:17:58.272"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:59.305" starttime="20200521 20:17:38.704"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:17:59.306" starttime="20200521 20:17:59.306"></status>
</kw>
<status status="PASS" endtime="20200521 20:17:59.306" starttime="20200521 20:17:36.043"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200521 20:18:04.307" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20200521 20:18:04.307" starttime="20200521 20:17:59.306"></status>
</kw>
<kw name="Test Port Present">
<tags>
<tag>Test pon_status present</tag>
</tags>
<doc>Test Pon port present function</doc>
<arguments>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:18:04.319" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200521 20:18:04.336" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000569 seconds.</msg>
<msg timestamp="20200521 20:18:04.337" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:18:04 GMT
connection Keep-Alive
content-type application/json
content-length 2401


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:18:04.337" starttime="20200521 20:18:04.308"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:18:04.338" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:18:04.338" starttime="20200521 20:18:04.337"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 20:18:04.339" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200521 20:18:04.339" starttime="20200521 20:18:04.338"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 20:18:04.340" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 20:18:04.340" starttime="20200521 20:18:04.339"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:18:04.342" starttime="20200521 20:18:04.340"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:18:04.343" starttime="20200521 20:18:04.342"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${PORT_ENABLE}'</arg>
<arg>'Enabled'</arg>
</arguments>
<status status="PASS" endtime="20200521 20:18:04.344" starttime="20200521 20:18:04.343"></status>
</kw>
<status status="PASS" endtime="20200521 20:18:04.344" starttime="20200521 20:18:04.307"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200521 20:18:09.346" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20200521 20:18:09.346" starttime="20200521 20:18:04.344"></status>
</kw>
<kw name="Enable Port">
<tags>
<tag>Enable Port</tag>
</tags>
<doc>Enable port function</doc>
<arguments>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Enable Port ${ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:18:09.347" starttime="20200521 20:18:09.347"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($ADM_UP)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 20:18:09.354" level="INFO">${payload} = {u'AdministrativeState': u'Up'}</msg>
<status status="PASS" endtime="20200521 20:18:09.354" starttime="20200521 20:18:09.348"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:18:09.365" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200521 20:18:09.777" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000608 seconds.</msg>
<msg timestamp="20200521 20:18:09.777" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:18:09 GMT
connection Keep-Alive
content-type application/json
content-length 2396


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:18:09.778" starttime="20200521 20:18:09.354"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:18:09.779" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:18:09.779" starttime="20200521 20:18:09.778"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:18:09.789" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200521 20:18:09.805" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.00061 seconds.</msg>
<msg timestamp="20200521 20:18:09.806" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:18:09 GMT
connection Keep-Alive
content-type application/json
content-length 2396


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:18:09.806" starttime="20200521 20:18:09.779"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:18:09.807" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:18:09.807" starttime="20200521 20:18:09.806"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['AdministrativeState']}</arg>
</arguments>
<assign>
<var>${ADM_STAT}</var>
</assign>
<msg timestamp="20200521 20:18:09.808" level="INFO">${ADM_STAT} = Up</msg>
<status status="PASS" endtime="20200521 20:18:09.808" starttime="20200521 20:18:09.807"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${ADM_STAT}'</arg>
<arg>'Up'</arg>
</arguments>
<status status="PASS" endtime="20200521 20:18:09.808" starttime="20200521 20:18:09.808"></status>
</kw>
<status status="PASS" endtime="20200521 20:18:09.809" starttime="20200521 20:18:09.346"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200521 20:18:14.809" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20200521 20:18:14.810" starttime="20200521 20:18:09.809"></status>
</kw>
<kw name="Test NNI Port Enable">
<tags>
<tag>Verify_nni_enable</tag>
</tags>
<doc>Verify NNI port enable function</doc>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:18:14.821" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/</msg>
<msg timestamp="20200521 20:18:14.838" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/: 0.000634 seconds.</msg>
<msg timestamp="20200521 20:18:14.838" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:18:14 GMT
connection Keep-Alive
content-type application/json
content-length 1467


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPortCollection.EthernetSwitchPor...</msg>
<status status="PASS" endtime="20200521 20:18:14.838" starttime="20200521 20:18:14.811"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:18:14.840" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:18:14.840" starttime="20200521 20:18:14.839"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200521 20:18:14.840" level="INFO">Length is 20</msg>
<msg timestamp="20200521 20:18:14.841" level="INFO">${item_count} = 20</msg>
<status status="PASS" endtime="20200521 20:18:14.841" starttime="20200521 20:18:14.840"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### num ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:18:14.844" starttime="20200521 20:18:14.841"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PON_TYPE}' == 'GPON'</arg>
<arg>set variable</arg>
<arg>${65}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${17}</arg>
</arguments>
<assign>
<var>${NNI_PORT}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${17}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:18:14.846" starttime="20200521 20:18:14.845"></status>
</kw>
<msg timestamp="20200521 20:18:14.846" level="INFO">${NNI_PORT} = 17</msg>
<status status="PASS" endtime="20200521 20:18:14.846" starttime="20200521 20:18:14.844"></status>
</kw>
<kw name="Test Port Present">
<tags>
<tag>Test pon_status present</tag>
</tags>
<doc>Test Pon port present function</doc>
<arguments>
<arg>${NNI_PORT}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:18:14.856" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/17</msg>
<msg timestamp="20200521 20:18:14.869" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/17: 0.000598 seconds.</msg>
<msg timestamp="20200521 20:18:14.870" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:18:14 GMT
connection Keep-Alive
content-type application/json
content-length 2443


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:18:14.870" starttime="20200521 20:18:14.847"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:18:14.871" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:18:14.871" starttime="20200521 20:18:14.870"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 20:18:14.872" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200521 20:18:14.872" starttime="20200521 20:18:14.871"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 20:18:14.873" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200521 20:18:14.873" starttime="20200521 20:18:14.872"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:18:14.875" starttime="20200521 20:18:14.873"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:18:14.876" starttime="20200521 20:18:14.876"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${PORT_ENABLE}'</arg>
<arg>'Enabled'</arg>
</arguments>
<status status="PASS" endtime="20200521 20:18:14.877" starttime="20200521 20:18:14.877"></status>
</kw>
<status status="PASS" endtime="20200521 20:18:14.878" starttime="20200521 20:18:14.846"></status>
</kw>
<kw name="Enable Port">
<tags>
<tag>Enable Port</tag>
</tags>
<doc>Enable port function</doc>
<arguments>
<arg>${NNI_PORT}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Enable Port ${ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:18:14.879" starttime="20200521 20:18:14.879"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($ADM_UP)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 20:18:14.885" level="INFO">${payload} = {u'AdministrativeState': u'Up'}</msg>
<status status="PASS" endtime="20200521 20:18:14.885" starttime="20200521 20:18:14.879"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:18:14.895" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/17</msg>
<msg timestamp="20200521 20:18:15.131" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/17: 0.00064 seconds.</msg>
<msg timestamp="20200521 20:18:15.132" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:18:15 GMT
connection Keep-Alive
content-type application/json
content-length 2443


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:18:15.132" starttime="20200521 20:18:14.885"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:18:15.133" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:18:15.133" starttime="20200521 20:18:15.132"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:18:15.143" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/17</msg>
<msg timestamp="20200521 20:18:15.154" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/17: 0.000405 seconds.</msg>
<msg timestamp="20200521 20:18:15.155" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:18:15 GMT
connection Keep-Alive
content-type application/json
content-length 2443


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:18:15.155" starttime="20200521 20:18:15.133"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:18:15.156" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:18:15.156" starttime="20200521 20:18:15.155"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['AdministrativeState']}</arg>
</arguments>
<assign>
<var>${ADM_STAT}</var>
</assign>
<msg timestamp="20200521 20:18:15.157" level="INFO">${ADM_STAT} = Up</msg>
<status status="PASS" endtime="20200521 20:18:15.157" starttime="20200521 20:18:15.156"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${ADM_STAT}'</arg>
<arg>'Up'</arg>
</arguments>
<status status="PASS" endtime="20200521 20:18:15.157" starttime="20200521 20:18:15.157"></status>
</kw>
<status status="PASS" endtime="20200521 20:18:15.157" starttime="20200521 20:18:14.878"></status>
</kw>
<status status="PASS" endtime="20200521 20:18:15.157" starttime="20200521 20:18:14.810"></status>
</kw>
<status status="PASS" endtime="20200521 20:18:15.158" starttime="20200521 20:17:34.814"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200521 20:18:15.168" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200521 20:18:15.179" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000449 seconds.</msg>
<msg timestamp="20200521 20:18:15.179" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200521 20:18:15.179" starttime="20200521 20:18:15.158"></status>
</kw>
<status status="PASS" endtime="20200521 20:18:15.180" starttime="20200521 20:18:15.158"></status>
</kw>
<doc>Test BAL Restful Status</doc>
<tags>
<tag>Test Bal Restful opertaion test</tag>
</tags>
<status status="PASS" endtime="20200521 20:18:15.180" critical="yes" starttime="20200521 20:17:34.786"></status>
</test>
<test id="s1-s1-t2" name="Verify Restful API for ONU Range Test">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200521 20:18:15.193" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200521 20:18:15.210" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000761 seconds.</msg>
<msg timestamp="20200521 20:18:15.210" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200521 20:18:15.211" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200521 20:18:15.211" starttime="20200521 20:18:15.186"></status>
</kw>
<status status="PASS" endtime="20200521 20:18:15.211" starttime="20200521 20:18:15.185"></status>
</kw>
<kw name="Test ONU Range">
<tags>
<tag>ONU Range</tag>
</tags>
<doc>ONU Ranging Test</doc>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PON_TYPE}' == 'GPON'</arg>
<arg>set variable</arg>
<arg>${150}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${255}</arg>
</arguments>
<assign>
<var>${ONU_ID_RANGE}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${255}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:18:15.213" starttime="20200521 20:18:15.213"></status>
</kw>
<msg timestamp="20200521 20:18:15.213" level="INFO">${ONU_ID_RANGE} = 255</msg>
<status status="PASS" endtime="20200521 20:18:15.213" starttime="20200521 20:18:15.212"></status>
</kw>
<kw type="for" name="${id} IN RANGE [ 1 | ${ONU_ID_RANGE} | 50 ]">
<kw type="foritem" name="${id} = 1">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200521 20:18:22.214" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200521 20:18:22.215" starttime="20200521 20:18:15.214"></status>
</kw>
<kw name="Test Active ONU">
<tags>
<tag>Test Active ONU</tag>
</tags>
<doc>Test Active ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${SPECIFIC_ID}</arg>
<arg>${SPECIFIC_NUM}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onu_id": ${ONU_ID},</arg>
<arg>"vendor_id": "${VEN_ID}",</arg>
<arg>"vendor_specific":"${VEN_SPEC}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 20:18:22.217" level="INFO">${JSTRING} = { "onu_id": 1, "vendor_id": "ISKT", "vendor_specific":"71E83268" }</msg>
<status status="PASS" endtime="20200521 20:18:22.217" starttime="20200521 20:18:22.216"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### active onu ${JSTRING} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:18:22.217" starttime="20200521 20:18:22.217"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 20:18:22.224" level="INFO">${payload} = {u'onu_id': 1, u'vendor_id': u'ISKT', u'vendor_specific': u'71E83268'}</msg>
<status status="PASS" endtime="20200521 20:18:22.224" starttime="20200521 20:18:22.218"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:18:22.236" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 20:18:22.249" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000567 seconds.</msg>
<msg timestamp="20200521 20:18:22.250" level="INFO">${resp} = 201
date Thu, 21 May 2020 12:18:22 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:18:22.250" starttime="20200521 20:18:22.225"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200521 20:18:22.251" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:18:22.252" starttime="20200521 20:18:22.251"></status>
</kw>
<status status="PASS" endtime="20200521 20:18:22.252" starttime="20200521 20:18:22.250"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6s</arg>
</arguments>
<msg timestamp="20200521 20:18:28.252" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20200521 20:18:28.253" starttime="20200521 20:18:22.252"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:18:28.262" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 20:18:28.273" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000455 seconds.</msg>
<msg timestamp="20200521 20:18:28.274" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:18:28 GMT
connection Keep-Alive
content-type application/json
content-length 405


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200521 20:18:28.274" starttime="20200521 20:18:28.253"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### onu res ${resp} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:18:28.275" starttime="20200521 20:18:28.274"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200521 20:18:28.276" level="INFO">Length is 1</msg>
<msg timestamp="20200521 20:18:28.276" level="INFO">${item_count} = 1</msg>
<status status="PASS" endtime="20200521 20:18:28.276" starttime="20200521 20:18:28.275"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Onu num ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:18:28.277" starttime="20200521 20:18:28.276"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200521 20:18:28.279" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:18:28.279" starttime="20200521 20:18:28.278"></status>
</kw>
<status status="PASS" endtime="20200521 20:18:28.279" starttime="20200521 20:18:28.277"></status>
</kw>
<status status="PASS" endtime="20200521 20:18:28.280" starttime="20200521 20:18:22.215"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200521 20:18:35.280" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200521 20:18:35.281" starttime="20200521 20:18:28.280"></status>
</kw>
<kw name="Test DeActive ONU">
<tags>
<tag>Test DeActive ONU</tag>
</tags>
<doc>Test DeActive ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Deactive onu ${ONU_ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:18:35.282" starttime="20200521 20:18:35.281"></status>
</kw>
<kw type="for" name="${j} IN RANGE [ 5 ]">
<kw type="foritem" name="${j} = 0">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${j} == 4</arg>
</arguments>
<status status="PASS" endtime="20200521 20:18:35.283" starttime="20200521 20:18:35.282"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:18:35.295" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1</msg>
<msg timestamp="20200521 20:18:35.807" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1: 0.000512 seconds.</msg>
<msg timestamp="20200521 20:18:35.808" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:18:35 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:18:35.808" starttime="20200521 20:18:35.283"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${resp.status} == ${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:18:35.809" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20200521 20:18:35.809" starttime="20200521 20:18:35.809"></status>
</kw>
<status status="PASS" endtime="20200521 20:18:35.809" starttime="20200521 20:18:35.282"></status>
</kw>
<status status="PASS" endtime="20200521 20:18:35.809" starttime="20200521 20:18:35.282"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:18:35.810" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:18:35.810" starttime="20200521 20:18:35.810"></status>
</kw>
<status status="PASS" endtime="20200521 20:18:35.811" starttime="20200521 20:18:35.281"></status>
</kw>
<status status="PASS" endtime="20200521 20:18:35.811" starttime="20200521 20:18:15.214"></status>
</kw>
<kw type="foritem" name="${id} = 51">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200521 20:18:42.812" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200521 20:18:42.812" starttime="20200521 20:18:35.811"></status>
</kw>
<kw name="Test Active ONU">
<tags>
<tag>Test Active ONU</tag>
</tags>
<doc>Test Active ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${SPECIFIC_ID}</arg>
<arg>${SPECIFIC_NUM}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onu_id": ${ONU_ID},</arg>
<arg>"vendor_id": "${VEN_ID}",</arg>
<arg>"vendor_specific":"${VEN_SPEC}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 20:18:42.814" level="INFO">${JSTRING} = { "onu_id": 51, "vendor_id": "ISKT", "vendor_specific":"71E83268" }</msg>
<status status="PASS" endtime="20200521 20:18:42.814" starttime="20200521 20:18:42.813"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### active onu ${JSTRING} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:18:42.814" starttime="20200521 20:18:42.814"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 20:18:42.820" level="INFO">${payload} = {u'onu_id': 51, u'vendor_id': u'ISKT', u'vendor_specific': u'71E83268'}</msg>
<status status="PASS" endtime="20200521 20:18:42.820" starttime="20200521 20:18:42.815"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:18:42.831" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 20:18:42.843" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000468 seconds.</msg>
<msg timestamp="20200521 20:18:42.844" level="INFO">${resp} = 201
date Thu, 21 May 2020 12:18:42 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:18:42.844" starttime="20200521 20:18:42.820"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200521 20:18:42.846" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:18:42.846" starttime="20200521 20:18:42.845"></status>
</kw>
<status status="PASS" endtime="20200521 20:18:42.846" starttime="20200521 20:18:42.844"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6s</arg>
</arguments>
<msg timestamp="20200521 20:18:48.847" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20200521 20:18:48.847" starttime="20200521 20:18:42.846"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:18:48.856" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 20:18:48.866" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000533 seconds.</msg>
<msg timestamp="20200521 20:18:48.866" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:18:48 GMT
connection Keep-Alive
content-type application/json
content-length 406


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200521 20:18:48.867" starttime="20200521 20:18:48.847"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### onu res ${resp} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:18:48.868" starttime="20200521 20:18:48.867"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200521 20:18:48.868" level="INFO">Length is 1</msg>
<msg timestamp="20200521 20:18:48.868" level="INFO">${item_count} = 1</msg>
<status status="PASS" endtime="20200521 20:18:48.868" starttime="20200521 20:18:48.868"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Onu num ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:18:48.869" starttime="20200521 20:18:48.869"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200521 20:18:48.871" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:18:48.871" starttime="20200521 20:18:48.871"></status>
</kw>
<status status="PASS" endtime="20200521 20:18:48.871" starttime="20200521 20:18:48.870"></status>
</kw>
<status status="PASS" endtime="20200521 20:18:48.871" starttime="20200521 20:18:42.812"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200521 20:18:55.872" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200521 20:18:55.872" starttime="20200521 20:18:48.871"></status>
</kw>
<kw name="Test DeActive ONU">
<tags>
<tag>Test DeActive ONU</tag>
</tags>
<doc>Test DeActive ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Deactive onu ${ONU_ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:18:55.874" starttime="20200521 20:18:55.873"></status>
</kw>
<kw type="for" name="${j} IN RANGE [ 5 ]">
<kw type="foritem" name="${j} = 0">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${j} == 4</arg>
</arguments>
<status status="PASS" endtime="20200521 20:18:55.875" starttime="20200521 20:18:55.875"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:18:55.885" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/51</msg>
<msg timestamp="20200521 20:18:56.398" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/51: 0.000546 seconds.</msg>
<msg timestamp="20200521 20:18:56.399" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:18:56 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:18:56.399" starttime="20200521 20:18:55.876"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${resp.status} == ${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:18:56.400" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20200521 20:18:56.400" starttime="20200521 20:18:56.399"></status>
</kw>
<status status="PASS" endtime="20200521 20:18:56.400" starttime="20200521 20:18:55.874"></status>
</kw>
<status status="PASS" endtime="20200521 20:18:56.400" starttime="20200521 20:18:55.874"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:18:56.401" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:18:56.401" starttime="20200521 20:18:56.401"></status>
</kw>
<status status="PASS" endtime="20200521 20:18:56.401" starttime="20200521 20:18:55.872"></status>
</kw>
<status status="PASS" endtime="20200521 20:18:56.402" starttime="20200521 20:18:35.811"></status>
</kw>
<kw type="foritem" name="${id} = 101">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200521 20:19:03.402" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200521 20:19:03.403" starttime="20200521 20:18:56.402"></status>
</kw>
<kw name="Test Active ONU">
<tags>
<tag>Test Active ONU</tag>
</tags>
<doc>Test Active ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${SPECIFIC_ID}</arg>
<arg>${SPECIFIC_NUM}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onu_id": ${ONU_ID},</arg>
<arg>"vendor_id": "${VEN_ID}",</arg>
<arg>"vendor_specific":"${VEN_SPEC}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 20:19:03.404" level="INFO">${JSTRING} = { "onu_id": 101, "vendor_id": "ISKT", "vendor_specific":"71E83268" }</msg>
<status status="PASS" endtime="20200521 20:19:03.404" starttime="20200521 20:19:03.404"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### active onu ${JSTRING} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:19:03.405" starttime="20200521 20:19:03.405"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 20:19:03.411" level="INFO">${payload} = {u'onu_id': 101, u'vendor_id': u'ISKT', u'vendor_specific': u'71E83268'}</msg>
<status status="PASS" endtime="20200521 20:19:03.411" starttime="20200521 20:19:03.405"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:19:03.420" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 20:19:03.432" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000474 seconds.</msg>
<msg timestamp="20200521 20:19:03.433" level="INFO">${resp} = 201
date Thu, 21 May 2020 12:19:03 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:19:03.433" starttime="20200521 20:19:03.411"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200521 20:19:03.435" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:19:03.435" starttime="20200521 20:19:03.435"></status>
</kw>
<status status="PASS" endtime="20200521 20:19:03.435" starttime="20200521 20:19:03.434"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6s</arg>
</arguments>
<msg timestamp="20200521 20:19:09.436" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20200521 20:19:09.436" starttime="20200521 20:19:03.436"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:19:09.447" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 20:19:09.458" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000489 seconds.</msg>
<msg timestamp="20200521 20:19:09.458" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:19:09 GMT
connection Keep-Alive
content-type application/json
content-length 407


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200521 20:19:09.458" starttime="20200521 20:19:09.437"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### onu res ${resp} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:19:09.459" starttime="20200521 20:19:09.459"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200521 20:19:09.460" level="INFO">Length is 1</msg>
<msg timestamp="20200521 20:19:09.460" level="INFO">${item_count} = 1</msg>
<status status="PASS" endtime="20200521 20:19:09.460" starttime="20200521 20:19:09.460"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Onu num ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:19:09.464" starttime="20200521 20:19:09.461"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200521 20:19:09.465" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:19:09.465" starttime="20200521 20:19:09.465"></status>
</kw>
<status status="PASS" endtime="20200521 20:19:09.465" starttime="20200521 20:19:09.464"></status>
</kw>
<status status="PASS" endtime="20200521 20:19:09.466" starttime="20200521 20:19:03.403"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200521 20:19:16.466" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200521 20:19:16.467" starttime="20200521 20:19:09.466"></status>
</kw>
<kw name="Test DeActive ONU">
<tags>
<tag>Test DeActive ONU</tag>
</tags>
<doc>Test DeActive ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Deactive onu ${ONU_ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:19:16.468" starttime="20200521 20:19:16.468"></status>
</kw>
<kw type="for" name="${j} IN RANGE [ 5 ]">
<kw type="foritem" name="${j} = 0">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${j} == 4</arg>
</arguments>
<status status="PASS" endtime="20200521 20:19:16.469" starttime="20200521 20:19:16.469"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:19:16.481" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/101</msg>
<msg timestamp="20200521 20:19:16.994" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/101: 0.00045 seconds.</msg>
<msg timestamp="20200521 20:19:16.995" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:19:16 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:19:16.995" starttime="20200521 20:19:16.470"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${resp.status} == ${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:19:16.996" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20200521 20:19:16.996" starttime="20200521 20:19:16.995"></status>
</kw>
<status status="PASS" endtime="20200521 20:19:16.996" starttime="20200521 20:19:16.468"></status>
</kw>
<status status="PASS" endtime="20200521 20:19:16.996" starttime="20200521 20:19:16.468"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:19:16.997" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:19:16.997" starttime="20200521 20:19:16.997"></status>
</kw>
<status status="PASS" endtime="20200521 20:19:16.997" starttime="20200521 20:19:16.467"></status>
</kw>
<status status="PASS" endtime="20200521 20:19:16.997" starttime="20200521 20:18:56.402"></status>
</kw>
<kw type="foritem" name="${id} = 151">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200521 20:19:23.998" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200521 20:19:23.998" starttime="20200521 20:19:16.998"></status>
</kw>
<kw name="Test Active ONU">
<tags>
<tag>Test Active ONU</tag>
</tags>
<doc>Test Active ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${SPECIFIC_ID}</arg>
<arg>${SPECIFIC_NUM}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onu_id": ${ONU_ID},</arg>
<arg>"vendor_id": "${VEN_ID}",</arg>
<arg>"vendor_specific":"${VEN_SPEC}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 20:19:24.000" level="INFO">${JSTRING} = { "onu_id": 151, "vendor_id": "ISKT", "vendor_specific":"71E83268" }</msg>
<status status="PASS" endtime="20200521 20:19:24.000" starttime="20200521 20:19:24.000"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### active onu ${JSTRING} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:19:24.001" starttime="20200521 20:19:24.001"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 20:19:24.006" level="INFO">${payload} = {u'onu_id': 151, u'vendor_id': u'ISKT', u'vendor_specific': u'71E83268'}</msg>
<status status="PASS" endtime="20200521 20:19:24.006" starttime="20200521 20:19:24.001"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:19:24.016" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 20:19:24.028" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000602 seconds.</msg>
<msg timestamp="20200521 20:19:24.029" level="INFO">${resp} = 201
date Thu, 21 May 2020 12:19:24 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:19:24.029" starttime="20200521 20:19:24.007"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200521 20:19:24.031" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:19:24.031" starttime="20200521 20:19:24.030"></status>
</kw>
<status status="PASS" endtime="20200521 20:19:24.031" starttime="20200521 20:19:24.030"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6s</arg>
</arguments>
<msg timestamp="20200521 20:19:30.032" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20200521 20:19:30.032" starttime="20200521 20:19:24.031"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:19:30.042" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 20:19:30.052" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000493 seconds.</msg>
<msg timestamp="20200521 20:19:30.053" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:19:30 GMT
connection Keep-Alive
content-type application/json
content-length 407


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200521 20:19:30.053" starttime="20200521 20:19:30.033"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### onu res ${resp} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:19:30.054" starttime="20200521 20:19:30.054"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200521 20:19:30.055" level="INFO">Length is 1</msg>
<msg timestamp="20200521 20:19:30.055" level="INFO">${item_count} = 1</msg>
<status status="PASS" endtime="20200521 20:19:30.055" starttime="20200521 20:19:30.055"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Onu num ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:19:30.056" starttime="20200521 20:19:30.056"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200521 20:19:30.058" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:19:30.058" starttime="20200521 20:19:30.057"></status>
</kw>
<status status="PASS" endtime="20200521 20:19:30.058" starttime="20200521 20:19:30.057"></status>
</kw>
<status status="PASS" endtime="20200521 20:19:30.058" starttime="20200521 20:19:23.999"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200521 20:19:37.059" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200521 20:19:37.059" starttime="20200521 20:19:30.058"></status>
</kw>
<kw name="Test DeActive ONU">
<tags>
<tag>Test DeActive ONU</tag>
</tags>
<doc>Test DeActive ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Deactive onu ${ONU_ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:19:37.060" starttime="20200521 20:19:37.060"></status>
</kw>
<kw type="for" name="${j} IN RANGE [ 5 ]">
<kw type="foritem" name="${j} = 0">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${j} == 4</arg>
</arguments>
<status status="PASS" endtime="20200521 20:19:37.062" starttime="20200521 20:19:37.061"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:19:37.074" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/151</msg>
<msg timestamp="20200521 20:19:37.585" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/151: 0.0005 seconds.</msg>
<msg timestamp="20200521 20:19:37.586" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:19:37 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:19:37.586" starttime="20200521 20:19:37.062"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${resp.status} == ${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:19:37.587" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20200521 20:19:37.587" starttime="20200521 20:19:37.586"></status>
</kw>
<status status="PASS" endtime="20200521 20:19:37.587" starttime="20200521 20:19:37.061"></status>
</kw>
<status status="PASS" endtime="20200521 20:19:37.587" starttime="20200521 20:19:37.061"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:19:37.588" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:19:37.588" starttime="20200521 20:19:37.588"></status>
</kw>
<status status="PASS" endtime="20200521 20:19:37.588" starttime="20200521 20:19:37.059"></status>
</kw>
<status status="PASS" endtime="20200521 20:19:37.588" starttime="20200521 20:19:16.997"></status>
</kw>
<kw type="foritem" name="${id} = 201">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200521 20:19:44.589" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200521 20:19:44.590" starttime="20200521 20:19:37.589"></status>
</kw>
<kw name="Test Active ONU">
<tags>
<tag>Test Active ONU</tag>
</tags>
<doc>Test Active ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${SPECIFIC_ID}</arg>
<arg>${SPECIFIC_NUM}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onu_id": ${ONU_ID},</arg>
<arg>"vendor_id": "${VEN_ID}",</arg>
<arg>"vendor_specific":"${VEN_SPEC}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 20:19:44.592" level="INFO">${JSTRING} = { "onu_id": 201, "vendor_id": "ISKT", "vendor_specific":"71E83268" }</msg>
<status status="PASS" endtime="20200521 20:19:44.592" starttime="20200521 20:19:44.591"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### active onu ${JSTRING} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:19:44.593" starttime="20200521 20:19:44.592"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 20:19:44.600" level="INFO">${payload} = {u'onu_id': 201, u'vendor_id': u'ISKT', u'vendor_specific': u'71E83268'}</msg>
<status status="PASS" endtime="20200521 20:19:44.600" starttime="20200521 20:19:44.593"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:19:44.609" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 20:19:44.626" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000646 seconds.</msg>
<msg timestamp="20200521 20:19:44.627" level="INFO">${resp} = 201
date Thu, 21 May 2020 12:19:44 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:19:44.627" starttime="20200521 20:19:44.600"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200521 20:19:44.628" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:19:44.629" starttime="20200521 20:19:44.628"></status>
</kw>
<status status="PASS" endtime="20200521 20:19:44.629" starttime="20200521 20:19:44.627"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6s</arg>
</arguments>
<msg timestamp="20200521 20:19:50.629" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20200521 20:19:50.630" starttime="20200521 20:19:44.629"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:19:50.642" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 20:19:50.652" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.00063 seconds.</msg>
<msg timestamp="20200521 20:19:50.653" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:19:50 GMT
connection Keep-Alive
content-type application/json
content-length 407


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200521 20:19:50.653" starttime="20200521 20:19:50.630"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### onu res ${resp} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:19:50.656" starttime="20200521 20:19:50.653"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200521 20:19:50.657" level="INFO">Length is 1</msg>
<msg timestamp="20200521 20:19:50.657" level="INFO">${item_count} = 1</msg>
<status status="PASS" endtime="20200521 20:19:50.657" starttime="20200521 20:19:50.656"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Onu num ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:19:50.658" starttime="20200521 20:19:50.658"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200521 20:19:50.660" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:19:50.660" starttime="20200521 20:19:50.659"></status>
</kw>
<status status="PASS" endtime="20200521 20:19:50.660" starttime="20200521 20:19:50.659"></status>
</kw>
<status status="PASS" endtime="20200521 20:19:50.660" starttime="20200521 20:19:44.590"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200521 20:19:57.661" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200521 20:19:57.661" starttime="20200521 20:19:50.660"></status>
</kw>
<kw name="Test DeActive ONU">
<tags>
<tag>Test DeActive ONU</tag>
</tags>
<doc>Test DeActive ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Deactive onu ${ONU_ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:19:57.663" starttime="20200521 20:19:57.662"></status>
</kw>
<kw type="for" name="${j} IN RANGE [ 5 ]">
<kw type="foritem" name="${j} = 0">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${j} == 4</arg>
</arguments>
<status status="PASS" endtime="20200521 20:19:57.664" starttime="20200521 20:19:57.664"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:19:57.674" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/201</msg>
<msg timestamp="20200521 20:19:58.187" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/201: 0.000505 seconds.</msg>
<msg timestamp="20200521 20:19:58.188" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:19:58 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:19:58.188" starttime="20200521 20:19:57.664"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${resp.status} == ${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:19:58.189" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20200521 20:19:58.189" starttime="20200521 20:19:58.188"></status>
</kw>
<status status="PASS" endtime="20200521 20:19:58.189" starttime="20200521 20:19:57.663"></status>
</kw>
<status status="PASS" endtime="20200521 20:19:58.189" starttime="20200521 20:19:57.663"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:19:58.190" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:19:58.190" starttime="20200521 20:19:58.190"></status>
</kw>
<status status="PASS" endtime="20200521 20:19:58.191" starttime="20200521 20:19:57.661"></status>
</kw>
<status status="PASS" endtime="20200521 20:19:58.191" starttime="20200521 20:19:37.589"></status>
</kw>
<kw type="foritem" name="${id} = 251">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200521 20:20:05.191" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200521 20:20:05.192" starttime="20200521 20:19:58.191"></status>
</kw>
<kw name="Test Active ONU">
<tags>
<tag>Test Active ONU</tag>
</tags>
<doc>Test Active ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${SPECIFIC_ID}</arg>
<arg>${SPECIFIC_NUM}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onu_id": ${ONU_ID},</arg>
<arg>"vendor_id": "${VEN_ID}",</arg>
<arg>"vendor_specific":"${VEN_SPEC}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 20:20:05.194" level="INFO">${JSTRING} = { "onu_id": 251, "vendor_id": "ISKT", "vendor_specific":"71E83268" }</msg>
<status status="PASS" endtime="20200521 20:20:05.194" starttime="20200521 20:20:05.193"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### active onu ${JSTRING} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:20:05.194" starttime="20200521 20:20:05.194"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 20:20:05.201" level="INFO">${payload} = {u'onu_id': 251, u'vendor_id': u'ISKT', u'vendor_specific': u'71E83268'}</msg>
<status status="PASS" endtime="20200521 20:20:05.201" starttime="20200521 20:20:05.195"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:20:05.212" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 20:20:05.226" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000449 seconds.</msg>
<msg timestamp="20200521 20:20:05.227" level="INFO">${resp} = 201
date Thu, 21 May 2020 12:20:05 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:20:05.227" starttime="20200521 20:20:05.201"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200521 20:20:05.229" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:20:05.229" starttime="20200521 20:20:05.229"></status>
</kw>
<status status="PASS" endtime="20200521 20:20:05.229" starttime="20200521 20:20:05.228"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6s</arg>
</arguments>
<msg timestamp="20200521 20:20:11.230" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20200521 20:20:11.230" starttime="20200521 20:20:05.230"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:20:11.238" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 20:20:11.248" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000575 seconds.</msg>
<msg timestamp="20200521 20:20:11.248" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:20:11 GMT
connection Keep-Alive
content-type application/json
content-length 407


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200521 20:20:11.248" starttime="20200521 20:20:11.230"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### onu res ${resp} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:20:11.251" starttime="20200521 20:20:11.249"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200521 20:20:11.252" level="INFO">Length is 1</msg>
<msg timestamp="20200521 20:20:11.252" level="INFO">${item_count} = 1</msg>
<status status="PASS" endtime="20200521 20:20:11.252" starttime="20200521 20:20:11.252"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Onu num ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:20:11.253" starttime="20200521 20:20:11.253"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200521 20:20:11.255" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:20:11.255" starttime="20200521 20:20:11.255"></status>
</kw>
<status status="PASS" endtime="20200521 20:20:11.255" starttime="20200521 20:20:11.254"></status>
</kw>
<status status="PASS" endtime="20200521 20:20:11.255" starttime="20200521 20:20:05.192"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200521 20:20:18.260" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200521 20:20:18.260" starttime="20200521 20:20:11.256"></status>
</kw>
<kw name="Test DeActive ONU">
<tags>
<tag>Test DeActive ONU</tag>
</tags>
<doc>Test DeActive ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Deactive onu ${ONU_ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:20:18.262" starttime="20200521 20:20:18.261"></status>
</kw>
<kw type="for" name="${j} IN RANGE [ 5 ]">
<kw type="foritem" name="${j} = 0">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${j} == 4</arg>
</arguments>
<status status="PASS" endtime="20200521 20:20:18.263" starttime="20200521 20:20:18.263"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:20:18.274" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/251</msg>
<msg timestamp="20200521 20:20:18.786" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/251: 0.00035 seconds.</msg>
<msg timestamp="20200521 20:20:18.786" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:20:18 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:20:18.787" starttime="20200521 20:20:18.264"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${resp.status} == ${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:20:18.787" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20200521 20:20:18.787" starttime="20200521 20:20:18.787"></status>
</kw>
<status status="PASS" endtime="20200521 20:20:18.787" starttime="20200521 20:20:18.263"></status>
</kw>
<status status="PASS" endtime="20200521 20:20:18.788" starttime="20200521 20:20:18.262"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:20:18.788" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:20:18.788" starttime="20200521 20:20:18.788"></status>
</kw>
<status status="PASS" endtime="20200521 20:20:18.788" starttime="20200521 20:20:18.261"></status>
</kw>
<status status="PASS" endtime="20200521 20:20:18.788" starttime="20200521 20:19:58.191"></status>
</kw>
<status status="PASS" endtime="20200521 20:20:18.788" starttime="20200521 20:18:15.213"></status>
</kw>
<kw name="Test Active ONU">
<tags>
<tag>Test Active ONU</tag>
</tags>
<doc>Test Active ONU function</doc>
<arguments>
<arg>256</arg>
<arg>${SPECIFIC_ID}</arg>
<arg>${SPECIFIC_NUM}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>NOTONUID_IN_RANGE</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onu_id": ${ONU_ID},</arg>
<arg>"vendor_id": "${VEN_ID}",</arg>
<arg>"vendor_specific":"${VEN_SPEC}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 20:20:18.789" level="INFO">${JSTRING} = { "onu_id": 256, "vendor_id": "ISKT", "vendor_specific":"71E83268" }</msg>
<status status="PASS" endtime="20200521 20:20:18.789" starttime="20200521 20:20:18.789"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### active onu ${JSTRING} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:20:18.790" starttime="20200521 20:20:18.789"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 20:20:18.796" level="INFO">${payload} = {u'onu_id': 256, u'vendor_id': u'ISKT', u'vendor_specific': u'71E83268'}</msg>
<status status="PASS" endtime="20200521 20:20:18.796" starttime="20200521 20:20:18.791"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:20:18.805" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 20:20:18.816" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000523 seconds.</msg>
<msg timestamp="20200521 20:20:18.816" level="INFO">${resp} = 500
date Thu, 21 May 2020 12:20:18 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:20:18.816" starttime="20200521 20:20:18.796"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200521 20:20:18.818" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:20:18.818" starttime="20200521 20:20:18.818"></status>
</kw>
<status status="PASS" endtime="20200521 20:20:18.818" starttime="20200521 20:20:18.817"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6s</arg>
</arguments>
<msg timestamp="20200521 20:20:24.820" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20200521 20:20:24.820" starttime="20200521 20:20:18.819"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:20:24.830" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 20:20:24.841" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000508 seconds.</msg>
<msg timestamp="20200521 20:20:24.841" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:20:24 GMT
connection Keep-Alive
content-type application/json
content-length 344


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200521 20:20:24.841" starttime="20200521 20:20:24.821"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### onu res ${resp} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:20:24.842" starttime="20200521 20:20:24.842"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200521 20:20:24.843" level="INFO">Length is 0</msg>
<msg timestamp="20200521 20:20:24.843" level="INFO">${item_count} = 0</msg>
<status status="PASS" endtime="20200521 20:20:24.843" starttime="20200521 20:20:24.843"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Onu num ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:20:24.844" starttime="20200521 20:20:24.844"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200521 20:20:24.846" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:20:24.846" starttime="20200521 20:20:24.846"></status>
</kw>
<status status="PASS" endtime="20200521 20:20:24.846" starttime="20200521 20:20:24.845"></status>
</kw>
<status status="PASS" endtime="20200521 20:20:24.846" starttime="20200521 20:20:18.788"></status>
</kw>
<kw name="Test Port Present">
<tags>
<tag>Test pon_status present</tag>
</tags>
<doc>Test Pon port present function</doc>
<arguments>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:20:24.856" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200521 20:20:24.974" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000622 seconds.</msg>
<msg timestamp="20200521 20:20:24.975" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:20:24 GMT
connection Keep-Alive
content-type application/json
content-length 2407


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:20:24.975" starttime="20200521 20:20:24.847"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:20:24.976" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:20:24.976" starttime="20200521 20:20:24.975"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 20:20:24.977" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200521 20:20:24.977" starttime="20200521 20:20:24.976"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 20:20:24.978" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 20:20:24.978" starttime="20200521 20:20:24.977"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:20:24.980" starttime="20200521 20:20:24.978"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:20:24.981" starttime="20200521 20:20:24.981"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${PORT_ENABLE}'</arg>
<arg>'Enabled'</arg>
</arguments>
<status status="PASS" endtime="20200521 20:20:24.982" starttime="20200521 20:20:24.982"></status>
</kw>
<status status="PASS" endtime="20200521 20:20:24.982" starttime="20200521 20:20:24.847"></status>
</kw>
<kw name="Enable Port">
<tags>
<tag>Enable Port</tag>
</tags>
<doc>Enable port function</doc>
<arguments>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Enable Port ${ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:20:24.984" starttime="20200521 20:20:24.983"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($ADM_UP)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 20:20:24.989" level="INFO">${payload} = {u'AdministrativeState': u'Up'}</msg>
<status status="PASS" endtime="20200521 20:20:24.989" starttime="20200521 20:20:24.984"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:20:25.001" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200521 20:20:25.022" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.002217 seconds.</msg>
<msg timestamp="20200521 20:20:25.022" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:20:25 GMT
connection Keep-Alive
content-type application/json
content-length 2407


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:20:25.023" starttime="20200521 20:20:24.989"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:20:25.023" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:20:25.024" starttime="20200521 20:20:25.023"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:20:25.034" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200521 20:20:25.051" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000529 seconds.</msg>
<msg timestamp="20200521 20:20:25.051" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:20:25 GMT
connection Keep-Alive
content-type application/json
content-length 2407


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:20:25.051" starttime="20200521 20:20:25.024"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:20:25.052" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:20:25.052" starttime="20200521 20:20:25.052"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['AdministrativeState']}</arg>
</arguments>
<assign>
<var>${ADM_STAT}</var>
</assign>
<msg timestamp="20200521 20:20:25.053" level="INFO">${ADM_STAT} = Up</msg>
<status status="PASS" endtime="20200521 20:20:25.053" starttime="20200521 20:20:25.053"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${ADM_STAT}'</arg>
<arg>'Up'</arg>
</arguments>
<status status="PASS" endtime="20200521 20:20:25.054" starttime="20200521 20:20:25.054"></status>
</kw>
<status status="PASS" endtime="20200521 20:20:25.054" starttime="20200521 20:20:24.982"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200521 20:20:28.055" level="INFO">Slept 3 seconds</msg>
<status status="PASS" endtime="20200521 20:20:28.055" starttime="20200521 20:20:25.055"></status>
</kw>
<kw name="Test Active ONU">
<tags>
<tag>Test Active ONU</tag>
</tags>
<doc>Test Active ONU function</doc>
<arguments>
<arg>1</arg>
<arg>${SPECIFIC_ID}</arg>
<arg>${SPECIFIC_NUM}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onu_id": ${ONU_ID},</arg>
<arg>"vendor_id": "${VEN_ID}",</arg>
<arg>"vendor_specific":"${VEN_SPEC}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 20:20:28.057" level="INFO">${JSTRING} = { "onu_id": 1, "vendor_id": "ISKT", "vendor_specific":"71E83268" }</msg>
<status status="PASS" endtime="20200521 20:20:28.057" starttime="20200521 20:20:28.056"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### active onu ${JSTRING} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:20:28.058" starttime="20200521 20:20:28.057"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 20:20:28.063" level="INFO">${payload} = {u'onu_id': 1, u'vendor_id': u'ISKT', u'vendor_specific': u'71E83268'}</msg>
<status status="PASS" endtime="20200521 20:20:28.064" starttime="20200521 20:20:28.058"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:20:28.073" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 20:20:28.089" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000493 seconds.</msg>
<msg timestamp="20200521 20:20:28.090" level="INFO">${resp} = 201
date Thu, 21 May 2020 12:20:28 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:20:28.090" starttime="20200521 20:20:28.064"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200521 20:20:28.092" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:20:28.092" starttime="20200521 20:20:28.091"></status>
</kw>
<status status="PASS" endtime="20200521 20:20:28.092" starttime="20200521 20:20:28.090"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6s</arg>
</arguments>
<msg timestamp="20200521 20:20:34.093" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20200521 20:20:34.093" starttime="20200521 20:20:28.092"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:20:34.104" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 20:20:34.114" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000526 seconds.</msg>
<msg timestamp="20200521 20:20:34.115" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:20:34 GMT
connection Keep-Alive
content-type application/json
content-length 405


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200521 20:20:34.115" starttime="20200521 20:20:34.093"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### onu res ${resp} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:20:34.118" starttime="20200521 20:20:34.116"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200521 20:20:34.119" level="INFO">Length is 1</msg>
<msg timestamp="20200521 20:20:34.119" level="INFO">${item_count} = 1</msg>
<status status="PASS" endtime="20200521 20:20:34.119" starttime="20200521 20:20:34.118"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Onu num ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:20:34.120" starttime="20200521 20:20:34.119"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200521 20:20:34.121" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:20:34.121" starttime="20200521 20:20:34.121"></status>
</kw>
<status status="PASS" endtime="20200521 20:20:34.122" starttime="20200521 20:20:34.120"></status>
</kw>
<status status="PASS" endtime="20200521 20:20:34.122" starttime="20200521 20:20:28.056"></status>
</kw>
<kw name="Disable Port">
<tags>
<tag>Enable Port</tag>
</tags>
<doc>Enable port function</doc>
<arguments>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($ADM_DOWN)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 20:20:34.127" level="INFO">${payload} = {u'AdministrativeState': u'Down'}</msg>
<status status="PASS" endtime="20200521 20:20:34.127" starttime="20200521 20:20:34.123"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:20:34.140" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200521 20:20:34.160" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000638 seconds.</msg>
<msg timestamp="20200521 20:20:34.160" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:20:34 GMT
connection Keep-Alive
content-type application/json
content-length 2398


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:20:34.161" starttime="20200521 20:20:34.128"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:20:34.162" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:20:34.162" starttime="20200521 20:20:34.161"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:20:34.173" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200521 20:20:34.189" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000606 seconds.</msg>
<msg timestamp="20200521 20:20:34.190" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:20:34 GMT
connection Keep-Alive
content-type application/json
content-length 2398


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:20:34.190" starttime="20200521 20:20:34.162"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:20:34.191" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:20:34.191" starttime="20200521 20:20:34.190"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['AdministrativeState']}</arg>
</arguments>
<assign>
<var>${ADM_STAT}</var>
</assign>
<msg timestamp="20200521 20:20:34.192" level="INFO">${ADM_STAT} = Down</msg>
<status status="PASS" endtime="20200521 20:20:34.192" starttime="20200521 20:20:34.191"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${ADM_STAT}'</arg>
<arg>'Down'</arg>
</arguments>
<status status="PASS" endtime="20200521 20:20:34.193" starttime="20200521 20:20:34.192"></status>
</kw>
<status status="PASS" endtime="20200521 20:20:34.193" starttime="20200521 20:20:34.122"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20200521 20:20:36.194" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20200521 20:20:36.194" starttime="20200521 20:20:34.193"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:20:36.204" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 20:20:36.214" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000634 seconds.</msg>
<msg timestamp="20200521 20:20:36.215" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:20:36 GMT
connection Keep-Alive
content-type application/json
content-length 344


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200521 20:20:36.215" starttime="20200521 20:20:36.194"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200521 20:20:36.215" level="INFO">Length is 0</msg>
<msg timestamp="20200521 20:20:36.216" level="INFO">${item_count} = 0</msg>
<status status="PASS" endtime="20200521 20:20:36.216" starttime="20200521 20:20:36.215"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200521 20:20:36.217" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:20:36.217" starttime="20200521 20:20:36.216"></status>
</kw>
<kw name="Enable Port">
<tags>
<tag>Enable Port</tag>
</tags>
<doc>Enable port function</doc>
<arguments>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Enable Port ${ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:20:36.218" starttime="20200521 20:20:36.218"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($ADM_UP)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 20:20:36.223" level="INFO">${payload} = {u'AdministrativeState': u'Up'}</msg>
<status status="PASS" endtime="20200521 20:20:36.224" starttime="20200521 20:20:36.218"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:20:36.233" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200521 20:20:36.619" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000478 seconds.</msg>
<msg timestamp="20200521 20:20:36.620" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:20:36 GMT
connection Keep-Alive
content-type application/json
content-length 2396


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:20:36.620" starttime="20200521 20:20:36.224"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:20:36.621" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:20:36.621" starttime="20200521 20:20:36.620"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:20:36.631" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200521 20:20:36.655" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000486 seconds.</msg>
<msg timestamp="20200521 20:20:36.656" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:20:36 GMT
connection Keep-Alive
content-type application/json
content-length 2396


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:20:36.656" starttime="20200521 20:20:36.621"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:20:36.657" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:20:36.657" starttime="20200521 20:20:36.656"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['AdministrativeState']}</arg>
</arguments>
<assign>
<var>${ADM_STAT}</var>
</assign>
<msg timestamp="20200521 20:20:36.658" level="INFO">${ADM_STAT} = Up</msg>
<status status="PASS" endtime="20200521 20:20:36.658" starttime="20200521 20:20:36.657"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${ADM_STAT}'</arg>
<arg>'Up'</arg>
</arguments>
<status status="PASS" endtime="20200521 20:20:36.659" starttime="20200521 20:20:36.659"></status>
</kw>
<status status="PASS" endtime="20200521 20:20:36.659" starttime="20200521 20:20:36.217"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200521 20:20:46.660" level="INFO">Slept 10 seconds</msg>
<status status="PASS" endtime="20200521 20:20:46.660" starttime="20200521 20:20:36.659"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:20:46.669" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200521 20:20:46.680" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000476 seconds.</msg>
<msg timestamp="20200521 20:20:46.681" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:20:46 GMT
connection Keep-Alive
content-type application/json
content-length 405


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200521 20:20:46.681" starttime="20200521 20:20:46.660"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200521 20:20:46.682" level="INFO">Length is 1</msg>
<msg timestamp="20200521 20:20:46.682" level="INFO">${item_count} = 1</msg>
<status status="PASS" endtime="20200521 20:20:46.682" starttime="20200521 20:20:46.681"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200521 20:20:46.683" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:20:46.683" starttime="20200521 20:20:46.682"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200521 20:20:51.684" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20200521 20:20:51.684" starttime="20200521 20:20:46.683"></status>
</kw>
<status status="PASS" endtime="20200521 20:20:51.684" starttime="20200521 20:18:15.211"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200521 20:20:51.693" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200521 20:20:51.704" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000446 seconds.</msg>
<msg timestamp="20200521 20:20:51.704" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200521 20:20:51.705" starttime="20200521 20:20:51.685"></status>
</kw>
<status status="PASS" endtime="20200521 20:20:51.705" starttime="20200521 20:20:51.684"></status>
</kw>
<doc>Test ONU Range</doc>
<tags>
<tag>Test ONU Rnage test</tag>
</tags>
<status status="PASS" endtime="20200521 20:20:51.705" critical="yes" starttime="20200521 20:18:15.183"></status>
</test>
<test id="s1-s1-t3" name="Verify Restful API for flow add">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200521 20:20:51.713" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200521 20:20:51.726" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000742 seconds.</msg>
<msg timestamp="20200521 20:20:51.727" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200521 20:20:51.727" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200521 20:20:51.727" starttime="20200521 20:20:51.707"></status>
</kw>
<status status="PASS" endtime="20200521 20:20:51.727" starttime="20200521 20:20:51.706"></status>
</kw>
<kw name="Test US DS Flow Add">
<tags>
<tag>US DS Flow Add/Remove</tag>
</tags>
<doc>Flow Add/Remove</doc>
<kw type="for" name="${flow_id} IN RANGE [ 0 | 2047 | 500 ]">
<kw type="foritem" name="${flow_id} = 0">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 20:20:52.729" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 20:20:52.729" starttime="20200521 20:20:51.728"></status>
</kw>
<kw name="Test Flow Add">
<tags>
<tag>UP/DOWN stream flow add</tag>
</tags>
<doc>Test Flow Add</doc>
<arguments>
<arg>1</arg>
<arg>${flow_id}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PON_ID} - ${1}</arg>
</arguments>
<assign>
<var>${PON_ID}</var>
</assign>
<msg timestamp="20200521 20:20:52.731" level="INFO">${PON_ID} = 0</msg>
<status status="PASS" endtime="20200521 20:20:52.731" starttime="20200521 20:20:52.730"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024,</arg>
<arg>"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":"BCMOLT_ACTION_CMD_ID_ADD_OUTER_TAG",</arg>
<arg>"ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,"EtherType":0,"IpProto":0,"SrcPort":0,</arg>
<arg>"DstPort":0},"ClassVal":[{"OVid":20,"IVid":0,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 20:20:52.732" level="INFO">${JSTRING} = { "onuId":1,"FlowId":0,"PortId":0,"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024, "Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":...</msg>
<status status="PASS" endtime="20200521 20:20:52.732" starttime="20200521 20:20:52.731"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 20:20:52.737" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'single_tag', u'GemportId': 1024, u'FlowId': 0, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 20, u'IPbits': 0, u'IVid': 0, u'O...</msg>
<status status="PASS" endtime="20200521 20:20:52.737" starttime="20200521 20:20:52.732"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:20:52.747" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200521 20:20:52.764" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000485 seconds.</msg>
<msg timestamp="20200521 20:20:52.765" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:20:52 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:20:52.765" starttime="20200521 20:20:52.737"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:20:52.766" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:20:52.766" starttime="20200521 20:20:52.766"></status>
</kw>
<status status="PASS" endtime="20200521 20:20:52.766" starttime="20200521 20:20:52.765"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"downstream","PktTagType":"double_tag",</arg>
<arg>"GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOLT_ACTION_ID_O_VID",</arg>
<arg>"ActionCmd":"BCMOLT_ACTION_CMD_ID_REMOVE_OUTER_TAG","ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,</arg>
<arg>"EtherType":0,"IpProto":0,"SrcPort":0,"DstPort":0},</arg>
<arg>"ClassVal":[{"OVid":10,"IVid":20,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0</arg>
<arg>}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 20:20:52.767" level="INFO">${JSTRING} = { "onuId":1,"FlowId":0,"PortId":0,"NniId":0,"FlowType":"downstream","PktTagType":"double_tag", "GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOL...</msg>
<status status="PASS" endtime="20200521 20:20:52.767" starttime="20200521 20:20:52.767"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 20:20:52.773" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'double_tag', u'GemportId': 1024, u'FlowId': 0, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 10, u'IPbits': 0, u'IVid': 20, u'...</msg>
<status status="PASS" endtime="20200521 20:20:52.773" starttime="20200521 20:20:52.768"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:20:52.782" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200521 20:20:52.791" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000513 seconds.</msg>
<msg timestamp="20200521 20:20:52.792" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:20:52 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:20:52.792" starttime="20200521 20:20:52.773"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:20:52.793" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:20:52.793" starttime="20200521 20:20:52.793"></status>
</kw>
<status status="PASS" endtime="20200521 20:20:52.793" starttime="20200521 20:20:52.792"></status>
</kw>
<status status="PASS" endtime="20200521 20:20:52.794" starttime="20200521 20:20:52.729"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 20:20:53.794" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 20:20:53.794" starttime="20200521 20:20:52.794"></status>
</kw>
<kw name="Test Flow Del">
<tags>
<tag>UP/DOWN stream flow del</tag>
</tags>
<doc>Test Flow Del</doc>
<arguments>
<arg>${flow_id}</arg>
</arguments>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_upstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:20:53.805" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/0_upstream</msg>
<msg timestamp="20200521 20:20:53.816" level="INFO">Response Time to /redfish/v1/Olt/Flow/0_upstream: 0.000470999999999 seconds.</msg>
<msg timestamp="20200521 20:20:53.816" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:20:53 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:20:53.817" starttime="20200521 20:20:53.795"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:20:53.818" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:20:53.818" starttime="20200521 20:20:53.817"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_downstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:20:53.827" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/0_downstream</msg>
<msg timestamp="20200521 20:20:53.845" level="INFO">Response Time to /redfish/v1/Olt/Flow/0_downstream: 0.000438 seconds.</msg>
<msg timestamp="20200521 20:20:53.846" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:20:53 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:20:53.846" starttime="20200521 20:20:53.818"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:20:53.847" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:20:53.847" starttime="20200521 20:20:53.846"></status>
</kw>
<status status="PASS" endtime="20200521 20:20:53.847" starttime="20200521 20:20:53.795"></status>
</kw>
<status status="PASS" endtime="20200521 20:20:53.847" starttime="20200521 20:20:51.728"></status>
</kw>
<kw type="foritem" name="${flow_id} = 500">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 20:20:54.848" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 20:20:54.848" starttime="20200521 20:20:53.848"></status>
</kw>
<kw name="Test Flow Add">
<tags>
<tag>UP/DOWN stream flow add</tag>
</tags>
<doc>Test Flow Add</doc>
<arguments>
<arg>1</arg>
<arg>${flow_id}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PON_ID} - ${1}</arg>
</arguments>
<assign>
<var>${PON_ID}</var>
</assign>
<msg timestamp="20200521 20:20:54.850" level="INFO">${PON_ID} = 0</msg>
<status status="PASS" endtime="20200521 20:20:54.850" starttime="20200521 20:20:54.849"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024,</arg>
<arg>"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":"BCMOLT_ACTION_CMD_ID_ADD_OUTER_TAG",</arg>
<arg>"ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,"EtherType":0,"IpProto":0,"SrcPort":0,</arg>
<arg>"DstPort":0},"ClassVal":[{"OVid":20,"IVid":0,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 20:20:54.851" level="INFO">${JSTRING} = { "onuId":1,"FlowId":500,"PortId":0,"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024, "Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd...</msg>
<status status="PASS" endtime="20200521 20:20:54.851" starttime="20200521 20:20:54.850"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 20:20:54.857" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'single_tag', u'GemportId': 1024, u'FlowId': 500, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 20, u'IPbits': 0, u'IVid': 0, u...</msg>
<status status="PASS" endtime="20200521 20:20:54.857" starttime="20200521 20:20:54.851"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:20:54.866" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200521 20:20:54.883" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000496999999999 seconds.</msg>
<msg timestamp="20200521 20:20:54.883" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:20:54 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:20:54.883" starttime="20200521 20:20:54.857"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:20:54.885" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:20:54.885" starttime="20200521 20:20:54.885"></status>
</kw>
<status status="PASS" endtime="20200521 20:20:54.885" starttime="20200521 20:20:54.884"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"downstream","PktTagType":"double_tag",</arg>
<arg>"GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOLT_ACTION_ID_O_VID",</arg>
<arg>"ActionCmd":"BCMOLT_ACTION_CMD_ID_REMOVE_OUTER_TAG","ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,</arg>
<arg>"EtherType":0,"IpProto":0,"SrcPort":0,"DstPort":0},</arg>
<arg>"ClassVal":[{"OVid":10,"IVid":20,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0</arg>
<arg>}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 20:20:54.886" level="INFO">${JSTRING} = { "onuId":1,"FlowId":500,"PortId":0,"NniId":0,"FlowType":"downstream","PktTagType":"double_tag", "GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCM...</msg>
<status status="PASS" endtime="20200521 20:20:54.886" starttime="20200521 20:20:54.886"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 20:20:54.892" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'double_tag', u'GemportId': 1024, u'FlowId': 500, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 10, u'IPbits': 0, u'IVid': 20, ...</msg>
<status status="PASS" endtime="20200521 20:20:54.892" starttime="20200521 20:20:54.887"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:20:54.902" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200521 20:20:54.914" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000464999999999 seconds.</msg>
<msg timestamp="20200521 20:20:54.915" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:20:54 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:20:54.915" starttime="20200521 20:20:54.892"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:20:54.916" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:20:54.917" starttime="20200521 20:20:54.916"></status>
</kw>
<status status="PASS" endtime="20200521 20:20:54.917" starttime="20200521 20:20:54.915"></status>
</kw>
<status status="PASS" endtime="20200521 20:20:54.917" starttime="20200521 20:20:54.849"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 20:20:55.918" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 20:20:55.918" starttime="20200521 20:20:54.917"></status>
</kw>
<kw name="Test Flow Del">
<tags>
<tag>UP/DOWN stream flow del</tag>
</tags>
<doc>Test Flow Del</doc>
<arguments>
<arg>${flow_id}</arg>
</arguments>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_upstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:20:55.928" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/500_upstream</msg>
<msg timestamp="20200521 20:20:55.939" level="INFO">Response Time to /redfish/v1/Olt/Flow/500_upstream: 0.000687 seconds.</msg>
<msg timestamp="20200521 20:20:55.939" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:20:55 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:20:55.940" starttime="20200521 20:20:55.919"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:20:55.941" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:20:55.941" starttime="20200521 20:20:55.940"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_downstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:20:55.952" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/500_downstream</msg>
<msg timestamp="20200521 20:20:55.975" level="INFO">Response Time to /redfish/v1/Olt/Flow/500_downstream: 0.000495 seconds.</msg>
<msg timestamp="20200521 20:20:55.976" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:20:55 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:20:55.976" starttime="20200521 20:20:55.941"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:20:55.977" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:20:55.978" starttime="20200521 20:20:55.977"></status>
</kw>
<status status="PASS" endtime="20200521 20:20:55.978" starttime="20200521 20:20:55.918"></status>
</kw>
<status status="PASS" endtime="20200521 20:20:55.978" starttime="20200521 20:20:53.847"></status>
</kw>
<kw type="foritem" name="${flow_id} = 1000">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 20:20:56.979" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 20:20:56.979" starttime="20200521 20:20:55.978"></status>
</kw>
<kw name="Test Flow Add">
<tags>
<tag>UP/DOWN stream flow add</tag>
</tags>
<doc>Test Flow Add</doc>
<arguments>
<arg>1</arg>
<arg>${flow_id}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PON_ID} - ${1}</arg>
</arguments>
<assign>
<var>${PON_ID}</var>
</assign>
<msg timestamp="20200521 20:20:56.981" level="INFO">${PON_ID} = 0</msg>
<status status="PASS" endtime="20200521 20:20:56.981" starttime="20200521 20:20:56.981"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024,</arg>
<arg>"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":"BCMOLT_ACTION_CMD_ID_ADD_OUTER_TAG",</arg>
<arg>"ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,"EtherType":0,"IpProto":0,"SrcPort":0,</arg>
<arg>"DstPort":0},"ClassVal":[{"OVid":20,"IVid":0,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 20:20:56.982" level="INFO">${JSTRING} = { "onuId":1,"FlowId":1000,"PortId":0,"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024, "Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCm...</msg>
<status status="PASS" endtime="20200521 20:20:56.982" starttime="20200521 20:20:56.981"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 20:20:56.989" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'single_tag', u'GemportId': 1024, u'FlowId': 1000, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 20, u'IPbits': 0, u'IVid': 0, ...</msg>
<status status="PASS" endtime="20200521 20:20:56.989" starttime="20200521 20:20:56.983"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:20:57.001" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200521 20:20:57.041" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000583 seconds.</msg>
<msg timestamp="20200521 20:20:57.042" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:20:57 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:20:57.042" starttime="20200521 20:20:56.989"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:20:57.044" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:20:57.044" starttime="20200521 20:20:57.043"></status>
</kw>
<status status="PASS" endtime="20200521 20:20:57.044" starttime="20200521 20:20:57.043"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"downstream","PktTagType":"double_tag",</arg>
<arg>"GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOLT_ACTION_ID_O_VID",</arg>
<arg>"ActionCmd":"BCMOLT_ACTION_CMD_ID_REMOVE_OUTER_TAG","ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,</arg>
<arg>"EtherType":0,"IpProto":0,"SrcPort":0,"DstPort":0},</arg>
<arg>"ClassVal":[{"OVid":10,"IVid":20,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0</arg>
<arg>}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 20:20:57.045" level="INFO">${JSTRING} = { "onuId":1,"FlowId":1000,"PortId":0,"NniId":0,"FlowType":"downstream","PktTagType":"double_tag", "GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BC...</msg>
<status status="PASS" endtime="20200521 20:20:57.045" starttime="20200521 20:20:57.044"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 20:20:57.051" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'double_tag', u'GemportId': 1024, u'FlowId': 1000, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 10, u'IPbits': 0, u'IVid': 20,...</msg>
<status status="PASS" endtime="20200521 20:20:57.051" starttime="20200521 20:20:57.045"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:20:57.060" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200521 20:20:57.072" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000454 seconds.</msg>
<msg timestamp="20200521 20:20:57.073" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:20:57 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:20:57.073" starttime="20200521 20:20:57.051"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:20:57.075" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:20:57.075" starttime="20200521 20:20:57.074"></status>
</kw>
<status status="PASS" endtime="20200521 20:20:57.075" starttime="20200521 20:20:57.073"></status>
</kw>
<status status="PASS" endtime="20200521 20:20:57.075" starttime="20200521 20:20:56.979"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 20:20:58.076" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 20:20:58.076" starttime="20200521 20:20:57.075"></status>
</kw>
<kw name="Test Flow Del">
<tags>
<tag>UP/DOWN stream flow del</tag>
</tags>
<doc>Test Flow Del</doc>
<arguments>
<arg>${flow_id}</arg>
</arguments>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_upstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:20:58.086" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/1000_upstream</msg>
<msg timestamp="20200521 20:20:58.096" level="INFO">Response Time to /redfish/v1/Olt/Flow/1000_upstream: 0.000506 seconds.</msg>
<msg timestamp="20200521 20:20:58.096" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:20:58 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:20:58.097" starttime="20200521 20:20:58.077"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:20:58.098" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:20:58.098" starttime="20200521 20:20:58.097"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_downstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:20:58.107" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/1000_downstream</msg>
<msg timestamp="20200521 20:20:58.129" level="INFO">Response Time to /redfish/v1/Olt/Flow/1000_downstream: 0.000452 seconds.</msg>
<msg timestamp="20200521 20:20:58.129" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:20:58 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:20:58.129" starttime="20200521 20:20:58.098"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:20:58.130" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:20:58.130" starttime="20200521 20:20:58.130"></status>
</kw>
<status status="PASS" endtime="20200521 20:20:58.130" starttime="20200521 20:20:58.076"></status>
</kw>
<status status="PASS" endtime="20200521 20:20:58.131" starttime="20200521 20:20:55.978"></status>
</kw>
<kw type="foritem" name="${flow_id} = 1500">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 20:20:59.131" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 20:20:59.132" starttime="20200521 20:20:58.131"></status>
</kw>
<kw name="Test Flow Add">
<tags>
<tag>UP/DOWN stream flow add</tag>
</tags>
<doc>Test Flow Add</doc>
<arguments>
<arg>1</arg>
<arg>${flow_id}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PON_ID} - ${1}</arg>
</arguments>
<assign>
<var>${PON_ID}</var>
</assign>
<msg timestamp="20200521 20:20:59.133" level="INFO">${PON_ID} = 0</msg>
<status status="PASS" endtime="20200521 20:20:59.133" starttime="20200521 20:20:59.133"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024,</arg>
<arg>"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":"BCMOLT_ACTION_CMD_ID_ADD_OUTER_TAG",</arg>
<arg>"ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,"EtherType":0,"IpProto":0,"SrcPort":0,</arg>
<arg>"DstPort":0},"ClassVal":[{"OVid":20,"IVid":0,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 20:20:59.134" level="INFO">${JSTRING} = { "onuId":1,"FlowId":1500,"PortId":0,"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024, "Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCm...</msg>
<status status="PASS" endtime="20200521 20:20:59.134" starttime="20200521 20:20:59.133"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 20:20:59.139" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'single_tag', u'GemportId': 1024, u'FlowId': 1500, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 20, u'IPbits': 0, u'IVid': 0, ...</msg>
<status status="PASS" endtime="20200521 20:20:59.139" starttime="20200521 20:20:59.134"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:20:59.149" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200521 20:20:59.167" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000495 seconds.</msg>
<msg timestamp="20200521 20:20:59.168" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:20:59 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:20:59.168" starttime="20200521 20:20:59.139"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:20:59.170" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:20:59.170" starttime="20200521 20:20:59.170"></status>
</kw>
<status status="PASS" endtime="20200521 20:20:59.170" starttime="20200521 20:20:59.169"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"downstream","PktTagType":"double_tag",</arg>
<arg>"GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOLT_ACTION_ID_O_VID",</arg>
<arg>"ActionCmd":"BCMOLT_ACTION_CMD_ID_REMOVE_OUTER_TAG","ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,</arg>
<arg>"EtherType":0,"IpProto":0,"SrcPort":0,"DstPort":0},</arg>
<arg>"ClassVal":[{"OVid":10,"IVid":20,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0</arg>
<arg>}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 20:20:59.171" level="INFO">${JSTRING} = { "onuId":1,"FlowId":1500,"PortId":0,"NniId":0,"FlowType":"downstream","PktTagType":"double_tag", "GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BC...</msg>
<status status="PASS" endtime="20200521 20:20:59.171" starttime="20200521 20:20:59.171"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 20:20:59.177" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'double_tag', u'GemportId': 1024, u'FlowId': 1500, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 10, u'IPbits': 0, u'IVid': 20,...</msg>
<status status="PASS" endtime="20200521 20:20:59.177" starttime="20200521 20:20:59.171"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:20:59.189" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200521 20:20:59.201" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000490999999999 seconds.</msg>
<msg timestamp="20200521 20:20:59.202" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:20:59 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:20:59.202" starttime="20200521 20:20:59.178"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:20:59.203" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:20:59.203" starttime="20200521 20:20:59.203"></status>
</kw>
<status status="PASS" endtime="20200521 20:20:59.203" starttime="20200521 20:20:59.202"></status>
</kw>
<status status="PASS" endtime="20200521 20:20:59.203" starttime="20200521 20:20:59.132"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 20:21:00.204" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 20:21:00.204" starttime="20200521 20:20:59.204"></status>
</kw>
<kw name="Test Flow Del">
<tags>
<tag>UP/DOWN stream flow del</tag>
</tags>
<doc>Test Flow Del</doc>
<arguments>
<arg>${flow_id}</arg>
</arguments>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_upstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:00.215" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/1500_upstream</msg>
<msg timestamp="20200521 20:21:00.225" level="INFO">Response Time to /redfish/v1/Olt/Flow/1500_upstream: 0.000416 seconds.</msg>
<msg timestamp="20200521 20:21:00.226" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:00 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:00.226" starttime="20200521 20:21:00.205"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:21:00.227" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:21:00.227" starttime="20200521 20:21:00.227"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_downstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:00.236" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/1500_downstream</msg>
<msg timestamp="20200521 20:21:00.254" level="INFO">Response Time to /redfish/v1/Olt/Flow/1500_downstream: 0.000487000000001 seconds.</msg>
<msg timestamp="20200521 20:21:00.254" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:00 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:00.254" starttime="20200521 20:21:00.227"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:21:00.255" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:21:00.255" starttime="20200521 20:21:00.255"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:00.255" starttime="20200521 20:21:00.205"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:00.255" starttime="20200521 20:20:58.131"></status>
</kw>
<kw type="foritem" name="${flow_id} = 2000">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 20:21:01.256" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 20:21:01.256" starttime="20200521 20:21:00.256"></status>
</kw>
<kw name="Test Flow Add">
<tags>
<tag>UP/DOWN stream flow add</tag>
</tags>
<doc>Test Flow Add</doc>
<arguments>
<arg>1</arg>
<arg>${flow_id}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PON_ID} - ${1}</arg>
</arguments>
<assign>
<var>${PON_ID}</var>
</assign>
<msg timestamp="20200521 20:21:01.258" level="INFO">${PON_ID} = 0</msg>
<status status="PASS" endtime="20200521 20:21:01.258" starttime="20200521 20:21:01.258"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024,</arg>
<arg>"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":"BCMOLT_ACTION_CMD_ID_ADD_OUTER_TAG",</arg>
<arg>"ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,"EtherType":0,"IpProto":0,"SrcPort":0,</arg>
<arg>"DstPort":0},"ClassVal":[{"OVid":20,"IVid":0,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 20:21:01.259" level="INFO">${JSTRING} = { "onuId":1,"FlowId":2000,"PortId":0,"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024, "Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCm...</msg>
<status status="PASS" endtime="20200521 20:21:01.259" starttime="20200521 20:21:01.258"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 20:21:01.264" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'single_tag', u'GemportId': 1024, u'FlowId': 2000, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 20, u'IPbits': 0, u'IVid': 0, ...</msg>
<status status="PASS" endtime="20200521 20:21:01.265" starttime="20200521 20:21:01.259"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:01.274" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200521 20:21:01.290" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000479 seconds.</msg>
<msg timestamp="20200521 20:21:01.291" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:01 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:01.291" starttime="20200521 20:21:01.265"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:21:01.293" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:21:01.293" starttime="20200521 20:21:01.292"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:01.293" starttime="20200521 20:21:01.291"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"downstream","PktTagType":"double_tag",</arg>
<arg>"GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOLT_ACTION_ID_O_VID",</arg>
<arg>"ActionCmd":"BCMOLT_ACTION_CMD_ID_REMOVE_OUTER_TAG","ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,</arg>
<arg>"EtherType":0,"IpProto":0,"SrcPort":0,"DstPort":0},</arg>
<arg>"ClassVal":[{"OVid":10,"IVid":20,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0</arg>
<arg>}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 20:21:01.294" level="INFO">${JSTRING} = { "onuId":1,"FlowId":2000,"PortId":0,"NniId":0,"FlowType":"downstream","PktTagType":"double_tag", "GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BC...</msg>
<status status="PASS" endtime="20200521 20:21:01.294" starttime="20200521 20:21:01.293"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 20:21:01.299" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'double_tag', u'GemportId': 1024, u'FlowId': 2000, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 10, u'IPbits': 0, u'IVid': 20,...</msg>
<status status="PASS" endtime="20200521 20:21:01.299" starttime="20200521 20:21:01.294"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:01.310" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200521 20:21:01.321" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000461 seconds.</msg>
<msg timestamp="20200521 20:21:01.322" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:01 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:01.322" starttime="20200521 20:21:01.299"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:21:01.324" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:21:01.324" starttime="20200521 20:21:01.324"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:01.324" starttime="20200521 20:21:01.323"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:01.324" starttime="20200521 20:21:01.257"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200521 20:21:02.325" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200521 20:21:02.325" starttime="20200521 20:21:01.325"></status>
</kw>
<kw name="Test Flow Del">
<tags>
<tag>UP/DOWN stream flow del</tag>
</tags>
<doc>Test Flow Del</doc>
<arguments>
<arg>${flow_id}</arg>
</arguments>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_upstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:02.336" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/2000_upstream</msg>
<msg timestamp="20200521 20:21:02.346" level="INFO">Response Time to /redfish/v1/Olt/Flow/2000_upstream: 0.000453 seconds.</msg>
<msg timestamp="20200521 20:21:02.346" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:02 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:02.347" starttime="20200521 20:21:02.326"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:21:02.348" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:21:02.348" starttime="20200521 20:21:02.347"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_downstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:02.358" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/2000_downstream</msg>
<msg timestamp="20200521 20:21:02.376" level="INFO">Response Time to /redfish/v1/Olt/Flow/2000_downstream: 0.000491999999999 seconds.</msg>
<msg timestamp="20200521 20:21:02.377" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:02 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:02.377" starttime="20200521 20:21:02.348"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:21:02.378" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:21:02.378" starttime="20200521 20:21:02.377"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:02.378" starttime="20200521 20:21:02.326"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:02.378" starttime="20200521 20:21:00.256"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:02.378" starttime="20200521 20:20:51.728"></status>
</kw>
<kw name="Test Flow Add">
<tags>
<tag>UP/DOWN stream flow add</tag>
</tags>
<doc>Test Flow Add</doc>
<arguments>
<arg>1</arg>
<arg>2048</arg>
<arg>${PON_PORT_ID}</arg>
<arg>NOTONUID_IN_RANGE</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PON_ID} - ${1}</arg>
</arguments>
<assign>
<var>${PON_ID}</var>
</assign>
<msg timestamp="20200521 20:21:02.380" level="INFO">${PON_ID} = 0</msg>
<status status="PASS" endtime="20200521 20:21:02.380" starttime="20200521 20:21:02.379"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024,</arg>
<arg>"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":"BCMOLT_ACTION_CMD_ID_ADD_OUTER_TAG",</arg>
<arg>"ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,"EtherType":0,"IpProto":0,"SrcPort":0,</arg>
<arg>"DstPort":0},"ClassVal":[{"OVid":20,"IVid":0,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 20:21:02.381" level="INFO">${JSTRING} = { "onuId":1,"FlowId":2048,"PortId":0,"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024, "Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCm...</msg>
<status status="PASS" endtime="20200521 20:21:02.381" starttime="20200521 20:21:02.380"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 20:21:02.387" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'single_tag', u'GemportId': 1024, u'FlowId': 2048, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 20, u'IPbits': 0, u'IVid': 0, ...</msg>
<status status="PASS" endtime="20200521 20:21:02.387" starttime="20200521 20:21:02.381"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:02.398" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200521 20:21:02.406" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000483 seconds.</msg>
<msg timestamp="20200521 20:21:02.406" level="INFO">${resp} = 500
date Thu, 21 May 2020 12:21:02 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:02.406" starttime="20200521 20:21:02.387"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:21:02.408" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:21:02.408" starttime="20200521 20:21:02.408"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:02.408" starttime="20200521 20:21:02.407"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"downstream","PktTagType":"double_tag",</arg>
<arg>"GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOLT_ACTION_ID_O_VID",</arg>
<arg>"ActionCmd":"BCMOLT_ACTION_CMD_ID_REMOVE_OUTER_TAG","ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,</arg>
<arg>"EtherType":0,"IpProto":0,"SrcPort":0,"DstPort":0},</arg>
<arg>"ClassVal":[{"OVid":10,"IVid":20,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0</arg>
<arg>}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 20:21:02.410" level="INFO">${JSTRING} = { "onuId":1,"FlowId":2048,"PortId":0,"NniId":0,"FlowType":"downstream","PktTagType":"double_tag", "GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BC...</msg>
<status status="PASS" endtime="20200521 20:21:02.410" starttime="20200521 20:21:02.409"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 20:21:02.416" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'double_tag', u'GemportId': 1024, u'FlowId': 2048, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 10, u'IPbits': 0, u'IVid': 20,...</msg>
<status status="PASS" endtime="20200521 20:21:02.416" starttime="20200521 20:21:02.411"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:02.457" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200521 20:21:02.468" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000579 seconds.</msg>
<msg timestamp="20200521 20:21:02.468" level="INFO">${resp} = 500
date Thu, 21 May 2020 12:21:02 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:02.468" starttime="20200521 20:21:02.416"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:21:02.470" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:21:02.470" starttime="20200521 20:21:02.470"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:02.470" starttime="20200521 20:21:02.469"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:02.470" starttime="20200521 20:21:02.378"></status>
</kw>
<kw name="Test Flow Add">
<tags>
<tag>UP/DOWN stream flow add</tag>
</tags>
<doc>Test Flow Add</doc>
<arguments>
<arg>1</arg>
<arg>16</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PON_ID} - ${1}</arg>
</arguments>
<assign>
<var>${PON_ID}</var>
</assign>
<msg timestamp="20200521 20:21:02.472" level="INFO">${PON_ID} = 0</msg>
<status status="PASS" endtime="20200521 20:21:02.472" starttime="20200521 20:21:02.471"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024,</arg>
<arg>"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":"BCMOLT_ACTION_CMD_ID_ADD_OUTER_TAG",</arg>
<arg>"ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,"EtherType":0,"IpProto":0,"SrcPort":0,</arg>
<arg>"DstPort":0},"ClassVal":[{"OVid":20,"IVid":0,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 20:21:02.473" level="INFO">${JSTRING} = { "onuId":1,"FlowId":16,"PortId":0,"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024, "Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd"...</msg>
<status status="PASS" endtime="20200521 20:21:02.473" starttime="20200521 20:21:02.472"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 20:21:02.479" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'single_tag', u'GemportId': 1024, u'FlowId': 16, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 20, u'IPbits': 0, u'IVid': 0, u'...</msg>
<status status="PASS" endtime="20200521 20:21:02.479" starttime="20200521 20:21:02.473"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:02.488" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200521 20:21:02.503" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000509 seconds.</msg>
<msg timestamp="20200521 20:21:02.504" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:02 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:02.504" starttime="20200521 20:21:02.479"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:21:02.506" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:21:02.506" starttime="20200521 20:21:02.505"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:02.506" starttime="20200521 20:21:02.505"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"downstream","PktTagType":"double_tag",</arg>
<arg>"GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOLT_ACTION_ID_O_VID",</arg>
<arg>"ActionCmd":"BCMOLT_ACTION_CMD_ID_REMOVE_OUTER_TAG","ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,</arg>
<arg>"EtherType":0,"IpProto":0,"SrcPort":0,"DstPort":0},</arg>
<arg>"ClassVal":[{"OVid":10,"IVid":20,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0</arg>
<arg>}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200521 20:21:02.507" level="INFO">${JSTRING} = { "onuId":1,"FlowId":16,"PortId":0,"NniId":0,"FlowType":"downstream","PktTagType":"double_tag", "GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMO...</msg>
<status status="PASS" endtime="20200521 20:21:02.507" starttime="20200521 20:21:02.506"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 20:21:02.513" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'double_tag', u'GemportId': 1024, u'FlowId': 16, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 10, u'IPbits': 0, u'IVid': 20, u...</msg>
<status status="PASS" endtime="20200521 20:21:02.513" starttime="20200521 20:21:02.507"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:02.560" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200521 20:21:02.573" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000334 seconds.</msg>
<msg timestamp="20200521 20:21:02.573" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:02 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:02.573" starttime="20200521 20:21:02.513"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:21:02.575" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:21:02.575" starttime="20200521 20:21:02.575"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:02.575" starttime="20200521 20:21:02.574"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:02.575" starttime="20200521 20:21:02.471"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:02.576" starttime="20200521 20:20:51.727"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200521 20:21:02.586" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200521 20:21:02.597" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.001371 seconds.</msg>
<msg timestamp="20200521 20:21:02.598" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200521 20:21:02.598" starttime="20200521 20:21:02.576"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:02.598" starttime="20200521 20:21:02.576"></status>
</kw>
<doc>Test flow add</doc>
<tags>
<tag>Test Flow add</tag>
</tags>
<status status="PASS" endtime="20200521 20:21:02.598" critical="yes" starttime="20200521 20:20:51.705"></status>
</test>
<test id="s1-s1-t4" name="Verify Restful API for omci send">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200521 20:21:02.608" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200521 20:21:02.623" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000945000000001 seconds.</msg>
<msg timestamp="20200521 20:21:02.623" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200521 20:21:02.623" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200521 20:21:02.623" starttime="20200521 20:21:02.602"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:02.624" starttime="20200521 20:21:02.601"></status>
</kw>
<kw name="Test omci send">
<tags>
<tag>omci send</tag>
</tags>
<doc>Send omci raw data</doc>
<kw name="Test Send Omci">
<tags>
<tag>Send Omci function</tag>
</tags>
<doc>Send Omci function</doc>
<arguments>
<arg>1</arg>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OMCI_RAW)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload_}</var>
</assign>
<msg timestamp="20200521 20:21:02.631" level="INFO">${payload_} = {u'raw_data': [{u'Omci': u'00B34F0A00020000000000000000000000000000000000000000000000000000000000000000000000000028'}, {u'Omci': u'00B44F0A0002000000000000000000000000000000000000000000000000000000000...</msg>
<status status="PASS" endtime="20200521 20:21:02.631" starttime="20200521 20:21:02.625"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${payload_["raw_data"]</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200521 20:21:02.632" level="INFO">Length is 22</msg>
<msg timestamp="20200521 20:21:02.632" level="INFO">${length} = 22</msg>
<status status="PASS" endtime="20200521 20:21:02.632" starttime="20200521 20:21:02.631"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>====================length ${length} ================</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:02.633" starttime="20200521 20:21:02.632"></status>
</kw>
<kw type="for" name="${i} IN RANGE [ 0 | 171 ]">
<kw type="foritem" name="${i} = 0">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:02.635" starttime="20200521 20:21:02.634"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:02.938" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:02.939" starttime="20200521 20:21:02.635"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:02.949" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:02.960" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00045 seconds.</msg>
<msg timestamp="20200521 20:21:02.960" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:02 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:02.960" starttime="20200521 20:21:02.939"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:02.960" starttime="20200521 20:21:02.634"></status>
</kw>
<kw type="foritem" name="${i} = 1">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:02.962" starttime="20200521 20:21:02.961"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:03.263" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:03.263" starttime="20200521 20:21:02.962"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:03.275" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:03.285" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000385 seconds.</msg>
<msg timestamp="20200521 20:21:03.286" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:03 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:03.286" starttime="20200521 20:21:03.264"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:03.286" starttime="20200521 20:21:02.961"></status>
</kw>
<kw type="foritem" name="${i} = 2">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:03.287" starttime="20200521 20:21:03.286"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:03.588" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:03.589" starttime="20200521 20:21:03.288"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:03.601" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:03.611" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00041 seconds.</msg>
<msg timestamp="20200521 20:21:03.612" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:03 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:03.612" starttime="20200521 20:21:03.589"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:03.612" starttime="20200521 20:21:03.286"></status>
</kw>
<kw type="foritem" name="${i} = 3">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:03.615" starttime="20200521 20:21:03.613"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:03.920" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:03.920" starttime="20200521 20:21:03.616"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:03.931" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:03.941" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000515 seconds.</msg>
<msg timestamp="20200521 20:21:03.941" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:03 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:03.942" starttime="20200521 20:21:03.921"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:03.942" starttime="20200521 20:21:03.612"></status>
</kw>
<kw type="foritem" name="${i} = 4">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:03.943" starttime="20200521 20:21:03.942"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:04.283" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:04.283" starttime="20200521 20:21:03.943"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:04.293" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:04.304" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000429 seconds.</msg>
<msg timestamp="20200521 20:21:04.304" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:04 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:04.304" starttime="20200521 20:21:04.284"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:04.304" starttime="20200521 20:21:03.942"></status>
</kw>
<kw type="foritem" name="${i} = 5">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:04.305" starttime="20200521 20:21:04.305"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:04.607" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:04.607" starttime="20200521 20:21:04.306"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:04.618" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:04.628" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000503 seconds.</msg>
<msg timestamp="20200521 20:21:04.629" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:04 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:04.629" starttime="20200521 20:21:04.607"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:04.629" starttime="20200521 20:21:04.304"></status>
</kw>
<kw type="foritem" name="${i} = 6">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:04.632" starttime="20200521 20:21:04.629"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:04.933" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:04.933" starttime="20200521 20:21:04.632"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:04.946" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:04.957" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000470999999999 seconds.</msg>
<msg timestamp="20200521 20:21:04.957" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:04 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:04.957" starttime="20200521 20:21:04.933"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:04.957" starttime="20200521 20:21:04.629"></status>
</kw>
<kw type="foritem" name="${i} = 7">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:04.959" starttime="20200521 20:21:04.958"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:05.259" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:05.260" starttime="20200521 20:21:04.959"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:05.270" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:05.280" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000464999999999 seconds.</msg>
<msg timestamp="20200521 20:21:05.281" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:05 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:05.281" starttime="20200521 20:21:05.260"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:05.281" starttime="20200521 20:21:04.958"></status>
</kw>
<kw type="foritem" name="${i} = 8">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:05.284" starttime="20200521 20:21:05.281"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:05.585" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:05.585" starttime="20200521 20:21:05.284"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:05.595" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:05.605" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000334000000001 seconds.</msg>
<msg timestamp="20200521 20:21:05.605" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:05 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:05.605" starttime="20200521 20:21:05.585"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:05.605" starttime="20200521 20:21:05.281"></status>
</kw>
<kw type="foritem" name="${i} = 9">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:05.607" starttime="20200521 20:21:05.606"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:05.907" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:05.908" starttime="20200521 20:21:05.607"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:05.918" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:05.928" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000424 seconds.</msg>
<msg timestamp="20200521 20:21:05.929" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:05 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:05.929" starttime="20200521 20:21:05.908"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:05.929" starttime="20200521 20:21:05.605"></status>
</kw>
<kw type="foritem" name="${i} = 10">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:05.931" starttime="20200521 20:21:05.930"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:06.231" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:06.232" starttime="20200521 20:21:05.931"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:06.241" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:06.252" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000457 seconds.</msg>
<msg timestamp="20200521 20:21:06.252" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:06 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:06.252" starttime="20200521 20:21:06.232"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:06.252" starttime="20200521 20:21:05.929"></status>
</kw>
<kw type="foritem" name="${i} = 11">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:06.253" starttime="20200521 20:21:06.253"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:06.554" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:06.554" starttime="20200521 20:21:06.254"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:06.564" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:06.575" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000476 seconds.</msg>
<msg timestamp="20200521 20:21:06.576" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:06 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:06.576" starttime="20200521 20:21:06.555"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:06.576" starttime="20200521 20:21:06.252"></status>
</kw>
<kw type="foritem" name="${i} = 12">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:06.577" starttime="20200521 20:21:06.576"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:06.878" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:06.878" starttime="20200521 20:21:06.577"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:06.890" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:06.900" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000457 seconds.</msg>
<msg timestamp="20200521 20:21:06.901" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:06 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:06.901" starttime="20200521 20:21:06.879"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:06.901" starttime="20200521 20:21:06.576"></status>
</kw>
<kw type="foritem" name="${i} = 13">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:06.904" starttime="20200521 20:21:06.901"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:07.205" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:07.205" starttime="20200521 20:21:06.904"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:07.215" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:07.224" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000493 seconds.</msg>
<msg timestamp="20200521 20:21:07.225" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:07 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:07.225" starttime="20200521 20:21:07.205"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:07.225" starttime="20200521 20:21:06.901"></status>
</kw>
<kw type="foritem" name="${i} = 14">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:07.228" starttime="20200521 20:21:07.226"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:07.528" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:07.529" starttime="20200521 20:21:07.228"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:07.538" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:07.550" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000754 seconds.</msg>
<msg timestamp="20200521 20:21:07.550" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:07 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:07.550" starttime="20200521 20:21:07.529"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:07.551" starttime="20200521 20:21:07.225"></status>
</kw>
<kw type="foritem" name="${i} = 15">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:07.555" starttime="20200521 20:21:07.552"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:07.856" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:07.856" starttime="20200521 20:21:07.556"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:07.866" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:07.876" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000465 seconds.</msg>
<msg timestamp="20200521 20:21:07.876" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:07 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:07.876" starttime="20200521 20:21:07.857"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:07.876" starttime="20200521 20:21:07.551"></status>
</kw>
<kw type="foritem" name="${i} = 16">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:07.878" starttime="20200521 20:21:07.877"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:08.178" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:08.179" starttime="20200521 20:21:07.878"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:08.188" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:08.198" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000429 seconds.</msg>
<msg timestamp="20200521 20:21:08.199" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:08 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:08.199" starttime="20200521 20:21:08.179"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:08.199" starttime="20200521 20:21:07.876"></status>
</kw>
<kw type="foritem" name="${i} = 17">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:08.200" starttime="20200521 20:21:08.199"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:08.501" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:08.501" starttime="20200521 20:21:08.200"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:08.511" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:08.521" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000521 seconds.</msg>
<msg timestamp="20200521 20:21:08.521" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:08 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:08.521" starttime="20200521 20:21:08.501"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:08.522" starttime="20200521 20:21:08.199"></status>
</kw>
<kw type="foritem" name="${i} = 18">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:08.523" starttime="20200521 20:21:08.522"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:08.824" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:08.824" starttime="20200521 20:21:08.523"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:08.834" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:08.844" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000451 seconds.</msg>
<msg timestamp="20200521 20:21:08.844" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:08 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:08.844" starttime="20200521 20:21:08.824"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:08.844" starttime="20200521 20:21:08.522"></status>
</kw>
<kw type="foritem" name="${i} = 19">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:08.846" starttime="20200521 20:21:08.845"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:09.146" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:09.147" starttime="20200521 20:21:08.846"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:09.155" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:09.165" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000409 seconds.</msg>
<msg timestamp="20200521 20:21:09.165" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:09 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:09.165" starttime="20200521 20:21:09.147"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:09.166" starttime="20200521 20:21:08.845"></status>
</kw>
<kw type="foritem" name="${i} = 20">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:09.168" starttime="20200521 20:21:09.166"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:09.469" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:09.469" starttime="20200521 20:21:09.169"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:09.478" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:09.488" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000427 seconds.</msg>
<msg timestamp="20200521 20:21:09.488" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:09 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:09.489" starttime="20200521 20:21:09.470"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:09.489" starttime="20200521 20:21:09.166"></status>
</kw>
<kw type="foritem" name="${i} = 21">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:09.490" starttime="20200521 20:21:09.489"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:09.791" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:09.791" starttime="20200521 20:21:09.490"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:09.801" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:09.810" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000412 seconds.</msg>
<msg timestamp="20200521 20:21:09.811" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:09 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:09.811" starttime="20200521 20:21:09.791"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:09.811" starttime="20200521 20:21:09.489"></status>
</kw>
<kw type="foritem" name="${i} = 22">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:09.814" starttime="20200521 20:21:09.811"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:10.126" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:10.126" starttime="20200521 20:21:09.814"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:10.136" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:10.146" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000454 seconds.</msg>
<msg timestamp="20200521 20:21:10.147" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:10 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:10.147" starttime="20200521 20:21:10.126"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:10.147" starttime="20200521 20:21:09.811"></status>
</kw>
<kw type="foritem" name="${i} = 23">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:10.149" starttime="20200521 20:21:10.148"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:10.450" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:10.450" starttime="20200521 20:21:10.149"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:10.462" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:10.473" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000457 seconds.</msg>
<msg timestamp="20200521 20:21:10.473" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:10 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:10.474" starttime="20200521 20:21:10.450"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:10.474" starttime="20200521 20:21:10.147"></status>
</kw>
<kw type="foritem" name="${i} = 24">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:10.476" starttime="20200521 20:21:10.474"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:10.777" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:10.778" starttime="20200521 20:21:10.477"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:10.788" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:10.797" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000425000000001 seconds.</msg>
<msg timestamp="20200521 20:21:10.798" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:10 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:10.798" starttime="20200521 20:21:10.778"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:10.798" starttime="20200521 20:21:10.474"></status>
</kw>
<kw type="foritem" name="${i} = 25">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:10.799" starttime="20200521 20:21:10.799"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:11.101" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:11.101" starttime="20200521 20:21:10.800"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:11.111" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:11.121" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00049 seconds.</msg>
<msg timestamp="20200521 20:21:11.121" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:11 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:11.121" starttime="20200521 20:21:11.101"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:11.121" starttime="20200521 20:21:10.798"></status>
</kw>
<kw type="foritem" name="${i} = 26">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:11.123" starttime="20200521 20:21:11.122"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:11.423" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:11.424" starttime="20200521 20:21:11.123"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:11.435" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:11.444" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000477999999999 seconds.</msg>
<msg timestamp="20200521 20:21:11.444" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:11 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:11.445" starttime="20200521 20:21:11.424"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:11.445" starttime="20200521 20:21:11.121"></status>
</kw>
<kw type="foritem" name="${i} = 27">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:11.447" starttime="20200521 20:21:11.445"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:11.748" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:11.748" starttime="20200521 20:21:11.447"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:11.758" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:11.768" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00046 seconds.</msg>
<msg timestamp="20200521 20:21:11.769" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:11 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:11.769" starttime="20200521 20:21:11.748"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:11.769" starttime="20200521 20:21:11.445"></status>
</kw>
<kw type="foritem" name="${i} = 28">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:11.770" starttime="20200521 20:21:11.769"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:12.071" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:12.071" starttime="20200521 20:21:11.770"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:12.081" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:12.091" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000522 seconds.</msg>
<msg timestamp="20200521 20:21:12.092" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:12 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:12.092" starttime="20200521 20:21:12.071"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:12.092" starttime="20200521 20:21:11.769"></status>
</kw>
<kw type="foritem" name="${i} = 29">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:12.095" starttime="20200521 20:21:12.093"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:12.396" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:12.396" starttime="20200521 20:21:12.095"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:12.407" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:12.419" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.002072 seconds.</msg>
<msg timestamp="20200521 20:21:12.420" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:12 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:12.420" starttime="20200521 20:21:12.397"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:12.420" starttime="20200521 20:21:12.092"></status>
</kw>
<kw type="foritem" name="${i} = 30">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:12.421" starttime="20200521 20:21:12.420"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:12.730" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:12.730" starttime="20200521 20:21:12.421"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:12.740" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:12.750" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000487 seconds.</msg>
<msg timestamp="20200521 20:21:12.751" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:12 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:12.751" starttime="20200521 20:21:12.731"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:12.751" starttime="20200521 20:21:12.420"></status>
</kw>
<kw type="foritem" name="${i} = 31">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:12.752" starttime="20200521 20:21:12.751"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:13.053" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:13.053" starttime="20200521 20:21:12.753"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:13.063" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:13.073" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000360000000001 seconds.</msg>
<msg timestamp="20200521 20:21:13.074" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:13 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:13.074" starttime="20200521 20:21:13.054"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:13.074" starttime="20200521 20:21:12.751"></status>
</kw>
<kw type="foritem" name="${i} = 32">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:13.075" starttime="20200521 20:21:13.074"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:13.396" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:13.396" starttime="20200521 20:21:13.075"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:13.407" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:13.414" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000441 seconds.</msg>
<msg timestamp="20200521 20:21:13.414" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:13 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:13.414" starttime="20200521 20:21:13.397"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:13.415" starttime="20200521 20:21:13.074"></status>
</kw>
<kw type="foritem" name="${i} = 33">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:13.416" starttime="20200521 20:21:13.415"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:13.717" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:13.717" starttime="20200521 20:21:13.416"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:13.727" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:13.738" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000761 seconds.</msg>
<msg timestamp="20200521 20:21:13.739" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:13 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:13.739" starttime="20200521 20:21:13.717"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:13.739" starttime="20200521 20:21:13.415"></status>
</kw>
<kw type="foritem" name="${i} = 34">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:13.740" starttime="20200521 20:21:13.739"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:14.041" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:14.041" starttime="20200521 20:21:13.740"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:14.051" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:14.061" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000402 seconds.</msg>
<msg timestamp="20200521 20:21:14.062" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:14 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:14.062" starttime="20200521 20:21:14.042"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:14.062" starttime="20200521 20:21:13.739"></status>
</kw>
<kw type="foritem" name="${i} = 35">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:14.063" starttime="20200521 20:21:14.062"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:14.364" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:14.364" starttime="20200521 20:21:14.063"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:14.374" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:14.384" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000424 seconds.</msg>
<msg timestamp="20200521 20:21:14.385" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:14 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:14.385" starttime="20200521 20:21:14.364"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:14.385" starttime="20200521 20:21:14.062"></status>
</kw>
<kw type="foritem" name="${i} = 36">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:14.386" starttime="20200521 20:21:14.385"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:14.687" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:14.687" starttime="20200521 20:21:14.387"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:14.697" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:14.707" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000417 seconds.</msg>
<msg timestamp="20200521 20:21:14.708" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:14 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:14.708" starttime="20200521 20:21:14.688"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:14.708" starttime="20200521 20:21:14.385"></status>
</kw>
<kw type="foritem" name="${i} = 37">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:14.709" starttime="20200521 20:21:14.708"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:15.010" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:15.010" starttime="20200521 20:21:14.709"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:15.020" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:15.030" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000442 seconds.</msg>
<msg timestamp="20200521 20:21:15.030" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:15 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:15.031" starttime="20200521 20:21:15.011"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:15.031" starttime="20200521 20:21:14.708"></status>
</kw>
<kw type="foritem" name="${i} = 38">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:15.032" starttime="20200521 20:21:15.031"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:15.340" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:15.340" starttime="20200521 20:21:15.032"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:15.350" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:15.360" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000452 seconds.</msg>
<msg timestamp="20200521 20:21:15.361" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:15 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:15.361" starttime="20200521 20:21:15.341"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:15.361" starttime="20200521 20:21:15.031"></status>
</kw>
<kw type="foritem" name="${i} = 39">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:15.362" starttime="20200521 20:21:15.361"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:15.679" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:15.679" starttime="20200521 20:21:15.362"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:15.689" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:15.699" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000452999999999 seconds.</msg>
<msg timestamp="20200521 20:21:15.699" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:15 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:15.699" starttime="20200521 20:21:15.680"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:15.699" starttime="20200521 20:21:15.361"></status>
</kw>
<kw type="foritem" name="${i} = 40">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:15.701" starttime="20200521 20:21:15.700"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:16.010" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:16.010" starttime="20200521 20:21:15.701"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:16.020" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:16.031" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000576 seconds.</msg>
<msg timestamp="20200521 20:21:16.031" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:16 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:16.031" starttime="20200521 20:21:16.011"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:16.031" starttime="20200521 20:21:15.699"></status>
</kw>
<kw type="foritem" name="${i} = 41">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:16.033" starttime="20200521 20:21:16.032"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:16.352" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:16.352" starttime="20200521 20:21:16.033"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:16.362" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:16.373" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000491999999999 seconds.</msg>
<msg timestamp="20200521 20:21:16.373" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:16 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:16.373" starttime="20200521 20:21:16.353"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:16.373" starttime="20200521 20:21:16.031"></status>
</kw>
<kw type="foritem" name="${i} = 42">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:16.375" starttime="20200521 20:21:16.374"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:16.680" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:16.680" starttime="20200521 20:21:16.375"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:16.690" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:16.700" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000444000000001 seconds.</msg>
<msg timestamp="20200521 20:21:16.700" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:16 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:16.700" starttime="20200521 20:21:16.681"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:16.700" starttime="20200521 20:21:16.374"></status>
</kw>
<kw type="foritem" name="${i} = 43">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:16.702" starttime="20200521 20:21:16.701"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:17.008" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:17.008" starttime="20200521 20:21:16.702"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:17.018" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:17.029" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000396 seconds.</msg>
<msg timestamp="20200521 20:21:17.029" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:17 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:17.029" starttime="20200521 20:21:17.008"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:17.029" starttime="20200521 20:21:16.700"></status>
</kw>
<kw type="foritem" name="${i} = 44">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:17.030" starttime="20200521 20:21:17.030"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:17.340" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:17.340" starttime="20200521 20:21:17.031"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:17.350" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:17.361" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000485 seconds.</msg>
<msg timestamp="20200521 20:21:17.361" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:17 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:17.361" starttime="20200521 20:21:17.341"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:17.361" starttime="20200521 20:21:17.029"></status>
</kw>
<kw type="foritem" name="${i} = 45">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:17.362" starttime="20200521 20:21:17.362"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:17.663" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:17.663" starttime="20200521 20:21:17.363"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:17.673" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:17.683" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000452 seconds.</msg>
<msg timestamp="20200521 20:21:17.684" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:17 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:17.684" starttime="20200521 20:21:17.664"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:17.684" starttime="20200521 20:21:17.361"></status>
</kw>
<kw type="foritem" name="${i} = 46">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:17.685" starttime="20200521 20:21:17.684"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:17.986" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:17.987" starttime="20200521 20:21:17.686"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:17.996" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:18.007" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000491 seconds.</msg>
<msg timestamp="20200521 20:21:18.007" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:17 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:18.007" starttime="20200521 20:21:17.987"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:18.008" starttime="20200521 20:21:17.684"></status>
</kw>
<kw type="foritem" name="${i} = 47">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:18.009" starttime="20200521 20:21:18.008"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:18.310" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:18.310" starttime="20200521 20:21:18.010"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:18.321" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:18.331" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000547 seconds.</msg>
<msg timestamp="20200521 20:21:18.332" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:18 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:18.332" starttime="20200521 20:21:18.311"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:18.332" starttime="20200521 20:21:18.008"></status>
</kw>
<kw type="foritem" name="${i} = 48">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:18.333" starttime="20200521 20:21:18.333"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:18.634" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:18.635" starttime="20200521 20:21:18.334"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:18.645" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:18.655" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000444 seconds.</msg>
<msg timestamp="20200521 20:21:18.656" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:18 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:18.656" starttime="20200521 20:21:18.635"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:18.656" starttime="20200521 20:21:18.332"></status>
</kw>
<kw type="foritem" name="${i} = 49">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:18.657" starttime="20200521 20:21:18.657"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:18.959" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:18.959" starttime="20200521 20:21:18.658"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:18.968" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:18.983" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000406 seconds.</msg>
<msg timestamp="20200521 20:21:18.983" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:18 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:18.983" starttime="20200521 20:21:18.959"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:18.983" starttime="20200521 20:21:18.656"></status>
</kw>
<kw type="foritem" name="${i} = 50">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:18.985" starttime="20200521 20:21:18.984"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:19.288" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:19.288" starttime="20200521 20:21:18.985"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:19.298" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:19.308" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000435 seconds.</msg>
<msg timestamp="20200521 20:21:19.309" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:19 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:19.309" starttime="20200521 20:21:19.288"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:19.309" starttime="20200521 20:21:18.983"></status>
</kw>
<kw type="foritem" name="${i} = 51">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:19.310" starttime="20200521 20:21:19.309"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:19.620" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:19.620" starttime="20200521 20:21:19.311"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:19.630" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:19.641" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000535999999999 seconds.</msg>
<msg timestamp="20200521 20:21:19.641" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:19 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:19.641" starttime="20200521 20:21:19.621"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:19.641" starttime="20200521 20:21:19.309"></status>
</kw>
<kw type="foritem" name="${i} = 52">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:19.643" starttime="20200521 20:21:19.642"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:19.944" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:19.944" starttime="20200521 20:21:19.643"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:19.956" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:19.972" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.003649 seconds.</msg>
<msg timestamp="20200521 20:21:19.973" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:19 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:19.973" starttime="20200521 20:21:19.944"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:19.973" starttime="20200521 20:21:19.641"></status>
</kw>
<kw type="foritem" name="${i} = 53">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:19.974" starttime="20200521 20:21:19.974"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:20.276" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:20.276" starttime="20200521 20:21:19.975"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:20.286" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:20.297" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00041 seconds.</msg>
<msg timestamp="20200521 20:21:20.297" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:20 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:20.297" starttime="20200521 20:21:20.276"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:20.297" starttime="20200521 20:21:19.973"></status>
</kw>
<kw type="foritem" name="${i} = 54">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:20.298" starttime="20200521 20:21:20.298"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:20.600" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:20.600" starttime="20200521 20:21:20.299"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:20.610" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:20.620" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000507 seconds.</msg>
<msg timestamp="20200521 20:21:20.621" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:20 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:20.621" starttime="20200521 20:21:20.601"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:20.621" starttime="20200521 20:21:20.297"></status>
</kw>
<kw type="foritem" name="${i} = 55">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:20.626" starttime="20200521 20:21:20.622"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:20.927" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:20.928" starttime="20200521 20:21:20.627"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:20.938" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:20.948" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000420999999999 seconds.</msg>
<msg timestamp="20200521 20:21:20.949" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:20 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:20.949" starttime="20200521 20:21:20.928"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:20.949" starttime="20200521 20:21:20.621"></status>
</kw>
<kw type="foritem" name="${i} = 56">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:20.950" starttime="20200521 20:21:20.949"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:21.260" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:21.260" starttime="20200521 20:21:20.951"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:21.271" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:21.280" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000426 seconds.</msg>
<msg timestamp="20200521 20:21:21.281" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:21 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:21.281" starttime="20200521 20:21:21.261"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:21.281" starttime="20200521 20:21:20.949"></status>
</kw>
<kw type="foritem" name="${i} = 57">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:21.284" starttime="20200521 20:21:21.282"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:21.590" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:21.590" starttime="20200521 20:21:21.285"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:21.601" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:21.611" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000431000000001 seconds.</msg>
<msg timestamp="20200521 20:21:21.611" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:21 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:21.611" starttime="20200521 20:21:21.591"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:21.611" starttime="20200521 20:21:21.281"></status>
</kw>
<kw type="foritem" name="${i} = 58">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:21.613" starttime="20200521 20:21:21.612"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:21.914" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:21.914" starttime="20200521 20:21:21.613"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:21.924" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:21.934" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000425 seconds.</msg>
<msg timestamp="20200521 20:21:21.935" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:21 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:21.935" starttime="20200521 20:21:21.914"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:21.935" starttime="20200521 20:21:21.611"></status>
</kw>
<kw type="foritem" name="${i} = 59">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:21.940" starttime="20200521 20:21:21.935"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:22.241" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:22.241" starttime="20200521 20:21:21.941"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:22.251" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:22.261" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000462000000001 seconds.</msg>
<msg timestamp="20200521 20:21:22.262" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:22 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:22.262" starttime="20200521 20:21:22.242"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:22.262" starttime="20200521 20:21:21.935"></status>
</kw>
<kw type="foritem" name="${i} = 60">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:22.265" starttime="20200521 20:21:22.263"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:22.567" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:22.567" starttime="20200521 20:21:22.266"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:22.576" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:22.587" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000576000000001 seconds.</msg>
<msg timestamp="20200521 20:21:22.587" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:22 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:22.587" starttime="20200521 20:21:22.567"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:22.587" starttime="20200521 20:21:22.262"></status>
</kw>
<kw type="foritem" name="${i} = 61">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:22.589" starttime="20200521 20:21:22.588"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:22.893" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:22.893" starttime="20200521 20:21:22.593"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:22.903" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:22.918" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000467 seconds.</msg>
<msg timestamp="20200521 20:21:22.918" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:22 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:22.919" starttime="20200521 20:21:22.894"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:22.919" starttime="20200521 20:21:22.588"></status>
</kw>
<kw type="foritem" name="${i} = 62">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:22.920" starttime="20200521 20:21:22.919"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:23.221" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:23.221" starttime="20200521 20:21:22.920"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:23.232" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:23.243" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000369 seconds.</msg>
<msg timestamp="20200521 20:21:23.244" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:23 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:23.244" starttime="20200521 20:21:23.221"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:23.244" starttime="20200521 20:21:22.919"></status>
</kw>
<kw type="foritem" name="${i} = 63">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:23.247" starttime="20200521 20:21:23.245"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:23.549" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:23.549" starttime="20200521 20:21:23.248"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:23.560" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:23.572" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000421999999999 seconds.</msg>
<msg timestamp="20200521 20:21:23.573" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:23 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:23.573" starttime="20200521 20:21:23.549"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:23.573" starttime="20200521 20:21:23.244"></status>
</kw>
<kw type="foritem" name="${i} = 64">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:23.574" starttime="20200521 20:21:23.573"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:23.875" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:23.876" starttime="20200521 20:21:23.575"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:23.885" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:23.895" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000405 seconds.</msg>
<msg timestamp="20200521 20:21:23.896" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:23 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:23.896" starttime="20200521 20:21:23.876"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:23.896" starttime="20200521 20:21:23.573"></status>
</kw>
<kw type="foritem" name="${i} = 65">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:23.897" starttime="20200521 20:21:23.897"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:24.200" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:24.201" starttime="20200521 20:21:23.900"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:24.210" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:24.221" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000492 seconds.</msg>
<msg timestamp="20200521 20:21:24.222" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:24 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:24.222" starttime="20200521 20:21:24.201"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:24.222" starttime="20200521 20:21:23.896"></status>
</kw>
<kw type="foritem" name="${i} = 66">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:24.224" starttime="20200521 20:21:24.222"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:24.529" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:24.529" starttime="20200521 20:21:24.228"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:24.541" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:24.552" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000586999999999 seconds.</msg>
<msg timestamp="20200521 20:21:24.553" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:24 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:24.553" starttime="20200521 20:21:24.530"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:24.553" starttime="20200521 20:21:24.222"></status>
</kw>
<kw type="foritem" name="${i} = 67">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:24.556" starttime="20200521 20:21:24.554"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:24.857" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:24.857" starttime="20200521 20:21:24.556"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:24.867" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:24.877" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000532 seconds.</msg>
<msg timestamp="20200521 20:21:24.878" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:24 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:24.878" starttime="20200521 20:21:24.858"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:24.878" starttime="20200521 20:21:24.553"></status>
</kw>
<kw type="foritem" name="${i} = 68">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:24.881" starttime="20200521 20:21:24.878"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:25.181" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:25.182" starttime="20200521 20:21:24.881"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:25.191" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:25.202" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000319 seconds.</msg>
<msg timestamp="20200521 20:21:25.202" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:25 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:25.202" starttime="20200521 20:21:25.182"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:25.202" starttime="20200521 20:21:24.878"></status>
</kw>
<kw type="foritem" name="${i} = 69">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:25.203" starttime="20200521 20:21:25.203"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:25.504" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:25.505" starttime="20200521 20:21:25.204"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:25.514" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:25.525" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000552 seconds.</msg>
<msg timestamp="20200521 20:21:25.525" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:25 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:25.525" starttime="20200521 20:21:25.505"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:25.525" starttime="20200521 20:21:25.202"></status>
</kw>
<kw type="foritem" name="${i} = 70">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:25.526" starttime="20200521 20:21:25.526"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:25.828" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:25.828" starttime="20200521 20:21:25.527"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:25.841" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:25.851" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000528 seconds.</msg>
<msg timestamp="20200521 20:21:25.851" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:25 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:25.851" starttime="20200521 20:21:25.828"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:25.852" starttime="20200521 20:21:25.525"></status>
</kw>
<kw type="foritem" name="${i} = 71">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:25.853" starttime="20200521 20:21:25.852"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:26.154" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:26.154" starttime="20200521 20:21:25.853"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:26.163" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:26.173" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000455000000001 seconds.</msg>
<msg timestamp="20200521 20:21:26.173" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:26 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:26.174" starttime="20200521 20:21:26.154"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:26.174" starttime="20200521 20:21:25.852"></status>
</kw>
<kw type="foritem" name="${i} = 72">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:26.175" starttime="20200521 20:21:26.174"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:26.475" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:26.476" starttime="20200521 20:21:26.175"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:26.485" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:26.496" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000443 seconds.</msg>
<msg timestamp="20200521 20:21:26.496" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:26 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:26.497" starttime="20200521 20:21:26.476"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:26.497" starttime="20200521 20:21:26.174"></status>
</kw>
<kw type="foritem" name="${i} = 73">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:26.499" starttime="20200521 20:21:26.498"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:26.799" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:26.800" starttime="20200521 20:21:26.499"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:26.810" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:26.820" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000548 seconds.</msg>
<msg timestamp="20200521 20:21:26.821" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:26 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:26.821" starttime="20200521 20:21:26.800"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:26.821" starttime="20200521 20:21:26.497"></status>
</kw>
<kw type="foritem" name="${i} = 74">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:26.823" starttime="20200521 20:21:26.822"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:27.123" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:27.124" starttime="20200521 20:21:26.823"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:27.132" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:27.142" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000471999999999 seconds.</msg>
<msg timestamp="20200521 20:21:27.142" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:27 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:27.142" starttime="20200521 20:21:27.124"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:27.143" starttime="20200521 20:21:26.821"></status>
</kw>
<kw type="foritem" name="${i} = 75">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:27.144" starttime="20200521 20:21:27.143"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:27.444" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:27.445" starttime="20200521 20:21:27.144"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:27.456" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:27.466" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000432 seconds.</msg>
<msg timestamp="20200521 20:21:27.467" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:27 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:27.467" starttime="20200521 20:21:27.445"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:27.467" starttime="20200521 20:21:27.143"></status>
</kw>
<kw type="foritem" name="${i} = 76">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:27.468" starttime="20200521 20:21:27.467"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:27.769" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:27.769" starttime="20200521 20:21:27.468"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:27.779" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:27.790" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000523 seconds.</msg>
<msg timestamp="20200521 20:21:27.790" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:27 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:27.791" starttime="20200521 20:21:27.769"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:27.791" starttime="20200521 20:21:27.467"></status>
</kw>
<kw type="foritem" name="${i} = 77">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:27.792" starttime="20200521 20:21:27.791"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:28.094" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:28.094" starttime="20200521 20:21:27.792"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:28.104" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:28.114" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00048 seconds.</msg>
<msg timestamp="20200521 20:21:28.114" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:28 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:28.114" starttime="20200521 20:21:28.094"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:28.114" starttime="20200521 20:21:27.791"></status>
</kw>
<kw type="foritem" name="${i} = 78">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:28.116" starttime="20200521 20:21:28.115"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:28.419" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:28.419" starttime="20200521 20:21:28.117"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:28.430" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:28.440" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000538 seconds.</msg>
<msg timestamp="20200521 20:21:28.441" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:28 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:28.441" starttime="20200521 20:21:28.420"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:28.441" starttime="20200521 20:21:28.115"></status>
</kw>
<kw type="foritem" name="${i} = 79">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:28.442" starttime="20200521 20:21:28.441"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:28.743" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:28.743" starttime="20200521 20:21:28.443"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:28.754" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:28.763" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000504 seconds.</msg>
<msg timestamp="20200521 20:21:28.764" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:28 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:28.764" starttime="20200521 20:21:28.744"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:28.764" starttime="20200521 20:21:28.441"></status>
</kw>
<kw type="foritem" name="${i} = 80">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:28.766" starttime="20200521 20:21:28.765"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:29.066" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:29.067" starttime="20200521 20:21:28.766"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:29.077" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:29.087" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000547 seconds.</msg>
<msg timestamp="20200521 20:21:29.088" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:29 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:29.088" starttime="20200521 20:21:29.067"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:29.088" starttime="20200521 20:21:28.764"></status>
</kw>
<kw type="foritem" name="${i} = 81">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:29.089" starttime="20200521 20:21:29.088"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:29.390" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:29.390" starttime="20200521 20:21:29.090"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:29.400" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:29.410" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000431 seconds.</msg>
<msg timestamp="20200521 20:21:29.411" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:29 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:29.411" starttime="20200521 20:21:29.391"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:29.411" starttime="20200521 20:21:29.088"></status>
</kw>
<kw type="foritem" name="${i} = 82">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:29.412" starttime="20200521 20:21:29.412"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:29.713" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:29.714" starttime="20200521 20:21:29.413"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:29.724" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:29.734" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000426 seconds.</msg>
<msg timestamp="20200521 20:21:29.734" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:29 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:29.735" starttime="20200521 20:21:29.714"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:29.735" starttime="20200521 20:21:29.411"></status>
</kw>
<kw type="foritem" name="${i} = 83">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:29.736" starttime="20200521 20:21:29.735"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:30.037" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:30.037" starttime="20200521 20:21:29.736"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:30.046" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:30.056" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000474000000001 seconds.</msg>
<msg timestamp="20200521 20:21:30.057" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:30 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:30.057" starttime="20200521 20:21:30.037"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:30.057" starttime="20200521 20:21:29.735"></status>
</kw>
<kw type="foritem" name="${i} = 84">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:30.059" starttime="20200521 20:21:30.058"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:30.359" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:30.360" starttime="20200521 20:21:30.059"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:30.369" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:30.379" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000435 seconds.</msg>
<msg timestamp="20200521 20:21:30.380" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:30 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:30.380" starttime="20200521 20:21:30.360"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:30.380" starttime="20200521 20:21:30.057"></status>
</kw>
<kw type="foritem" name="${i} = 85">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:30.381" starttime="20200521 20:21:30.380"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:30.683" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:30.683" starttime="20200521 20:21:30.382"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:30.693" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:30.700" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000424000000001 seconds.</msg>
<msg timestamp="20200521 20:21:30.700" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:30 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:30.700" starttime="20200521 20:21:30.683"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:30.700" starttime="20200521 20:21:30.380"></status>
</kw>
<kw type="foritem" name="${i} = 86">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:30.702" starttime="20200521 20:21:30.701"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:31.003" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:31.003" starttime="20200521 20:21:30.702"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:31.013" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:31.022" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000448 seconds.</msg>
<msg timestamp="20200521 20:21:31.023" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:31 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:31.023" starttime="20200521 20:21:31.003"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:31.023" starttime="20200521 20:21:30.700"></status>
</kw>
<kw type="foritem" name="${i} = 87">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:31.024" starttime="20200521 20:21:31.023"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:31.325" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:31.325" starttime="20200521 20:21:31.024"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:31.335" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:31.345" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000454 seconds.</msg>
<msg timestamp="20200521 20:21:31.346" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:31 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:31.346" starttime="20200521 20:21:31.325"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:31.346" starttime="20200521 20:21:31.023"></status>
</kw>
<kw type="foritem" name="${i} = 88">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:31.347" starttime="20200521 20:21:31.346"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:31.648" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:31.648" starttime="20200521 20:21:31.348"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:31.658" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:31.668" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000447 seconds.</msg>
<msg timestamp="20200521 20:21:31.668" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:31 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:31.668" starttime="20200521 20:21:31.649"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:31.668" starttime="20200521 20:21:31.346"></status>
</kw>
<kw type="foritem" name="${i} = 89">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:31.670" starttime="20200521 20:21:31.669"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:31.970" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:31.971" starttime="20200521 20:21:31.670"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:31.980" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:31.990" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000440999999999 seconds.</msg>
<msg timestamp="20200521 20:21:31.990" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:31 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:31.991" starttime="20200521 20:21:31.971"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:31.991" starttime="20200521 20:21:31.668"></status>
</kw>
<kw type="foritem" name="${i} = 90">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:31.992" starttime="20200521 20:21:31.991"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:32.293" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:32.293" starttime="20200521 20:21:31.992"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:32.302" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:32.312" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000444 seconds.</msg>
<msg timestamp="20200521 20:21:32.313" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:32 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:32.313" starttime="20200521 20:21:32.293"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:32.313" starttime="20200521 20:21:31.991"></status>
</kw>
<kw type="foritem" name="${i} = 91">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:32.314" starttime="20200521 20:21:32.313"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:32.615" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:32.615" starttime="20200521 20:21:32.314"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:32.625" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:32.635" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000393 seconds.</msg>
<msg timestamp="20200521 20:21:32.636" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:32 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:32.636" starttime="20200521 20:21:32.615"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:32.636" starttime="20200521 20:21:32.313"></status>
</kw>
<kw type="foritem" name="${i} = 92">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:32.637" starttime="20200521 20:21:32.636"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:32.938" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:32.938" starttime="20200521 20:21:32.637"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:32.950" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:32.960" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000431 seconds.</msg>
<msg timestamp="20200521 20:21:32.961" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:32 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:32.961" starttime="20200521 20:21:32.938"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:32.961" starttime="20200521 20:21:32.636"></status>
</kw>
<kw type="foritem" name="${i} = 93">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:32.962" starttime="20200521 20:21:32.962"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:33.263" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:33.263" starttime="20200521 20:21:32.963"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:33.273" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:33.286" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000471 seconds.</msg>
<msg timestamp="20200521 20:21:33.287" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:33 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:33.287" starttime="20200521 20:21:33.264"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:33.287" starttime="20200521 20:21:32.961"></status>
</kw>
<kw type="foritem" name="${i} = 94">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:33.288" starttime="20200521 20:21:33.288"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:33.589" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:33.589" starttime="20200521 20:21:33.289"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:33.599" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:33.609" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000435 seconds.</msg>
<msg timestamp="20200521 20:21:33.610" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:33 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:33.610" starttime="20200521 20:21:33.590"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:33.610" starttime="20200521 20:21:33.287"></status>
</kw>
<kw type="foritem" name="${i} = 95">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:33.611" starttime="20200521 20:21:33.611"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:33.912" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:33.912" starttime="20200521 20:21:33.612"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:33.922" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:33.932" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000434 seconds.</msg>
<msg timestamp="20200521 20:21:33.935" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:33 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:33.935" starttime="20200521 20:21:33.913"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:33.935" starttime="20200521 20:21:33.610"></status>
</kw>
<kw type="foritem" name="${i} = 96">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:33.936" starttime="20200521 20:21:33.935"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:34.237" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:34.237" starttime="20200521 20:21:33.937"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:34.248" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:34.259" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000445 seconds.</msg>
<msg timestamp="20200521 20:21:34.259" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:34 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:34.259" starttime="20200521 20:21:34.238"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:34.259" starttime="20200521 20:21:33.935"></status>
</kw>
<kw type="foritem" name="${i} = 97">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:34.261" starttime="20200521 20:21:34.260"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:34.562" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:34.562" starttime="20200521 20:21:34.261"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:34.573" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:34.583" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000522 seconds.</msg>
<msg timestamp="20200521 20:21:34.584" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:34 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:34.584" starttime="20200521 20:21:34.562"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:34.584" starttime="20200521 20:21:34.259"></status>
</kw>
<kw type="foritem" name="${i} = 98">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:34.585" starttime="20200521 20:21:34.584"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:34.886" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:34.886" starttime="20200521 20:21:34.585"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:34.894" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:34.905" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000539 seconds.</msg>
<msg timestamp="20200521 20:21:34.905" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:34 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:34.905" starttime="20200521 20:21:34.886"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:34.906" starttime="20200521 20:21:34.584"></status>
</kw>
<kw type="foritem" name="${i} = 99">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:34.907" starttime="20200521 20:21:34.906"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:35.208" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:35.208" starttime="20200521 20:21:34.907"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:35.219" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:35.228" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000517 seconds.</msg>
<msg timestamp="20200521 20:21:35.229" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:35 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:35.229" starttime="20200521 20:21:35.209"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:35.229" starttime="20200521 20:21:34.906"></status>
</kw>
<kw type="foritem" name="${i} = 100">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:35.231" starttime="20200521 20:21:35.229"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:35.532" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:35.533" starttime="20200521 20:21:35.232"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:35.543" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:35.555" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000348 seconds.</msg>
<msg timestamp="20200521 20:21:35.555" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:35 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:35.555" starttime="20200521 20:21:35.533"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:35.555" starttime="20200521 20:21:35.229"></status>
</kw>
<kw type="foritem" name="${i} = 101">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:35.556" starttime="20200521 20:21:35.556"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:35.857" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:35.857" starttime="20200521 20:21:35.556"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:35.867" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:35.875" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000519000000001 seconds.</msg>
<msg timestamp="20200521 20:21:35.876" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:35 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:35.876" starttime="20200521 20:21:35.857"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:35.876" starttime="20200521 20:21:35.555"></status>
</kw>
<kw type="foritem" name="${i} = 102">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:35.878" starttime="20200521 20:21:35.877"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:36.179" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:36.179" starttime="20200521 20:21:35.878"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:36.189" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:36.199" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000416 seconds.</msg>
<msg timestamp="20200521 20:21:36.200" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:36 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:36.200" starttime="20200521 20:21:36.179"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:36.200" starttime="20200521 20:21:35.876"></status>
</kw>
<kw type="foritem" name="${i} = 103">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:36.201" starttime="20200521 20:21:36.200"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:36.502" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:36.502" starttime="20200521 20:21:36.202"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:36.511" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:36.520" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000449 seconds.</msg>
<msg timestamp="20200521 20:21:36.521" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:36 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:36.521" starttime="20200521 20:21:36.503"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:36.521" starttime="20200521 20:21:36.200"></status>
</kw>
<kw type="foritem" name="${i} = 104">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:36.522" starttime="20200521 20:21:36.522"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:36.823" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:36.823" starttime="20200521 20:21:36.523"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:36.834" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:36.844" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000466 seconds.</msg>
<msg timestamp="20200521 20:21:36.845" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:36 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:36.845" starttime="20200521 20:21:36.824"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:36.845" starttime="20200521 20:21:36.521"></status>
</kw>
<kw type="foritem" name="${i} = 105">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:36.846" starttime="20200521 20:21:36.846"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:37.147" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:37.147" starttime="20200521 20:21:36.847"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:37.158" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:37.167" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000312 seconds.</msg>
<msg timestamp="20200521 20:21:37.168" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:37 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:37.168" starttime="20200521 20:21:37.148"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:37.168" starttime="20200521 20:21:36.845"></status>
</kw>
<kw type="foritem" name="${i} = 106">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:37.169" starttime="20200521 20:21:37.168"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:37.470" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:37.470" starttime="20200521 20:21:37.169"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:37.480" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:37.489" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000467 seconds.</msg>
<msg timestamp="20200521 20:21:37.490" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:37 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:37.490" starttime="20200521 20:21:37.470"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:37.490" starttime="20200521 20:21:37.168"></status>
</kw>
<kw type="foritem" name="${i} = 107">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:37.491" starttime="20200521 20:21:37.491"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:37.792" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:37.792" starttime="20200521 20:21:37.492"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:37.803" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:37.813" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000514 seconds.</msg>
<msg timestamp="20200521 20:21:37.814" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:37 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:37.814" starttime="20200521 20:21:37.793"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:37.814" starttime="20200521 20:21:37.490"></status>
</kw>
<kw type="foritem" name="${i} = 108">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:37.815" starttime="20200521 20:21:37.814"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:38.116" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:38.116" starttime="20200521 20:21:37.815"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:38.126" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:38.136" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000473 seconds.</msg>
<msg timestamp="20200521 20:21:38.136" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:38 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:38.136" starttime="20200521 20:21:38.116"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:38.136" starttime="20200521 20:21:37.814"></status>
</kw>
<kw type="foritem" name="${i} = 109">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:38.138" starttime="20200521 20:21:38.137"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:38.439" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:38.439" starttime="20200521 20:21:38.138"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:38.451" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:38.461" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000468 seconds.</msg>
<msg timestamp="20200521 20:21:38.461" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:38 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:38.462" starttime="20200521 20:21:38.440"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:38.462" starttime="20200521 20:21:38.137"></status>
</kw>
<kw type="foritem" name="${i} = 110">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:38.463" starttime="20200521 20:21:38.462"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:38.764" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:38.764" starttime="20200521 20:21:38.463"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:38.773" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:38.783" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000313999999999 seconds.</msg>
<msg timestamp="20200521 20:21:38.784" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:38 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:38.784" starttime="20200521 20:21:38.764"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:38.784" starttime="20200521 20:21:38.462"></status>
</kw>
<kw type="foritem" name="${i} = 111">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:38.785" starttime="20200521 20:21:38.784"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:39.085" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:39.086" starttime="20200521 20:21:38.785"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:39.097" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:39.109" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000424000000001 seconds.</msg>
<msg timestamp="20200521 20:21:39.110" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:39 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:39.110" starttime="20200521 20:21:39.086"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:39.110" starttime="20200521 20:21:38.784"></status>
</kw>
<kw type="foritem" name="${i} = 112">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:39.111" starttime="20200521 20:21:39.110"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:39.412" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:39.413" starttime="20200521 20:21:39.112"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:39.422" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:39.432" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00049 seconds.</msg>
<msg timestamp="20200521 20:21:39.433" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:39 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:39.433" starttime="20200521 20:21:39.413"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:39.433" starttime="20200521 20:21:39.110"></status>
</kw>
<kw type="foritem" name="${i} = 113">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:39.435" starttime="20200521 20:21:39.434"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:39.738" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:39.739" starttime="20200521 20:21:39.435"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:39.749" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:39.759" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00041 seconds.</msg>
<msg timestamp="20200521 20:21:39.760" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:39 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:39.760" starttime="20200521 20:21:39.739"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:39.760" starttime="20200521 20:21:39.433"></status>
</kw>
<kw type="foritem" name="${i} = 114">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:39.761" starttime="20200521 20:21:39.761"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:40.062" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:40.062" starttime="20200521 20:21:39.762"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:40.072" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:40.082" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000475 seconds.</msg>
<msg timestamp="20200521 20:21:40.083" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:40 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:40.083" starttime="20200521 20:21:40.063"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:40.083" starttime="20200521 20:21:39.760"></status>
</kw>
<kw type="foritem" name="${i} = 115">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:40.084" starttime="20200521 20:21:40.084"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:40.385" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:40.386" starttime="20200521 20:21:40.085"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:40.396" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:40.406" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000417 seconds.</msg>
<msg timestamp="20200521 20:21:40.406" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:40 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:40.407" starttime="20200521 20:21:40.386"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:40.407" starttime="20200521 20:21:40.083"></status>
</kw>
<kw type="foritem" name="${i} = 116">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:40.408" starttime="20200521 20:21:40.407"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:40.709" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:40.709" starttime="20200521 20:21:40.409"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:40.719" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:40.729" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000438 seconds.</msg>
<msg timestamp="20200521 20:21:40.730" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:40 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:40.730" starttime="20200521 20:21:40.710"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:40.730" starttime="20200521 20:21:40.407"></status>
</kw>
<kw type="foritem" name="${i} = 117">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:40.731" starttime="20200521 20:21:40.731"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:41.032" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:41.032" starttime="20200521 20:21:40.732"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:41.042" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:41.052" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000395 seconds.</msg>
<msg timestamp="20200521 20:21:41.053" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:41 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:41.053" starttime="20200521 20:21:41.033"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:41.053" starttime="20200521 20:21:40.730"></status>
</kw>
<kw type="foritem" name="${i} = 118">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:41.054" starttime="20200521 20:21:41.054"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:41.360" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:41.360" starttime="20200521 20:21:41.055"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:41.370" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:41.380" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000667 seconds.</msg>
<msg timestamp="20200521 20:21:41.380" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:41 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:41.381" starttime="20200521 20:21:41.361"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:41.381" starttime="20200521 20:21:41.053"></status>
</kw>
<kw type="foritem" name="${i} = 119">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:41.382" starttime="20200521 20:21:41.381"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:41.689" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:41.689" starttime="20200521 20:21:41.382"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:41.699" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:41.709" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000463 seconds.</msg>
<msg timestamp="20200521 20:21:41.709" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:41 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:41.709" starttime="20200521 20:21:41.689"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:41.709" starttime="20200521 20:21:41.381"></status>
</kw>
<kw type="foritem" name="${i} = 120">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:41.710" starttime="20200521 20:21:41.710"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:42.011" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:42.011" starttime="20200521 20:21:41.711"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:42.024" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:42.034" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000558000000001 seconds.</msg>
<msg timestamp="20200521 20:21:42.034" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:42 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:42.034" starttime="20200521 20:21:42.012"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:42.035" starttime="20200521 20:21:41.709"></status>
</kw>
<kw type="foritem" name="${i} = 121">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:42.036" starttime="20200521 20:21:42.035"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:42.338" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:42.339" starttime="20200521 20:21:42.036"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:42.350" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:42.360" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000426 seconds.</msg>
<msg timestamp="20200521 20:21:42.361" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:42 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:42.361" starttime="20200521 20:21:42.339"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:42.361" starttime="20200521 20:21:42.035"></status>
</kw>
<kw type="foritem" name="${i} = 122">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:42.364" starttime="20200521 20:21:42.362"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:42.665" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:42.665" starttime="20200521 20:21:42.364"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:42.676" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:42.686" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000689 seconds.</msg>
<msg timestamp="20200521 20:21:42.686" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:42 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:42.686" starttime="20200521 20:21:42.666"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:42.686" starttime="20200521 20:21:42.361"></status>
</kw>
<kw type="foritem" name="${i} = 123">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:42.688" starttime="20200521 20:21:42.687"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:42.989" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:42.989" starttime="20200521 20:21:42.688"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:42.999" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:43.007" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000523 seconds.</msg>
<msg timestamp="20200521 20:21:43.007" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:42 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:43.007" starttime="20200521 20:21:42.989"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:43.007" starttime="20200521 20:21:42.686"></status>
</kw>
<kw type="foritem" name="${i} = 124">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:43.009" starttime="20200521 20:21:43.008"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:43.310" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:43.310" starttime="20200521 20:21:43.010"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:43.321" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:43.330" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000411 seconds.</msg>
<msg timestamp="20200521 20:21:43.331" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:43 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:43.331" starttime="20200521 20:21:43.311"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:43.331" starttime="20200521 20:21:43.007"></status>
</kw>
<kw type="foritem" name="${i} = 125">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:43.332" starttime="20200521 20:21:43.331"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:43.640" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:43.641" starttime="20200521 20:21:43.333"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:43.650" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:43.660" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000531000000001 seconds.</msg>
<msg timestamp="20200521 20:21:43.661" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:43 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:43.661" starttime="20200521 20:21:43.641"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:43.661" starttime="20200521 20:21:43.331"></status>
</kw>
<kw type="foritem" name="${i} = 126">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:43.662" starttime="20200521 20:21:43.661"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:43.964" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:43.965" starttime="20200521 20:21:43.663"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:43.975" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:43.983" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000457999999999 seconds.</msg>
<msg timestamp="20200521 20:21:43.984" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:43 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:43.984" starttime="20200521 20:21:43.965"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:43.984" starttime="20200521 20:21:43.661"></status>
</kw>
<kw type="foritem" name="${i} = 127">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:43.987" starttime="20200521 20:21:43.985"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:44.288" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:44.288" starttime="20200521 20:21:43.987"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:44.298" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:44.309" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000471 seconds.</msg>
<msg timestamp="20200521 20:21:44.310" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:44 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:44.310" starttime="20200521 20:21:44.288"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:44.310" starttime="20200521 20:21:43.984"></status>
</kw>
<kw type="foritem" name="${i} = 128">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:44.312" starttime="20200521 20:21:44.311"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:44.613" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:44.613" starttime="20200521 20:21:44.312"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:44.623" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:44.633" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000406 seconds.</msg>
<msg timestamp="20200521 20:21:44.633" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:44 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:44.634" starttime="20200521 20:21:44.613"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:44.634" starttime="20200521 20:21:44.310"></status>
</kw>
<kw type="foritem" name="${i} = 129">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:44.635" starttime="20200521 20:21:44.634"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:44.936" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:44.936" starttime="20200521 20:21:44.635"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:44.948" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:44.956" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000476000000001 seconds.</msg>
<msg timestamp="20200521 20:21:44.957" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:44 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:44.957" starttime="20200521 20:21:44.936"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:44.957" starttime="20200521 20:21:44.634"></status>
</kw>
<kw type="foritem" name="${i} = 130">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:44.959" starttime="20200521 20:21:44.958"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:45.260" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:45.260" starttime="20200521 20:21:44.959"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:45.271" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:45.281" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000451 seconds.</msg>
<msg timestamp="20200521 20:21:45.281" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:45 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:45.282" starttime="20200521 20:21:45.260"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:45.282" starttime="20200521 20:21:44.957"></status>
</kw>
<kw type="foritem" name="${i} = 131">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:45.283" starttime="20200521 20:21:45.282"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:45.584" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:45.584" starttime="20200521 20:21:45.283"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:45.594" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:45.605" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000478 seconds.</msg>
<msg timestamp="20200521 20:21:45.605" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:45 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:45.605" starttime="20200521 20:21:45.585"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:45.606" starttime="20200521 20:21:45.282"></status>
</kw>
<kw type="foritem" name="${i} = 132">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:45.607" starttime="20200521 20:21:45.606"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:45.910" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:45.910" starttime="20200521 20:21:45.607"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:45.920" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:45.931" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000635 seconds.</msg>
<msg timestamp="20200521 20:21:45.931" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:45 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:45.932" starttime="20200521 20:21:45.911"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:45.932" starttime="20200521 20:21:45.606"></status>
</kw>
<kw type="foritem" name="${i} = 133">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:45.933" starttime="20200521 20:21:45.932"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:46.234" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:46.234" starttime="20200521 20:21:45.933"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:46.244" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:46.255" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000472 seconds.</msg>
<msg timestamp="20200521 20:21:46.256" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:46 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:46.256" starttime="20200521 20:21:46.234"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:46.256" starttime="20200521 20:21:45.932"></status>
</kw>
<kw type="foritem" name="${i} = 134">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:46.257" starttime="20200521 20:21:46.256"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:46.560" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:46.560" starttime="20200521 20:21:46.257"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:46.573" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:46.583" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00046 seconds.</msg>
<msg timestamp="20200521 20:21:46.583" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:46 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:46.583" starttime="20200521 20:21:46.561"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:46.583" starttime="20200521 20:21:46.256"></status>
</kw>
<kw type="foritem" name="${i} = 135">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:46.584" starttime="20200521 20:21:46.584"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:46.886" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:46.886" starttime="20200521 20:21:46.585"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:46.896" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:46.906" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000327 seconds.</msg>
<msg timestamp="20200521 20:21:46.907" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:46 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:46.907" starttime="20200521 20:21:46.886"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:46.907" starttime="20200521 20:21:46.583"></status>
</kw>
<kw type="foritem" name="${i} = 136">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:46.908" starttime="20200521 20:21:46.907"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:47.210" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:47.210" starttime="20200521 20:21:46.908"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:47.220" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:47.230" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000509 seconds.</msg>
<msg timestamp="20200521 20:21:47.231" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:47 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:47.231" starttime="20200521 20:21:47.211"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:47.231" starttime="20200521 20:21:46.907"></status>
</kw>
<kw type="foritem" name="${i} = 137">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:47.234" starttime="20200521 20:21:47.232"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:47.540" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:47.540" starttime="20200521 20:21:47.235"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:47.553" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:47.577" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000484 seconds.</msg>
<msg timestamp="20200521 20:21:47.577" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:47 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:47.577" starttime="20200521 20:21:47.541"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:47.577" starttime="20200521 20:21:47.231"></status>
</kw>
<kw type="foritem" name="${i} = 138">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:47.579" starttime="20200521 20:21:47.578"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:47.880" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:47.880" starttime="20200521 20:21:47.579"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:47.890" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:47.900" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00051 seconds.</msg>
<msg timestamp="20200521 20:21:47.901" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:47 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:47.901" starttime="20200521 20:21:47.881"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:47.901" starttime="20200521 20:21:47.578"></status>
</kw>
<kw type="foritem" name="${i} = 139">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:47.902" starttime="20200521 20:21:47.902"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:48.204" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:48.204" starttime="20200521 20:21:47.903"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:48.214" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:48.224" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000394 seconds.</msg>
<msg timestamp="20200521 20:21:48.225" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:48 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:48.225" starttime="20200521 20:21:48.204"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:48.225" starttime="20200521 20:21:47.901"></status>
</kw>
<kw type="foritem" name="${i} = 140">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:48.227" starttime="20200521 20:21:48.226"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:48.528" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:48.528" starttime="20200521 20:21:48.227"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:48.538" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:48.548" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000591 seconds.</msg>
<msg timestamp="20200521 20:21:48.548" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:48 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:48.549" starttime="20200521 20:21:48.528"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:48.549" starttime="20200521 20:21:48.225"></status>
</kw>
<kw type="foritem" name="${i} = 141">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:48.553" starttime="20200521 20:21:48.549"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:48.856" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:48.856" starttime="20200521 20:21:48.553"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:48.867" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:48.877" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000404 seconds.</msg>
<msg timestamp="20200521 20:21:48.878" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:48 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:48.878" starttime="20200521 20:21:48.856"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:48.878" starttime="20200521 20:21:48.549"></status>
</kw>
<kw type="foritem" name="${i} = 142">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:48.879" starttime="20200521 20:21:48.879"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:49.180" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:49.180" starttime="20200521 20:21:48.880"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:49.190" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:49.198" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000405 seconds.</msg>
<msg timestamp="20200521 20:21:49.198" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:49 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:49.198" starttime="20200521 20:21:49.181"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:49.198" starttime="20200521 20:21:48.878"></status>
</kw>
<kw type="foritem" name="${i} = 143">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:49.200" starttime="20200521 20:21:49.199"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:49.501" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:49.501" starttime="20200521 20:21:49.200"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:49.511" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:49.521" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000434 seconds.</msg>
<msg timestamp="20200521 20:21:49.521" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:49 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:49.521" starttime="20200521 20:21:49.501"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:49.521" starttime="20200521 20:21:49.198"></status>
</kw>
<kw type="foritem" name="${i} = 144">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:49.523" starttime="20200521 20:21:49.522"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:49.823" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:49.824" starttime="20200521 20:21:49.523"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:49.834" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:49.844" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00056 seconds.</msg>
<msg timestamp="20200521 20:21:49.844" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:49 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:49.844" starttime="20200521 20:21:49.824"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:49.845" starttime="20200521 20:21:49.522"></status>
</kw>
<kw type="foritem" name="${i} = 145">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:49.846" starttime="20200521 20:21:49.845"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:50.147" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:50.147" starttime="20200521 20:21:49.846"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:50.158" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:50.168" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000466 seconds.</msg>
<msg timestamp="20200521 20:21:50.169" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:50 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:50.169" starttime="20200521 20:21:50.148"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:50.169" starttime="20200521 20:21:49.845"></status>
</kw>
<kw type="foritem" name="${i} = 146">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:50.170" starttime="20200521 20:21:50.169"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:50.471" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:50.471" starttime="20200521 20:21:50.171"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:50.481" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:50.491" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000474000000001 seconds.</msg>
<msg timestamp="20200521 20:21:50.491" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:50 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:50.491" starttime="20200521 20:21:50.472"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:50.492" starttime="20200521 20:21:50.169"></status>
</kw>
<kw type="foritem" name="${i} = 147">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:50.493" starttime="20200521 20:21:50.492"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:50.794" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:50.794" starttime="20200521 20:21:50.493"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:50.804" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:50.814" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000503999999999 seconds.</msg>
<msg timestamp="20200521 20:21:50.815" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:50 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:50.815" starttime="20200521 20:21:50.794"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:50.815" starttime="20200521 20:21:50.492"></status>
</kw>
<kw type="foritem" name="${i} = 148">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:50.816" starttime="20200521 20:21:50.816"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:51.117" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:51.118" starttime="20200521 20:21:50.817"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:51.128" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:51.138" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000522 seconds.</msg>
<msg timestamp="20200521 20:21:51.138" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:51 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:51.139" starttime="20200521 20:21:51.118"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:51.139" starttime="20200521 20:21:50.815"></status>
</kw>
<kw type="foritem" name="${i} = 149">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:51.140" starttime="20200521 20:21:51.139"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:51.441" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:51.441" starttime="20200521 20:21:51.140"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:51.452" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:51.463" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000519000000001 seconds.</msg>
<msg timestamp="20200521 20:21:51.463" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:51 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:51.463" starttime="20200521 20:21:51.441"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:51.463" starttime="20200521 20:21:51.139"></status>
</kw>
<kw type="foritem" name="${i} = 150">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:51.465" starttime="20200521 20:21:51.464"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:51.766" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:51.766" starttime="20200521 20:21:51.465"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:51.777" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:51.787" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000525 seconds.</msg>
<msg timestamp="20200521 20:21:51.787" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:51 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:51.787" starttime="20200521 20:21:51.767"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:51.787" starttime="20200521 20:21:51.464"></status>
</kw>
<kw type="foritem" name="${i} = 151">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:51.789" starttime="20200521 20:21:51.788"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:52.090" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:52.090" starttime="20200521 20:21:51.789"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:52.098" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:52.108" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000425 seconds.</msg>
<msg timestamp="20200521 20:21:52.108" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:52 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:52.108" starttime="20200521 20:21:52.090"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:52.108" starttime="20200521 20:21:51.788"></status>
</kw>
<kw type="foritem" name="${i} = 152">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:52.110" starttime="20200521 20:21:52.109"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:52.411" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:52.411" starttime="20200521 20:21:52.110"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:52.421" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:52.431" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000515 seconds.</msg>
<msg timestamp="20200521 20:21:52.432" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:52 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:52.432" starttime="20200521 20:21:52.411"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:52.432" starttime="20200521 20:21:52.108"></status>
</kw>
<kw type="foritem" name="${i} = 153">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:52.433" starttime="20200521 20:21:52.432"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:52.734" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:52.734" starttime="20200521 20:21:52.434"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:52.742" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:52.753" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000529999999999 seconds.</msg>
<msg timestamp="20200521 20:21:52.753" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:52 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:52.753" starttime="20200521 20:21:52.734"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:52.753" starttime="20200521 20:21:52.432"></status>
</kw>
<kw type="foritem" name="${i} = 154">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:52.755" starttime="20200521 20:21:52.754"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:53.055" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:53.056" starttime="20200521 20:21:52.755"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:53.067" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:53.077" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00077 seconds.</msg>
<msg timestamp="20200521 20:21:53.078" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:53 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:53.078" starttime="20200521 20:21:53.056"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:53.078" starttime="20200521 20:21:52.753"></status>
</kw>
<kw type="foritem" name="${i} = 155">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:53.079" starttime="20200521 20:21:53.079"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:53.380" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:53.380" starttime="20200521 20:21:53.080"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:53.390" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:53.400" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000487000000001 seconds.</msg>
<msg timestamp="20200521 20:21:53.401" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:53 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:53.401" starttime="20200521 20:21:53.381"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:53.401" starttime="20200521 20:21:53.078"></status>
</kw>
<kw type="foritem" name="${i} = 156">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:53.402" starttime="20200521 20:21:53.402"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:53.703" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:53.703" starttime="20200521 20:21:53.403"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:53.713" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:53.724" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000457 seconds.</msg>
<msg timestamp="20200521 20:21:53.724" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:53 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:53.724" starttime="20200521 20:21:53.704"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:53.724" starttime="20200521 20:21:53.401"></status>
</kw>
<kw type="foritem" name="${i} = 157">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:53.726" starttime="20200521 20:21:53.725"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:54.027" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:54.027" starttime="20200521 20:21:53.726"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:54.037" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:54.047" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000401 seconds.</msg>
<msg timestamp="20200521 20:21:54.048" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:54 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:54.048" starttime="20200521 20:21:54.027"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:54.048" starttime="20200521 20:21:53.724"></status>
</kw>
<kw type="foritem" name="${i} = 158">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:54.049" starttime="20200521 20:21:54.048"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:54.350" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:54.350" starttime="20200521 20:21:54.050"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:54.360" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:54.370" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000511 seconds.</msg>
<msg timestamp="20200521 20:21:54.370" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:54 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:54.370" starttime="20200521 20:21:54.351"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:54.370" starttime="20200521 20:21:54.048"></status>
</kw>
<kw type="foritem" name="${i} = 159">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:54.372" starttime="20200521 20:21:54.371"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:54.673" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:54.673" starttime="20200521 20:21:54.372"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:54.682" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:54.692" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000462 seconds.</msg>
<msg timestamp="20200521 20:21:54.692" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:54 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:54.693" starttime="20200521 20:21:54.673"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:54.693" starttime="20200521 20:21:54.371"></status>
</kw>
<kw type="foritem" name="${i} = 160">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:54.694" starttime="20200521 20:21:54.693"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:54.995" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:54.995" starttime="20200521 20:21:54.694"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:55.005" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:55.016" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000413999999999 seconds.</msg>
<msg timestamp="20200521 20:21:55.017" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:55 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:55.017" starttime="20200521 20:21:54.996"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:55.017" starttime="20200521 20:21:54.693"></status>
</kw>
<kw type="foritem" name="${i} = 161">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:55.018" starttime="20200521 20:21:55.018"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:55.320" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:55.320" starttime="20200521 20:21:55.019"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:55.330" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:55.340" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000454 seconds.</msg>
<msg timestamp="20200521 20:21:55.340" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:55 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:55.340" starttime="20200521 20:21:55.320"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:55.341" starttime="20200521 20:21:55.017"></status>
</kw>
<kw type="foritem" name="${i} = 162">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:55.342" starttime="20200521 20:21:55.341"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:55.643" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:55.643" starttime="20200521 20:21:55.342"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:55.653" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:55.665" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000464 seconds.</msg>
<msg timestamp="20200521 20:21:55.666" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:55 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:55.666" starttime="20200521 20:21:55.643"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:55.666" starttime="20200521 20:21:55.341"></status>
</kw>
<kw type="foritem" name="${i} = 163">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:55.667" starttime="20200521 20:21:55.666"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:55.968" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:55.968" starttime="20200521 20:21:55.667"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:55.978" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:55.987" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00047 seconds.</msg>
<msg timestamp="20200521 20:21:55.988" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:55 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:55.988" starttime="20200521 20:21:55.969"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:55.988" starttime="20200521 20:21:55.666"></status>
</kw>
<kw type="foritem" name="${i} = 164">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:55.990" starttime="20200521 20:21:55.989"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:56.290" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:56.291" starttime="20200521 20:21:55.990"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:56.300" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:56.310" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000496 seconds.</msg>
<msg timestamp="20200521 20:21:56.310" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:56 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:56.310" starttime="20200521 20:21:56.291"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:56.310" starttime="20200521 20:21:55.988"></status>
</kw>
<kw type="foritem" name="${i} = 165">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:56.312" starttime="20200521 20:21:56.311"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:56.612" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:56.613" starttime="20200521 20:21:56.312"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:56.622" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:56.632" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000462 seconds.</msg>
<msg timestamp="20200521 20:21:56.633" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:56 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:56.633" starttime="20200521 20:21:56.613"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:56.633" starttime="20200521 20:21:56.310"></status>
</kw>
<kw type="foritem" name="${i} = 166">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:56.634" starttime="20200521 20:21:56.634"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:56.935" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:56.935" starttime="20200521 20:21:56.635"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:56.945" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:56.955" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000459999999999 seconds.</msg>
<msg timestamp="20200521 20:21:56.956" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:56 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:56.956" starttime="20200521 20:21:56.936"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:56.956" starttime="20200521 20:21:56.633"></status>
</kw>
<kw type="foritem" name="${i} = 167">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:56.957" starttime="20200521 20:21:56.956"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:57.258" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:57.258" starttime="20200521 20:21:56.957"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:57.269" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:57.280" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000584 seconds.</msg>
<msg timestamp="20200521 20:21:57.280" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:57 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:57.280" starttime="20200521 20:21:57.259"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:57.280" starttime="20200521 20:21:56.956"></status>
</kw>
<kw type="foritem" name="${i} = 168">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:57.282" starttime="20200521 20:21:57.281"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:57.582" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:57.583" starttime="20200521 20:21:57.282"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:57.592" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:57.602" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000484999999999 seconds.</msg>
<msg timestamp="20200521 20:21:57.603" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:57 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:57.603" starttime="20200521 20:21:57.583"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:57.603" starttime="20200521 20:21:57.280"></status>
</kw>
<kw type="foritem" name="${i} = 169">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:57.604" starttime="20200521 20:21:57.604"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:57.905" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:57.906" starttime="20200521 20:21:57.605"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:57.915" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:57.926" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000474000000001 seconds.</msg>
<msg timestamp="20200521 20:21:57.926" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:57 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:57.926" starttime="20200521 20:21:57.906"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:57.926" starttime="20200521 20:21:57.603"></status>
</kw>
<kw type="foritem" name="${i} = 170">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:57.928" starttime="20200521 20:21:57.927"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200521 20:21:58.229" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200521 20:21:58.229" starttime="20200521 20:21:57.928"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:58.239" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200521 20:21:58.249" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00051 seconds.</msg>
<msg timestamp="20200521 20:21:58.249" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:58 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200521 20:21:58.249" starttime="20200521 20:21:58.229"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.249" starttime="20200521 20:21:57.927"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.249" starttime="20200521 20:21:02.633"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.250" starttime="20200521 20:21:02.624"></status>
</kw>
<kw name="Enable All Tx Port">
<tags>
<tag>Enable Pon Port Tx</tag>
</tags>
<doc>Enable all port function</doc>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:58.261" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/</msg>
<msg timestamp="20200521 20:21:58.278" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/: 0.00057 seconds.</msg>
<msg timestamp="20200521 20:21:58.279" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:58 GMT
connection Keep-Alive
content-type application/json
content-length 1467


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPortCollection.EthernetSwitchPor...</msg>
<status status="PASS" endtime="20200521 20:21:58.279" starttime="20200521 20:21:58.250"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200521 20:21:58.280" level="INFO">Length is 20</msg>
<msg timestamp="20200521 20:21:58.280" level="INFO">${item_count} = 20</msg>
<status status="PASS" endtime="20200521 20:21:58.280" starttime="20200521 20:21:58.280"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Enable All Pon Port Tx ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.281" starttime="20200521 20:21:58.281"></status>
</kw>
<kw type="for" name="${ID} IN RANGE [ 1 | ${item_count} ]">
<kw type="foritem" name="${ID} = 1">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:58.293" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200521 20:21:58.308" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000672 seconds.</msg>
<msg timestamp="20200521 20:21:58.308" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:58 GMT
connection Keep-Alive
content-type application/json
content-length 2398


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:21:58.308" starttime="20200521 20:21:58.283"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:21:58.309" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:21:58.309" starttime="20200521 20:21:58.309"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 20:21:58.310" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200521 20:21:58.310" starttime="20200521 20:21:58.310"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 20:21:58.311" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 20:21:58.311" starttime="20200521 20:21:58.311"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.312" starttime="20200521 20:21:58.312"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.313" starttime="20200521 20:21:58.312"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.314" starttime="20200521 20:21:58.313"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
</arguments>
<kw name="Test Tx Op Up">
<tags>
<tag>Test tx_disable</tag>
</tags>
<doc>Test SFP port tx disable function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OP_UP)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 20:21:58.343" level="INFO">${payload} = {u'OperationalState': u'Up'}</msg>
<status status="PASS" endtime="20200521 20:21:58.343" starttime="20200521 20:21:58.317"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<msg timestamp="20200521 20:21:58.355" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200521 20:21:58.388" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000639000000001 seconds.</msg>
<status status="PASS" endtime="20200521 20:21:58.389" starttime="20200521 20:21:58.343"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.389" starttime="20200521 20:21:58.316"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.389" starttime="20200521 20:21:58.315"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.389" starttime="20200521 20:21:58.314"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.389" starttime="20200521 20:21:58.282"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.390" starttime="20200521 20:21:58.282"></status>
</kw>
<kw type="foritem" name="${ID} = 2">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:58.401" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/2</msg>
<msg timestamp="20200521 20:21:58.412" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/2: 0.00054 seconds.</msg>
<msg timestamp="20200521 20:21:58.413" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:58 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:21:58.413" starttime="20200521 20:21:58.391"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:21:58.414" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:21:58.414" starttime="20200521 20:21:58.413"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 20:21:58.415" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 20:21:58.415" starttime="20200521 20:21:58.414"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 20:21:58.416" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 20:21:58.416" starttime="20200521 20:21:58.415"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.417" starttime="20200521 20:21:58.416"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.418" starttime="20200521 20:21:58.417"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.419" starttime="20200521 20:21:58.418"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.420" starttime="20200521 20:21:58.420"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.420" starttime="20200521 20:21:58.419"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.421" starttime="20200521 20:21:58.390"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.421" starttime="20200521 20:21:58.390"></status>
</kw>
<kw type="foritem" name="${ID} = 3">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:58.432" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/3</msg>
<msg timestamp="20200521 20:21:58.457" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/3: 0.000551 seconds.</msg>
<msg timestamp="20200521 20:21:58.458" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:58 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:21:58.458" starttime="20200521 20:21:58.422"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:21:58.459" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:21:58.459" starttime="20200521 20:21:58.458"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 20:21:58.461" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 20:21:58.461" starttime="20200521 20:21:58.459"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 20:21:58.462" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 20:21:58.462" starttime="20200521 20:21:58.461"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.463" starttime="20200521 20:21:58.462"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.464" starttime="20200521 20:21:58.463"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.465" starttime="20200521 20:21:58.464"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.466" starttime="20200521 20:21:58.466"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.467" starttime="20200521 20:21:58.465"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.467" starttime="20200521 20:21:58.421"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.467" starttime="20200521 20:21:58.421"></status>
</kw>
<kw type="foritem" name="${ID} = 4">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:58.477" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/4</msg>
<msg timestamp="20200521 20:21:58.488" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/4: 0.000567 seconds.</msg>
<msg timestamp="20200521 20:21:58.489" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:58 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:21:58.489" starttime="20200521 20:21:58.468"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:21:58.490" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:21:58.490" starttime="20200521 20:21:58.490"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 20:21:58.491" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 20:21:58.491" starttime="20200521 20:21:58.491"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 20:21:58.492" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 20:21:58.492" starttime="20200521 20:21:58.492"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.493" starttime="20200521 20:21:58.493"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.494" starttime="20200521 20:21:58.493"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.495" starttime="20200521 20:21:58.494"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.497" starttime="20200521 20:21:58.496"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.497" starttime="20200521 20:21:58.495"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.497" starttime="20200521 20:21:58.467"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.497" starttime="20200521 20:21:58.467"></status>
</kw>
<kw type="foritem" name="${ID} = 5">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:58.508" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/5</msg>
<msg timestamp="20200521 20:21:58.517" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/5: 0.000663 seconds.</msg>
<msg timestamp="20200521 20:21:58.518" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:58 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:21:58.518" starttime="20200521 20:21:58.498"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:21:58.519" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:21:58.519" starttime="20200521 20:21:58.518"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 20:21:58.551" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 20:21:58.551" starttime="20200521 20:21:58.519"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 20:21:58.553" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 20:21:58.553" starttime="20200521 20:21:58.552"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.554" starttime="20200521 20:21:58.553"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.555" starttime="20200521 20:21:58.554"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.556" starttime="20200521 20:21:58.555"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.557" starttime="20200521 20:21:58.557"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.557" starttime="20200521 20:21:58.556"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.558" starttime="20200521 20:21:58.497"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.558" starttime="20200521 20:21:58.497"></status>
</kw>
<kw type="foritem" name="${ID} = 6">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:58.569" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/6</msg>
<msg timestamp="20200521 20:21:58.579" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/6: 0.000619 seconds.</msg>
<msg timestamp="20200521 20:21:58.580" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:58 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:21:58.580" starttime="20200521 20:21:58.559"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:21:58.581" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:21:58.581" starttime="20200521 20:21:58.580"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 20:21:58.582" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 20:21:58.582" starttime="20200521 20:21:58.582"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 20:21:58.583" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 20:21:58.583" starttime="20200521 20:21:58.582"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.584" starttime="20200521 20:21:58.583"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.585" starttime="20200521 20:21:58.584"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.586" starttime="20200521 20:21:58.585"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.587" starttime="20200521 20:21:58.587"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.588" starttime="20200521 20:21:58.586"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.588" starttime="20200521 20:21:58.558"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.588" starttime="20200521 20:21:58.558"></status>
</kw>
<kw type="foritem" name="${ID} = 7">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:58.599" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/7</msg>
<msg timestamp="20200521 20:21:58.608" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/7: 0.000478999999999 seconds.</msg>
<msg timestamp="20200521 20:21:58.608" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:58 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:21:58.609" starttime="20200521 20:21:58.589"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:21:58.610" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:21:58.610" starttime="20200521 20:21:58.609"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 20:21:58.611" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 20:21:58.611" starttime="20200521 20:21:58.610"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 20:21:58.612" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 20:21:58.612" starttime="20200521 20:21:58.611"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.613" starttime="20200521 20:21:58.612"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.614" starttime="20200521 20:21:58.613"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.615" starttime="20200521 20:21:58.614"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.616" starttime="20200521 20:21:58.616"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.616" starttime="20200521 20:21:58.615"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.616" starttime="20200521 20:21:58.588"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.617" starttime="20200521 20:21:58.588"></status>
</kw>
<kw type="foritem" name="${ID} = 8">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:58.665" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/8</msg>
<msg timestamp="20200521 20:21:58.675" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/8: 0.000558 seconds.</msg>
<msg timestamp="20200521 20:21:58.676" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:58 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:21:58.676" starttime="20200521 20:21:58.654"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:21:58.677" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:21:58.677" starttime="20200521 20:21:58.676"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 20:21:58.678" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 20:21:58.678" starttime="20200521 20:21:58.677"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 20:21:58.679" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 20:21:58.679" starttime="20200521 20:21:58.678"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.680" starttime="20200521 20:21:58.679"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.680" starttime="20200521 20:21:58.680"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.681" starttime="20200521 20:21:58.681"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.683" starttime="20200521 20:21:58.682"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.683" starttime="20200521 20:21:58.682"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.683" starttime="20200521 20:21:58.653"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.683" starttime="20200521 20:21:58.617"></status>
</kw>
<kw type="foritem" name="${ID} = 9">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:58.694" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/9</msg>
<msg timestamp="20200521 20:21:58.704" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/9: 0.000461 seconds.</msg>
<msg timestamp="20200521 20:21:58.705" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:58 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:21:58.705" starttime="20200521 20:21:58.684"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:21:58.706" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:21:58.706" starttime="20200521 20:21:58.705"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 20:21:58.707" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 20:21:58.707" starttime="20200521 20:21:58.706"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 20:21:58.707" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 20:21:58.708" starttime="20200521 20:21:58.707"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.708" starttime="20200521 20:21:58.708"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.709" starttime="20200521 20:21:58.709"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.710" starttime="20200521 20:21:58.709"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.712" starttime="20200521 20:21:58.711"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.712" starttime="20200521 20:21:58.711"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.712" starttime="20200521 20:21:58.683"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.712" starttime="20200521 20:21:58.683"></status>
</kw>
<kw type="foritem" name="${ID} = 10">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:58.759" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/10</msg>
<msg timestamp="20200521 20:21:58.771" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/10: 0.000558999999999 seconds.</msg>
<msg timestamp="20200521 20:21:58.771" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:58 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:21:58.771" starttime="20200521 20:21:58.713"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:21:58.772" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:21:58.772" starttime="20200521 20:21:58.772"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 20:21:58.773" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 20:21:58.774" starttime="20200521 20:21:58.773"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 20:21:58.774" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 20:21:58.774" starttime="20200521 20:21:58.774"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.775" starttime="20200521 20:21:58.775"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.776" starttime="20200521 20:21:58.776"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.777" starttime="20200521 20:21:58.776"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.779" starttime="20200521 20:21:58.778"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.779" starttime="20200521 20:21:58.778"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.779" starttime="20200521 20:21:58.712"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.779" starttime="20200521 20:21:58.712"></status>
</kw>
<kw type="foritem" name="${ID} = 11">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:58.790" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/11</msg>
<msg timestamp="20200521 20:21:58.801" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/11: 0.000522 seconds.</msg>
<msg timestamp="20200521 20:21:58.801" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:58 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:21:58.801" starttime="20200521 20:21:58.780"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:21:58.802" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:21:58.802" starttime="20200521 20:21:58.802"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 20:21:58.803" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 20:21:58.803" starttime="20200521 20:21:58.803"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 20:21:58.804" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 20:21:58.804" starttime="20200521 20:21:58.804"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.805" starttime="20200521 20:21:58.804"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.806" starttime="20200521 20:21:58.805"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.807" starttime="20200521 20:21:58.806"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.808" starttime="20200521 20:21:58.808"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.808" starttime="20200521 20:21:58.807"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.808" starttime="20200521 20:21:58.779"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.809" starttime="20200521 20:21:58.779"></status>
</kw>
<kw type="foritem" name="${ID} = 12">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:58.819" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/12</msg>
<msg timestamp="20200521 20:21:58.830" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/12: 0.000509000000001 seconds.</msg>
<msg timestamp="20200521 20:21:58.856" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:58 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:21:58.857" starttime="20200521 20:21:58.809"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:21:58.858" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:21:58.858" starttime="20200521 20:21:58.857"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 20:21:58.859" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 20:21:58.859" starttime="20200521 20:21:58.858"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 20:21:58.860" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 20:21:58.860" starttime="20200521 20:21:58.859"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.862" starttime="20200521 20:21:58.861"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.862" starttime="20200521 20:21:58.862"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.863" starttime="20200521 20:21:58.863"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.865" starttime="20200521 20:21:58.864"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.865" starttime="20200521 20:21:58.864"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.865" starttime="20200521 20:21:58.809"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.865" starttime="20200521 20:21:58.809"></status>
</kw>
<kw type="foritem" name="${ID} = 13">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:58.876" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/13</msg>
<msg timestamp="20200521 20:21:58.887" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/13: 0.000614000000001 seconds.</msg>
<msg timestamp="20200521 20:21:58.887" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:58 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:21:58.887" starttime="20200521 20:21:58.866"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:21:58.888" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:21:58.889" starttime="20200521 20:21:58.888"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 20:21:58.890" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 20:21:58.890" starttime="20200521 20:21:58.889"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 20:21:58.890" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 20:21:58.890" starttime="20200521 20:21:58.890"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.891" starttime="20200521 20:21:58.891"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.892" starttime="20200521 20:21:58.891"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.895" starttime="20200521 20:21:58.892"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.896" starttime="20200521 20:21:58.896"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.896" starttime="20200521 20:21:58.895"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.897" starttime="20200521 20:21:58.865"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.897" starttime="20200521 20:21:58.865"></status>
</kw>
<kw type="foritem" name="${ID} = 14">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:58.907" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/14</msg>
<msg timestamp="20200521 20:21:58.918" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/14: 0.000489999999999 seconds.</msg>
<msg timestamp="20200521 20:21:58.919" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:58 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:21:58.919" starttime="20200521 20:21:58.898"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:21:58.920" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:21:58.920" starttime="20200521 20:21:58.919"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 20:21:58.921" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 20:21:58.921" starttime="20200521 20:21:58.920"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 20:21:58.922" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 20:21:58.922" starttime="20200521 20:21:58.921"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.922" starttime="20200521 20:21:58.922"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.923" starttime="20200521 20:21:58.923"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.960" starttime="20200521 20:21:58.923"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.962" starttime="20200521 20:21:58.962"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.962" starttime="20200521 20:21:58.961"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.963" starttime="20200521 20:21:58.897"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.963" starttime="20200521 20:21:58.897"></status>
</kw>
<kw type="foritem" name="${ID} = 15">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:58.974" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/15</msg>
<msg timestamp="20200521 20:21:58.984" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/15: 0.000456 seconds.</msg>
<msg timestamp="20200521 20:21:58.985" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:58 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:21:58.985" starttime="20200521 20:21:58.964"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:21:58.986" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:21:58.986" starttime="20200521 20:21:58.985"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 20:21:58.987" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 20:21:58.987" starttime="20200521 20:21:58.986"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 20:21:58.988" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 20:21:58.988" starttime="20200521 20:21:58.987"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.988" starttime="20200521 20:21:58.988"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.990" starttime="20200521 20:21:58.989"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.991" starttime="20200521 20:21:58.990"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:58.993" starttime="20200521 20:21:58.992"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.993" starttime="20200521 20:21:58.992"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.994" starttime="20200521 20:21:58.963"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:58.994" starttime="20200521 20:21:58.963"></status>
</kw>
<kw type="foritem" name="${ID} = 16">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:59.004" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/16</msg>
<msg timestamp="20200521 20:21:59.023" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/16: 0.000485000000001 seconds.</msg>
<msg timestamp="20200521 20:21:59.024" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:59 GMT
connection Keep-Alive
content-type application/json
content-length 2398


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:21:59.024" starttime="20200521 20:21:58.995"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:21:59.025" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:21:59.025" starttime="20200521 20:21:59.024"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 20:21:59.026" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200521 20:21:59.026" starttime="20200521 20:21:59.025"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 20:21:59.027" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200521 20:21:59.027" starttime="20200521 20:21:59.026"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:59.027" starttime="20200521 20:21:59.027"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:59.028" starttime="20200521 20:21:59.028"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:59.029" starttime="20200521 20:21:59.029"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
</arguments>
<kw name="Test Tx Op Up">
<tags>
<tag>Test tx_disable</tag>
</tags>
<doc>Test SFP port tx disable function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OP_UP)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200521 20:21:59.037" level="INFO">${payload} = {u'OperationalState': u'Up'}</msg>
<status status="PASS" endtime="20200521 20:21:59.037" starttime="20200521 20:21:59.032"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<msg timestamp="20200521 20:21:59.066" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/16</msg>
<msg timestamp="20200521 20:21:59.089" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/16: 0.000579999999999 seconds.</msg>
<status status="PASS" endtime="20200521 20:21:59.090" starttime="20200521 20:21:59.037"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:59.090" starttime="20200521 20:21:59.031"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:59.090" starttime="20200521 20:21:59.031"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:59.090" starttime="20200521 20:21:59.030"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:59.090" starttime="20200521 20:21:58.994"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:59.091" starttime="20200521 20:21:58.994"></status>
</kw>
<kw type="foritem" name="${ID} = 17">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:59.102" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/17</msg>
<msg timestamp="20200521 20:21:59.630" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/17: 0.000546 seconds.</msg>
<msg timestamp="20200521 20:21:59.630" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:59 GMT
connection Keep-Alive
content-type application/json
content-length 2450


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:21:59.630" starttime="20200521 20:21:59.092"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:21:59.631" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:21:59.631" starttime="20200521 20:21:59.631"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 20:21:59.632" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200521 20:21:59.632" starttime="20200521 20:21:59.632"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 20:21:59.633" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200521 20:21:59.633" starttime="20200521 20:21:59.633"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:59.634" starttime="20200521 20:21:59.634"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:59.635" starttime="20200521 20:21:59.635"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:59.636" starttime="20200521 20:21:59.635"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:59.638" starttime="20200521 20:21:59.637"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:59.638" starttime="20200521 20:21:59.636"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:59.638" starttime="20200521 20:21:59.091"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:59.638" starttime="20200521 20:21:59.091"></status>
</kw>
<kw type="foritem" name="${ID} = 18">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:59.652" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/18</msg>
<msg timestamp="20200521 20:21:59.666" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/18: 0.00062 seconds.</msg>
<msg timestamp="20200521 20:21:59.667" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:59 GMT
connection Keep-Alive
content-type application/json
content-length 2430


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:21:59.667" starttime="20200521 20:21:59.639"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:21:59.668" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:21:59.668" starttime="20200521 20:21:59.667"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 20:21:59.669" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200521 20:21:59.669" starttime="20200521 20:21:59.668"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 20:21:59.670" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200521 20:21:59.670" starttime="20200521 20:21:59.669"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:59.671" starttime="20200521 20:21:59.670"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:59.672" starttime="20200521 20:21:59.671"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:59.673" starttime="20200521 20:21:59.672"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:59.674" starttime="20200521 20:21:59.674"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:59.674" starttime="20200521 20:21:59.673"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:59.674" starttime="20200521 20:21:59.638"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:59.674" starttime="20200521 20:21:59.638"></status>
</kw>
<kw type="foritem" name="${ID} = 19">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200521 20:21:59.685" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/19</msg>
<msg timestamp="20200521 20:21:59.696" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/19: 0.000385 seconds.</msg>
<msg timestamp="20200521 20:21:59.697" level="INFO">${resp} = 200
date Thu, 21 May 2020 12:21:59 GMT
connection Keep-Alive
content-type application/json
content-length 1056


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200521 20:21:59.697" starttime="20200521 20:21:59.675"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200521 20:21:59.698" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200521 20:21:59.698" starttime="20200521 20:21:59.697"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200521 20:21:59.699" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200521 20:21:59.699" starttime="20200521 20:21:59.698"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200521 20:21:59.700" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200521 20:21:59.700" starttime="20200521 20:21:59.699"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:59.700" starttime="20200521 20:21:59.700"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:59.701" starttime="20200521 20:21:59.701"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:59.702" starttime="20200521 20:21:59.702"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200521 20:21:59.704" starttime="20200521 20:21:59.703"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:59.704" starttime="20200521 20:21:59.703"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:59.704" starttime="20200521 20:21:59.675"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:59.704" starttime="20200521 20:21:59.675"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:59.704" starttime="20200521 20:21:58.282"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:59.704" starttime="20200521 20:21:58.250"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:59.704" starttime="20200521 20:21:02.624"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200521 20:21:59.725" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200521 20:21:59.735" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000467 seconds.</msg>
<msg timestamp="20200521 20:21:59.736" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200521 20:21:59.736" starttime="20200521 20:21:59.705"></status>
</kw>
<status status="PASS" endtime="20200521 20:21:59.736" starttime="20200521 20:21:59.705"></status>
</kw>
<doc>Test omci send</doc>
<tags>
<tag>Test omci send</tag>
</tags>
<status status="PASS" endtime="20200521 20:21:59.736" critical="yes" starttime="20200521 20:21:02.600"></status>
</test>
<doc>Test BAL Rstful functionality.</doc>
<status status="PASS" endtime="20200521 20:21:59.738" starttime="20200521 20:17:32.921"></status>
</suite>
<status status="PASS" endtime="20200521 20:21:59.742" starttime="20200521 20:17:32.897"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="4">Critical Tests</stat>
<stat fail="0" pass="4">All Tests</stat>
</total>
<tag>
<stat fail="0" pass="1">Test Bal Restful opertaion test</stat>
<stat fail="0" pass="1">Test Flow add</stat>
<stat fail="0" pass="1">Test omci send</stat>
<stat fail="0" pass="1">Test ONU Rnage test</stat>
</tag>
<suite>
<stat fail="0" id="s1" name="Bal Test" pass="4">Bal Test</stat>
<stat fail="0" id="s1-s1" name="Test Bal" pass="4">Bal Test.Test Bal</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
