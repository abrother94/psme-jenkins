<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200601 14:10:28.048" generator="Robot 3.1.1 (Python 2.7.12 on linux2)">
<suite source="/home/voltha/workspace/XGSPON/6_Bal_Resf_API_Test/RF_Auto_Test/bal_test" id="s1" name="Bal Test">
<suite source="/home/voltha/workspace/XGSPON/6_Bal_Resf_API_Test/RF_Auto_Test/bal_test/test_bal.robot" id="s1-s1" name="Test Bal">
<test id="s1-s1-t1" name="Verify Restful API for BAL Test">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200601 14:10:28.880" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200601 14:10:28.906" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000515 seconds.</msg>
<msg timestamp="20200601 14:10:28.906" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200601 14:10:28.907" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200601 14:10:28.907" starttime="20200601 14:10:28.874"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:28.907" starttime="20200601 14:10:28.874"></status>
</kw>
<kw name="Test Bal Component">
<tags>
<tag>Bal_Component</tag>
</tags>
<doc>Do basic test 1.Enable All PON MAC PON NNI port enable/disable.</doc>
<kw name="Disable All Tx Port">
<tags>
<tag>Disable Pon Port Tx</tag>
</tags>
<doc>Disable all port function</doc>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:28.914" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/</msg>
<msg timestamp="20200601 14:10:29.194" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/: 0.000504 seconds.</msg>
<msg timestamp="20200601 14:10:29.194" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:30 GMT
connection Keep-Alive
content-type application/json
content-length 1467


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPortCollection.EthernetSwitchPor...</msg>
<status status="PASS" endtime="20200601 14:10:29.194" starttime="20200601 14:10:28.908"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200601 14:10:29.195" level="INFO">Length is 20</msg>
<msg timestamp="20200601 14:10:29.195" level="INFO">${item_count} = 20</msg>
<status status="PASS" endtime="20200601 14:10:29.195" starttime="20200601 14:10:29.195"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable All Pon Port ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.196" starttime="20200601 14:10:29.196"></status>
</kw>
<kw type="for" name="${ID} IN RANGE [ 1 | ${item_count} ]">
<kw type="foritem" name="${ID} = 1">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:29.203" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200601 14:10:29.304" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000306 seconds.</msg>
<msg timestamp="20200601 14:10:29.305" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:30 GMT
connection Keep-Alive
content-type application/json
content-length 2322


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:10:29.305" starttime="20200601 14:10:29.197"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:29.306" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:29.306" starttime="20200601 14:10:29.305"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:10:29.306" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200601 14:10:29.307" starttime="20200601 14:10:29.306"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:10:29.307" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:10:29.307" starttime="20200601 14:10:29.307"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.308" starttime="20200601 14:10:29.307"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.308" starttime="20200601 14:10:29.308"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.309" starttime="20200601 14:10:29.309"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
</arguments>
<kw name="Test Tx Op Down">
<tags>
<tag>Test tx_disable</tag>
</tags>
<doc>Test SFP port tx disable function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OP_DOWN)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200601 14:10:29.314" level="INFO">${payload} = {u'OperationalState': u'Down'}</msg>
<status status="PASS" endtime="20200601 14:10:29.314" starttime="20200601 14:10:29.311"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<msg timestamp="20200601 14:10:29.321" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200601 14:10:29.387" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000484 seconds.</msg>
<status status="PASS" endtime="20200601 14:10:29.387" starttime="20200601 14:10:29.314"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.387" starttime="20200601 14:10:29.310"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.388" starttime="20200601 14:10:29.310"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.388" starttime="20200601 14:10:29.309"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.388" starttime="20200601 14:10:29.196"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.388" starttime="20200601 14:10:29.196"></status>
</kw>
<kw type="foritem" name="${ID} = 2">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:29.394" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/2</msg>
<msg timestamp="20200601 14:10:29.416" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/2: 0.000335 seconds.</msg>
<msg timestamp="20200601 14:10:29.416" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:30 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:10:29.416" starttime="20200601 14:10:29.388"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:29.417" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:29.417" starttime="20200601 14:10:29.417"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:10:29.418" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:10:29.418" starttime="20200601 14:10:29.418"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:10:29.418" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:10:29.418" starttime="20200601 14:10:29.418"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.419" starttime="20200601 14:10:29.418"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.419" starttime="20200601 14:10:29.419"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.420" starttime="20200601 14:10:29.420"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.421" starttime="20200601 14:10:29.421"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.421" starttime="20200601 14:10:29.420"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.421" starttime="20200601 14:10:29.388"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.421" starttime="20200601 14:10:29.388"></status>
</kw>
<kw type="foritem" name="${ID} = 3">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:29.428" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/3</msg>
<msg timestamp="20200601 14:10:29.451" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/3: 0.000307 seconds.</msg>
<msg timestamp="20200601 14:10:29.451" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:30 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:10:29.451" starttime="20200601 14:10:29.422"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:29.452" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:29.452" starttime="20200601 14:10:29.451"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:10:29.453" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:10:29.453" starttime="20200601 14:10:29.452"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:10:29.453" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:10:29.453" starttime="20200601 14:10:29.453"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.454" starttime="20200601 14:10:29.453"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.454" starttime="20200601 14:10:29.454"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.455" starttime="20200601 14:10:29.454"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.456" starttime="20200601 14:10:29.455"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.456" starttime="20200601 14:10:29.455"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.456" starttime="20200601 14:10:29.422"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.456" starttime="20200601 14:10:29.421"></status>
</kw>
<kw type="foritem" name="${ID} = 4">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:29.462" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/4</msg>
<msg timestamp="20200601 14:10:29.486" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/4: 0.000351 seconds.</msg>
<msg timestamp="20200601 14:10:29.487" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:30 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:10:29.487" starttime="20200601 14:10:29.456"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:29.487" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:29.487" starttime="20200601 14:10:29.487"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:10:29.488" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:10:29.488" starttime="20200601 14:10:29.488"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:10:29.489" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:10:29.489" starttime="20200601 14:10:29.488"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.489" starttime="20200601 14:10:29.489"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.490" starttime="20200601 14:10:29.489"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.490" starttime="20200601 14:10:29.490"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.491" starttime="20200601 14:10:29.491"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.491" starttime="20200601 14:10:29.491"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.491" starttime="20200601 14:10:29.456"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.491" starttime="20200601 14:10:29.456"></status>
</kw>
<kw type="foritem" name="${ID} = 5">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:29.498" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/5</msg>
<msg timestamp="20200601 14:10:29.521" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/5: 0.000315 seconds.</msg>
<msg timestamp="20200601 14:10:29.522" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:30 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:10:29.522" starttime="20200601 14:10:29.492"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:29.522" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:29.523" starttime="20200601 14:10:29.522"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:10:29.523" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:10:29.523" starttime="20200601 14:10:29.523"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:10:29.524" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:10:29.524" starttime="20200601 14:10:29.523"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.524" starttime="20200601 14:10:29.524"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.525" starttime="20200601 14:10:29.524"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.525" starttime="20200601 14:10:29.525"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.526" starttime="20200601 14:10:29.526"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.526" starttime="20200601 14:10:29.526"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.527" starttime="20200601 14:10:29.492"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.527" starttime="20200601 14:10:29.491"></status>
</kw>
<kw type="foritem" name="${ID} = 6">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:29.534" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/6</msg>
<msg timestamp="20200601 14:10:29.555" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/6: 0.000317 seconds.</msg>
<msg timestamp="20200601 14:10:29.556" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:30 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:10:29.556" starttime="20200601 14:10:29.528"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:29.556" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:29.557" starttime="20200601 14:10:29.556"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:10:29.557" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:10:29.557" starttime="20200601 14:10:29.557"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:10:29.558" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:10:29.558" starttime="20200601 14:10:29.557"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.558" starttime="20200601 14:10:29.558"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.559" starttime="20200601 14:10:29.558"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.559" starttime="20200601 14:10:29.559"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.560" starttime="20200601 14:10:29.560"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.560" starttime="20200601 14:10:29.560"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.560" starttime="20200601 14:10:29.527"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.560" starttime="20200601 14:10:29.527"></status>
</kw>
<kw type="foritem" name="${ID} = 7">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:29.567" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/7</msg>
<msg timestamp="20200601 14:10:29.590" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/7: 0.000294 seconds.</msg>
<msg timestamp="20200601 14:10:29.591" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:30 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:10:29.591" starttime="20200601 14:10:29.561"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:29.591" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:29.591" starttime="20200601 14:10:29.591"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:10:29.592" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:10:29.592" starttime="20200601 14:10:29.592"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:10:29.593" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:10:29.593" starttime="20200601 14:10:29.592"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.593" starttime="20200601 14:10:29.593"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.594" starttime="20200601 14:10:29.593"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.595" starttime="20200601 14:10:29.595"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.597" starttime="20200601 14:10:29.596"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.597" starttime="20200601 14:10:29.596"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.597" starttime="20200601 14:10:29.561"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.597" starttime="20200601 14:10:29.561"></status>
</kw>
<kw type="foritem" name="${ID} = 8">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:29.603" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/8</msg>
<msg timestamp="20200601 14:10:29.627" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/8: 0.000289 seconds.</msg>
<msg timestamp="20200601 14:10:29.628" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:30 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:10:29.628" starttime="20200601 14:10:29.598"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:29.629" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:29.629" starttime="20200601 14:10:29.628"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:10:29.629" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:10:29.629" starttime="20200601 14:10:29.629"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:10:29.630" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:10:29.630" starttime="20200601 14:10:29.630"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.631" starttime="20200601 14:10:29.630"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.631" starttime="20200601 14:10:29.631"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.632" starttime="20200601 14:10:29.631"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.633" starttime="20200601 14:10:29.632"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.633" starttime="20200601 14:10:29.632"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.633" starttime="20200601 14:10:29.597"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.633" starttime="20200601 14:10:29.597"></status>
</kw>
<kw type="foritem" name="${ID} = 9">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:29.641" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/9</msg>
<msg timestamp="20200601 14:10:29.664" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/9: 0.000305 seconds.</msg>
<msg timestamp="20200601 14:10:29.665" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:31 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:10:29.665" starttime="20200601 14:10:29.633"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:29.665" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:29.665" starttime="20200601 14:10:29.665"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:10:29.666" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:10:29.666" starttime="20200601 14:10:29.666"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:10:29.667" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:10:29.667" starttime="20200601 14:10:29.666"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.667" starttime="20200601 14:10:29.667"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.668" starttime="20200601 14:10:29.667"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.668" starttime="20200601 14:10:29.668"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.669" starttime="20200601 14:10:29.669"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.669" starttime="20200601 14:10:29.668"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.670" starttime="20200601 14:10:29.633"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.670" starttime="20200601 14:10:29.633"></status>
</kw>
<kw type="foritem" name="${ID} = 10">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:29.681" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/10</msg>
<msg timestamp="20200601 14:10:29.708" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/10: 0.000312 seconds.</msg>
<msg timestamp="20200601 14:10:29.709" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:31 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:10:29.709" starttime="20200601 14:10:29.670"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:29.710" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:29.710" starttime="20200601 14:10:29.709"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:10:29.710" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:10:29.710" starttime="20200601 14:10:29.710"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:10:29.711" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:10:29.711" starttime="20200601 14:10:29.711"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.711" starttime="20200601 14:10:29.711"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.712" starttime="20200601 14:10:29.712"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.713" starttime="20200601 14:10:29.712"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.714" starttime="20200601 14:10:29.714"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.714" starttime="20200601 14:10:29.713"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.714" starttime="20200601 14:10:29.670"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.714" starttime="20200601 14:10:29.670"></status>
</kw>
<kw type="foritem" name="${ID} = 11">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:29.721" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/11</msg>
<msg timestamp="20200601 14:10:29.744" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/11: 0.000314 seconds.</msg>
<msg timestamp="20200601 14:10:29.745" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:31 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:10:29.745" starttime="20200601 14:10:29.715"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:29.745" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:29.746" starttime="20200601 14:10:29.745"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:10:29.746" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:10:29.746" starttime="20200601 14:10:29.746"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:10:29.747" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:10:29.747" starttime="20200601 14:10:29.746"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.747" starttime="20200601 14:10:29.747"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.748" starttime="20200601 14:10:29.747"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.748" starttime="20200601 14:10:29.748"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.749" starttime="20200601 14:10:29.749"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.749" starttime="20200601 14:10:29.749"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.750" starttime="20200601 14:10:29.714"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.750" starttime="20200601 14:10:29.714"></status>
</kw>
<kw type="foritem" name="${ID} = 12">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:29.756" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/12</msg>
<msg timestamp="20200601 14:10:29.780" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/12: 0.000325 seconds.</msg>
<msg timestamp="20200601 14:10:29.780" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:31 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:10:29.780" starttime="20200601 14:10:29.750"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:29.781" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:29.781" starttime="20200601 14:10:29.781"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:10:29.782" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:10:29.782" starttime="20200601 14:10:29.781"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:10:29.782" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:10:29.782" starttime="20200601 14:10:29.782"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.783" starttime="20200601 14:10:29.782"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.783" starttime="20200601 14:10:29.783"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.784" starttime="20200601 14:10:29.784"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.785" starttime="20200601 14:10:29.785"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.785" starttime="20200601 14:10:29.784"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.785" starttime="20200601 14:10:29.750"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.785" starttime="20200601 14:10:29.750"></status>
</kw>
<kw type="foritem" name="${ID} = 13">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:29.792" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/13</msg>
<msg timestamp="20200601 14:10:29.816" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/13: 0.000428 seconds.</msg>
<msg timestamp="20200601 14:10:29.817" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:31 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:10:29.817" starttime="20200601 14:10:29.786"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:29.818" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:29.818" starttime="20200601 14:10:29.817"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:10:29.818" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:10:29.818" starttime="20200601 14:10:29.818"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:10:29.819" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:10:29.819" starttime="20200601 14:10:29.818"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.819" starttime="20200601 14:10:29.819"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.820" starttime="20200601 14:10:29.819"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.820" starttime="20200601 14:10:29.820"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.821" starttime="20200601 14:10:29.821"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.821" starttime="20200601 14:10:29.821"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.821" starttime="20200601 14:10:29.785"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.821" starttime="20200601 14:10:29.785"></status>
</kw>
<kw type="foritem" name="${ID} = 14">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:29.828" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/14</msg>
<msg timestamp="20200601 14:10:29.851" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/14: 0.000384 seconds.</msg>
<msg timestamp="20200601 14:10:29.851" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:31 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:10:29.851" starttime="20200601 14:10:29.822"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:29.852" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:29.852" starttime="20200601 14:10:29.852"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:10:29.853" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:10:29.853" starttime="20200601 14:10:29.852"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:10:29.853" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:10:29.853" starttime="20200601 14:10:29.853"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.854" starttime="20200601 14:10:29.853"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.855" starttime="20200601 14:10:29.854"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.856" starttime="20200601 14:10:29.855"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.857" starttime="20200601 14:10:29.857"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.858" starttime="20200601 14:10:29.856"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.858" starttime="20200601 14:10:29.822"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.858" starttime="20200601 14:10:29.822"></status>
</kw>
<kw type="foritem" name="${ID} = 15">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:29.864" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/15</msg>
<msg timestamp="20200601 14:10:29.887" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/15: 0.000318 seconds.</msg>
<msg timestamp="20200601 14:10:29.888" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:31 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:10:29.888" starttime="20200601 14:10:29.858"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:29.889" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:29.889" starttime="20200601 14:10:29.888"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:10:29.890" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:10:29.890" starttime="20200601 14:10:29.889"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:10:29.891" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:10:29.891" starttime="20200601 14:10:29.890"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.891" starttime="20200601 14:10:29.891"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.892" starttime="20200601 14:10:29.892"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.893" starttime="20200601 14:10:29.893"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.894" starttime="20200601 14:10:29.894"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.894" starttime="20200601 14:10:29.893"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.895" starttime="20200601 14:10:29.858"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.895" starttime="20200601 14:10:29.858"></status>
</kw>
<kw type="foritem" name="${ID} = 16">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:29.901" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/16</msg>
<msg timestamp="20200601 14:10:29.923" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/16: 0.000313 seconds.</msg>
<msg timestamp="20200601 14:10:29.923" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:31 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:10:29.923" starttime="20200601 14:10:29.895"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:29.924" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:29.924" starttime="20200601 14:10:29.923"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:10:29.924" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:10:29.924" starttime="20200601 14:10:29.924"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:10:29.925" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:10:29.925" starttime="20200601 14:10:29.925"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.925" starttime="20200601 14:10:29.925"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.926" starttime="20200601 14:10:29.926"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.927" starttime="20200601 14:10:29.927"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.928" starttime="20200601 14:10:29.928"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.928" starttime="20200601 14:10:29.928"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.929" starttime="20200601 14:10:29.895"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.929" starttime="20200601 14:10:29.895"></status>
</kw>
<kw type="foritem" name="${ID} = 17">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:29.941" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/17</msg>
<msg timestamp="20200601 14:10:29.964" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/17: 0.000336 seconds.</msg>
<msg timestamp="20200601 14:10:29.965" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:31 GMT
connection Keep-Alive
content-type application/json
content-length 2438


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:10:29.965" starttime="20200601 14:10:29.929"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:29.965" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:29.965" starttime="20200601 14:10:29.965"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:10:29.966" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200601 14:10:29.966" starttime="20200601 14:10:29.966"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:10:29.967" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200601 14:10:29.967" starttime="20200601 14:10:29.966"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.967" starttime="20200601 14:10:29.967"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.968" starttime="20200601 14:10:29.968"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.969" starttime="20200601 14:10:29.968"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:29.970" starttime="20200601 14:10:29.970"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.970" starttime="20200601 14:10:29.969"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.970" starttime="20200601 14:10:29.929"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:29.970" starttime="20200601 14:10:29.929"></status>
</kw>
<kw type="foritem" name="${ID} = 18">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:29.977" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/18</msg>
<msg timestamp="20200601 14:10:29.999" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/18: 0.000295 seconds.</msg>
<msg timestamp="20200601 14:10:29.999" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:31 GMT
connection Keep-Alive
content-type application/json
content-length 1056


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:10:29.999" starttime="20200601 14:10:29.971"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:30.000" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:30.000" starttime="20200601 14:10:30.000"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:10:30.001" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:10:30.001" starttime="20200601 14:10:30.000"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:10:30.001" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200601 14:10:30.001" starttime="20200601 14:10:30.001"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.002" starttime="20200601 14:10:30.001"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.002" starttime="20200601 14:10:30.002"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.003" starttime="20200601 14:10:30.003"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.004" starttime="20200601 14:10:30.004"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.004" starttime="20200601 14:10:30.004"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.005" starttime="20200601 14:10:29.970"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.005" starttime="20200601 14:10:29.970"></status>
</kw>
<kw type="foritem" name="${ID} = 19">
<kw name="Tx Disable Down">
<tags>
<tag>Test tx_disable down</tag>
</tags>
<doc>Test SFP port tx disable down function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:30.011" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/19</msg>
<msg timestamp="20200601 14:10:30.035" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/19: 0.000312 seconds.</msg>
<msg timestamp="20200601 14:10:30.036" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:31 GMT
connection Keep-Alive
content-type application/json
content-length 1056


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:10:30.036" starttime="20200601 14:10:30.005"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:30.037" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:30.037" starttime="20200601 14:10:30.036"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:10:30.037" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:10:30.037" starttime="20200601 14:10:30.037"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:10:30.038" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200601 14:10:30.038" starttime="20200601 14:10:30.038"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.039" starttime="20200601 14:10:30.038"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.040" starttime="20200601 14:10:30.039"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.041" starttime="20200601 14:10:30.040"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Down</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disabled ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disabled ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.042" starttime="20200601 14:10:30.041"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.042" starttime="20200601 14:10:30.041"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.042" starttime="20200601 14:10:30.005"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.042" starttime="20200601 14:10:30.005"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.042" starttime="20200601 14:10:29.196"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.042" starttime="20200601 14:10:28.907"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PON_TYPE}' == 'GPON'</arg>
<arg>Log to console</arg>
<arg>"####### GPON TESTING ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### XGSPON TESTING ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### XGSPON TESTING ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.043" starttime="20200601 14:10:30.043"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.043" starttime="20200601 14:10:30.042"></status>
</kw>
<kw name="Enable All Tx Port">
<tags>
<tag>Enable Pon Port Tx</tag>
</tags>
<doc>Enable all port function</doc>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:30.050" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/</msg>
<msg timestamp="20200601 14:10:30.077" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/: 0.000353 seconds.</msg>
<msg timestamp="20200601 14:10:30.077" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:31 GMT
connection Keep-Alive
content-type application/json
content-length 1467


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPortCollection.EthernetSwitchPor...</msg>
<status status="PASS" endtime="20200601 14:10:30.077" starttime="20200601 14:10:30.044"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200601 14:10:30.078" level="INFO">Length is 20</msg>
<msg timestamp="20200601 14:10:30.078" level="INFO">${item_count} = 20</msg>
<status status="PASS" endtime="20200601 14:10:30.078" starttime="20200601 14:10:30.078"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Enable All Pon Port Tx ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.079" starttime="20200601 14:10:30.078"></status>
</kw>
<kw type="for" name="${ID} IN RANGE [ 1 | ${item_count} ]">
<kw type="foritem" name="${ID} = 1">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:30.085" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200601 14:10:30.259" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000455 seconds.</msg>
<msg timestamp="20200601 14:10:30.260" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:31 GMT
connection Keep-Alive
content-type application/json
content-length 2324


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:10:30.260" starttime="20200601 14:10:30.080"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:30.261" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:30.261" starttime="20200601 14:10:30.260"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:10:30.261" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200601 14:10:30.262" starttime="20200601 14:10:30.261"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:10:30.262" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:10:30.262" starttime="20200601 14:10:30.262"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.263" starttime="20200601 14:10:30.262"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.263" starttime="20200601 14:10:30.263"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.264" starttime="20200601 14:10:30.263"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
</arguments>
<kw name="Test Tx Op Up">
<tags>
<tag>Test tx_disable</tag>
</tags>
<doc>Test SFP port tx disable function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OP_UP)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200601 14:10:30.268" level="INFO">${payload} = {u'OperationalState': u'Up'}</msg>
<status status="PASS" endtime="20200601 14:10:30.268" starttime="20200601 14:10:30.265"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<msg timestamp="20200601 14:10:30.275" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200601 14:10:30.309" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000285 seconds.</msg>
<status status="PASS" endtime="20200601 14:10:30.309" starttime="20200601 14:10:30.268"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.309" starttime="20200601 14:10:30.265"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.309" starttime="20200601 14:10:30.264"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.309" starttime="20200601 14:10:30.264"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.309" starttime="20200601 14:10:30.079"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.309" starttime="20200601 14:10:30.079"></status>
</kw>
<kw type="foritem" name="${ID} = 2">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:30.316" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/2</msg>
<msg timestamp="20200601 14:10:30.339" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/2: 0.000323 seconds.</msg>
<msg timestamp="20200601 14:10:30.340" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:31 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:10:30.340" starttime="20200601 14:10:30.310"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:30.341" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:30.341" starttime="20200601 14:10:30.340"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:10:30.341" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:10:30.341" starttime="20200601 14:10:30.341"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:10:30.342" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:10:30.342" starttime="20200601 14:10:30.341"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.342" starttime="20200601 14:10:30.342"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.343" starttime="20200601 14:10:30.342"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.343" starttime="20200601 14:10:30.343"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.344" starttime="20200601 14:10:30.344"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.344" starttime="20200601 14:10:30.343"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.344" starttime="20200601 14:10:30.310"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.344" starttime="20200601 14:10:30.310"></status>
</kw>
<kw type="foritem" name="${ID} = 3">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:30.351" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/3</msg>
<msg timestamp="20200601 14:10:30.372" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/3: 0.000306 seconds.</msg>
<msg timestamp="20200601 14:10:30.373" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:31 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:10:30.373" starttime="20200601 14:10:30.345"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:30.373" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:30.374" starttime="20200601 14:10:30.373"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:10:30.374" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:10:30.374" starttime="20200601 14:10:30.374"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:10:30.374" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:10:30.374" starttime="20200601 14:10:30.374"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.375" starttime="20200601 14:10:30.375"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.375" starttime="20200601 14:10:30.375"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.376" starttime="20200601 14:10:30.375"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.377" starttime="20200601 14:10:30.377"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.377" starttime="20200601 14:10:30.376"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.377" starttime="20200601 14:10:30.344"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.377" starttime="20200601 14:10:30.344"></status>
</kw>
<kw type="foritem" name="${ID} = 4">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:30.384" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/4</msg>
<msg timestamp="20200601 14:10:30.406" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/4: 0.000297 seconds.</msg>
<msg timestamp="20200601 14:10:30.407" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:31 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:10:30.407" starttime="20200601 14:10:30.378"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:30.407" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:30.407" starttime="20200601 14:10:30.407"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:10:30.408" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:10:30.408" starttime="20200601 14:10:30.408"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:10:30.409" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:10:30.409" starttime="20200601 14:10:30.408"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.409" starttime="20200601 14:10:30.409"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.410" starttime="20200601 14:10:30.409"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.410" starttime="20200601 14:10:30.410"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.411" starttime="20200601 14:10:30.411"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.411" starttime="20200601 14:10:30.411"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.411" starttime="20200601 14:10:30.377"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.411" starttime="20200601 14:10:30.377"></status>
</kw>
<kw type="foritem" name="${ID} = 5">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:30.420" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/5</msg>
<msg timestamp="20200601 14:10:30.444" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/5: 0.00039 seconds.</msg>
<msg timestamp="20200601 14:10:30.444" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:31 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:10:30.445" starttime="20200601 14:10:30.412"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:30.445" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:30.446" starttime="20200601 14:10:30.445"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:10:30.447" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:10:30.447" starttime="20200601 14:10:30.446"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:10:30.448" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:10:30.448" starttime="20200601 14:10:30.447"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.448" starttime="20200601 14:10:30.448"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.449" starttime="20200601 14:10:30.449"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.450" starttime="20200601 14:10:30.449"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.451" starttime="20200601 14:10:30.451"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.452" starttime="20200601 14:10:30.451"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.452" starttime="20200601 14:10:30.412"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.452" starttime="20200601 14:10:30.412"></status>
</kw>
<kw type="foritem" name="${ID} = 6">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:30.460" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/6</msg>
<msg timestamp="20200601 14:10:30.482" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/6: 0.000392 seconds.</msg>
<msg timestamp="20200601 14:10:30.482" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:31 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:10:30.482" starttime="20200601 14:10:30.452"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:30.483" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:30.483" starttime="20200601 14:10:30.483"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:10:30.484" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:10:30.484" starttime="20200601 14:10:30.484"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:10:30.485" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:10:30.485" starttime="20200601 14:10:30.484"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.485" starttime="20200601 14:10:30.485"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.486" starttime="20200601 14:10:30.486"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.487" starttime="20200601 14:10:30.487"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.488" starttime="20200601 14:10:30.488"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.488" starttime="20200601 14:10:30.487"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.488" starttime="20200601 14:10:30.452"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.488" starttime="20200601 14:10:30.452"></status>
</kw>
<kw type="foritem" name="${ID} = 7">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:30.507" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/7</msg>
<msg timestamp="20200601 14:10:30.532" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/7: 0.000435 seconds.</msg>
<msg timestamp="20200601 14:10:30.533" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:31 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:10:30.533" starttime="20200601 14:10:30.489"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:30.534" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:30.534" starttime="20200601 14:10:30.533"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:10:30.534" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:10:30.535" starttime="20200601 14:10:30.534"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:10:30.535" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:10:30.535" starttime="20200601 14:10:30.535"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.536" starttime="20200601 14:10:30.535"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.536" starttime="20200601 14:10:30.536"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.537" starttime="20200601 14:10:30.537"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.539" starttime="20200601 14:10:30.539"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.540" starttime="20200601 14:10:30.538"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.540" starttime="20200601 14:10:30.489"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.540" starttime="20200601 14:10:30.488"></status>
</kw>
<kw type="foritem" name="${ID} = 8">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:30.549" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/8</msg>
<msg timestamp="20200601 14:10:30.566" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/8: 0.000352 seconds.</msg>
<msg timestamp="20200601 14:10:30.567" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:31 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:10:30.567" starttime="20200601 14:10:30.542"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:30.568" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:30.568" starttime="20200601 14:10:30.567"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:10:30.568" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:10:30.568" starttime="20200601 14:10:30.568"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:10:30.569" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:10:30.569" starttime="20200601 14:10:30.569"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.570" starttime="20200601 14:10:30.569"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.570" starttime="20200601 14:10:30.570"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.571" starttime="20200601 14:10:30.570"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.572" starttime="20200601 14:10:30.571"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.572" starttime="20200601 14:10:30.571"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.572" starttime="20200601 14:10:30.540"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.572" starttime="20200601 14:10:30.540"></status>
</kw>
<kw type="foritem" name="${ID} = 9">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:30.579" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/9</msg>
<msg timestamp="20200601 14:10:30.603" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/9: 0.000274 seconds.</msg>
<msg timestamp="20200601 14:10:30.604" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:31 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:10:30.604" starttime="20200601 14:10:30.573"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:30.605" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:30.605" starttime="20200601 14:10:30.604"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:10:30.605" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:10:30.605" starttime="20200601 14:10:30.605"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:10:30.606" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:10:30.606" starttime="20200601 14:10:30.605"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.606" starttime="20200601 14:10:30.606"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.607" starttime="20200601 14:10:30.606"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.607" starttime="20200601 14:10:30.607"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.608" starttime="20200601 14:10:30.608"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.608" starttime="20200601 14:10:30.608"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.608" starttime="20200601 14:10:30.572"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.608" starttime="20200601 14:10:30.572"></status>
</kw>
<kw type="foritem" name="${ID} = 10">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:30.614" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/10</msg>
<msg timestamp="20200601 14:10:30.635" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/10: 0.000285 seconds.</msg>
<msg timestamp="20200601 14:10:30.635" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:31 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:10:30.636" starttime="20200601 14:10:30.609"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:30.636" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:30.636" starttime="20200601 14:10:30.636"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:10:30.637" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:10:30.637" starttime="20200601 14:10:30.637"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:10:30.637" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:10:30.638" starttime="20200601 14:10:30.637"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.638" starttime="20200601 14:10:30.638"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.639" starttime="20200601 14:10:30.638"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.639" starttime="20200601 14:10:30.639"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.640" starttime="20200601 14:10:30.640"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.640" starttime="20200601 14:10:30.639"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.640" starttime="20200601 14:10:30.608"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.640" starttime="20200601 14:10:30.608"></status>
</kw>
<kw type="foritem" name="${ID} = 11">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:30.648" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/11</msg>
<msg timestamp="20200601 14:10:30.667" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/11: 0.000369 seconds.</msg>
<msg timestamp="20200601 14:10:30.667" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:32 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:10:30.667" starttime="20200601 14:10:30.641"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:30.668" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:30.668" starttime="20200601 14:10:30.668"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:10:30.669" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:10:30.669" starttime="20200601 14:10:30.668"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:10:30.669" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:10:30.669" starttime="20200601 14:10:30.669"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.669" starttime="20200601 14:10:30.669"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.670" starttime="20200601 14:10:30.670"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.670" starttime="20200601 14:10:30.670"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.671" starttime="20200601 14:10:30.671"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.671" starttime="20200601 14:10:30.671"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.671" starttime="20200601 14:10:30.640"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.671" starttime="20200601 14:10:30.640"></status>
</kw>
<kw type="foritem" name="${ID} = 12">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:30.678" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/12</msg>
<msg timestamp="20200601 14:10:30.700" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/12: 0.000355 seconds.</msg>
<msg timestamp="20200601 14:10:30.701" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:32 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:10:30.701" starttime="20200601 14:10:30.672"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:30.702" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:30.702" starttime="20200601 14:10:30.701"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:10:30.703" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:10:30.703" starttime="20200601 14:10:30.702"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:10:30.703" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:10:30.703" starttime="20200601 14:10:30.703"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.704" starttime="20200601 14:10:30.703"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.704" starttime="20200601 14:10:30.704"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.705" starttime="20200601 14:10:30.704"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.707" starttime="20200601 14:10:30.707"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.707" starttime="20200601 14:10:30.705"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.707" starttime="20200601 14:10:30.672"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.707" starttime="20200601 14:10:30.671"></status>
</kw>
<kw type="foritem" name="${ID} = 13">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:30.715" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/13</msg>
<msg timestamp="20200601 14:10:30.735" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/13: 0.000313 seconds.</msg>
<msg timestamp="20200601 14:10:30.735" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:32 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:10:30.735" starttime="20200601 14:10:30.708"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:30.736" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:30.736" starttime="20200601 14:10:30.736"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:10:30.737" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:10:30.737" starttime="20200601 14:10:30.736"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:10:30.737" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:10:30.737" starttime="20200601 14:10:30.737"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.738" starttime="20200601 14:10:30.737"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.738" starttime="20200601 14:10:30.738"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.739" starttime="20200601 14:10:30.738"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.740" starttime="20200601 14:10:30.739"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.740" starttime="20200601 14:10:30.739"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.740" starttime="20200601 14:10:30.708"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.740" starttime="20200601 14:10:30.707"></status>
</kw>
<kw type="foritem" name="${ID} = 14">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:30.747" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/14</msg>
<msg timestamp="20200601 14:10:30.768" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/14: 0.000293 seconds.</msg>
<msg timestamp="20200601 14:10:30.769" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:32 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:10:30.769" starttime="20200601 14:10:30.740"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:30.770" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:30.770" starttime="20200601 14:10:30.769"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:10:30.770" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:10:30.770" starttime="20200601 14:10:30.770"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:10:30.771" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:10:30.771" starttime="20200601 14:10:30.771"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.771" starttime="20200601 14:10:30.771"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.772" starttime="20200601 14:10:30.772"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.772" starttime="20200601 14:10:30.772"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.773" starttime="20200601 14:10:30.773"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.773" starttime="20200601 14:10:30.773"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.773" starttime="20200601 14:10:30.740"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.773" starttime="20200601 14:10:30.740"></status>
</kw>
<kw type="foritem" name="${ID} = 15">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:30.780" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/15</msg>
<msg timestamp="20200601 14:10:30.798" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/15: 0.000351 seconds.</msg>
<msg timestamp="20200601 14:10:30.799" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:32 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:10:30.799" starttime="20200601 14:10:30.774"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:30.800" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:30.800" starttime="20200601 14:10:30.799"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:10:30.800" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:10:30.801" starttime="20200601 14:10:30.800"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:10:30.801" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:10:30.801" starttime="20200601 14:10:30.801"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.802" starttime="20200601 14:10:30.801"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.802" starttime="20200601 14:10:30.802"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.803" starttime="20200601 14:10:30.802"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.804" starttime="20200601 14:10:30.804"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.804" starttime="20200601 14:10:30.803"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.804" starttime="20200601 14:10:30.774"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.804" starttime="20200601 14:10:30.773"></status>
</kw>
<kw type="foritem" name="${ID} = 16">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:30.812" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/16</msg>
<msg timestamp="20200601 14:10:30.834" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/16: 0.000363 seconds.</msg>
<msg timestamp="20200601 14:10:30.834" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:32 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:10:30.834" starttime="20200601 14:10:30.805"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:30.835" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:30.835" starttime="20200601 14:10:30.835"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:10:30.836" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:10:30.836" starttime="20200601 14:10:30.836"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:10:30.837" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:10:30.837" starttime="20200601 14:10:30.836"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.837" starttime="20200601 14:10:30.837"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.838" starttime="20200601 14:10:30.837"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.838" starttime="20200601 14:10:30.838"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.840" starttime="20200601 14:10:30.839"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.840" starttime="20200601 14:10:30.839"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.840" starttime="20200601 14:10:30.804"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.840" starttime="20200601 14:10:30.804"></status>
</kw>
<kw type="foritem" name="${ID} = 17">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:30.849" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/17</msg>
<msg timestamp="20200601 14:10:30.868" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/17: 0.00046 seconds.</msg>
<msg timestamp="20200601 14:10:30.868" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:32 GMT
connection Keep-Alive
content-type application/json
content-length 2438


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:10:30.868" starttime="20200601 14:10:30.841"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:30.869" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:30.869" starttime="20200601 14:10:30.869"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:10:30.870" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200601 14:10:30.870" starttime="20200601 14:10:30.870"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:10:30.871" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200601 14:10:30.871" starttime="20200601 14:10:30.870"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.871" starttime="20200601 14:10:30.871"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.872" starttime="20200601 14:10:30.872"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.873" starttime="20200601 14:10:30.872"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.874" starttime="20200601 14:10:30.874"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.874" starttime="20200601 14:10:30.873"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.874" starttime="20200601 14:10:30.840"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.874" starttime="20200601 14:10:30.840"></status>
</kw>
<kw type="foritem" name="${ID} = 18">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:30.882" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/18</msg>
<msg timestamp="20200601 14:10:30.907" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/18: 0.000355 seconds.</msg>
<msg timestamp="20200601 14:10:30.908" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:32 GMT
connection Keep-Alive
content-type application/json
content-length 1056


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:10:30.908" starttime="20200601 14:10:30.875"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:30.909" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:30.909" starttime="20200601 14:10:30.909"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:10:30.910" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:10:30.910" starttime="20200601 14:10:30.909"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:10:30.911" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200601 14:10:30.911" starttime="20200601 14:10:30.910"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.911" starttime="20200601 14:10:30.911"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.912" starttime="20200601 14:10:30.911"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.912" starttime="20200601 14:10:30.912"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.913" starttime="20200601 14:10:30.913"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.913" starttime="20200601 14:10:30.913"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.914" starttime="20200601 14:10:30.875"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.914" starttime="20200601 14:10:30.874"></status>
</kw>
<kw type="foritem" name="${ID} = 19">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:30.921" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/19</msg>
<msg timestamp="20200601 14:10:30.944" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/19: 0.000345 seconds.</msg>
<msg timestamp="20200601 14:10:30.945" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:32 GMT
connection Keep-Alive
content-type application/json
content-length 1056


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:10:30.945" starttime="20200601 14:10:30.914"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:30.946" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:30.946" starttime="20200601 14:10:30.945"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:10:30.946" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:10:30.946" starttime="20200601 14:10:30.946"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:10:30.947" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200601 14:10:30.947" starttime="20200601 14:10:30.947"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.948" starttime="20200601 14:10:30.947"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.948" starttime="20200601 14:10:30.948"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.949" starttime="20200601 14:10:30.948"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.950" starttime="20200601 14:10:30.949"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.950" starttime="20200601 14:10:30.949"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.950" starttime="20200601 14:10:30.914"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.950" starttime="20200601 14:10:30.914"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.950" starttime="20200601 14:10:30.079"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.950" starttime="20200601 14:10:30.043"></status>
</kw>
<kw name="Test Bal Enable">
<tags>
<tag>Verify_Bal_Enable</tag>
</tags>
<doc>Enable Bal</doc>
<kw type="for" name="${i} IN RANGE [ 1 | 80 ]">
<kw type="foritem" name="${i} = 1">
<kw name="Test Wait Bal Enable">
<tags>
<tag>Verify_Waut_Bal_Enable</tag>
</tags>
<doc>Wait Enable Bal</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.951" starttime="20200601 14:10:30.951"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:30.959" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200601 14:10:30.983" level="INFO">Response Time to /redfish/v1/Olt: 0.000369 seconds.</msg>
<msg timestamp="20200601 14:10:30.984" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:32 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200601 14:10:30.984" starttime="20200601 14:10:30.952"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:30.984" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:30.985" starttime="20200601 14:10:30.984"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['BalState']}</arg>
</arguments>
<assign>
<var>${BAL_STATE}</var>
</assign>
<msg timestamp="20200601 14:10:30.985" level="INFO">${BAL_STATE} = up</msg>
<status status="PASS" endtime="20200601 14:10:30.985" starttime="20200601 14:10:30.985"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${BAL_STATE}' == 'up'</arg>
<arg>Log to console</arg>
<arg>"####### Up ######"</arg>
<arg>${bal_state} =</arg>
<arg>"up"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Down ######"</arg>
<arg>${bal_state} =</arg>
<arg>"down"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Up ######"</arg>
<arg>${bal_state} =</arg>
<arg>"up"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:30.987" starttime="20200601 14:10:30.986"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:30.987" starttime="20200601 14:10:30.986"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 14:10:31.987" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 14:10:31.988" starttime="20200601 14:10:30.987"></status>
</kw>
<msg timestamp="20200601 14:10:31.988" level="INFO">${result} = up</msg>
<status status="PASS" endtime="20200601 14:10:31.988" starttime="20200601 14:10:30.951"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:31.989" starttime="20200601 14:10:31.988"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${result}' == 'up'</arg>
</arguments>
<msg timestamp="20200601 14:10:31.989" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20200601 14:10:31.990" starttime="20200601 14:10:31.989"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:31.990" starttime="20200601 14:10:30.951"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:31.990" starttime="20200601 14:10:30.950"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${result}</arg>
<arg>up</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:31.990" starttime="20200601 14:10:31.990"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OPT_ENABLE)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200601 14:10:31.995" level="INFO">${payload} = {u'OltOperateState': True}</msg>
<status status="PASS" endtime="20200601 14:10:31.995" starttime="20200601 14:10:31.991"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:32.003" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200601 14:10:33.626" level="INFO">Response Time to /redfish/v1/Olt: 0.00036 seconds.</msg>
<msg timestamp="20200601 14:10:33.626" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:34 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:10:33.626" starttime="20200601 14:10:31.995"></status>
</kw>
<kw type="for" name="${i} IN RANGE [ 1 | 60 ]">
<kw type="foritem" name="${i} = 1">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:33.627" starttime="20200601 14:10:33.627"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:33.633" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200601 14:10:33.659" level="INFO">Response Time to /redfish/v1/Olt: 0.000499 seconds.</msg>
<msg timestamp="20200601 14:10:33.660" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:35 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200601 14:10:33.660" starttime="20200601 14:10:33.628"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:33.661" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:33.661" starttime="20200601 14:10:33.660"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200601 14:10:33.661" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200601 14:10:33.661" starttime="20200601 14:10:33.661"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:33.662" starttime="20200601 14:10:33.662"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:33.663" starttime="20200601 14:10:33.663"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:33.663" starttime="20200601 14:10:33.662"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 14:10:34.667" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 14:10:34.667" starttime="20200601 14:10:33.664"></status>
</kw>
<msg timestamp="20200601 14:10:34.667" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200601 14:10:34.668" starttime="20200601 14:10:33.627"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:34.670" starttime="20200601 14:10:34.668"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:34.670" starttime="20200601 14:10:34.670"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:34.671" starttime="20200601 14:10:33.626"></status>
</kw>
<kw type="foritem" name="${i} = 2">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:34.673" starttime="20200601 14:10:34.672"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:34.686" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200601 14:10:34.708" level="INFO">Response Time to /redfish/v1/Olt: 0.000588 seconds.</msg>
<msg timestamp="20200601 14:10:34.709" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:36 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200601 14:10:34.709" starttime="20200601 14:10:34.673"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:34.710" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:34.710" starttime="20200601 14:10:34.710"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200601 14:10:34.711" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200601 14:10:34.712" starttime="20200601 14:10:34.711"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:34.713" starttime="20200601 14:10:34.712"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:34.716" starttime="20200601 14:10:34.715"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:34.716" starttime="20200601 14:10:34.714"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 14:10:35.717" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 14:10:35.717" starttime="20200601 14:10:34.717"></status>
</kw>
<msg timestamp="20200601 14:10:35.718" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200601 14:10:35.718" starttime="20200601 14:10:34.671"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:35.719" starttime="20200601 14:10:35.718"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:35.720" starttime="20200601 14:10:35.719"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:35.720" starttime="20200601 14:10:34.671"></status>
</kw>
<kw type="foritem" name="${i} = 3">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:35.721" starttime="20200601 14:10:35.720"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:35.729" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200601 14:10:35.752" level="INFO">Response Time to /redfish/v1/Olt: 0.00038 seconds.</msg>
<msg timestamp="20200601 14:10:35.753" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:37 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200601 14:10:35.753" starttime="20200601 14:10:35.721"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:35.754" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:35.754" starttime="20200601 14:10:35.753"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200601 14:10:35.754" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200601 14:10:35.754" starttime="20200601 14:10:35.754"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:35.755" starttime="20200601 14:10:35.755"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:35.756" starttime="20200601 14:10:35.756"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:35.756" starttime="20200601 14:10:35.755"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 14:10:36.757" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 14:10:36.757" starttime="20200601 14:10:35.757"></status>
</kw>
<msg timestamp="20200601 14:10:36.757" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200601 14:10:36.758" starttime="20200601 14:10:35.720"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:36.758" starttime="20200601 14:10:36.758"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:36.759" starttime="20200601 14:10:36.758"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:36.759" starttime="20200601 14:10:35.720"></status>
</kw>
<kw type="foritem" name="${i} = 4">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:36.760" starttime="20200601 14:10:36.759"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:36.766" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200601 14:10:36.788" level="INFO">Response Time to /redfish/v1/Olt: 0.000357 seconds.</msg>
<msg timestamp="20200601 14:10:36.789" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:38 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200601 14:10:36.789" starttime="20200601 14:10:36.760"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:36.789" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:36.790" starttime="20200601 14:10:36.789"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200601 14:10:36.790" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200601 14:10:36.790" starttime="20200601 14:10:36.790"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:36.791" starttime="20200601 14:10:36.790"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:36.792" starttime="20200601 14:10:36.792"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:36.792" starttime="20200601 14:10:36.791"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 14:10:37.793" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 14:10:37.793" starttime="20200601 14:10:36.793"></status>
</kw>
<msg timestamp="20200601 14:10:37.793" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200601 14:10:37.793" starttime="20200601 14:10:36.759"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:37.794" starttime="20200601 14:10:37.794"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:37.795" starttime="20200601 14:10:37.794"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:37.795" starttime="20200601 14:10:36.759"></status>
</kw>
<kw type="foritem" name="${i} = 5">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:37.795" starttime="20200601 14:10:37.795"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:37.802" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200601 14:10:37.824" level="INFO">Response Time to /redfish/v1/Olt: 0.000373 seconds.</msg>
<msg timestamp="20200601 14:10:37.825" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:39 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200601 14:10:37.825" starttime="20200601 14:10:37.796"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:37.826" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:37.826" starttime="20200601 14:10:37.825"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200601 14:10:37.826" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200601 14:10:37.826" starttime="20200601 14:10:37.826"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:37.827" starttime="20200601 14:10:37.827"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:37.828" starttime="20200601 14:10:37.828"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:37.828" starttime="20200601 14:10:37.827"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 14:10:38.837" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 14:10:38.837" starttime="20200601 14:10:37.828"></status>
</kw>
<msg timestamp="20200601 14:10:38.837" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200601 14:10:38.837" starttime="20200601 14:10:37.795"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:38.838" starttime="20200601 14:10:38.838"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:38.839" starttime="20200601 14:10:38.838"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:38.839" starttime="20200601 14:10:37.795"></status>
</kw>
<kw type="foritem" name="${i} = 6">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:38.840" starttime="20200601 14:10:38.840"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:38.847" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200601 14:10:38.871" level="INFO">Response Time to /redfish/v1/Olt: 0.000283 seconds.</msg>
<msg timestamp="20200601 14:10:38.872" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:40 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200601 14:10:38.872" starttime="20200601 14:10:38.840"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:38.872" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:38.873" starttime="20200601 14:10:38.872"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200601 14:10:38.873" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200601 14:10:38.873" starttime="20200601 14:10:38.873"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:38.874" starttime="20200601 14:10:38.873"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:38.875" starttime="20200601 14:10:38.874"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:38.875" starttime="20200601 14:10:38.874"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 14:10:39.877" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 14:10:39.877" starttime="20200601 14:10:38.875"></status>
</kw>
<msg timestamp="20200601 14:10:39.877" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200601 14:10:39.877" starttime="20200601 14:10:38.839"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:39.878" starttime="20200601 14:10:39.878"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:39.878" starttime="20200601 14:10:39.878"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:39.878" starttime="20200601 14:10:38.839"></status>
</kw>
<kw type="foritem" name="${i} = 7">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:39.879" starttime="20200601 14:10:39.879"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:39.885" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200601 14:10:39.908" level="INFO">Response Time to /redfish/v1/Olt: 0.000365 seconds.</msg>
<msg timestamp="20200601 14:10:39.909" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:41 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200601 14:10:39.909" starttime="20200601 14:10:39.879"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:39.910" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:39.910" starttime="20200601 14:10:39.909"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200601 14:10:39.911" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200601 14:10:39.911" starttime="20200601 14:10:39.910"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:39.911" starttime="20200601 14:10:39.911"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:39.913" starttime="20200601 14:10:39.912"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:39.913" starttime="20200601 14:10:39.912"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 14:10:40.914" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 14:10:40.914" starttime="20200601 14:10:39.913"></status>
</kw>
<msg timestamp="20200601 14:10:40.914" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200601 14:10:40.914" starttime="20200601 14:10:39.879"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:40.915" starttime="20200601 14:10:40.914"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:40.916" starttime="20200601 14:10:40.916"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:40.916" starttime="20200601 14:10:39.878"></status>
</kw>
<kw type="foritem" name="${i} = 8">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:40.918" starttime="20200601 14:10:40.917"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:40.926" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200601 14:10:40.951" level="INFO">Response Time to /redfish/v1/Olt: 0.000326 seconds.</msg>
<msg timestamp="20200601 14:10:40.952" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:42 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200601 14:10:40.952" starttime="20200601 14:10:40.918"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:40.953" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:40.953" starttime="20200601 14:10:40.952"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200601 14:10:40.953" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200601 14:10:40.953" starttime="20200601 14:10:40.953"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:40.954" starttime="20200601 14:10:40.953"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:40.955" starttime="20200601 14:10:40.955"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:40.956" starttime="20200601 14:10:40.955"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 14:10:41.956" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 14:10:41.957" starttime="20200601 14:10:40.956"></status>
</kw>
<msg timestamp="20200601 14:10:41.957" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200601 14:10:41.957" starttime="20200601 14:10:40.916"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:41.958" starttime="20200601 14:10:41.957"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:41.959" starttime="20200601 14:10:41.959"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:41.959" starttime="20200601 14:10:40.916"></status>
</kw>
<kw type="foritem" name="${i} = 9">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:41.960" starttime="20200601 14:10:41.959"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:41.967" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200601 14:10:41.993" level="INFO">Response Time to /redfish/v1/Olt: 0.000387 seconds.</msg>
<msg timestamp="20200601 14:10:41.994" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:43 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200601 14:10:41.994" starttime="20200601 14:10:41.960"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:41.995" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:41.995" starttime="20200601 14:10:41.994"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200601 14:10:41.996" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200601 14:10:41.996" starttime="20200601 14:10:41.995"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:41.996" starttime="20200601 14:10:41.996"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:41.998" starttime="20200601 14:10:41.997"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:41.998" starttime="20200601 14:10:41.997"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 14:10:42.999" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 14:10:42.999" starttime="20200601 14:10:41.998"></status>
</kw>
<msg timestamp="20200601 14:10:42.999" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200601 14:10:42.999" starttime="20200601 14:10:41.959"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:43.000" starttime="20200601 14:10:43.000"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:43.001" starttime="20200601 14:10:43.001"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:43.001" starttime="20200601 14:10:41.959"></status>
</kw>
<kw type="foritem" name="${i} = 10">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:43.002" starttime="20200601 14:10:43.002"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:43.009" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200601 14:10:43.031" level="INFO">Response Time to /redfish/v1/Olt: 0.000316 seconds.</msg>
<msg timestamp="20200601 14:10:43.032" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:44 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200601 14:10:43.032" starttime="20200601 14:10:43.003"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:43.033" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:43.033" starttime="20200601 14:10:43.032"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200601 14:10:43.033" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200601 14:10:43.033" starttime="20200601 14:10:43.033"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:43.034" starttime="20200601 14:10:43.034"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:43.035" starttime="20200601 14:10:43.035"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:43.036" starttime="20200601 14:10:43.035"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 14:10:44.037" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 14:10:44.037" starttime="20200601 14:10:43.036"></status>
</kw>
<msg timestamp="20200601 14:10:44.037" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200601 14:10:44.037" starttime="20200601 14:10:43.001"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:44.038" starttime="20200601 14:10:44.037"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:44.039" starttime="20200601 14:10:44.039"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:44.039" starttime="20200601 14:10:43.001"></status>
</kw>
<kw type="foritem" name="${i} = 11">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:44.040" starttime="20200601 14:10:44.040"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:44.048" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200601 14:10:44.068" level="INFO">Response Time to /redfish/v1/Olt: 0.00034 seconds.</msg>
<msg timestamp="20200601 14:10:44.069" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:45 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200601 14:10:44.069" starttime="20200601 14:10:44.041"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:44.070" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:44.070" starttime="20200601 14:10:44.069"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200601 14:10:44.070" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200601 14:10:44.070" starttime="20200601 14:10:44.070"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:44.071" starttime="20200601 14:10:44.071"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:44.073" starttime="20200601 14:10:44.072"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:44.073" starttime="20200601 14:10:44.072"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 14:10:45.073" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 14:10:45.074" starttime="20200601 14:10:44.073"></status>
</kw>
<msg timestamp="20200601 14:10:45.074" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200601 14:10:45.074" starttime="20200601 14:10:44.039"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:45.075" starttime="20200601 14:10:45.075"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:45.076" starttime="20200601 14:10:45.076"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:45.076" starttime="20200601 14:10:44.039"></status>
</kw>
<kw type="foritem" name="${i} = 12">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:45.078" starttime="20200601 14:10:45.077"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:45.089" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200601 14:10:45.113" level="INFO">Response Time to /redfish/v1/Olt: 0.000353 seconds.</msg>
<msg timestamp="20200601 14:10:45.113" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:46 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200601 14:10:45.113" starttime="20200601 14:10:45.078"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:45.114" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:45.114" starttime="20200601 14:10:45.113"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200601 14:10:45.115" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200601 14:10:45.115" starttime="20200601 14:10:45.114"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:45.115" starttime="20200601 14:10:45.115"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:45.116" starttime="20200601 14:10:45.116"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:45.116" starttime="20200601 14:10:45.115"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 14:10:46.117" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 14:10:46.117" starttime="20200601 14:10:45.117"></status>
</kw>
<msg timestamp="20200601 14:10:46.118" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200601 14:10:46.118" starttime="20200601 14:10:45.076"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:46.118" starttime="20200601 14:10:46.118"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:46.119" starttime="20200601 14:10:46.119"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:46.119" starttime="20200601 14:10:45.076"></status>
</kw>
<kw type="foritem" name="${i} = 13">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:46.120" starttime="20200601 14:10:46.120"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:46.127" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200601 14:10:46.153" level="INFO">Response Time to /redfish/v1/Olt: 0.000367 seconds.</msg>
<msg timestamp="20200601 14:10:46.154" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:47 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200601 14:10:46.154" starttime="20200601 14:10:46.121"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:46.155" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:46.155" starttime="20200601 14:10:46.154"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200601 14:10:46.155" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200601 14:10:46.155" starttime="20200601 14:10:46.155"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:46.156" starttime="20200601 14:10:46.155"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:46.157" starttime="20200601 14:10:46.157"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:46.158" starttime="20200601 14:10:46.157"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 14:10:47.158" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 14:10:47.158" starttime="20200601 14:10:46.158"></status>
</kw>
<msg timestamp="20200601 14:10:47.159" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200601 14:10:47.159" starttime="20200601 14:10:46.120"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:47.159" starttime="20200601 14:10:47.159"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:47.160" starttime="20200601 14:10:47.160"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:47.160" starttime="20200601 14:10:46.119"></status>
</kw>
<kw type="foritem" name="${i} = 14">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:47.161" starttime="20200601 14:10:47.161"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:47.168" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200601 14:10:47.191" level="INFO">Response Time to /redfish/v1/Olt: 0.000315 seconds.</msg>
<msg timestamp="20200601 14:10:47.192" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:48 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200601 14:10:47.192" starttime="20200601 14:10:47.162"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:47.192" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:47.192" starttime="20200601 14:10:47.192"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200601 14:10:47.193" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200601 14:10:47.193" starttime="20200601 14:10:47.193"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:47.193" starttime="20200601 14:10:47.193"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:47.195" starttime="20200601 14:10:47.195"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:47.195" starttime="20200601 14:10:47.194"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 14:10:48.197" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 14:10:48.198" starttime="20200601 14:10:47.195"></status>
</kw>
<msg timestamp="20200601 14:10:48.198" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200601 14:10:48.198" starttime="20200601 14:10:47.161"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:48.199" starttime="20200601 14:10:48.198"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:48.199" starttime="20200601 14:10:48.199"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:48.199" starttime="20200601 14:10:47.160"></status>
</kw>
<kw type="foritem" name="${i} = 15">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:48.200" starttime="20200601 14:10:48.200"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:48.207" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200601 14:10:48.230" level="INFO">Response Time to /redfish/v1/Olt: 0.0004 seconds.</msg>
<msg timestamp="20200601 14:10:48.231" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:49 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200601 14:10:48.231" starttime="20200601 14:10:48.200"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:48.231" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:48.232" starttime="20200601 14:10:48.231"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200601 14:10:48.232" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200601 14:10:48.232" starttime="20200601 14:10:48.232"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:48.233" starttime="20200601 14:10:48.232"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:48.234" starttime="20200601 14:10:48.234"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:48.234" starttime="20200601 14:10:48.233"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 14:10:49.242" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 14:10:49.242" starttime="20200601 14:10:48.234"></status>
</kw>
<msg timestamp="20200601 14:10:49.243" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200601 14:10:49.243" starttime="20200601 14:10:48.199"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:49.243" starttime="20200601 14:10:49.243"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:49.244" starttime="20200601 14:10:49.244"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:49.244" starttime="20200601 14:10:48.199"></status>
</kw>
<kw type="foritem" name="${i} = 16">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:49.246" starttime="20200601 14:10:49.245"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:49.253" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200601 14:10:49.277" level="INFO">Response Time to /redfish/v1/Olt: 0.000367 seconds.</msg>
<msg timestamp="20200601 14:10:49.277" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:50 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200601 14:10:49.277" starttime="20200601 14:10:49.246"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:49.278" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:49.278" starttime="20200601 14:10:49.277"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200601 14:10:49.279" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200601 14:10:49.279" starttime="20200601 14:10:49.278"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:49.279" starttime="20200601 14:10:49.279"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:49.280" starttime="20200601 14:10:49.280"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:49.281" starttime="20200601 14:10:49.280"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 14:10:50.281" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 14:10:50.281" starttime="20200601 14:10:49.281"></status>
</kw>
<msg timestamp="20200601 14:10:50.282" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200601 14:10:50.282" starttime="20200601 14:10:49.244"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:50.282" starttime="20200601 14:10:50.282"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:50.283" starttime="20200601 14:10:50.283"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:50.283" starttime="20200601 14:10:49.244"></status>
</kw>
<kw type="foritem" name="${i} = 17">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:50.284" starttime="20200601 14:10:50.284"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:50.293" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200601 14:10:51.323" level="INFO">Response Time to /redfish/v1/Olt: 0.000329 seconds.</msg>
<msg timestamp="20200601 14:10:51.323" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:52 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200601 14:10:51.323" starttime="20200601 14:10:50.285"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:51.324" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:51.324" starttime="20200601 14:10:51.324"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200601 14:10:51.325" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200601 14:10:51.325" starttime="20200601 14:10:51.324"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:51.325" starttime="20200601 14:10:51.325"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:51.326" starttime="20200601 14:10:51.326"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:51.326" starttime="20200601 14:10:51.325"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 14:10:52.327" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 14:10:52.327" starttime="20200601 14:10:51.326"></status>
</kw>
<msg timestamp="20200601 14:10:52.327" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200601 14:10:52.327" starttime="20200601 14:10:50.284"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:52.328" starttime="20200601 14:10:52.328"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:52.329" starttime="20200601 14:10:52.329"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:52.329" starttime="20200601 14:10:50.284"></status>
</kw>
<kw type="foritem" name="${i} = 18">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:52.330" starttime="20200601 14:10:52.329"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:52.336" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200601 14:10:52.361" level="INFO">Response Time to /redfish/v1/Olt: 0.000275 seconds.</msg>
<msg timestamp="20200601 14:10:52.362" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:53 GMT
connection Keep-Alive
content-type application/json
content-length 41


{"BalState":"up","OltOperateState":false}</msg>
<status status="PASS" endtime="20200601 14:10:52.362" starttime="20200601 14:10:52.330"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:52.363" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:52.363" starttime="20200601 14:10:52.362"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200601 14:10:52.363" level="INFO">${bal_opt_state} = False</msg>
<status status="PASS" endtime="20200601 14:10:52.363" starttime="20200601 14:10:52.363"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:52.364" starttime="20200601 14:10:52.364"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Down ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:52.366" starttime="20200601 14:10:52.366"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:52.367" starttime="20200601 14:10:52.365"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 14:10:53.367" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 14:10:53.368" starttime="20200601 14:10:52.367"></status>
</kw>
<msg timestamp="20200601 14:10:53.368" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20200601 14:10:53.368" starttime="20200601 14:10:52.329"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:53.368" starttime="20200601 14:10:53.368"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:53.370" starttime="20200601 14:10:53.369"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:53.370" starttime="20200601 14:10:52.329"></status>
</kw>
<kw type="foritem" name="${i} = 19">
<kw name="Test Wait BalOpt Enable">
<tags>
<tag>Verify_Waut_Bal_Opt_Enable</tag>
</tags>
<doc>Wait Enable Bal Opt</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### Wait Bal Opt Enable ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:53.370" starttime="20200601 14:10:53.370"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:53.378" level="INFO">Attempt 1 of /redfish/v1/Olt</msg>
<msg timestamp="20200601 14:10:53.402" level="INFO">Response Time to /redfish/v1/Olt: 0.000386 seconds.</msg>
<msg timestamp="20200601 14:10:53.403" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:10:54 GMT
connection Keep-Alive
content-type application/json
content-length 40


{"BalState":"up","OltOperateState":true}</msg>
<status status="PASS" endtime="20200601 14:10:53.403" starttime="20200601 14:10:53.371"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:53.404" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:53.404" starttime="20200601 14:10:53.403"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['OltOperateState']}</arg>
</arguments>
<assign>
<var>${bal_opt_state}</var>
</assign>
<msg timestamp="20200601 14:10:53.404" level="INFO">${bal_opt_state} = True</msg>
<status status="PASS" endtime="20200601 14:10:53.404" starttime="20200601 14:10:53.404"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt ${bal_opt_state} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:53.405" starttime="20200601 14:10:53.405"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bal_opt_state}</arg>
<arg>Log to console</arg>
<arg>"####### Opt Up ######"</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Opt Down ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Opt Up ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:53.406" starttime="20200601 14:10:53.406"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:53.407" starttime="20200601 14:10:53.406"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 14:10:54.408" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 14:10:54.408" starttime="20200601 14:10:53.407"></status>
</kw>
<msg timestamp="20200601 14:10:54.408" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20200601 14:10:54.408" starttime="20200601 14:10:53.370"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### resule[${result}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:54.409" starttime="20200601 14:10:54.408"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20200601 14:10:54.410" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20200601 14:10:54.410" starttime="20200601 14:10:54.409"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:54.410" starttime="20200601 14:10:53.370"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:54.410" starttime="20200601 14:10:33.626"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:54.410" starttime="20200601 14:10:54.410"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:54.410" starttime="20200601 14:10:30.950"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200601 14:10:59.411" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20200601 14:10:59.411" starttime="20200601 14:10:54.410"></status>
</kw>
<kw name="Test Port Present">
<tags>
<tag>Test pon_status present</tag>
</tags>
<doc>Test Pon port present function</doc>
<arguments>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:10:59.417" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200601 14:10:59.447" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000504 seconds.</msg>
<msg timestamp="20200601 14:10:59.448" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:11:00 GMT
connection Keep-Alive
content-type application/json
content-length 2399


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:10:59.448" starttime="20200601 14:10:59.412"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:10:59.448" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:10:59.448" starttime="20200601 14:10:59.448"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:10:59.449" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200601 14:10:59.449" starttime="20200601 14:10:59.449"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:10:59.450" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:10:59.450" starttime="20200601 14:10:59.449"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:59.450" starttime="20200601 14:10:59.450"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:59.451" starttime="20200601 14:10:59.451"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${PORT_ENABLE}'</arg>
<arg>'Enabled'</arg>
</arguments>
<status status="PASS" endtime="20200601 14:10:59.452" starttime="20200601 14:10:59.452"></status>
</kw>
<status status="PASS" endtime="20200601 14:10:59.452" starttime="20200601 14:10:59.411"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200601 14:11:04.453" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20200601 14:11:04.453" starttime="20200601 14:10:59.452"></status>
</kw>
<kw name="Enable Port">
<tags>
<tag>Enable Port</tag>
</tags>
<doc>Enable port function</doc>
<arguments>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Enable Port ${ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:11:04.454" starttime="20200601 14:11:04.454"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($ADM_UP)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200601 14:11:04.458" level="INFO">${payload} = {u'AdministrativeState': u'Up'}</msg>
<status status="PASS" endtime="20200601 14:11:04.458" starttime="20200601 14:11:04.455"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:11:04.464" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200601 14:11:04.706" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.00056 seconds.</msg>
<msg timestamp="20200601 14:11:04.706" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:11:06 GMT
connection Keep-Alive
content-type application/json
content-length 2407


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:11:04.706" starttime="20200601 14:11:04.458"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:11:04.707" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:11:04.707" starttime="20200601 14:11:04.707"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:11:04.714" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200601 14:11:04.742" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000357 seconds.</msg>
<msg timestamp="20200601 14:11:04.742" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:11:06 GMT
connection Keep-Alive
content-type application/json
content-length 2407


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:11:04.742" starttime="20200601 14:11:04.707"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:11:04.743" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:11:04.743" starttime="20200601 14:11:04.742"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['AdministrativeState']}</arg>
</arguments>
<assign>
<var>${ADM_STAT}</var>
</assign>
<msg timestamp="20200601 14:11:04.744" level="INFO">${ADM_STAT} = Up</msg>
<status status="PASS" endtime="20200601 14:11:04.744" starttime="20200601 14:11:04.743"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${ADM_STAT}'</arg>
<arg>'Up'</arg>
</arguments>
<status status="PASS" endtime="20200601 14:11:04.744" starttime="20200601 14:11:04.744"></status>
</kw>
<status status="PASS" endtime="20200601 14:11:04.744" starttime="20200601 14:11:04.453"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200601 14:11:09.745" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20200601 14:11:09.745" starttime="20200601 14:11:04.744"></status>
</kw>
<kw name="Test NNI Port Enable">
<tags>
<tag>Verify_nni_enable</tag>
</tags>
<doc>Verify NNI port enable function</doc>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:11:09.751" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/</msg>
<msg timestamp="20200601 14:11:09.782" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/: 0.000392 seconds.</msg>
<msg timestamp="20200601 14:11:09.782" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:11:11 GMT
connection Keep-Alive
content-type application/json
content-length 1467


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPortCollection.EthernetSwitchPor...</msg>
<status status="PASS" endtime="20200601 14:11:09.782" starttime="20200601 14:11:09.745"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:11:09.783" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:11:09.783" starttime="20200601 14:11:09.783"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200601 14:11:09.784" level="INFO">Length is 20</msg>
<msg timestamp="20200601 14:11:09.784" level="INFO">${item_count} = 20</msg>
<status status="PASS" endtime="20200601 14:11:09.784" starttime="20200601 14:11:09.783"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### num ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:11:09.784" starttime="20200601 14:11:09.784"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PON_TYPE}' == 'GPON'</arg>
<arg>set variable</arg>
<arg>${65}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${17}</arg>
</arguments>
<assign>
<var>${NNI_PORT}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${17}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:11:09.786" starttime="20200601 14:11:09.785"></status>
</kw>
<msg timestamp="20200601 14:11:09.786" level="INFO">${NNI_PORT} = 17</msg>
<status status="PASS" endtime="20200601 14:11:09.786" starttime="20200601 14:11:09.785"></status>
</kw>
<kw name="Test Port Present">
<tags>
<tag>Test pon_status present</tag>
</tags>
<doc>Test Pon port present function</doc>
<arguments>
<arg>${NNI_PORT}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:11:09.792" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/17</msg>
<msg timestamp="20200601 14:11:09.816" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/17: 0.000372 seconds.</msg>
<msg timestamp="20200601 14:11:09.817" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:11:11 GMT
connection Keep-Alive
content-type application/json
content-length 2438


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:11:09.817" starttime="20200601 14:11:09.786"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:11:09.818" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:11:09.818" starttime="20200601 14:11:09.817"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:11:09.818" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200601 14:11:09.818" starttime="20200601 14:11:09.818"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:11:09.819" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200601 14:11:09.819" starttime="20200601 14:11:09.819"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:11:09.820" starttime="20200601 14:11:09.819"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:11:09.821" starttime="20200601 14:11:09.820"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${PORT_ENABLE}'</arg>
<arg>'Enabled'</arg>
</arguments>
<status status="PASS" endtime="20200601 14:11:09.821" starttime="20200601 14:11:09.821"></status>
</kw>
<status status="PASS" endtime="20200601 14:11:09.821" starttime="20200601 14:11:09.786"></status>
</kw>
<kw name="Enable Port">
<tags>
<tag>Enable Port</tag>
</tags>
<doc>Enable port function</doc>
<arguments>
<arg>${NNI_PORT}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Enable Port ${ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:11:09.822" starttime="20200601 14:11:09.822"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($ADM_UP)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200601 14:11:09.826" level="INFO">${payload} = {u'AdministrativeState': u'Up'}</msg>
<status status="PASS" endtime="20200601 14:11:09.826" starttime="20200601 14:11:09.823"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:11:09.834" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/17</msg>
<msg timestamp="20200601 14:11:10.068" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/17: 0.000517 seconds.</msg>
<msg timestamp="20200601 14:11:10.069" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:11:11 GMT
connection Keep-Alive
content-type application/json
content-length 2438


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:11:10.069" starttime="20200601 14:11:09.827"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:11:10.070" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:11:10.070" starttime="20200601 14:11:10.069"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:11:10.078" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/17</msg>
<msg timestamp="20200601 14:11:10.102" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/17: 0.000461 seconds.</msg>
<msg timestamp="20200601 14:11:10.102" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:11:11 GMT
connection Keep-Alive
content-type application/json
content-length 2438


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:11:10.103" starttime="20200601 14:11:10.070"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:11:10.103" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:11:10.104" starttime="20200601 14:11:10.103"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['AdministrativeState']}</arg>
</arguments>
<assign>
<var>${ADM_STAT}</var>
</assign>
<msg timestamp="20200601 14:11:10.105" level="INFO">${ADM_STAT} = Up</msg>
<status status="PASS" endtime="20200601 14:11:10.105" starttime="20200601 14:11:10.104"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${ADM_STAT}'</arg>
<arg>'Up'</arg>
</arguments>
<status status="PASS" endtime="20200601 14:11:10.105" starttime="20200601 14:11:10.105"></status>
</kw>
<status status="PASS" endtime="20200601 14:11:10.105" starttime="20200601 14:11:09.822"></status>
</kw>
<status status="PASS" endtime="20200601 14:11:10.106" starttime="20200601 14:11:09.745"></status>
</kw>
<status status="PASS" endtime="20200601 14:11:10.106" starttime="20200601 14:10:28.907"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200601 14:11:10.113" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200601 14:11:10.135" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000391 seconds.</msg>
<msg timestamp="20200601 14:11:10.135" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200601 14:11:10.136" starttime="20200601 14:11:10.106"></status>
</kw>
<status status="PASS" endtime="20200601 14:11:10.136" starttime="20200601 14:11:10.106"></status>
</kw>
<doc>Test BAL Restful Status</doc>
<tags>
<tag>Test Bal Restful opertaion test</tag>
</tags>
<status status="PASS" endtime="20200601 14:11:10.136" critical="yes" starttime="20200601 14:10:28.873"></status>
</test>
<test id="s1-s1-t2" name="Verify Restful API for ONU Range Test">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200601 14:11:10.144" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200601 14:11:10.170" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.0006 seconds.</msg>
<msg timestamp="20200601 14:11:10.171" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200601 14:11:10.171" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200601 14:11:10.171" starttime="20200601 14:11:10.139"></status>
</kw>
<status status="PASS" endtime="20200601 14:11:10.171" starttime="20200601 14:11:10.138"></status>
</kw>
<kw name="Test ONU Range">
<tags>
<tag>ONU Range</tag>
</tags>
<doc>ONU Ranging Test</doc>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PON_TYPE}' == 'GPON'</arg>
<arg>set variable</arg>
<arg>${150}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${255}</arg>
</arguments>
<assign>
<var>${ONU_ID_RANGE}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${255}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:11:10.173" starttime="20200601 14:11:10.173"></status>
</kw>
<msg timestamp="20200601 14:11:10.173" level="INFO">${ONU_ID_RANGE} = 255</msg>
<status status="PASS" endtime="20200601 14:11:10.173" starttime="20200601 14:11:10.172"></status>
</kw>
<kw type="for" name="${id} IN RANGE [ 1 | ${ONU_ID_RANGE} | 50 ]">
<kw type="foritem" name="${id} = 1">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200601 14:11:17.174" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200601 14:11:17.174" starttime="20200601 14:11:10.174"></status>
</kw>
<kw name="Test Active ONU">
<tags>
<tag>Test Active ONU</tag>
</tags>
<doc>Test Active ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${SPECIFIC_ID}</arg>
<arg>${SPECIFIC_NUM}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onu_id": ${ONU_ID},</arg>
<arg>"vendor_id": "${VEN_ID}",</arg>
<arg>"vendor_specific":"${VEN_SPEC}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200601 14:11:17.176" level="INFO">${JSTRING} = { "onu_id": 1, "vendor_id": "ISKT", "vendor_specific":"71E83268" }</msg>
<status status="PASS" endtime="20200601 14:11:17.176" starttime="20200601 14:11:17.175"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### active onu ${JSTRING} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:11:17.176" starttime="20200601 14:11:17.176"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200601 14:11:17.182" level="INFO">${payload} = {u'onu_id': 1, u'vendor_id': u'ISKT', u'vendor_specific': u'71E83268'}</msg>
<status status="PASS" endtime="20200601 14:11:17.182" starttime="20200601 14:11:17.177"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:11:17.191" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200601 14:11:17.214" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000439 seconds.</msg>
<msg timestamp="20200601 14:11:17.215" level="INFO">${resp} = 201
date Mon, 01 Jun 2020 06:11:18 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:11:17.215" starttime="20200601 14:11:17.182"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200601 14:11:17.216" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:11:17.216" starttime="20200601 14:11:17.216"></status>
</kw>
<status status="PASS" endtime="20200601 14:11:17.216" starttime="20200601 14:11:17.215"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6s</arg>
</arguments>
<msg timestamp="20200601 14:11:23.217" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20200601 14:11:23.217" starttime="20200601 14:11:17.217"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:11:23.223" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200601 14:11:23.248" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000363 seconds.</msg>
<msg timestamp="20200601 14:11:23.248" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:11:24 GMT
connection Keep-Alive
content-type application/json
content-length 405


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200601 14:11:23.248" starttime="20200601 14:11:23.217"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### onu res ${resp} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:11:23.249" starttime="20200601 14:11:23.248"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200601 14:11:23.250" level="INFO">Length is 1</msg>
<msg timestamp="20200601 14:11:23.250" level="INFO">${item_count} = 1</msg>
<status status="PASS" endtime="20200601 14:11:23.250" starttime="20200601 14:11:23.250"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Onu num ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:11:23.251" starttime="20200601 14:11:23.250"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200601 14:11:23.252" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:11:23.252" starttime="20200601 14:11:23.252"></status>
</kw>
<status status="PASS" endtime="20200601 14:11:23.252" starttime="20200601 14:11:23.251"></status>
</kw>
<status status="PASS" endtime="20200601 14:11:23.253" starttime="20200601 14:11:17.175"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200601 14:11:30.253" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200601 14:11:30.253" starttime="20200601 14:11:23.253"></status>
</kw>
<kw name="Test DeActive ONU">
<tags>
<tag>Test DeActive ONU</tag>
</tags>
<doc>Test DeActive ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Deactive onu ${ONU_ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:11:30.255" starttime="20200601 14:11:30.254"></status>
</kw>
<kw type="for" name="${j} IN RANGE [ 5 ]">
<kw type="foritem" name="${j} = 0">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${j} == 4</arg>
</arguments>
<status status="PASS" endtime="20200601 14:11:30.256" starttime="20200601 14:11:30.255"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:11:30.263" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1</msg>
<msg timestamp="20200601 14:11:30.790" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1: 0.000463 seconds.</msg>
<msg timestamp="20200601 14:11:30.791" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:11:32 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:11:30.791" starttime="20200601 14:11:30.256"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${resp.status} == ${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:11:30.792" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20200601 14:11:30.792" starttime="20200601 14:11:30.791"></status>
</kw>
<status status="PASS" endtime="20200601 14:11:30.792" starttime="20200601 14:11:30.255"></status>
</kw>
<status status="PASS" endtime="20200601 14:11:30.792" starttime="20200601 14:11:30.255"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:11:30.793" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:11:30.793" starttime="20200601 14:11:30.792"></status>
</kw>
<status status="PASS" endtime="20200601 14:11:30.793" starttime="20200601 14:11:30.254"></status>
</kw>
<status status="PASS" endtime="20200601 14:11:30.793" starttime="20200601 14:11:10.173"></status>
</kw>
<kw type="foritem" name="${id} = 51">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200601 14:11:37.794" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200601 14:11:37.794" starttime="20200601 14:11:30.793"></status>
</kw>
<kw name="Test Active ONU">
<tags>
<tag>Test Active ONU</tag>
</tags>
<doc>Test Active ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${SPECIFIC_ID}</arg>
<arg>${SPECIFIC_NUM}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onu_id": ${ONU_ID},</arg>
<arg>"vendor_id": "${VEN_ID}",</arg>
<arg>"vendor_specific":"${VEN_SPEC}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200601 14:11:37.795" level="INFO">${JSTRING} = { "onu_id": 51, "vendor_id": "ISKT", "vendor_specific":"71E83268" }</msg>
<status status="PASS" endtime="20200601 14:11:37.795" starttime="20200601 14:11:37.795"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### active onu ${JSTRING} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:11:37.796" starttime="20200601 14:11:37.795"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200601 14:11:37.800" level="INFO">${payload} = {u'onu_id': 51, u'vendor_id': u'ISKT', u'vendor_specific': u'71E83268'}</msg>
<status status="PASS" endtime="20200601 14:11:37.800" starttime="20200601 14:11:37.796"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:11:37.807" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200601 14:11:37.833" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.00034 seconds.</msg>
<msg timestamp="20200601 14:11:37.833" level="INFO">${resp} = 201
date Mon, 01 Jun 2020 06:11:39 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:11:37.833" starttime="20200601 14:11:37.800"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200601 14:11:37.834" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:11:37.834" starttime="20200601 14:11:37.834"></status>
</kw>
<status status="PASS" endtime="20200601 14:11:37.834" starttime="20200601 14:11:37.833"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6s</arg>
</arguments>
<msg timestamp="20200601 14:11:43.836" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20200601 14:11:43.836" starttime="20200601 14:11:37.835"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:11:43.843" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200601 14:11:43.867" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.00041 seconds.</msg>
<msg timestamp="20200601 14:11:43.867" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:11:45 GMT
connection Keep-Alive
content-type application/json
content-length 406


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200601 14:11:43.867" starttime="20200601 14:11:43.836"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### onu res ${resp} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:11:43.868" starttime="20200601 14:11:43.868"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200601 14:11:43.869" level="INFO">Length is 1</msg>
<msg timestamp="20200601 14:11:43.869" level="INFO">${item_count} = 1</msg>
<status status="PASS" endtime="20200601 14:11:43.869" starttime="20200601 14:11:43.868"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Onu num ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:11:43.869" starttime="20200601 14:11:43.869"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200601 14:11:43.871" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:11:43.871" starttime="20200601 14:11:43.870"></status>
</kw>
<status status="PASS" endtime="20200601 14:11:43.871" starttime="20200601 14:11:43.870"></status>
</kw>
<status status="PASS" endtime="20200601 14:11:43.871" starttime="20200601 14:11:37.794"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200601 14:11:50.877" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200601 14:11:50.877" starttime="20200601 14:11:43.871"></status>
</kw>
<kw name="Test DeActive ONU">
<tags>
<tag>Test DeActive ONU</tag>
</tags>
<doc>Test DeActive ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Deactive onu ${ONU_ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:11:50.879" starttime="20200601 14:11:50.878"></status>
</kw>
<kw type="for" name="${j} IN RANGE [ 5 ]">
<kw type="foritem" name="${j} = 0">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${j} == 4</arg>
</arguments>
<status status="PASS" endtime="20200601 14:11:50.880" starttime="20200601 14:11:50.879"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:11:50.887" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/51</msg>
<msg timestamp="20200601 14:11:51.411" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/51: 0.00033 seconds.</msg>
<msg timestamp="20200601 14:11:51.411" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:11:52 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:11:51.411" starttime="20200601 14:11:50.880"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${resp.status} == ${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:11:51.412" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20200601 14:11:51.412" starttime="20200601 14:11:51.412"></status>
</kw>
<status status="PASS" endtime="20200601 14:11:51.412" starttime="20200601 14:11:50.879"></status>
</kw>
<status status="PASS" endtime="20200601 14:11:51.412" starttime="20200601 14:11:50.879"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:11:51.413" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:11:51.413" starttime="20200601 14:11:51.413"></status>
</kw>
<status status="PASS" endtime="20200601 14:11:51.413" starttime="20200601 14:11:50.877"></status>
</kw>
<status status="PASS" endtime="20200601 14:11:51.413" starttime="20200601 14:11:30.793"></status>
</kw>
<kw type="foritem" name="${id} = 101">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200601 14:11:58.414" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200601 14:11:58.414" starttime="20200601 14:11:51.413"></status>
</kw>
<kw name="Test Active ONU">
<tags>
<tag>Test Active ONU</tag>
</tags>
<doc>Test Active ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${SPECIFIC_ID}</arg>
<arg>${SPECIFIC_NUM}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onu_id": ${ONU_ID},</arg>
<arg>"vendor_id": "${VEN_ID}",</arg>
<arg>"vendor_specific":"${VEN_SPEC}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200601 14:11:58.415" level="INFO">${JSTRING} = { "onu_id": 101, "vendor_id": "ISKT", "vendor_specific":"71E83268" }</msg>
<status status="PASS" endtime="20200601 14:11:58.415" starttime="20200601 14:11:58.415"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### active onu ${JSTRING} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:11:58.416" starttime="20200601 14:11:58.415"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200601 14:11:58.420" level="INFO">${payload} = {u'onu_id': 101, u'vendor_id': u'ISKT', u'vendor_specific': u'71E83268'}</msg>
<status status="PASS" endtime="20200601 14:11:58.420" starttime="20200601 14:11:58.417"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:11:58.427" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200601 14:11:58.453" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000346 seconds.</msg>
<msg timestamp="20200601 14:11:58.453" level="INFO">${resp} = 201
date Mon, 01 Jun 2020 06:11:59 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:11:58.453" starttime="20200601 14:11:58.420"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200601 14:11:58.454" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:11:58.455" starttime="20200601 14:11:58.454"></status>
</kw>
<status status="PASS" endtime="20200601 14:11:58.455" starttime="20200601 14:11:58.453"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6s</arg>
</arguments>
<msg timestamp="20200601 14:12:04.456" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20200601 14:12:04.456" starttime="20200601 14:11:58.455"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:12:04.464" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200601 14:12:04.485" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000337 seconds.</msg>
<msg timestamp="20200601 14:12:04.486" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:12:05 GMT
connection Keep-Alive
content-type application/json
content-length 407


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200601 14:12:04.486" starttime="20200601 14:12:04.456"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### onu res ${resp} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:12:04.487" starttime="20200601 14:12:04.486"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200601 14:12:04.487" level="INFO">Length is 1</msg>
<msg timestamp="20200601 14:12:04.487" level="INFO">${item_count} = 1</msg>
<status status="PASS" endtime="20200601 14:12:04.487" starttime="20200601 14:12:04.487"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Onu num ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:12:04.488" starttime="20200601 14:12:04.488"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200601 14:12:04.489" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:12:04.489" starttime="20200601 14:12:04.489"></status>
</kw>
<status status="PASS" endtime="20200601 14:12:04.489" starttime="20200601 14:12:04.488"></status>
</kw>
<status status="PASS" endtime="20200601 14:12:04.489" starttime="20200601 14:11:58.414"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200601 14:12:11.490" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200601 14:12:11.490" starttime="20200601 14:12:04.489"></status>
</kw>
<kw name="Test DeActive ONU">
<tags>
<tag>Test DeActive ONU</tag>
</tags>
<doc>Test DeActive ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Deactive onu ${ONU_ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:12:11.491" starttime="20200601 14:12:11.491"></status>
</kw>
<kw type="for" name="${j} IN RANGE [ 5 ]">
<kw type="foritem" name="${j} = 0">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${j} == 4</arg>
</arguments>
<status status="PASS" endtime="20200601 14:12:11.493" starttime="20200601 14:12:11.492"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:12:11.500" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/101</msg>
<msg timestamp="20200601 14:12:12.023" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/101: 0.00035 seconds.</msg>
<msg timestamp="20200601 14:12:12.024" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:12:13 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:12:12.024" starttime="20200601 14:12:11.493"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${resp.status} == ${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:12:12.025" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20200601 14:12:12.025" starttime="20200601 14:12:12.024"></status>
</kw>
<status status="PASS" endtime="20200601 14:12:12.025" starttime="20200601 14:12:11.492"></status>
</kw>
<status status="PASS" endtime="20200601 14:12:12.025" starttime="20200601 14:12:11.491"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:12:12.025" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:12:12.026" starttime="20200601 14:12:12.025"></status>
</kw>
<status status="PASS" endtime="20200601 14:12:12.026" starttime="20200601 14:12:11.490"></status>
</kw>
<status status="PASS" endtime="20200601 14:12:12.026" starttime="20200601 14:11:51.413"></status>
</kw>
<kw type="foritem" name="${id} = 151">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200601 14:12:19.026" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200601 14:12:19.026" starttime="20200601 14:12:12.026"></status>
</kw>
<kw name="Test Active ONU">
<tags>
<tag>Test Active ONU</tag>
</tags>
<doc>Test Active ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${SPECIFIC_ID}</arg>
<arg>${SPECIFIC_NUM}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onu_id": ${ONU_ID},</arg>
<arg>"vendor_id": "${VEN_ID}",</arg>
<arg>"vendor_specific":"${VEN_SPEC}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200601 14:12:19.029" level="INFO">${JSTRING} = { "onu_id": 151, "vendor_id": "ISKT", "vendor_specific":"71E83268" }</msg>
<status status="PASS" endtime="20200601 14:12:19.029" starttime="20200601 14:12:19.028"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### active onu ${JSTRING} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:12:19.029" starttime="20200601 14:12:19.029"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200601 14:12:19.033" level="INFO">${payload} = {u'onu_id': 151, u'vendor_id': u'ISKT', u'vendor_specific': u'71E83268'}</msg>
<status status="PASS" endtime="20200601 14:12:19.033" starttime="20200601 14:12:19.030"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:12:19.039" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200601 14:12:19.065" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000555 seconds.</msg>
<msg timestamp="20200601 14:12:19.066" level="INFO">${resp} = 201
date Mon, 01 Jun 2020 06:12:20 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:12:19.066" starttime="20200601 14:12:19.033"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200601 14:12:19.068" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:12:19.068" starttime="20200601 14:12:19.068"></status>
</kw>
<status status="PASS" endtime="20200601 14:12:19.068" starttime="20200601 14:12:19.066"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6s</arg>
</arguments>
<msg timestamp="20200601 14:12:25.069" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20200601 14:12:25.070" starttime="20200601 14:12:19.069"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:12:25.075" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200601 14:12:25.100" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.00034 seconds.</msg>
<msg timestamp="20200601 14:12:25.100" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:12:26 GMT
connection Keep-Alive
content-type application/json
content-length 407


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200601 14:12:25.100" starttime="20200601 14:12:25.070"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### onu res ${resp} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:12:25.101" starttime="20200601 14:12:25.100"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200601 14:12:25.102" level="INFO">Length is 1</msg>
<msg timestamp="20200601 14:12:25.102" level="INFO">${item_count} = 1</msg>
<status status="PASS" endtime="20200601 14:12:25.102" starttime="20200601 14:12:25.102"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Onu num ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:12:25.103" starttime="20200601 14:12:25.102"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200601 14:12:25.104" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:12:25.104" starttime="20200601 14:12:25.104"></status>
</kw>
<status status="PASS" endtime="20200601 14:12:25.104" starttime="20200601 14:12:25.103"></status>
</kw>
<status status="PASS" endtime="20200601 14:12:25.104" starttime="20200601 14:12:19.027"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200601 14:12:32.106" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200601 14:12:32.106" starttime="20200601 14:12:25.104"></status>
</kw>
<kw name="Test DeActive ONU">
<tags>
<tag>Test DeActive ONU</tag>
</tags>
<doc>Test DeActive ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Deactive onu ${ONU_ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:12:32.107" starttime="20200601 14:12:32.107"></status>
</kw>
<kw type="for" name="${j} IN RANGE [ 5 ]">
<kw type="foritem" name="${j} = 0">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${j} == 4</arg>
</arguments>
<status status="PASS" endtime="20200601 14:12:32.108" starttime="20200601 14:12:32.108"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:12:32.114" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/151</msg>
<msg timestamp="20200601 14:12:32.638" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/151: 0.000383 seconds.</msg>
<msg timestamp="20200601 14:12:32.639" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:12:33 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:12:32.639" starttime="20200601 14:12:32.108"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${resp.status} == ${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:12:32.640" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20200601 14:12:32.640" starttime="20200601 14:12:32.639"></status>
</kw>
<status status="PASS" endtime="20200601 14:12:32.640" starttime="20200601 14:12:32.108"></status>
</kw>
<status status="PASS" endtime="20200601 14:12:32.640" starttime="20200601 14:12:32.107"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:12:32.640" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:12:32.641" starttime="20200601 14:12:32.640"></status>
</kw>
<status status="PASS" endtime="20200601 14:12:32.641" starttime="20200601 14:12:32.106"></status>
</kw>
<status status="PASS" endtime="20200601 14:12:32.641" starttime="20200601 14:12:12.026"></status>
</kw>
<kw type="foritem" name="${id} = 201">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200601 14:12:39.641" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200601 14:12:39.641" starttime="20200601 14:12:32.641"></status>
</kw>
<kw name="Test Active ONU">
<tags>
<tag>Test Active ONU</tag>
</tags>
<doc>Test Active ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${SPECIFIC_ID}</arg>
<arg>${SPECIFIC_NUM}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onu_id": ${ONU_ID},</arg>
<arg>"vendor_id": "${VEN_ID}",</arg>
<arg>"vendor_specific":"${VEN_SPEC}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200601 14:12:39.643" level="INFO">${JSTRING} = { "onu_id": 201, "vendor_id": "ISKT", "vendor_specific":"71E83268" }</msg>
<status status="PASS" endtime="20200601 14:12:39.643" starttime="20200601 14:12:39.642"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### active onu ${JSTRING} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:12:39.644" starttime="20200601 14:12:39.643"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200601 14:12:39.648" level="INFO">${payload} = {u'onu_id': 201, u'vendor_id': u'ISKT', u'vendor_specific': u'71E83268'}</msg>
<status status="PASS" endtime="20200601 14:12:39.649" starttime="20200601 14:12:39.645"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:12:39.655" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200601 14:12:39.681" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.00035 seconds.</msg>
<msg timestamp="20200601 14:12:39.681" level="INFO">${resp} = 201
date Mon, 01 Jun 2020 06:12:41 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:12:39.681" starttime="20200601 14:12:39.649"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200601 14:12:39.683" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:12:39.683" starttime="20200601 14:12:39.682"></status>
</kw>
<status status="PASS" endtime="20200601 14:12:39.683" starttime="20200601 14:12:39.682"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6s</arg>
</arguments>
<msg timestamp="20200601 14:12:45.684" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20200601 14:12:45.684" starttime="20200601 14:12:39.683"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:12:45.690" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200601 14:12:45.716" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000337 seconds.</msg>
<msg timestamp="20200601 14:12:45.717" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:12:47 GMT
connection Keep-Alive
content-type application/json
content-length 407


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200601 14:12:45.717" starttime="20200601 14:12:45.684"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### onu res ${resp} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:12:45.717" starttime="20200601 14:12:45.717"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200601 14:12:45.718" level="INFO">Length is 1</msg>
<msg timestamp="20200601 14:12:45.719" level="INFO">${item_count} = 1</msg>
<status status="PASS" endtime="20200601 14:12:45.719" starttime="20200601 14:12:45.718"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Onu num ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:12:45.719" starttime="20200601 14:12:45.719"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200601 14:12:45.720" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:12:45.720" starttime="20200601 14:12:45.720"></status>
</kw>
<status status="PASS" endtime="20200601 14:12:45.721" starttime="20200601 14:12:45.720"></status>
</kw>
<status status="PASS" endtime="20200601 14:12:45.721" starttime="20200601 14:12:39.642"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200601 14:12:52.727" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200601 14:12:52.728" starttime="20200601 14:12:45.721"></status>
</kw>
<kw name="Test DeActive ONU">
<tags>
<tag>Test DeActive ONU</tag>
</tags>
<doc>Test DeActive ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Deactive onu ${ONU_ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:12:52.729" starttime="20200601 14:12:52.729"></status>
</kw>
<kw type="for" name="${j} IN RANGE [ 5 ]">
<kw type="foritem" name="${j} = 0">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${j} == 4</arg>
</arguments>
<status status="PASS" endtime="20200601 14:12:52.730" starttime="20200601 14:12:52.730"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:12:52.738" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/201</msg>
<msg timestamp="20200601 14:12:53.265" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/201: 0.000383 seconds.</msg>
<msg timestamp="20200601 14:12:53.265" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:12:54 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:12:53.266" starttime="20200601 14:12:52.731"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${resp.status} == ${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:12:53.266" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20200601 14:12:53.267" starttime="20200601 14:12:53.266"></status>
</kw>
<status status="PASS" endtime="20200601 14:12:53.267" starttime="20200601 14:12:52.730"></status>
</kw>
<status status="PASS" endtime="20200601 14:12:53.267" starttime="20200601 14:12:52.729"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:12:53.267" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:12:53.267" starttime="20200601 14:12:53.267"></status>
</kw>
<status status="PASS" endtime="20200601 14:12:53.267" starttime="20200601 14:12:52.728"></status>
</kw>
<status status="PASS" endtime="20200601 14:12:53.267" starttime="20200601 14:12:32.641"></status>
</kw>
<kw type="foritem" name="${id} = 251">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200601 14:13:00.268" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200601 14:13:00.268" starttime="20200601 14:12:53.268"></status>
</kw>
<kw name="Test Active ONU">
<tags>
<tag>Test Active ONU</tag>
</tags>
<doc>Test Active ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${SPECIFIC_ID}</arg>
<arg>${SPECIFIC_NUM}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onu_id": ${ONU_ID},</arg>
<arg>"vendor_id": "${VEN_ID}",</arg>
<arg>"vendor_specific":"${VEN_SPEC}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200601 14:13:00.270" level="INFO">${JSTRING} = { "onu_id": 251, "vendor_id": "ISKT", "vendor_specific":"71E83268" }</msg>
<status status="PASS" endtime="20200601 14:13:00.270" starttime="20200601 14:13:00.269"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### active onu ${JSTRING} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:13:00.270" starttime="20200601 14:13:00.270"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200601 14:13:00.274" level="INFO">${payload} = {u'onu_id': 251, u'vendor_id': u'ISKT', u'vendor_specific': u'71E83268'}</msg>
<status status="PASS" endtime="20200601 14:13:00.274" starttime="20200601 14:13:00.271"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:13:00.281" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200601 14:13:00.308" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000317 seconds.</msg>
<msg timestamp="20200601 14:13:00.309" level="INFO">${resp} = 201
date Mon, 01 Jun 2020 06:13:01 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:13:00.309" starttime="20200601 14:13:00.275"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200601 14:13:00.310" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:13:00.310" starttime="20200601 14:13:00.310"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:00.310" starttime="20200601 14:13:00.309"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6s</arg>
</arguments>
<msg timestamp="20200601 14:13:06.311" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20200601 14:13:06.312" starttime="20200601 14:13:00.310"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:13:06.334" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200601 14:13:06.358" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000422 seconds.</msg>
<msg timestamp="20200601 14:13:06.359" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:13:07 GMT
connection Keep-Alive
content-type application/json
content-length 407


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200601 14:13:06.359" starttime="20200601 14:13:06.313"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### onu res ${resp} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:13:06.360" starttime="20200601 14:13:06.359"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200601 14:13:06.361" level="INFO">Length is 1</msg>
<msg timestamp="20200601 14:13:06.361" level="INFO">${item_count} = 1</msg>
<status status="PASS" endtime="20200601 14:13:06.361" starttime="20200601 14:13:06.360"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Onu num ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:13:06.362" starttime="20200601 14:13:06.362"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200601 14:13:06.364" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:13:06.364" starttime="20200601 14:13:06.363"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:06.364" starttime="20200601 14:13:06.362"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:06.364" starttime="20200601 14:13:00.269"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20200601 14:13:13.365" level="INFO">Slept 7 seconds</msg>
<status status="PASS" endtime="20200601 14:13:13.365" starttime="20200601 14:13:06.364"></status>
</kw>
<kw name="Test DeActive ONU">
<tags>
<tag>Test DeActive ONU</tag>
</tags>
<doc>Test DeActive ONU function</doc>
<arguments>
<arg>${id}</arg>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Deactive onu ${ONU_ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:13:13.366" starttime="20200601 14:13:13.366"></status>
</kw>
<kw type="for" name="${j} IN RANGE [ 5 ]">
<kw type="foritem" name="${j} = 0">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${j} == 4</arg>
</arguments>
<status status="PASS" endtime="20200601 14:13:13.367" starttime="20200601 14:13:13.367"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:13:13.374" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/251</msg>
<msg timestamp="20200601 14:13:13.900" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/251: 0.000338 seconds.</msg>
<msg timestamp="20200601 14:13:13.900" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:13:15 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:13:13.900" starttime="20200601 14:13:13.367"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${resp.status} == ${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:13:13.901" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20200601 14:13:13.901" starttime="20200601 14:13:13.901"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:13.901" starttime="20200601 14:13:13.366"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:13.901" starttime="20200601 14:13:13.366"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:13:13.902" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:13:13.902" starttime="20200601 14:13:13.901"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:13.902" starttime="20200601 14:13:13.365"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:13.902" starttime="20200601 14:12:53.268"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:13.902" starttime="20200601 14:11:10.173"></status>
</kw>
<kw name="Test Active ONU">
<tags>
<tag>Test Active ONU</tag>
</tags>
<doc>Test Active ONU function</doc>
<arguments>
<arg>256</arg>
<arg>${SPECIFIC_ID}</arg>
<arg>${SPECIFIC_NUM}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>NOTONUID_IN_RANGE</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onu_id": ${ONU_ID},</arg>
<arg>"vendor_id": "${VEN_ID}",</arg>
<arg>"vendor_specific":"${VEN_SPEC}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200601 14:13:13.903" level="INFO">${JSTRING} = { "onu_id": 256, "vendor_id": "ISKT", "vendor_specific":"71E83268" }</msg>
<status status="PASS" endtime="20200601 14:13:13.903" starttime="20200601 14:13:13.902"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### active onu ${JSTRING} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:13:13.903" starttime="20200601 14:13:13.903"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200601 14:13:13.907" level="INFO">${payload} = {u'onu_id': 256, u'vendor_id': u'ISKT', u'vendor_specific': u'71E83268'}</msg>
<status status="PASS" endtime="20200601 14:13:13.907" starttime="20200601 14:13:13.903"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:13:13.913" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200601 14:13:13.939" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000392 seconds.</msg>
<msg timestamp="20200601 14:13:13.939" level="INFO">${resp} = 500
date Mon, 01 Jun 2020 06:13:15 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:13:13.939" starttime="20200601 14:13:13.907"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200601 14:13:13.941" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:13:13.941" starttime="20200601 14:13:13.940"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:13.941" starttime="20200601 14:13:13.940"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6s</arg>
</arguments>
<msg timestamp="20200601 14:13:19.941" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20200601 14:13:19.942" starttime="20200601 14:13:13.941"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:13:19.950" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200601 14:13:19.974" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000419 seconds.</msg>
<msg timestamp="20200601 14:13:19.974" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:13:21 GMT
connection Keep-Alive
content-type application/json
content-length 344


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200601 14:13:19.974" starttime="20200601 14:13:19.942"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### onu res ${resp} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:13:19.975" starttime="20200601 14:13:19.975"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200601 14:13:19.976" level="INFO">Length is 0</msg>
<msg timestamp="20200601 14:13:19.976" level="INFO">${item_count} = 0</msg>
<status status="PASS" endtime="20200601 14:13:19.976" starttime="20200601 14:13:19.976"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Onu num ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:13:19.977" starttime="20200601 14:13:19.977"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200601 14:13:19.979" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:13:19.979" starttime="20200601 14:13:19.979"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:19.979" starttime="20200601 14:13:19.978"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:19.980" starttime="20200601 14:13:13.902"></status>
</kw>
<kw name="Test Port Present">
<tags>
<tag>Test pon_status present</tag>
</tags>
<doc>Test Pon port present function</doc>
<arguments>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:13:19.989" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200601 14:13:20.018" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000766 seconds.</msg>
<msg timestamp="20200601 14:13:20.019" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:13:21 GMT
connection Keep-Alive
content-type application/json
content-length 2408


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:13:20.019" starttime="20200601 14:13:19.980"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:13:20.020" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:13:20.020" starttime="20200601 14:13:20.019"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:13:20.021" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200601 14:13:20.021" starttime="20200601 14:13:20.020"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:13:20.022" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:13:20.022" starttime="20200601 14:13:20.021"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:13:20.022" starttime="20200601 14:13:20.022"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:13:20.024" starttime="20200601 14:13:20.023"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${PORT_ENABLE}'</arg>
<arg>'Enabled'</arg>
</arguments>
<status status="PASS" endtime="20200601 14:13:20.025" starttime="20200601 14:13:20.024"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:20.025" starttime="20200601 14:13:19.980"></status>
</kw>
<kw name="Enable Port">
<tags>
<tag>Enable Port</tag>
</tags>
<doc>Enable port function</doc>
<arguments>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Enable Port ${ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:13:20.026" starttime="20200601 14:13:20.026"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($ADM_UP)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200601 14:13:20.031" level="INFO">${payload} = {u'AdministrativeState': u'Up'}</msg>
<status status="PASS" endtime="20200601 14:13:20.032" starttime="20200601 14:13:20.026"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:13:20.039" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200601 14:13:20.123" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000518 seconds.</msg>
<msg timestamp="20200601 14:13:20.123" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:13:21 GMT
connection Keep-Alive
content-type application/json
content-length 2408


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:13:20.123" starttime="20200601 14:13:20.032"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:13:20.124" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:13:20.124" starttime="20200601 14:13:20.124"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:13:20.133" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200601 14:13:20.162" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000534 seconds.</msg>
<msg timestamp="20200601 14:13:20.162" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:13:21 GMT
connection Keep-Alive
content-type application/json
content-length 2408


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:13:20.162" starttime="20200601 14:13:20.125"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:13:20.163" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:13:20.163" starttime="20200601 14:13:20.163"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['AdministrativeState']}</arg>
</arguments>
<assign>
<var>${ADM_STAT}</var>
</assign>
<msg timestamp="20200601 14:13:20.164" level="INFO">${ADM_STAT} = Up</msg>
<status status="PASS" endtime="20200601 14:13:20.164" starttime="20200601 14:13:20.164"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${ADM_STAT}'</arg>
<arg>'Up'</arg>
</arguments>
<status status="PASS" endtime="20200601 14:13:20.165" starttime="20200601 14:13:20.165"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:20.165" starttime="20200601 14:13:20.025"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200601 14:13:23.166" level="INFO">Slept 3 seconds</msg>
<status status="PASS" endtime="20200601 14:13:23.166" starttime="20200601 14:13:20.165"></status>
</kw>
<kw name="Test Active ONU">
<tags>
<tag>Test Active ONU</tag>
</tags>
<doc>Test Active ONU function</doc>
<arguments>
<arg>1</arg>
<arg>${SPECIFIC_ID}</arg>
<arg>${SPECIFIC_NUM}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onu_id": ${ONU_ID},</arg>
<arg>"vendor_id": "${VEN_ID}",</arg>
<arg>"vendor_specific":"${VEN_SPEC}"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200601 14:13:23.167" level="INFO">${JSTRING} = { "onu_id": 1, "vendor_id": "ISKT", "vendor_specific":"71E83268" }</msg>
<status status="PASS" endtime="20200601 14:13:23.167" starttime="20200601 14:13:23.167"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### active onu ${JSTRING} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:13:23.168" starttime="20200601 14:13:23.167"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200601 14:13:23.172" level="INFO">${payload} = {u'onu_id': 1, u'vendor_id': u'ISKT', u'vendor_specific': u'71E83268'}</msg>
<status status="PASS" endtime="20200601 14:13:23.172" starttime="20200601 14:13:23.168"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:13:23.177" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200601 14:13:23.204" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.00031 seconds.</msg>
<msg timestamp="20200601 14:13:23.204" level="INFO">${resp} = 201
date Mon, 01 Jun 2020 06:13:24 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:13:23.204" starttime="20200601 14:13:23.172"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_CREATED}</arg>
</arguments>
<msg timestamp="20200601 14:13:23.206" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:13:23.206" starttime="20200601 14:13:23.205"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:23.206" starttime="20200601 14:13:23.205"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>6s</arg>
</arguments>
<msg timestamp="20200601 14:13:29.208" level="INFO">Slept 6 seconds</msg>
<status status="PASS" endtime="20200601 14:13:29.208" starttime="20200601 14:13:23.207"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:13:29.215" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200601 14:13:29.239" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000458 seconds.</msg>
<msg timestamp="20200601 14:13:29.240" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:13:30 GMT
connection Keep-Alive
content-type application/json
content-length 405


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200601 14:13:29.240" starttime="20200601 14:13:29.208"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### onu res ${resp} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:13:29.241" starttime="20200601 14:13:29.240"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200601 14:13:29.242" level="INFO">Length is 1</msg>
<msg timestamp="20200601 14:13:29.242" level="INFO">${item_count} = 1</msg>
<status status="PASS" endtime="20200601 14:13:29.242" starttime="20200601 14:13:29.241"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Onu num ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:13:29.243" starttime="20200601 14:13:29.242"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Should Be Equal As Integers</arg>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200601 14:13:29.245" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:13:29.245" starttime="20200601 14:13:29.244"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:29.245" starttime="20200601 14:13:29.244"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:29.245" starttime="20200601 14:13:23.166"></status>
</kw>
<kw name="Disable Port">
<tags>
<tag>Enable Port</tag>
</tags>
<doc>Enable port function</doc>
<arguments>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($ADM_DOWN)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200601 14:13:29.251" level="INFO">${payload} = {u'AdministrativeState': u'Down'}</msg>
<status status="PASS" endtime="20200601 14:13:29.251" starttime="20200601 14:13:29.246"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:13:29.260" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200601 14:13:29.305" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000398 seconds.</msg>
<msg timestamp="20200601 14:13:29.306" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:13:30 GMT
connection Keep-Alive
content-type application/json
content-length 2399


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:13:29.306" starttime="20200601 14:13:29.251"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:13:29.307" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:13:29.307" starttime="20200601 14:13:29.306"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:13:29.313" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200601 14:13:29.345" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000408 seconds.</msg>
<msg timestamp="20200601 14:13:29.345" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:13:30 GMT
connection Keep-Alive
content-type application/json
content-length 2399


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:13:29.345" starttime="20200601 14:13:29.307"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:13:29.346" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:13:29.346" starttime="20200601 14:13:29.345"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['AdministrativeState']}</arg>
</arguments>
<assign>
<var>${ADM_STAT}</var>
</assign>
<msg timestamp="20200601 14:13:29.346" level="INFO">${ADM_STAT} = Down</msg>
<status status="PASS" endtime="20200601 14:13:29.346" starttime="20200601 14:13:29.346"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${ADM_STAT}'</arg>
<arg>'Down'</arg>
</arguments>
<status status="PASS" endtime="20200601 14:13:29.347" starttime="20200601 14:13:29.346"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:29.347" starttime="20200601 14:13:29.245"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20200601 14:13:31.347" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20200601 14:13:31.348" starttime="20200601 14:13:29.347"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:13:31.354" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200601 14:13:31.379" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000314 seconds.</msg>
<msg timestamp="20200601 14:13:31.379" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:13:32 GMT
connection Keep-Alive
content-type application/json
content-length 344


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200601 14:13:31.379" starttime="20200601 14:13:31.348"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200601 14:13:31.380" level="INFO">Length is 0</msg>
<msg timestamp="20200601 14:13:31.380" level="INFO">${item_count} = 0</msg>
<status status="PASS" endtime="20200601 14:13:31.380" starttime="20200601 14:13:31.380"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200601 14:13:31.381" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:13:31.381" starttime="20200601 14:13:31.380"></status>
</kw>
<kw name="Enable Port">
<tags>
<tag>Enable Port</tag>
</tags>
<doc>Enable port function</doc>
<arguments>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Enable Port ${ID} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:13:31.382" starttime="20200601 14:13:31.381"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($ADM_UP)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200601 14:13:31.386" level="INFO">${payload} = {u'AdministrativeState': u'Up'}</msg>
<status status="PASS" endtime="20200601 14:13:31.386" starttime="20200601 14:13:31.382"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:13:31.394" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200601 14:13:31.797" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000484 seconds.</msg>
<msg timestamp="20200601 14:13:31.798" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:13:33 GMT
connection Keep-Alive
content-type application/json
content-length 2408


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:13:31.798" starttime="20200601 14:13:31.386"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:13:31.799" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:13:31.799" starttime="20200601 14:13:31.798"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:13:31.805" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200601 14:13:31.835" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000509 seconds.</msg>
<msg timestamp="20200601 14:13:31.835" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:13:33 GMT
connection Keep-Alive
content-type application/json
content-length 2408


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:13:31.836" starttime="20200601 14:13:31.799"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:13:31.836" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:13:31.837" starttime="20200601 14:13:31.836"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['AdministrativeState']}</arg>
</arguments>
<assign>
<var>${ADM_STAT}</var>
</assign>
<msg timestamp="20200601 14:13:31.838" level="INFO">${ADM_STAT} = Up</msg>
<status status="PASS" endtime="20200601 14:13:31.838" starttime="20200601 14:13:31.837"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${ADM_STAT}'</arg>
<arg>'Up'</arg>
</arguments>
<status status="PASS" endtime="20200601 14:13:31.838" starttime="20200601 14:13:31.838"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:31.838" starttime="20200601 14:13:31.381"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200601 14:13:41.839" level="INFO">Slept 10 seconds</msg>
<status status="PASS" endtime="20200601 14:13:41.839" starttime="20200601 14:13:31.839"></status>
</kw>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:13:41.845" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs</msg>
<msg timestamp="20200601 14:13:41.868" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs: 0.000321 seconds.</msg>
<msg timestamp="20200601 14:13:41.869" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:13:43 GMT
connection Keep-Alive
content-type application/json
content-length 405


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchONUCollection.EthernetSwitchONUCo...</msg>
<status status="PASS" endtime="20200601 14:13:41.869" starttime="20200601 14:13:41.840"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200601 14:13:41.870" level="INFO">Length is 1</msg>
<msg timestamp="20200601 14:13:41.870" level="INFO">${item_count} = 1</msg>
<status status="PASS" endtime="20200601 14:13:41.870" starttime="20200601 14:13:41.869"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${item_count}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200601 14:13:41.870" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:13:41.870" starttime="20200601 14:13:41.870"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200601 14:13:46.873" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20200601 14:13:46.873" starttime="20200601 14:13:41.871"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:46.874" starttime="20200601 14:11:10.171"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200601 14:13:46.884" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200601 14:13:46.907" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000521 seconds.</msg>
<msg timestamp="20200601 14:13:46.908" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200601 14:13:46.908" starttime="20200601 14:13:46.875"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:46.909" starttime="20200601 14:13:46.874"></status>
</kw>
<doc>Test ONU Range</doc>
<tags>
<tag>Test ONU Rnage test</tag>
</tags>
<status status="PASS" endtime="20200601 14:13:46.909" critical="yes" starttime="20200601 14:11:10.137"></status>
</test>
<test id="s1-s1-t3" name="Verify Restful API for flow add">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200601 14:13:46.918" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200601 14:13:46.952" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000764 seconds.</msg>
<msg timestamp="20200601 14:13:46.952" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200601 14:13:46.953" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200601 14:13:46.953" starttime="20200601 14:13:46.911"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:46.953" starttime="20200601 14:13:46.910"></status>
</kw>
<kw name="Test US DS Flow Add">
<tags>
<tag>US DS Flow Add/Remove</tag>
</tags>
<doc>Flow Add/Remove</doc>
<kw type="for" name="${flow_id} IN RANGE [ 0 | 2047 | 500 ]">
<kw type="foritem" name="${flow_id} = 0">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 14:13:47.955" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 14:13:47.955" starttime="20200601 14:13:46.954"></status>
</kw>
<kw name="Test Flow Add">
<tags>
<tag>UP/DOWN stream flow add</tag>
</tags>
<doc>Test Flow Add</doc>
<arguments>
<arg>1</arg>
<arg>${flow_id}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PON_ID} - ${1}</arg>
</arguments>
<assign>
<var>${PON_ID}</var>
</assign>
<msg timestamp="20200601 14:13:47.956" level="INFO">${PON_ID} = 0</msg>
<status status="PASS" endtime="20200601 14:13:47.956" starttime="20200601 14:13:47.956"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024,</arg>
<arg>"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":"BCMOLT_ACTION_CMD_ID_ADD_OUTER_TAG",</arg>
<arg>"ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,"EtherType":0,"IpProto":0,"SrcPort":0,</arg>
<arg>"DstPort":0},"ClassVal":[{"OVid":20,"IVid":0,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200601 14:13:47.957" level="INFO">${JSTRING} = { "onuId":1,"FlowId":0,"PortId":0,"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024, "Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":...</msg>
<status status="PASS" endtime="20200601 14:13:47.957" starttime="20200601 14:13:47.956"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200601 14:13:47.960" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'single_tag', u'GemportId': 1024, u'FlowId': 0, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 20, u'IPbits': 0, u'IVid': 0, u'O...</msg>
<status status="PASS" endtime="20200601 14:13:47.960" starttime="20200601 14:13:47.957"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:13:47.967" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200601 14:13:47.994" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.00038 seconds.</msg>
<msg timestamp="20200601 14:13:47.995" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:13:49 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:13:47.995" starttime="20200601 14:13:47.961"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:13:47.996" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:13:47.996" starttime="20200601 14:13:47.996"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:47.996" starttime="20200601 14:13:47.995"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"downstream","PktTagType":"double_tag",</arg>
<arg>"GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOLT_ACTION_ID_O_VID",</arg>
<arg>"ActionCmd":"BCMOLT_ACTION_CMD_ID_REMOVE_OUTER_TAG","ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,</arg>
<arg>"EtherType":0,"IpProto":0,"SrcPort":0,"DstPort":0},</arg>
<arg>"ClassVal":[{"OVid":10,"IVid":20,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0</arg>
<arg>}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200601 14:13:47.997" level="INFO">${JSTRING} = { "onuId":1,"FlowId":0,"PortId":0,"NniId":0,"FlowType":"downstream","PktTagType":"double_tag", "GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOL...</msg>
<status status="PASS" endtime="20200601 14:13:47.997" starttime="20200601 14:13:47.997"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200601 14:13:48.001" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'double_tag', u'GemportId': 1024, u'FlowId': 0, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 10, u'IPbits': 0, u'IVid': 20, u'...</msg>
<status status="PASS" endtime="20200601 14:13:48.001" starttime="20200601 14:13:47.997"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:13:48.007" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200601 14:13:48.035" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000344 seconds.</msg>
<msg timestamp="20200601 14:13:48.036" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:13:49 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:13:48.036" starttime="20200601 14:13:48.001"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:13:48.037" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:13:48.037" starttime="20200601 14:13:48.037"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:48.037" starttime="20200601 14:13:48.036"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:48.037" starttime="20200601 14:13:47.955"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 14:13:49.038" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 14:13:49.038" starttime="20200601 14:13:48.038"></status>
</kw>
<kw name="Test Flow Del">
<tags>
<tag>UP/DOWN stream flow del</tag>
</tags>
<doc>Test Flow Del</doc>
<arguments>
<arg>${flow_id}</arg>
</arguments>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_upstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:13:49.047" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/0_upstream</msg>
<msg timestamp="20200601 14:13:49.072" level="INFO">Response Time to /redfish/v1/Olt/Flow/0_upstream: 0.000381 seconds.</msg>
<msg timestamp="20200601 14:13:49.072" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:13:50 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:13:49.072" starttime="20200601 14:13:49.039"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:13:49.073" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:13:49.073" starttime="20200601 14:13:49.073"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_downstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:13:49.081" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/0_downstream</msg>
<msg timestamp="20200601 14:13:49.110" level="INFO">Response Time to /redfish/v1/Olt/Flow/0_downstream: 0.000442 seconds.</msg>
<msg timestamp="20200601 14:13:49.111" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:13:50 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:13:49.111" starttime="20200601 14:13:49.073"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:13:49.112" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:13:49.112" starttime="20200601 14:13:49.111"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:49.112" starttime="20200601 14:13:49.038"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:49.112" starttime="20200601 14:13:46.954"></status>
</kw>
<kw type="foritem" name="${flow_id} = 500">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 14:13:50.113" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 14:13:50.113" starttime="20200601 14:13:49.112"></status>
</kw>
<kw name="Test Flow Add">
<tags>
<tag>UP/DOWN stream flow add</tag>
</tags>
<doc>Test Flow Add</doc>
<arguments>
<arg>1</arg>
<arg>${flow_id}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PON_ID} - ${1}</arg>
</arguments>
<assign>
<var>${PON_ID}</var>
</assign>
<msg timestamp="20200601 14:13:50.114" level="INFO">${PON_ID} = 0</msg>
<status status="PASS" endtime="20200601 14:13:50.114" starttime="20200601 14:13:50.114"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024,</arg>
<arg>"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":"BCMOLT_ACTION_CMD_ID_ADD_OUTER_TAG",</arg>
<arg>"ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,"EtherType":0,"IpProto":0,"SrcPort":0,</arg>
<arg>"DstPort":0},"ClassVal":[{"OVid":20,"IVid":0,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200601 14:13:50.115" level="INFO">${JSTRING} = { "onuId":1,"FlowId":500,"PortId":0,"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024, "Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd...</msg>
<status status="PASS" endtime="20200601 14:13:50.115" starttime="20200601 14:13:50.115"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200601 14:13:50.119" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'single_tag', u'GemportId': 1024, u'FlowId': 500, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 20, u'IPbits': 0, u'IVid': 0, u...</msg>
<status status="PASS" endtime="20200601 14:13:50.119" starttime="20200601 14:13:50.115"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:13:50.126" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200601 14:13:50.159" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000353 seconds.</msg>
<msg timestamp="20200601 14:13:50.159" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:13:51 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:13:50.159" starttime="20200601 14:13:50.119"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:13:50.161" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:13:50.161" starttime="20200601 14:13:50.160"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:50.161" starttime="20200601 14:13:50.160"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"downstream","PktTagType":"double_tag",</arg>
<arg>"GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOLT_ACTION_ID_O_VID",</arg>
<arg>"ActionCmd":"BCMOLT_ACTION_CMD_ID_REMOVE_OUTER_TAG","ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,</arg>
<arg>"EtherType":0,"IpProto":0,"SrcPort":0,"DstPort":0},</arg>
<arg>"ClassVal":[{"OVid":10,"IVid":20,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0</arg>
<arg>}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200601 14:13:50.161" level="INFO">${JSTRING} = { "onuId":1,"FlowId":500,"PortId":0,"NniId":0,"FlowType":"downstream","PktTagType":"double_tag", "GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCM...</msg>
<status status="PASS" endtime="20200601 14:13:50.161" starttime="20200601 14:13:50.161"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200601 14:13:50.165" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'double_tag', u'GemportId': 1024, u'FlowId': 500, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 10, u'IPbits': 0, u'IVid': 20, ...</msg>
<status status="PASS" endtime="20200601 14:13:50.165" starttime="20200601 14:13:50.162"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:13:50.172" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200601 14:13:50.197" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000344 seconds.</msg>
<msg timestamp="20200601 14:13:50.197" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:13:51 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:13:50.197" starttime="20200601 14:13:50.166"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:13:50.199" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:13:50.199" starttime="20200601 14:13:50.198"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:50.199" starttime="20200601 14:13:50.198"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:50.199" starttime="20200601 14:13:50.113"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 14:13:51.204" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 14:13:51.204" starttime="20200601 14:13:50.199"></status>
</kw>
<kw name="Test Flow Del">
<tags>
<tag>UP/DOWN stream flow del</tag>
</tags>
<doc>Test Flow Del</doc>
<arguments>
<arg>${flow_id}</arg>
</arguments>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_upstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:13:51.216" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/500_upstream</msg>
<msg timestamp="20200601 14:13:51.240" level="INFO">Response Time to /redfish/v1/Olt/Flow/500_upstream: 0.000372 seconds.</msg>
<msg timestamp="20200601 14:13:51.241" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:13:52 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:13:51.241" starttime="20200601 14:13:51.205"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:13:51.241" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:13:51.242" starttime="20200601 14:13:51.241"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_downstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:13:51.249" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/500_downstream</msg>
<msg timestamp="20200601 14:13:51.285" level="INFO">Response Time to /redfish/v1/Olt/Flow/500_downstream: 0.000357 seconds.</msg>
<msg timestamp="20200601 14:13:51.286" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:13:52 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:13:51.286" starttime="20200601 14:13:51.242"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:13:51.287" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:13:51.287" starttime="20200601 14:13:51.286"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:51.287" starttime="20200601 14:13:51.204"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:51.287" starttime="20200601 14:13:49.112"></status>
</kw>
<kw type="foritem" name="${flow_id} = 1000">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 14:13:52.288" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 14:13:52.288" starttime="20200601 14:13:51.287"></status>
</kw>
<kw name="Test Flow Add">
<tags>
<tag>UP/DOWN stream flow add</tag>
</tags>
<doc>Test Flow Add</doc>
<arguments>
<arg>1</arg>
<arg>${flow_id}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PON_ID} - ${1}</arg>
</arguments>
<assign>
<var>${PON_ID}</var>
</assign>
<msg timestamp="20200601 14:13:52.289" level="INFO">${PON_ID} = 0</msg>
<status status="PASS" endtime="20200601 14:13:52.289" starttime="20200601 14:13:52.289"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024,</arg>
<arg>"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":"BCMOLT_ACTION_CMD_ID_ADD_OUTER_TAG",</arg>
<arg>"ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,"EtherType":0,"IpProto":0,"SrcPort":0,</arg>
<arg>"DstPort":0},"ClassVal":[{"OVid":20,"IVid":0,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200601 14:13:52.290" level="INFO">${JSTRING} = { "onuId":1,"FlowId":1000,"PortId":0,"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024, "Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCm...</msg>
<status status="PASS" endtime="20200601 14:13:52.290" starttime="20200601 14:13:52.289"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200601 14:13:52.294" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'single_tag', u'GemportId': 1024, u'FlowId': 1000, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 20, u'IPbits': 0, u'IVid': 0, ...</msg>
<status status="PASS" endtime="20200601 14:13:52.294" starttime="20200601 14:13:52.290"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:13:52.301" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200601 14:13:52.330" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000433 seconds.</msg>
<msg timestamp="20200601 14:13:52.330" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:13:53 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:13:52.330" starttime="20200601 14:13:52.294"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:13:52.332" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:13:52.332" starttime="20200601 14:13:52.332"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:52.332" starttime="20200601 14:13:52.331"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"downstream","PktTagType":"double_tag",</arg>
<arg>"GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOLT_ACTION_ID_O_VID",</arg>
<arg>"ActionCmd":"BCMOLT_ACTION_CMD_ID_REMOVE_OUTER_TAG","ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,</arg>
<arg>"EtherType":0,"IpProto":0,"SrcPort":0,"DstPort":0},</arg>
<arg>"ClassVal":[{"OVid":10,"IVid":20,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0</arg>
<arg>}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200601 14:13:52.333" level="INFO">${JSTRING} = { "onuId":1,"FlowId":1000,"PortId":0,"NniId":0,"FlowType":"downstream","PktTagType":"double_tag", "GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BC...</msg>
<status status="PASS" endtime="20200601 14:13:52.333" starttime="20200601 14:13:52.332"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200601 14:13:52.338" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'double_tag', u'GemportId': 1024, u'FlowId': 1000, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 10, u'IPbits': 0, u'IVid': 20,...</msg>
<status status="PASS" endtime="20200601 14:13:52.338" starttime="20200601 14:13:52.333"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:13:52.346" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200601 14:13:52.373" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000388 seconds.</msg>
<msg timestamp="20200601 14:13:52.373" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:13:53 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:13:52.373" starttime="20200601 14:13:52.338"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:13:52.375" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:13:52.375" starttime="20200601 14:13:52.374"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:52.375" starttime="20200601 14:13:52.374"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:52.375" starttime="20200601 14:13:52.288"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 14:13:53.376" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 14:13:53.376" starttime="20200601 14:13:52.375"></status>
</kw>
<kw name="Test Flow Del">
<tags>
<tag>UP/DOWN stream flow del</tag>
</tags>
<doc>Test Flow Del</doc>
<arguments>
<arg>${flow_id}</arg>
</arguments>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_upstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:13:53.387" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/1000_upstream</msg>
<msg timestamp="20200601 14:13:53.415" level="INFO">Response Time to /redfish/v1/Olt/Flow/1000_upstream: 0.000668 seconds.</msg>
<msg timestamp="20200601 14:13:53.415" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:13:54 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:13:53.415" starttime="20200601 14:13:53.377"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:13:53.416" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:13:53.416" starttime="20200601 14:13:53.416"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_downstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:13:53.424" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/1000_downstream</msg>
<msg timestamp="20200601 14:13:53.451" level="INFO">Response Time to /redfish/v1/Olt/Flow/1000_downstream: 0.000389 seconds.</msg>
<msg timestamp="20200601 14:13:53.452" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:13:54 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:13:53.452" starttime="20200601 14:13:53.417"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:13:53.452" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:13:53.452" starttime="20200601 14:13:53.452"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:53.453" starttime="20200601 14:13:53.376"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:53.453" starttime="20200601 14:13:51.287"></status>
</kw>
<kw type="foritem" name="${flow_id} = 1500">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 14:13:54.458" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 14:13:54.458" starttime="20200601 14:13:53.453"></status>
</kw>
<kw name="Test Flow Add">
<tags>
<tag>UP/DOWN stream flow add</tag>
</tags>
<doc>Test Flow Add</doc>
<arguments>
<arg>1</arg>
<arg>${flow_id}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PON_ID} - ${1}</arg>
</arguments>
<assign>
<var>${PON_ID}</var>
</assign>
<msg timestamp="20200601 14:13:54.460" level="INFO">${PON_ID} = 0</msg>
<status status="PASS" endtime="20200601 14:13:54.460" starttime="20200601 14:13:54.459"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024,</arg>
<arg>"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":"BCMOLT_ACTION_CMD_ID_ADD_OUTER_TAG",</arg>
<arg>"ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,"EtherType":0,"IpProto":0,"SrcPort":0,</arg>
<arg>"DstPort":0},"ClassVal":[{"OVid":20,"IVid":0,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200601 14:13:54.461" level="INFO">${JSTRING} = { "onuId":1,"FlowId":1500,"PortId":0,"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024, "Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCm...</msg>
<status status="PASS" endtime="20200601 14:13:54.461" starttime="20200601 14:13:54.460"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200601 14:13:54.467" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'single_tag', u'GemportId': 1024, u'FlowId': 1500, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 20, u'IPbits': 0, u'IVid': 0, ...</msg>
<status status="PASS" endtime="20200601 14:13:54.468" starttime="20200601 14:13:54.461"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:13:54.481" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200601 14:13:54.518" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000433 seconds.</msg>
<msg timestamp="20200601 14:13:54.518" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:13:55 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:13:54.518" starttime="20200601 14:13:54.468"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:13:54.520" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:13:54.520" starttime="20200601 14:13:54.519"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:54.520" starttime="20200601 14:13:54.519"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"downstream","PktTagType":"double_tag",</arg>
<arg>"GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOLT_ACTION_ID_O_VID",</arg>
<arg>"ActionCmd":"BCMOLT_ACTION_CMD_ID_REMOVE_OUTER_TAG","ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,</arg>
<arg>"EtherType":0,"IpProto":0,"SrcPort":0,"DstPort":0},</arg>
<arg>"ClassVal":[{"OVid":10,"IVid":20,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0</arg>
<arg>}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200601 14:13:54.520" level="INFO">${JSTRING} = { "onuId":1,"FlowId":1500,"PortId":0,"NniId":0,"FlowType":"downstream","PktTagType":"double_tag", "GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BC...</msg>
<status status="PASS" endtime="20200601 14:13:54.521" starttime="20200601 14:13:54.520"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200601 14:13:54.524" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'double_tag', u'GemportId': 1024, u'FlowId': 1500, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 10, u'IPbits': 0, u'IVid': 20,...</msg>
<status status="PASS" endtime="20200601 14:13:54.524" starttime="20200601 14:13:54.521"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:13:54.531" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200601 14:13:54.558" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000361 seconds.</msg>
<msg timestamp="20200601 14:13:54.558" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:13:55 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:13:54.558" starttime="20200601 14:13:54.524"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:13:54.560" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:13:54.560" starttime="20200601 14:13:54.559"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:54.560" starttime="20200601 14:13:54.559"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:54.560" starttime="20200601 14:13:54.458"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 14:13:55.560" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 14:13:55.561" starttime="20200601 14:13:54.560"></status>
</kw>
<kw name="Test Flow Del">
<tags>
<tag>UP/DOWN stream flow del</tag>
</tags>
<doc>Test Flow Del</doc>
<arguments>
<arg>${flow_id}</arg>
</arguments>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_upstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:13:55.568" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/1500_upstream</msg>
<msg timestamp="20200601 14:13:55.591" level="INFO">Response Time to /redfish/v1/Olt/Flow/1500_upstream: 0.000301 seconds.</msg>
<msg timestamp="20200601 14:13:55.591" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:13:56 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:13:55.591" starttime="20200601 14:13:55.561"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:13:55.592" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:13:55.592" starttime="20200601 14:13:55.592"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_downstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:13:55.598" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/1500_downstream</msg>
<msg timestamp="20200601 14:13:55.636" level="INFO">Response Time to /redfish/v1/Olt/Flow/1500_downstream: 0.000443 seconds.</msg>
<msg timestamp="20200601 14:13:55.636" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:13:56 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:13:55.636" starttime="20200601 14:13:55.592"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:13:55.637" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:13:55.637" starttime="20200601 14:13:55.637"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:55.637" starttime="20200601 14:13:55.561"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:55.637" starttime="20200601 14:13:53.453"></status>
</kw>
<kw type="foritem" name="${flow_id} = 2000">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 14:13:56.638" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 14:13:56.638" starttime="20200601 14:13:55.638"></status>
</kw>
<kw name="Test Flow Add">
<tags>
<tag>UP/DOWN stream flow add</tag>
</tags>
<doc>Test Flow Add</doc>
<arguments>
<arg>1</arg>
<arg>${flow_id}</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PON_ID} - ${1}</arg>
</arguments>
<assign>
<var>${PON_ID}</var>
</assign>
<msg timestamp="20200601 14:13:56.640" level="INFO">${PON_ID} = 0</msg>
<status status="PASS" endtime="20200601 14:13:56.640" starttime="20200601 14:13:56.640"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024,</arg>
<arg>"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":"BCMOLT_ACTION_CMD_ID_ADD_OUTER_TAG",</arg>
<arg>"ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,"EtherType":0,"IpProto":0,"SrcPort":0,</arg>
<arg>"DstPort":0},"ClassVal":[{"OVid":20,"IVid":0,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200601 14:13:56.641" level="INFO">${JSTRING} = { "onuId":1,"FlowId":2000,"PortId":0,"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024, "Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCm...</msg>
<status status="PASS" endtime="20200601 14:13:56.641" starttime="20200601 14:13:56.641"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200601 14:13:56.648" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'single_tag', u'GemportId': 1024, u'FlowId': 2000, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 20, u'IPbits': 0, u'IVid': 0, ...</msg>
<status status="PASS" endtime="20200601 14:13:56.648" starttime="20200601 14:13:56.642"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:13:56.660" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200601 14:13:56.689" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000414 seconds.</msg>
<msg timestamp="20200601 14:13:56.689" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:13:58 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:13:56.689" starttime="20200601 14:13:56.649"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:13:56.691" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:13:56.691" starttime="20200601 14:13:56.691"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:56.691" starttime="20200601 14:13:56.690"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"downstream","PktTagType":"double_tag",</arg>
<arg>"GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOLT_ACTION_ID_O_VID",</arg>
<arg>"ActionCmd":"BCMOLT_ACTION_CMD_ID_REMOVE_OUTER_TAG","ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,</arg>
<arg>"EtherType":0,"IpProto":0,"SrcPort":0,"DstPort":0},</arg>
<arg>"ClassVal":[{"OVid":10,"IVid":20,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0</arg>
<arg>}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200601 14:13:56.692" level="INFO">${JSTRING} = { "onuId":1,"FlowId":2000,"PortId":0,"NniId":0,"FlowType":"downstream","PktTagType":"double_tag", "GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BC...</msg>
<status status="PASS" endtime="20200601 14:13:56.692" starttime="20200601 14:13:56.691"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200601 14:13:56.696" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'double_tag', u'GemportId': 1024, u'FlowId': 2000, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 10, u'IPbits': 0, u'IVid': 20,...</msg>
<status status="PASS" endtime="20200601 14:13:56.696" starttime="20200601 14:13:56.692"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:13:56.703" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200601 14:13:56.729" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000418 seconds.</msg>
<msg timestamp="20200601 14:13:56.729" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:13:58 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:13:56.729" starttime="20200601 14:13:56.696"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:13:56.731" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:13:56.731" starttime="20200601 14:13:56.731"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:56.731" starttime="20200601 14:13:56.730"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:56.731" starttime="20200601 14:13:56.639"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200601 14:13:57.732" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20200601 14:13:57.732" starttime="20200601 14:13:56.731"></status>
</kw>
<kw name="Test Flow Del">
<tags>
<tag>UP/DOWN stream flow del</tag>
</tags>
<doc>Test Flow Del</doc>
<arguments>
<arg>${flow_id}</arg>
</arguments>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_upstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:13:57.739" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/2000_upstream</msg>
<msg timestamp="20200601 14:13:57.765" level="INFO">Response Time to /redfish/v1/Olt/Flow/2000_upstream: 0.000334 seconds.</msg>
<msg timestamp="20200601 14:13:57.765" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:13:59 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:13:57.765" starttime="20200601 14:13:57.733"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:13:57.766" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:13:57.766" starttime="20200601 14:13:57.766"></status>
</kw>
<kw name="Delete" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/${FLOW_ID}_downstream</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:13:57.773" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/2000_downstream</msg>
<msg timestamp="20200601 14:13:57.804" level="INFO">Response Time to /redfish/v1/Olt/Flow/2000_downstream: 0.000527 seconds.</msg>
<msg timestamp="20200601 14:13:57.804" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:13:59 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:13:57.804" starttime="20200601 14:13:57.767"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:13:57.805" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:13:57.806" starttime="20200601 14:13:57.805"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:57.806" starttime="20200601 14:13:57.732"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:57.806" starttime="20200601 14:13:55.637"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:57.806" starttime="20200601 14:13:46.954"></status>
</kw>
<kw name="Test Flow Add">
<tags>
<tag>UP/DOWN stream flow add</tag>
</tags>
<doc>Test Flow Add</doc>
<arguments>
<arg>1</arg>
<arg>2048</arg>
<arg>${PON_PORT_ID}</arg>
<arg>NOTONUID_IN_RANGE</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PON_ID} - ${1}</arg>
</arguments>
<assign>
<var>${PON_ID}</var>
</assign>
<msg timestamp="20200601 14:13:57.807" level="INFO">${PON_ID} = 0</msg>
<status status="PASS" endtime="20200601 14:13:57.807" starttime="20200601 14:13:57.807"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024,</arg>
<arg>"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":"BCMOLT_ACTION_CMD_ID_ADD_OUTER_TAG",</arg>
<arg>"ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,"EtherType":0,"IpProto":0,"SrcPort":0,</arg>
<arg>"DstPort":0},"ClassVal":[{"OVid":20,"IVid":0,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200601 14:13:57.808" level="INFO">${JSTRING} = { "onuId":1,"FlowId":2048,"PortId":0,"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024, "Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCm...</msg>
<status status="PASS" endtime="20200601 14:13:57.808" starttime="20200601 14:13:57.808"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200601 14:13:57.814" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'single_tag', u'GemportId': 1024, u'FlowId': 2048, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 20, u'IPbits': 0, u'IVid': 0, ...</msg>
<status status="PASS" endtime="20200601 14:13:57.814" starttime="20200601 14:13:57.809"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:13:57.821" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200601 14:13:57.843" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000345 seconds.</msg>
<msg timestamp="20200601 14:13:57.844" level="INFO">${resp} = 500
date Mon, 01 Jun 2020 06:13:59 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:13:57.844" starttime="20200601 14:13:57.814"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:13:57.845" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:13:57.845" starttime="20200601 14:13:57.845"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:57.846" starttime="20200601 14:13:57.844"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"downstream","PktTagType":"double_tag",</arg>
<arg>"GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOLT_ACTION_ID_O_VID",</arg>
<arg>"ActionCmd":"BCMOLT_ACTION_CMD_ID_REMOVE_OUTER_TAG","ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,</arg>
<arg>"EtherType":0,"IpProto":0,"SrcPort":0,"DstPort":0},</arg>
<arg>"ClassVal":[{"OVid":10,"IVid":20,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0</arg>
<arg>}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200601 14:13:57.846" level="INFO">${JSTRING} = { "onuId":1,"FlowId":2048,"PortId":0,"NniId":0,"FlowType":"downstream","PktTagType":"double_tag", "GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BC...</msg>
<status status="PASS" endtime="20200601 14:13:57.846" starttime="20200601 14:13:57.846"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200601 14:13:57.850" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'double_tag', u'GemportId': 1024, u'FlowId': 2048, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 10, u'IPbits': 0, u'IVid': 20,...</msg>
<status status="PASS" endtime="20200601 14:13:57.850" starttime="20200601 14:13:57.846"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:13:57.856" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200601 14:13:57.879" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000304 seconds.</msg>
<msg timestamp="20200601 14:13:57.879" level="INFO">${resp} = 500
date Mon, 01 Jun 2020 06:13:59 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:13:57.880" starttime="20200601 14:13:57.851"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:13:57.881" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:13:57.881" starttime="20200601 14:13:57.881"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:57.881" starttime="20200601 14:13:57.880"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:57.881" starttime="20200601 14:13:57.806"></status>
</kw>
<kw name="Test Flow Add">
<tags>
<tag>UP/DOWN stream flow add</tag>
</tags>
<doc>Test Flow Add</doc>
<arguments>
<arg>1</arg>
<arg>16</arg>
<arg>${PON_PORT_ID}</arg>
<arg>ONUID_IN_RANGE</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${PON_ID} - ${1}</arg>
</arguments>
<assign>
<var>${PON_ID}</var>
</assign>
<msg timestamp="20200601 14:13:57.882" level="INFO">${PON_ID} = 0</msg>
<status status="PASS" endtime="20200601 14:13:57.882" starttime="20200601 14:13:57.882"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024,</arg>
<arg>"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd":"BCMOLT_ACTION_CMD_ID_ADD_OUTER_TAG",</arg>
<arg>"ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,"EtherType":0,"IpProto":0,"SrcPort":0,</arg>
<arg>"DstPort":0},"ClassVal":[{"OVid":20,"IVid":0,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200601 14:13:57.882" level="INFO">${JSTRING} = { "onuId":1,"FlowId":16,"PortId":0,"NniId":0,"FlowType":"upstream","PktTagType":"single_tag","GemportId":1024, "Classifier":["BCMOLT_CLASSIFIER_ID_O_VID"],"Action":"BCMOLT_ACTION_ID_O_VID","ActionCmd"...</msg>
<status status="PASS" endtime="20200601 14:13:57.882" starttime="20200601 14:13:57.882"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200601 14:13:57.886" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'single_tag', u'GemportId': 1024, u'FlowId': 16, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 20, u'IPbits': 0, u'IVid': 0, u'...</msg>
<status status="PASS" endtime="20200601 14:13:57.886" starttime="20200601 14:13:57.883"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:13:57.891" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200601 14:13:57.924" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000391 seconds.</msg>
<msg timestamp="20200601 14:13:57.924" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:13:59 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:13:57.924" starttime="20200601 14:13:57.886"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:13:57.925" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:13:57.925" starttime="20200601 14:13:57.925"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:57.926" starttime="20200601 14:13:57.925"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>{</arg>
<arg>"onuId":${ONU_ID},"FlowId":${FLOW_ID},"PortId":${PON_ID},"NniId":0,"FlowType":"downstream","PktTagType":"double_tag",</arg>
<arg>"GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMOLT_ACTION_ID_O_VID",</arg>
<arg>"ActionCmd":"BCMOLT_ACTION_CMD_ID_REMOVE_OUTER_TAG","ActionVal":{"OVid":10,"OPbits":0,"OTpid":0,"IVid":0,"IPbits":0,"ITpid":0,</arg>
<arg>"EtherType":0,"IpProto":0,"SrcPort":0,"DstPort":0},</arg>
<arg>"ClassVal":[{"OVid":10,"IVid":20,"OPbits":0,"IPbits":0,"EtherType":0,"OTpid":0,"IpProto":0,"DstPort":0,"SrcPort":0,"ITpid":0</arg>
<arg>}]</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${JSTRING}</var>
</assign>
<msg timestamp="20200601 14:13:57.926" level="INFO">${JSTRING} = { "onuId":1,"FlowId":16,"PortId":0,"NniId":0,"FlowType":"downstream","PktTagType":"double_tag", "GemportId":1024,"Classifier":["BCMOLT_CLASSIFIER_ID_O_VID","BCMOLT_CLASSIFIER_ID_I_VID"],"Action":"BCMO...</msg>
<status status="PASS" endtime="20200601 14:13:57.926" starttime="20200601 14:13:57.926"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($JSTRING)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200601 14:13:57.930" level="INFO">${payload} = {u'Action': u'BCMOLT_ACTION_ID_O_VID', u'PortId': 0, u'PktTagType': u'double_tag', u'GemportId': 1024, u'FlowId': 16, u'NniId': 0, u'ClassVal': [{u'ITpid': 0, u'OVid': 10, u'IPbits': 0, u'IVid': 20, u...</msg>
<status status="PASS" endtime="20200601 14:13:57.930" starttime="20200601 14:13:57.926"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/Olt/Flow/</arg>
<arg>body=${payload}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:13:57.936" level="INFO">Attempt 1 of /redfish/v1/Olt/Flow/</msg>
<msg timestamp="20200601 14:13:57.961" level="INFO">Response Time to /redfish/v1/Olt/Flow/: 0.000354 seconds.</msg>
<msg timestamp="20200601 14:13:57.961" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:13:59 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:13:57.962" starttime="20200601 14:13:57.930"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONUID_IN_RANGE}' == 'ONUID_IN_RANGE'</arg>
<arg>Should Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
<arg>ELSE</arg>
<arg>Should Not Be Equal As Strings</arg>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:13:57.963" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:13:57.963" starttime="20200601 14:13:57.963"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:57.963" starttime="20200601 14:13:57.962"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:57.963" starttime="20200601 14:13:57.881"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:57.963" starttime="20200601 14:13:46.953"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200601 14:13:57.969" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200601 14:13:57.989" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.000275 seconds.</msg>
<msg timestamp="20200601 14:13:57.989" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200601 14:13:57.990" starttime="20200601 14:13:57.964"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:57.990" starttime="20200601 14:13:57.963"></status>
</kw>
<doc>Test flow add</doc>
<tags>
<tag>Test Flow add</tag>
</tags>
<status status="PASS" endtime="20200601 14:13:57.990" critical="yes" starttime="20200601 14:13:46.909"></status>
</test>
<test id="s1-s1-t4" name="Verify Restful API for omci send">
<kw type="setup" name="Test Setup Execution">
<doc>Do test case setup tasks.</doc>
<kw name="Login" library="Redfish">
<doc>Assign BMC default values for username, password and auth arguments
and call parent class login method.</doc>
<msg timestamp="20200601 14:13:57.996" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions</msg>
<msg timestamp="20200601 14:13:58.020" level="INFO">Response Time to /redfish/v1/SessionService/Sessions: 0.000499 seconds.</msg>
<msg timestamp="20200601 14:13:58.020" level="INFO">{u'@odata.type': u'#Session.v1_0_0.Session', u'UserName': u'admin', u'Description': u'User Session', u'@odata.id': u'redfish/v1/SessionService/Sessions/', u'@odata.context': u'/redfish/v1/$metadata#Session.Session', u'Id': 1, u'Name': u'User Session'}</msg>
<msg timestamp="20200601 14:13:58.020" level="INFO">Login returned code 201: {"@odata.context":"/redfish/v1/$metadata#Session.Session","@odata.id":"redfish/v1/SessionService/Sessions/","@odata.type":"#Session.v1_0_0.Session","Name":"User Session","Description":"User Session","UserName":"admin","Id":1}</msg>
<status status="PASS" endtime="20200601 14:13:58.020" starttime="20200601 14:13:57.991"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:58.020" starttime="20200601 14:13:57.991"></status>
</kw>
<kw name="Test omci send">
<tags>
<tag>omci send</tag>
</tags>
<doc>Send omci raw data</doc>
<kw name="Test Send Omci">
<tags>
<tag>Send Omci function</tag>
</tags>
<doc>Send Omci function</doc>
<arguments>
<arg>1</arg>
<arg>${PON_PORT_ID}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OMCI_RAW)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload_}</var>
</assign>
<msg timestamp="20200601 14:13:58.025" level="INFO">${payload_} = {u'raw_data': [{u'Omci': u'00B34F0A00020000000000000000000000000000000000000000000000000000000000000000000000000028'}, {u'Omci': u'00B44F0A0002000000000000000000000000000000000000000000000000000000000...</msg>
<status status="PASS" endtime="20200601 14:13:58.025" starttime="20200601 14:13:58.021"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${payload_["raw_data"]</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200601 14:13:58.025" level="INFO">Length is 22</msg>
<msg timestamp="20200601 14:13:58.026" level="INFO">${length} = 22</msg>
<status status="PASS" endtime="20200601 14:13:58.026" starttime="20200601 14:13:58.025"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>====================length ${length} ================</arg>
</arguments>
<status status="PASS" endtime="20200601 14:13:58.026" starttime="20200601 14:13:58.026"></status>
</kw>
<kw type="for" name="${i} IN RANGE [ 0 | 171 ]">
<kw type="foritem" name="${i} = 0">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:13:58.027" starttime="20200601 14:13:58.027"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:13:58.328" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:13:58.328" starttime="20200601 14:13:58.027"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:13:58.335" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:13:58.357" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000305 seconds.</msg>
<msg timestamp="20200601 14:13:58.357" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:13:59 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:13:58.358" starttime="20200601 14:13:58.328"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:58.358" starttime="20200601 14:13:58.026"></status>
</kw>
<kw type="foritem" name="${i} = 1">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:13:58.359" starttime="20200601 14:13:58.358"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:13:58.659" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:13:58.660" starttime="20200601 14:13:58.359"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:13:58.672" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:13:58.696" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000393 seconds.</msg>
<msg timestamp="20200601 14:13:58.696" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:00 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:13:58.696" starttime="20200601 14:13:58.660"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:58.696" starttime="20200601 14:13:58.358"></status>
</kw>
<kw type="foritem" name="${i} = 2">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:13:58.698" starttime="20200601 14:13:58.697"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:13:58.999" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:13:58.999" starttime="20200601 14:13:58.698"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:13:59.006" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:13:59.031" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000417 seconds.</msg>
<msg timestamp="20200601 14:13:59.031" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:00 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:13:59.032" starttime="20200601 14:13:58.999"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:59.032" starttime="20200601 14:13:58.697"></status>
</kw>
<kw type="foritem" name="${i} = 3">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:13:59.033" starttime="20200601 14:13:59.032"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:13:59.333" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:13:59.333" starttime="20200601 14:13:59.033"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:13:59.340" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:13:59.363" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000294 seconds.</msg>
<msg timestamp="20200601 14:13:59.364" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:00 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:13:59.364" starttime="20200601 14:13:59.334"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:59.364" starttime="20200601 14:13:59.032"></status>
</kw>
<kw type="foritem" name="${i} = 4">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:13:59.365" starttime="20200601 14:13:59.364"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:13:59.665" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:13:59.666" starttime="20200601 14:13:59.365"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:13:59.675" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:13:59.697" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000374 seconds.</msg>
<msg timestamp="20200601 14:13:59.698" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:01 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:13:59.698" starttime="20200601 14:13:59.666"></status>
</kw>
<status status="PASS" endtime="20200601 14:13:59.698" starttime="20200601 14:13:59.364"></status>
</kw>
<kw type="foritem" name="${i} = 5">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:13:59.699" starttime="20200601 14:13:59.698"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:00.000" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:00.000" starttime="20200601 14:13:59.699"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:00.012" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:00.034" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00047 seconds.</msg>
<msg timestamp="20200601 14:14:00.035" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:01 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:00.035" starttime="20200601 14:14:00.001"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:00.035" starttime="20200601 14:13:59.698"></status>
</kw>
<kw type="foritem" name="${i} = 6">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:00.036" starttime="20200601 14:14:00.036"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:00.337" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:00.338" starttime="20200601 14:14:00.037"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:00.346" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:00.369" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00039 seconds.</msg>
<msg timestamp="20200601 14:14:00.369" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:01 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:00.369" starttime="20200601 14:14:00.338"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:00.369" starttime="20200601 14:14:00.035"></status>
</kw>
<kw type="foritem" name="${i} = 7">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:00.370" starttime="20200601 14:14:00.370"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:00.672" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:00.672" starttime="20200601 14:14:00.371"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:00.683" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:00.707" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000468 seconds.</msg>
<msg timestamp="20200601 14:14:00.708" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:02 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:00.708" starttime="20200601 14:14:00.672"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:00.708" starttime="20200601 14:14:00.370"></status>
</kw>
<kw type="foritem" name="${i} = 8">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:00.709" starttime="20200601 14:14:00.709"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:01.010" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:01.011" starttime="20200601 14:14:00.710"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:01.022" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:01.045" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00044 seconds.</msg>
<msg timestamp="20200601 14:14:01.045" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:02 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:01.045" starttime="20200601 14:14:01.011"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:01.045" starttime="20200601 14:14:00.708"></status>
</kw>
<kw type="foritem" name="${i} = 9">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:01.046" starttime="20200601 14:14:01.046"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:01.347" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:01.348" starttime="20200601 14:14:01.047"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:01.359" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:01.383" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000328 seconds.</msg>
<msg timestamp="20200601 14:14:01.384" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:02 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:01.384" starttime="20200601 14:14:01.348"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:01.384" starttime="20200601 14:14:01.046"></status>
</kw>
<kw type="foritem" name="${i} = 10">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:01.385" starttime="20200601 14:14:01.384"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:01.686" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:01.686" starttime="20200601 14:14:01.385"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:01.695" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:01.719" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000341 seconds.</msg>
<msg timestamp="20200601 14:14:01.719" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:03 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:01.719" starttime="20200601 14:14:01.686"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:01.719" starttime="20200601 14:14:01.384"></status>
</kw>
<kw type="foritem" name="${i} = 11">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:01.720" starttime="20200601 14:14:01.719"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:02.021" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:02.021" starttime="20200601 14:14:01.720"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:02.032" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:02.056" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000393 seconds.</msg>
<msg timestamp="20200601 14:14:02.057" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:03 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:02.057" starttime="20200601 14:14:02.021"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:02.057" starttime="20200601 14:14:01.719"></status>
</kw>
<kw type="foritem" name="${i} = 12">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:02.058" starttime="20200601 14:14:02.057"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:02.359" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:02.359" starttime="20200601 14:14:02.058"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:02.368" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:02.392" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000324 seconds.</msg>
<msg timestamp="20200601 14:14:02.392" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:03 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:02.392" starttime="20200601 14:14:02.359"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:02.392" starttime="20200601 14:14:02.057"></status>
</kw>
<kw type="foritem" name="${i} = 13">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:02.393" starttime="20200601 14:14:02.393"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:02.695" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:02.695" starttime="20200601 14:14:02.394"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:02.702" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:02.726" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000285 seconds.</msg>
<msg timestamp="20200601 14:14:02.726" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:04 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:02.727" starttime="20200601 14:14:02.695"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:02.727" starttime="20200601 14:14:02.392"></status>
</kw>
<kw type="foritem" name="${i} = 14">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:02.728" starttime="20200601 14:14:02.727"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:03.028" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:03.029" starttime="20200601 14:14:02.728"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:03.037" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:03.061" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000599 seconds.</msg>
<msg timestamp="20200601 14:14:03.061" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:04 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:03.062" starttime="20200601 14:14:03.029"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:03.062" starttime="20200601 14:14:02.727"></status>
</kw>
<kw type="foritem" name="${i} = 15">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:03.063" starttime="20200601 14:14:03.062"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:03.364" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:03.364" starttime="20200601 14:14:03.064"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:03.371" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:03.393" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000334 seconds.</msg>
<msg timestamp="20200601 14:14:03.394" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:04 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:03.394" starttime="20200601 14:14:03.365"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:03.394" starttime="20200601 14:14:03.062"></status>
</kw>
<kw type="foritem" name="${i} = 16">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:03.394" starttime="20200601 14:14:03.394"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:03.696" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:03.696" starttime="20200601 14:14:03.395"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:03.707" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:03.731" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000445 seconds.</msg>
<msg timestamp="20200601 14:14:03.732" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:05 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:03.732" starttime="20200601 14:14:03.696"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:03.732" starttime="20200601 14:14:03.394"></status>
</kw>
<kw type="foritem" name="${i} = 17">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:03.733" starttime="20200601 14:14:03.733"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:04.035" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:04.035" starttime="20200601 14:14:03.734"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:04.045" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:04.070" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000351 seconds.</msg>
<msg timestamp="20200601 14:14:04.071" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:05 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:04.071" starttime="20200601 14:14:04.035"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:04.071" starttime="20200601 14:14:03.732"></status>
</kw>
<kw type="foritem" name="${i} = 18">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:04.072" starttime="20200601 14:14:04.071"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:04.378" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:04.378" starttime="20200601 14:14:04.072"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:04.389" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:04.411" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000343 seconds.</msg>
<msg timestamp="20200601 14:14:04.412" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:05 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:04.412" starttime="20200601 14:14:04.378"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:04.412" starttime="20200601 14:14:04.071"></status>
</kw>
<kw type="foritem" name="${i} = 19">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:04.413" starttime="20200601 14:14:04.412"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:04.714" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:04.714" starttime="20200601 14:14:04.413"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:04.725" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:04.747" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000543 seconds.</msg>
<msg timestamp="20200601 14:14:04.747" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:06 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:04.747" starttime="20200601 14:14:04.714"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:04.748" starttime="20200601 14:14:04.412"></status>
</kw>
<kw type="foritem" name="${i} = 20">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:04.749" starttime="20200601 14:14:04.748"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:05.050" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:05.050" starttime="20200601 14:14:04.749"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:05.057" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:05.079" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000289 seconds.</msg>
<msg timestamp="20200601 14:14:05.080" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:06 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:05.080" starttime="20200601 14:14:05.050"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:05.080" starttime="20200601 14:14:04.748"></status>
</kw>
<kw type="foritem" name="${i} = 21">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:05.081" starttime="20200601 14:14:05.080"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:05.384" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:05.384" starttime="20200601 14:14:05.081"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:05.391" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:05.413" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000404 seconds.</msg>
<msg timestamp="20200601 14:14:05.413" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:06 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:05.413" starttime="20200601 14:14:05.384"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:05.413" starttime="20200601 14:14:05.080"></status>
</kw>
<kw type="foritem" name="${i} = 22">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:05.415" starttime="20200601 14:14:05.414"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:05.720" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:05.720" starttime="20200601 14:14:05.415"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:05.732" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:05.757" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000505 seconds.</msg>
<msg timestamp="20200601 14:14:05.758" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:07 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:05.758" starttime="20200601 14:14:05.720"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:05.758" starttime="20200601 14:14:05.413"></status>
</kw>
<kw type="foritem" name="${i} = 23">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:05.760" starttime="20200601 14:14:05.758"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:06.068" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:06.068" starttime="20200601 14:14:05.760"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:06.080" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:06.104" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000357 seconds.</msg>
<msg timestamp="20200601 14:14:06.105" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:07 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:06.105" starttime="20200601 14:14:06.068"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:06.105" starttime="20200601 14:14:05.758"></status>
</kw>
<kw type="foritem" name="${i} = 24">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:06.106" starttime="20200601 14:14:06.105"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:06.408" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:06.408" starttime="20200601 14:14:06.107"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:06.420" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:06.443" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00044 seconds.</msg>
<msg timestamp="20200601 14:14:06.444" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:07 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:06.444" starttime="20200601 14:14:06.408"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:06.444" starttime="20200601 14:14:06.105"></status>
</kw>
<kw type="foritem" name="${i} = 25">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:06.445" starttime="20200601 14:14:06.444"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:06.747" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:06.747" starttime="20200601 14:14:06.446"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:06.755" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:06.777" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000327 seconds.</msg>
<msg timestamp="20200601 14:14:06.777" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:08 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:06.777" starttime="20200601 14:14:06.747"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:06.777" starttime="20200601 14:14:06.444"></status>
</kw>
<kw type="foritem" name="${i} = 26">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:06.778" starttime="20200601 14:14:06.778"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:07.080" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:07.081" starttime="20200601 14:14:06.779"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:07.091" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:07.115" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000335 seconds.</msg>
<msg timestamp="20200601 14:14:07.116" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:08 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:07.116" starttime="20200601 14:14:07.081"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:07.116" starttime="20200601 14:14:06.777"></status>
</kw>
<kw type="foritem" name="${i} = 27">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:07.117" starttime="20200601 14:14:07.116"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:07.418" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:07.418" starttime="20200601 14:14:07.118"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:07.425" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:07.451" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000449 seconds.</msg>
<msg timestamp="20200601 14:14:07.452" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:08 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:07.452" starttime="20200601 14:14:07.418"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:07.452" starttime="20200601 14:14:07.116"></status>
</kw>
<kw type="foritem" name="${i} = 28">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:07.454" starttime="20200601 14:14:07.452"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:07.760" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:07.760" starttime="20200601 14:14:07.454"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:07.767" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:07.791" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000293 seconds.</msg>
<msg timestamp="20200601 14:14:07.791" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:09 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:07.791" starttime="20200601 14:14:07.760"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:07.791" starttime="20200601 14:14:07.452"></status>
</kw>
<kw type="foritem" name="${i} = 29">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:07.792" starttime="20200601 14:14:07.792"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:08.098" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:08.098" starttime="20200601 14:14:07.793"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:08.105" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:08.129" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000313 seconds.</msg>
<msg timestamp="20200601 14:14:08.130" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:09 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:08.130" starttime="20200601 14:14:08.098"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:08.130" starttime="20200601 14:14:07.791"></status>
</kw>
<kw type="foritem" name="${i} = 30">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:08.131" starttime="20200601 14:14:08.130"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:08.433" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:08.433" starttime="20200601 14:14:08.131"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:08.440" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:08.464" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000558 seconds.</msg>
<msg timestamp="20200601 14:14:08.465" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:09 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:08.465" starttime="20200601 14:14:08.433"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:08.465" starttime="20200601 14:14:08.130"></status>
</kw>
<kw type="foritem" name="${i} = 31">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:08.466" starttime="20200601 14:14:08.465"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:08.768" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:08.768" starttime="20200601 14:14:08.467"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:08.779" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:08.802" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000443 seconds.</msg>
<msg timestamp="20200601 14:14:08.802" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:10 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:08.802" starttime="20200601 14:14:08.769"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:08.803" starttime="20200601 14:14:08.465"></status>
</kw>
<kw type="foritem" name="${i} = 32">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:08.804" starttime="20200601 14:14:08.803"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:09.107" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:09.107" starttime="20200601 14:14:08.804"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:09.115" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:09.139" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000338 seconds.</msg>
<msg timestamp="20200601 14:14:09.139" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:10 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:09.139" starttime="20200601 14:14:09.107"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:09.139" starttime="20200601 14:14:08.803"></status>
</kw>
<kw type="foritem" name="${i} = 33">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:09.140" starttime="20200601 14:14:09.140"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:09.441" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:09.441" starttime="20200601 14:14:09.141"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:09.452" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:09.476" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000307 seconds.</msg>
<msg timestamp="20200601 14:14:09.476" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:10 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:09.476" starttime="20200601 14:14:09.442"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:09.476" starttime="20200601 14:14:09.139"></status>
</kw>
<kw type="foritem" name="${i} = 34">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:09.477" starttime="20200601 14:14:09.477"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:09.778" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:09.778" starttime="20200601 14:14:09.478"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:09.786" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:09.811" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000508 seconds.</msg>
<msg timestamp="20200601 14:14:09.811" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:11 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:09.811" starttime="20200601 14:14:09.779"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:09.812" starttime="20200601 14:14:09.476"></status>
</kw>
<kw type="foritem" name="${i} = 35">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:09.813" starttime="20200601 14:14:09.812"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:10.114" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:10.114" starttime="20200601 14:14:09.813"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:10.121" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:10.144" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000318 seconds.</msg>
<msg timestamp="20200601 14:14:10.144" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:11 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:10.144" starttime="20200601 14:14:10.114"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:10.144" starttime="20200601 14:14:09.812"></status>
</kw>
<kw type="foritem" name="${i} = 36">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:10.145" starttime="20200601 14:14:10.145"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:10.446" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:10.446" starttime="20200601 14:14:10.145"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:10.454" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:10.479" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000474 seconds.</msg>
<msg timestamp="20200601 14:14:10.479" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:11 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:10.479" starttime="20200601 14:14:10.446"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:10.479" starttime="20200601 14:14:10.144"></status>
</kw>
<kw type="foritem" name="${i} = 37">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:10.481" starttime="20200601 14:14:10.480"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:10.782" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:10.783" starttime="20200601 14:14:10.482"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:10.789" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:10.812" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000288 seconds.</msg>
<msg timestamp="20200601 14:14:10.812" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:12 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:10.812" starttime="20200601 14:14:10.783"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:10.812" starttime="20200601 14:14:10.480"></status>
</kw>
<kw type="foritem" name="${i} = 38">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:10.813" starttime="20200601 14:14:10.813"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:11.114" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:11.115" starttime="20200601 14:14:10.814"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:11.121" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:11.146" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000295 seconds.</msg>
<msg timestamp="20200601 14:14:11.146" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:12 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:11.146" starttime="20200601 14:14:11.115"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:11.146" starttime="20200601 14:14:10.812"></status>
</kw>
<kw type="foritem" name="${i} = 39">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:11.147" starttime="20200601 14:14:11.147"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:11.448" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:11.448" starttime="20200601 14:14:11.148"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:11.455" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:11.481" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000324 seconds.</msg>
<msg timestamp="20200601 14:14:11.482" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:12 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:11.482" starttime="20200601 14:14:11.449"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:11.482" starttime="20200601 14:14:11.147"></status>
</kw>
<kw type="foritem" name="${i} = 40">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:11.483" starttime="20200601 14:14:11.482"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:11.787" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:11.787" starttime="20200601 14:14:11.483"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:11.794" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:11.818" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000323 seconds.</msg>
<msg timestamp="20200601 14:14:11.819" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:13 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:11.819" starttime="20200601 14:14:11.788"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:11.819" starttime="20200601 14:14:11.482"></status>
</kw>
<kw type="foritem" name="${i} = 41">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:11.820" starttime="20200601 14:14:11.819"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:12.122" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:12.122" starttime="20200601 14:14:11.820"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:12.133" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:12.157" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000502 seconds.</msg>
<msg timestamp="20200601 14:14:12.157" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:13 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:12.158" starttime="20200601 14:14:12.122"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:12.158" starttime="20200601 14:14:11.819"></status>
</kw>
<kw type="foritem" name="${i} = 42">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:12.159" starttime="20200601 14:14:12.158"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:12.468" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:12.468" starttime="20200601 14:14:12.160"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:12.476" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:12.498" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000363 seconds.</msg>
<msg timestamp="20200601 14:14:12.498" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:13 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:12.498" starttime="20200601 14:14:12.468"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:12.498" starttime="20200601 14:14:12.158"></status>
</kw>
<kw type="foritem" name="${i} = 43">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:12.500" starttime="20200601 14:14:12.499"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:12.804" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:12.804" starttime="20200601 14:14:12.500"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:12.812" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:12.837" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00048 seconds.</msg>
<msg timestamp="20200601 14:14:12.838" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:14 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:12.838" starttime="20200601 14:14:12.805"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:12.838" starttime="20200601 14:14:12.498"></status>
</kw>
<kw type="foritem" name="${i} = 44">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:12.840" starttime="20200601 14:14:12.838"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:13.142" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:13.142" starttime="20200601 14:14:12.840"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:13.150" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:13.171" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000312 seconds.</msg>
<msg timestamp="20200601 14:14:13.171" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:14 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:13.171" starttime="20200601 14:14:13.143"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:13.171" starttime="20200601 14:14:12.838"></status>
</kw>
<kw type="foritem" name="${i} = 45">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:13.173" starttime="20200601 14:14:13.172"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:13.478" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:13.478" starttime="20200601 14:14:13.173"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:13.485" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:13.507" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000387000000001 seconds.</msg>
<msg timestamp="20200601 14:14:13.508" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:14 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:13.508" starttime="20200601 14:14:13.478"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:13.508" starttime="20200601 14:14:13.172"></status>
</kw>
<kw type="foritem" name="${i} = 46">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:13.510" starttime="20200601 14:14:13.508"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:13.811" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:13.812" starttime="20200601 14:14:13.510"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:13.822" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:13.845" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00038 seconds.</msg>
<msg timestamp="20200601 14:14:13.845" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:15 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:13.845" starttime="20200601 14:14:13.812"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:13.846" starttime="20200601 14:14:13.508"></status>
</kw>
<kw type="foritem" name="${i} = 47">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:13.847" starttime="20200601 14:14:13.846"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:14.148" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:14.148" starttime="20200601 14:14:13.847"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:14.155" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:14.179" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000303 seconds.</msg>
<msg timestamp="20200601 14:14:14.179" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:15 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:14.179" starttime="20200601 14:14:14.148"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:14.179" starttime="20200601 14:14:13.846"></status>
</kw>
<kw type="foritem" name="${i} = 48">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:14.181" starttime="20200601 14:14:14.180"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:14.482" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:14.482" starttime="20200601 14:14:14.181"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:14.493" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:14.517" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000449000000001 seconds.</msg>
<msg timestamp="20200601 14:14:14.518" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:15 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:14.518" starttime="20200601 14:14:14.482"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:14.518" starttime="20200601 14:14:14.180"></status>
</kw>
<kw type="foritem" name="${i} = 49">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:14.519" starttime="20200601 14:14:14.519"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:14.820" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:14.821" starttime="20200601 14:14:14.520"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:14.829" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:14.854" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000355 seconds.</msg>
<msg timestamp="20200601 14:14:14.855" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:16 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:14.855" starttime="20200601 14:14:14.821"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:14.855" starttime="20200601 14:14:14.518"></status>
</kw>
<kw type="foritem" name="${i} = 50">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:14.856" starttime="20200601 14:14:14.856"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:15.157" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:15.158" starttime="20200601 14:14:14.857"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:15.164" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:15.187" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.0005 seconds.</msg>
<msg timestamp="20200601 14:14:15.188" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:16 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:15.188" starttime="20200601 14:14:15.158"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:15.188" starttime="20200601 14:14:14.855"></status>
</kw>
<kw type="foritem" name="${i} = 51">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:15.189" starttime="20200601 14:14:15.188"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:15.498" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:15.498" starttime="20200601 14:14:15.189"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:15.506" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:15.528" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000373000000001 seconds.</msg>
<msg timestamp="20200601 14:14:15.528" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:16 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:15.528" starttime="20200601 14:14:15.498"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:15.528" starttime="20200601 14:14:15.188"></status>
</kw>
<kw type="foritem" name="${i} = 52">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:15.530" starttime="20200601 14:14:15.529"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:15.838" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:15.838" starttime="20200601 14:14:15.530"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:15.851" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:15.875" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000359 seconds.</msg>
<msg timestamp="20200601 14:14:15.875" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:17 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:15.876" starttime="20200601 14:14:15.838"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:15.876" starttime="20200601 14:14:15.528"></status>
</kw>
<kw type="foritem" name="${i} = 53">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:15.877" starttime="20200601 14:14:15.876"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:16.178" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:16.178" starttime="20200601 14:14:15.878"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:16.185" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:16.208" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000315000000001 seconds.</msg>
<msg timestamp="20200601 14:14:16.208" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:17 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:16.208" starttime="20200601 14:14:16.178"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:16.208" starttime="20200601 14:14:15.876"></status>
</kw>
<kw type="foritem" name="${i} = 54">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:16.209" starttime="20200601 14:14:16.209"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:16.510" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:16.511" starttime="20200601 14:14:16.210"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:16.517" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:16.540" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000508999999999 seconds.</msg>
<msg timestamp="20200601 14:14:16.541" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:17 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:16.541" starttime="20200601 14:14:16.511"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:16.541" starttime="20200601 14:14:16.208"></status>
</kw>
<kw type="foritem" name="${i} = 55">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:16.544" starttime="20200601 14:14:16.543"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:16.845" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:16.845" starttime="20200601 14:14:16.544"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:16.851" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:16.869" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000473 seconds.</msg>
<msg timestamp="20200601 14:14:16.870" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:18 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:16.870" starttime="20200601 14:14:16.845"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:16.870" starttime="20200601 14:14:16.541"></status>
</kw>
<kw type="foritem" name="${i} = 56">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:16.871" starttime="20200601 14:14:16.870"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:17.172" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:17.172" starttime="20200601 14:14:16.872"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:17.179" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:17.204" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000304 seconds.</msg>
<msg timestamp="20200601 14:14:17.204" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:18 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:17.204" starttime="20200601 14:14:17.173"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:17.204" starttime="20200601 14:14:16.870"></status>
</kw>
<kw type="foritem" name="${i} = 57">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:17.205" starttime="20200601 14:14:17.205"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:17.506" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:17.506" starttime="20200601 14:14:17.206"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:17.513" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:17.536" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000289 seconds.</msg>
<msg timestamp="20200601 14:14:17.536" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:18 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:17.536" starttime="20200601 14:14:17.507"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:17.536" starttime="20200601 14:14:17.205"></status>
</kw>
<kw type="foritem" name="${i} = 58">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:17.537" starttime="20200601 14:14:17.537"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:17.838" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:17.838" starttime="20200601 14:14:17.538"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:17.845" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:17.867" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000354 seconds.</msg>
<msg timestamp="20200601 14:14:17.868" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:19 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:17.868" starttime="20200601 14:14:17.839"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:17.868" starttime="20200601 14:14:17.536"></status>
</kw>
<kw type="foritem" name="${i} = 59">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:17.869" starttime="20200601 14:14:17.868"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:18.170" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:18.170" starttime="20200601 14:14:17.869"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:18.181" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:18.207" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000475000000001 seconds.</msg>
<msg timestamp="20200601 14:14:18.207" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:19 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:18.207" starttime="20200601 14:14:18.171"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:18.207" starttime="20200601 14:14:17.868"></status>
</kw>
<kw type="foritem" name="${i} = 60">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:18.208" starttime="20200601 14:14:18.208"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:18.509" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:18.509" starttime="20200601 14:14:18.209"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:18.516" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:18.540" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00075 seconds.</msg>
<msg timestamp="20200601 14:14:18.541" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:19 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:18.541" starttime="20200601 14:14:18.510"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:18.541" starttime="20200601 14:14:18.207"></status>
</kw>
<kw type="foritem" name="${i} = 61">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:18.545" starttime="20200601 14:14:18.543"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:18.848" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:18.848" starttime="20200601 14:14:18.545"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:18.855" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:18.879" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000309000000001 seconds.</msg>
<msg timestamp="20200601 14:14:18.880" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:20 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:18.880" starttime="20200601 14:14:18.848"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:18.880" starttime="20200601 14:14:18.541"></status>
</kw>
<kw type="foritem" name="${i} = 62">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:18.881" starttime="20200601 14:14:18.880"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:19.184" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:19.184" starttime="20200601 14:14:18.881"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:19.192" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:19.216" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000324 seconds.</msg>
<msg timestamp="20200601 14:14:19.217" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:20 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:19.217" starttime="20200601 14:14:19.184"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:19.217" starttime="20200601 14:14:18.880"></status>
</kw>
<kw type="foritem" name="${i} = 63">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:19.218" starttime="20200601 14:14:19.217"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:19.519" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:19.519" starttime="20200601 14:14:19.219"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:19.526" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:19.548" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000325 seconds.</msg>
<msg timestamp="20200601 14:14:19.549" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:20 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:19.549" starttime="20200601 14:14:19.520"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:19.549" starttime="20200601 14:14:19.217"></status>
</kw>
<kw type="foritem" name="${i} = 64">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:19.550" starttime="20200601 14:14:19.549"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:19.851" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:19.851" starttime="20200601 14:14:19.550"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:19.858" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:19.881" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000496 seconds.</msg>
<msg timestamp="20200601 14:14:19.881" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:21 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:19.882" starttime="20200601 14:14:19.851"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:19.882" starttime="20200601 14:14:19.549"></status>
</kw>
<kw type="foritem" name="${i} = 65">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:19.883" starttime="20200601 14:14:19.882"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:20.185" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:20.185" starttime="20200601 14:14:19.884"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:20.191" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:20.216" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000287 seconds.</msg>
<msg timestamp="20200601 14:14:20.216" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:21 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:20.216" starttime="20200601 14:14:20.185"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:20.217" starttime="20200601 14:14:19.882"></status>
</kw>
<kw type="foritem" name="${i} = 66">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:20.218" starttime="20200601 14:14:20.217"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:20.519" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:20.519" starttime="20200601 14:14:20.218"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:20.527" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:20.549" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000376999999999 seconds.</msg>
<msg timestamp="20200601 14:14:20.550" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:21 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:20.550" starttime="20200601 14:14:20.519"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:20.550" starttime="20200601 14:14:20.217"></status>
</kw>
<kw type="foritem" name="${i} = 67">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:20.551" starttime="20200601 14:14:20.550"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:20.852" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:20.852" starttime="20200601 14:14:20.551"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:20.859" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:20.883" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000521 seconds.</msg>
<msg timestamp="20200601 14:14:20.884" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:22 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:20.884" starttime="20200601 14:14:20.852"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:20.884" starttime="20200601 14:14:20.550"></status>
</kw>
<kw type="foritem" name="${i} = 68">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:20.886" starttime="20200601 14:14:20.885"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:21.187" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:21.187" starttime="20200601 14:14:20.886"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:21.195" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:21.220" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000310000000001 seconds.</msg>
<msg timestamp="20200601 14:14:21.220" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:22 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:21.220" starttime="20200601 14:14:21.187"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:21.220" starttime="20200601 14:14:20.884"></status>
</kw>
<kw type="foritem" name="${i} = 69">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:21.221" starttime="20200601 14:14:21.221"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:21.522" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:21.522" starttime="20200601 14:14:21.222"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:21.532" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:21.555" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000371 seconds.</msg>
<msg timestamp="20200601 14:14:21.556" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:22 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:21.556" starttime="20200601 14:14:21.523"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:21.556" starttime="20200601 14:14:21.220"></status>
</kw>
<kw type="foritem" name="${i} = 70">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:21.557" starttime="20200601 14:14:21.556"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:21.858" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:21.858" starttime="20200601 14:14:21.557"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:21.865" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:21.884" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00031 seconds.</msg>
<msg timestamp="20200601 14:14:21.884" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:23 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:21.885" starttime="20200601 14:14:21.859"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:21.885" starttime="20200601 14:14:21.556"></status>
</kw>
<kw type="foritem" name="${i} = 71">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:21.885" starttime="20200601 14:14:21.885"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:22.188" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:22.188" starttime="20200601 14:14:21.886"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:22.195" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:22.218" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000295 seconds.</msg>
<msg timestamp="20200601 14:14:22.219" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:23 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:22.219" starttime="20200601 14:14:22.188"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:22.219" starttime="20200601 14:14:21.885"></status>
</kw>
<kw type="foritem" name="${i} = 72">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:22.220" starttime="20200601 14:14:22.219"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:22.521" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:22.521" starttime="20200601 14:14:22.220"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:22.533" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:22.559" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000542 seconds.</msg>
<msg timestamp="20200601 14:14:22.559" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:23 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:22.560" starttime="20200601 14:14:22.521"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:22.560" starttime="20200601 14:14:22.219"></status>
</kw>
<kw type="foritem" name="${i} = 73">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:22.561" starttime="20200601 14:14:22.560"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:22.862" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:22.862" starttime="20200601 14:14:22.562"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:22.869" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:22.891" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000306 seconds.</msg>
<msg timestamp="20200601 14:14:22.892" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:24 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:22.892" starttime="20200601 14:14:22.863"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:22.892" starttime="20200601 14:14:22.560"></status>
</kw>
<kw type="foritem" name="${i} = 74">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:22.893" starttime="20200601 14:14:22.892"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:23.194" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:23.194" starttime="20200601 14:14:22.893"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:23.208" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:23.234" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000383 seconds.</msg>
<msg timestamp="20200601 14:14:23.234" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:24 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:23.234" starttime="20200601 14:14:23.194"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:23.234" starttime="20200601 14:14:22.892"></status>
</kw>
<kw type="foritem" name="${i} = 75">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:23.235" starttime="20200601 14:14:23.235"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:23.537" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:23.537" starttime="20200601 14:14:23.236"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:23.546" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:23.568" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000307 seconds.</msg>
<msg timestamp="20200601 14:14:23.569" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:24 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:23.569" starttime="20200601 14:14:23.537"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:23.569" starttime="20200601 14:14:23.235"></status>
</kw>
<kw type="foritem" name="${i} = 76">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:23.570" starttime="20200601 14:14:23.569"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:23.870" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:23.871" starttime="20200601 14:14:23.570"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:23.878" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:23.901" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000407 seconds.</msg>
<msg timestamp="20200601 14:14:23.901" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:25 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:23.901" starttime="20200601 14:14:23.871"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:23.901" starttime="20200601 14:14:23.569"></status>
</kw>
<kw type="foritem" name="${i} = 77">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:23.902" starttime="20200601 14:14:23.902"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:24.208" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:24.208" starttime="20200601 14:14:23.903"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:24.216" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:24.237" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000303000000001 seconds.</msg>
<msg timestamp="20200601 14:14:24.238" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:25 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:24.238" starttime="20200601 14:14:24.208"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:24.238" starttime="20200601 14:14:23.901"></status>
</kw>
<kw type="foritem" name="${i} = 78">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:24.239" starttime="20200601 14:14:24.239"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:24.540" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:24.540" starttime="20200601 14:14:24.239"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:24.553" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:24.576" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000277 seconds.</msg>
<msg timestamp="20200601 14:14:24.576" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:25 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:24.576" starttime="20200601 14:14:24.541"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:24.576" starttime="20200601 14:14:24.238"></status>
</kw>
<kw type="foritem" name="${i} = 79">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:24.578" starttime="20200601 14:14:24.576"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:24.886" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:24.886" starttime="20200601 14:14:24.578"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:24.893" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:24.915" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000275 seconds.</msg>
<msg timestamp="20200601 14:14:24.916" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:26 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:24.916" starttime="20200601 14:14:24.886"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:24.916" starttime="20200601 14:14:24.576"></status>
</kw>
<kw type="foritem" name="${i} = 80">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:24.917" starttime="20200601 14:14:24.916"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:25.218" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:25.218" starttime="20200601 14:14:24.917"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:25.226" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:25.250" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000373 seconds.</msg>
<msg timestamp="20200601 14:14:25.251" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:26 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:25.251" starttime="20200601 14:14:25.218"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:25.251" starttime="20200601 14:14:24.916"></status>
</kw>
<kw type="foritem" name="${i} = 81">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:25.252" starttime="20200601 14:14:25.252"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:25.553" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:25.553" starttime="20200601 14:14:25.253"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:25.560" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:25.583" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000357 seconds.</msg>
<msg timestamp="20200601 14:14:25.583" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:26 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:25.583" starttime="20200601 14:14:25.554"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:25.583" starttime="20200601 14:14:25.251"></status>
</kw>
<kw type="foritem" name="${i} = 82">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:25.585" starttime="20200601 14:14:25.584"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:25.886" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:25.886" starttime="20200601 14:14:25.585"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:25.893" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:25.915" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000303 seconds.</msg>
<msg timestamp="20200601 14:14:25.916" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:27 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:25.916" starttime="20200601 14:14:25.886"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:25.916" starttime="20200601 14:14:25.583"></status>
</kw>
<kw type="foritem" name="${i} = 83">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:25.917" starttime="20200601 14:14:25.917"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:26.218" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:26.218" starttime="20200601 14:14:25.917"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:26.232" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:26.257" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000511 seconds.</msg>
<msg timestamp="20200601 14:14:26.257" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:27 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:26.258" starttime="20200601 14:14:26.219"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:26.258" starttime="20200601 14:14:25.916"></status>
</kw>
<kw type="foritem" name="${i} = 84">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:26.259" starttime="20200601 14:14:26.258"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:26.560" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:26.560" starttime="20200601 14:14:26.260"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:26.575" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:26.597" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000361 seconds.</msg>
<msg timestamp="20200601 14:14:26.598" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:27 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:26.598" starttime="20200601 14:14:26.561"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:26.598" starttime="20200601 14:14:26.258"></status>
</kw>
<kw type="foritem" name="${i} = 85">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:26.599" starttime="20200601 14:14:26.598"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:26.900" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:26.901" starttime="20200601 14:14:26.599"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:26.914" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:26.939" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000517 seconds.</msg>
<msg timestamp="20200601 14:14:26.940" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:28 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:26.940" starttime="20200601 14:14:26.901"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:26.940" starttime="20200601 14:14:26.598"></status>
</kw>
<kw type="foritem" name="${i} = 86">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:26.941" starttime="20200601 14:14:26.941"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:27.242" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:27.243" starttime="20200601 14:14:26.942"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:27.254" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:27.279" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000539000000001 seconds.</msg>
<msg timestamp="20200601 14:14:27.280" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:28 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:27.280" starttime="20200601 14:14:27.243"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:27.280" starttime="20200601 14:14:26.940"></status>
</kw>
<kw type="foritem" name="${i} = 87">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:27.281" starttime="20200601 14:14:27.280"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:27.582" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:27.583" starttime="20200601 14:14:27.282"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:27.595" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:27.620" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000532 seconds.</msg>
<msg timestamp="20200601 14:14:27.620" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:28 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:27.620" starttime="20200601 14:14:27.583"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:27.620" starttime="20200601 14:14:27.280"></status>
</kw>
<kw type="foritem" name="${i} = 88">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:27.622" starttime="20200601 14:14:27.621"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:27.928" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:27.928" starttime="20200601 14:14:27.622"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:27.940" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:27.964" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000547 seconds.</msg>
<msg timestamp="20200601 14:14:27.964" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:29 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:27.964" starttime="20200601 14:14:27.928"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:27.964" starttime="20200601 14:14:27.621"></status>
</kw>
<kw type="foritem" name="${i} = 89">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:27.966" starttime="20200601 14:14:27.965"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:28.268" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:28.268" starttime="20200601 14:14:27.967"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:28.276" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:28.298" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000324999999999 seconds.</msg>
<msg timestamp="20200601 14:14:28.298" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:29 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:28.298" starttime="20200601 14:14:28.268"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:28.298" starttime="20200601 14:14:27.964"></status>
</kw>
<kw type="foritem" name="${i} = 90">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:28.300" starttime="20200601 14:14:28.299"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:28.600" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:28.601" starttime="20200601 14:14:28.300"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:28.609" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:28.632" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000381 seconds.</msg>
<msg timestamp="20200601 14:14:28.633" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:29 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:28.633" starttime="20200601 14:14:28.601"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:28.633" starttime="20200601 14:14:28.299"></status>
</kw>
<kw type="foritem" name="${i} = 91">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:28.634" starttime="20200601 14:14:28.633"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:28.935" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:28.936" starttime="20200601 14:14:28.635"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:28.944" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:28.969" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000381 seconds.</msg>
<msg timestamp="20200601 14:14:28.969" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:30 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:28.969" starttime="20200601 14:14:28.936"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:28.969" starttime="20200601 14:14:28.633"></status>
</kw>
<kw type="foritem" name="${i} = 92">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:28.970" starttime="20200601 14:14:28.970"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:29.274" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:29.274" starttime="20200601 14:14:28.971"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:29.283" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:29.307" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000381 seconds.</msg>
<msg timestamp="20200601 14:14:29.308" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:30 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:29.308" starttime="20200601 14:14:29.274"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:29.308" starttime="20200601 14:14:28.970"></status>
</kw>
<kw type="foritem" name="${i} = 93">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:29.309" starttime="20200601 14:14:29.309"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:29.610" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:29.610" starttime="20200601 14:14:29.309"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:29.617" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:29.642" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000326 seconds.</msg>
<msg timestamp="20200601 14:14:29.643" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:30 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:29.643" starttime="20200601 14:14:29.610"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:29.643" starttime="20200601 14:14:29.308"></status>
</kw>
<kw type="foritem" name="${i} = 94">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:29.644" starttime="20200601 14:14:29.643"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:29.945" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:29.945" starttime="20200601 14:14:29.644"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:29.953" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:29.976" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000372 seconds.</msg>
<msg timestamp="20200601 14:14:29.977" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:31 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:29.977" starttime="20200601 14:14:29.945"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:29.977" starttime="20200601 14:14:29.643"></status>
</kw>
<kw type="foritem" name="${i} = 95">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:29.978" starttime="20200601 14:14:29.977"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:30.279" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:30.279" starttime="20200601 14:14:29.978"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:30.287" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:30.311" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000346 seconds.</msg>
<msg timestamp="20200601 14:14:30.311" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:31 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:30.312" starttime="20200601 14:14:30.279"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:30.312" starttime="20200601 14:14:29.977"></status>
</kw>
<kw type="foritem" name="${i} = 96">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:30.313" starttime="20200601 14:14:30.312"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:30.614" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:30.614" starttime="20200601 14:14:30.313"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:30.621" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:30.643" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000329 seconds.</msg>
<msg timestamp="20200601 14:14:30.644" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:31 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:30.644" starttime="20200601 14:14:30.614"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:30.644" starttime="20200601 14:14:30.312"></status>
</kw>
<kw type="foritem" name="${i} = 97">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:30.645" starttime="20200601 14:14:30.644"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:30.946" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:30.946" starttime="20200601 14:14:30.645"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:30.952" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:30.977" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000311 seconds.</msg>
<msg timestamp="20200601 14:14:30.977" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:32 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:30.977" starttime="20200601 14:14:30.946"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:30.977" starttime="20200601 14:14:30.644"></status>
</kw>
<kw type="foritem" name="${i} = 98">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:30.979" starttime="20200601 14:14:30.978"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:31.280" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:31.280" starttime="20200601 14:14:30.980"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:31.289" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:31.312" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000356999999999 seconds.</msg>
<msg timestamp="20200601 14:14:31.312" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:32 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:31.313" starttime="20200601 14:14:31.281"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:31.313" starttime="20200601 14:14:30.977"></status>
</kw>
<kw type="foritem" name="${i} = 99">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:31.313" starttime="20200601 14:14:31.313"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:31.616" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:31.616" starttime="20200601 14:14:31.314"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:31.626" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:31.648" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000442 seconds.</msg>
<msg timestamp="20200601 14:14:31.648" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:32 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:31.649" starttime="20200601 14:14:31.617"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:31.649" starttime="20200601 14:14:31.313"></status>
</kw>
<kw type="foritem" name="${i} = 100">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:31.650" starttime="20200601 14:14:31.649"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:31.951" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:31.951" starttime="20200601 14:14:31.650"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:31.960" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:31.983" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000370999999999 seconds.</msg>
<msg timestamp="20200601 14:14:31.984" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:33 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:31.984" starttime="20200601 14:14:31.952"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:31.984" starttime="20200601 14:14:31.649"></status>
</kw>
<kw type="foritem" name="${i} = 101">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:31.985" starttime="20200601 14:14:31.985"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:32.286" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:32.286" starttime="20200601 14:14:31.986"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:32.294" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:32.320" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000391 seconds.</msg>
<msg timestamp="20200601 14:14:32.320" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:33 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:32.320" starttime="20200601 14:14:32.287"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:32.320" starttime="20200601 14:14:31.984"></status>
</kw>
<kw type="foritem" name="${i} = 102">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:32.321" starttime="20200601 14:14:32.321"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:32.623" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:32.623" starttime="20200601 14:14:32.322"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:32.632" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:32.655" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000348 seconds.</msg>
<msg timestamp="20200601 14:14:32.656" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:34 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:32.656" starttime="20200601 14:14:32.623"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:32.656" starttime="20200601 14:14:32.320"></status>
</kw>
<kw type="foritem" name="${i} = 103">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:32.657" starttime="20200601 14:14:32.657"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:32.958" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:32.958" starttime="20200601 14:14:32.657"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:32.966" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:32.989" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00057 seconds.</msg>
<msg timestamp="20200601 14:14:32.990" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:34 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:32.990" starttime="20200601 14:14:32.959"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:32.990" starttime="20200601 14:14:32.656"></status>
</kw>
<kw type="foritem" name="${i} = 104">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:32.992" starttime="20200601 14:14:32.991"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:33.293" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:33.293" starttime="20200601 14:14:32.992"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:33.301" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:33.324" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000374 seconds.</msg>
<msg timestamp="20200601 14:14:33.325" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:34 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:33.325" starttime="20200601 14:14:33.293"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:33.325" starttime="20200601 14:14:32.990"></status>
</kw>
<kw type="foritem" name="${i} = 105">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:33.326" starttime="20200601 14:14:33.326"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:33.627" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:33.627" starttime="20200601 14:14:33.327"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:33.636" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:33.662" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000405 seconds.</msg>
<msg timestamp="20200601 14:14:33.662" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:35 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:33.663" starttime="20200601 14:14:33.628"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:33.663" starttime="20200601 14:14:33.325"></status>
</kw>
<kw type="foritem" name="${i} = 106">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:33.664" starttime="20200601 14:14:33.663"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:33.965" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:33.965" starttime="20200601 14:14:33.664"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:33.978" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:34.000" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000362999999999 seconds.</msg>
<msg timestamp="20200601 14:14:34.001" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:35 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:34.001" starttime="20200601 14:14:33.966"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:34.001" starttime="20200601 14:14:33.663"></status>
</kw>
<kw type="foritem" name="${i} = 107">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:34.003" starttime="20200601 14:14:34.001"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:34.304" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:34.304" starttime="20200601 14:14:34.003"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:34.314" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:34.340" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000579 seconds.</msg>
<msg timestamp="20200601 14:14:34.340" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:35 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:34.340" starttime="20200601 14:14:34.304"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:34.341" starttime="20200601 14:14:34.001"></status>
</kw>
<kw type="foritem" name="${i} = 108">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:34.342" starttime="20200601 14:14:34.341"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:34.643" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:34.644" starttime="20200601 14:14:34.343"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:34.652" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:34.674" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000512 seconds.</msg>
<msg timestamp="20200601 14:14:34.675" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:36 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:34.675" starttime="20200601 14:14:34.644"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:34.675" starttime="20200601 14:14:34.341"></status>
</kw>
<kw type="foritem" name="${i} = 109">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:34.676" starttime="20200601 14:14:34.676"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:34.978" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:34.978" starttime="20200601 14:14:34.677"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:34.984" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:35.007" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000292000000001 seconds.</msg>
<msg timestamp="20200601 14:14:35.008" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:36 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:35.008" starttime="20200601 14:14:34.978"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:35.008" starttime="20200601 14:14:34.675"></status>
</kw>
<kw type="foritem" name="${i} = 110">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:35.010" starttime="20200601 14:14:35.008"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:35.310" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:35.311" starttime="20200601 14:14:35.010"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:35.323" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:35.348" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000503999999999 seconds.</msg>
<msg timestamp="20200601 14:14:35.348" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:36 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:35.348" starttime="20200601 14:14:35.311"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:35.348" starttime="20200601 14:14:35.008"></status>
</kw>
<kw type="foritem" name="${i} = 111">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:35.350" starttime="20200601 14:14:35.349"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:35.651" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:35.651" starttime="20200601 14:14:35.350"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:35.663" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:35.689" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000551 seconds.</msg>
<msg timestamp="20200601 14:14:35.690" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:37 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:35.690" starttime="20200601 14:14:35.651"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:35.690" starttime="20200601 14:14:35.348"></status>
</kw>
<kw type="foritem" name="${i} = 112">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:35.691" starttime="20200601 14:14:35.690"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:35.993" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:35.993" starttime="20200601 14:14:35.692"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:36.006" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:36.031" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00056 seconds.</msg>
<msg timestamp="20200601 14:14:36.032" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:37 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:36.032" starttime="20200601 14:14:35.993"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:36.032" starttime="20200601 14:14:35.690"></status>
</kw>
<kw type="foritem" name="${i} = 113">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:36.033" starttime="20200601 14:14:36.032"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:36.335" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:36.335" starttime="20200601 14:14:36.034"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:36.345" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:36.368" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000497 seconds.</msg>
<msg timestamp="20200601 14:14:36.369" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:37 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:36.369" starttime="20200601 14:14:36.335"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:36.369" starttime="20200601 14:14:36.032"></status>
</kw>
<kw type="foritem" name="${i} = 114">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:36.371" starttime="20200601 14:14:36.370"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:36.672" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:36.672" starttime="20200601 14:14:36.371"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:36.683" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:36.709" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000556 seconds.</msg>
<msg timestamp="20200601 14:14:36.709" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:38 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:36.709" starttime="20200601 14:14:36.673"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:36.709" starttime="20200601 14:14:36.369"></status>
</kw>
<kw type="foritem" name="${i} = 115">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:36.711" starttime="20200601 14:14:36.710"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:37.012" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:37.013" starttime="20200601 14:14:36.711"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:37.021" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:37.043" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000344 seconds.</msg>
<msg timestamp="20200601 14:14:37.044" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:38 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:37.044" starttime="20200601 14:14:37.013"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:37.044" starttime="20200601 14:14:36.709"></status>
</kw>
<kw type="foritem" name="${i} = 116">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:37.045" starttime="20200601 14:14:37.044"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:37.346" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:37.346" starttime="20200601 14:14:37.046"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:37.354" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:37.377" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000446999999999 seconds.</msg>
<msg timestamp="20200601 14:14:37.378" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:38 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:37.378" starttime="20200601 14:14:37.347"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:37.378" starttime="20200601 14:14:37.044"></status>
</kw>
<kw type="foritem" name="${i} = 117">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:37.379" starttime="20200601 14:14:37.379"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:37.681" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:37.681" starttime="20200601 14:14:37.380"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:37.694" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:37.719" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000534 seconds.</msg>
<msg timestamp="20200601 14:14:37.720" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:39 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:37.720" starttime="20200601 14:14:37.681"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:37.720" starttime="20200601 14:14:37.378"></status>
</kw>
<kw type="foritem" name="${i} = 118">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:37.721" starttime="20200601 14:14:37.721"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:38.025" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:38.026" starttime="20200601 14:14:37.722"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:38.034" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:38.058" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000417 seconds.</msg>
<msg timestamp="20200601 14:14:38.059" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:39 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:38.059" starttime="20200601 14:14:38.026"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:38.059" starttime="20200601 14:14:37.720"></status>
</kw>
<kw type="foritem" name="${i} = 119">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:38.060" starttime="20200601 14:14:38.059"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:38.361" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:38.361" starttime="20200601 14:14:38.060"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:38.369" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:38.394" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000355 seconds.</msg>
<msg timestamp="20200601 14:14:38.395" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:39 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:38.395" starttime="20200601 14:14:38.361"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:38.395" starttime="20200601 14:14:38.059"></status>
</kw>
<kw type="foritem" name="${i} = 120">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:38.396" starttime="20200601 14:14:38.395"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:38.697" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:38.697" starttime="20200601 14:14:38.396"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:38.703" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:38.728" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000296 seconds.</msg>
<msg timestamp="20200601 14:14:38.728" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:40 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:38.728" starttime="20200601 14:14:38.697"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:38.728" starttime="20200601 14:14:38.395"></status>
</kw>
<kw type="foritem" name="${i} = 121">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:38.729" starttime="20200601 14:14:38.729"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:39.030" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:39.030" starttime="20200601 14:14:38.729"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:39.039" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:39.064" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000608 seconds.</msg>
<msg timestamp="20200601 14:14:39.064" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:40 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:39.064" starttime="20200601 14:14:39.030"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:39.065" starttime="20200601 14:14:38.728"></status>
</kw>
<kw type="foritem" name="${i} = 122">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:39.066" starttime="20200601 14:14:39.065"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:39.368" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:39.368" starttime="20200601 14:14:39.067"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:39.375" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:39.399" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000297000000001 seconds.</msg>
<msg timestamp="20200601 14:14:39.399" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:40 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:39.399" starttime="20200601 14:14:39.368"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:39.399" starttime="20200601 14:14:39.065"></status>
</kw>
<kw type="foritem" name="${i} = 123">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:39.400" starttime="20200601 14:14:39.400"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:39.701" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:39.701" starttime="20200601 14:14:39.400"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:39.708" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:39.730" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000308 seconds.</msg>
<msg timestamp="20200601 14:14:39.730" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:41 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:39.730" starttime="20200601 14:14:39.701"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:39.730" starttime="20200601 14:14:39.399"></status>
</kw>
<kw type="foritem" name="${i} = 124">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:39.731" starttime="20200601 14:14:39.731"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:40.035" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:40.035" starttime="20200601 14:14:39.732"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:40.044" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:40.066" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000370999999999 seconds.</msg>
<msg timestamp="20200601 14:14:40.067" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:41 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:40.067" starttime="20200601 14:14:40.035"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:40.067" starttime="20200601 14:14:39.731"></status>
</kw>
<kw type="foritem" name="${i} = 125">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:40.068" starttime="20200601 14:14:40.068"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:40.369" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:40.370" starttime="20200601 14:14:40.069"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:40.378" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:40.401" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000310000000001 seconds.</msg>
<msg timestamp="20200601 14:14:40.402" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:41 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:40.402" starttime="20200601 14:14:40.370"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:40.402" starttime="20200601 14:14:40.067"></status>
</kw>
<kw type="foritem" name="${i} = 126">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:40.403" starttime="20200601 14:14:40.402"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:40.704" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:40.704" starttime="20200601 14:14:40.403"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:40.710" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:40.732" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000356 seconds.</msg>
<msg timestamp="20200601 14:14:40.733" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:42 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:40.733" starttime="20200601 14:14:40.704"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:40.733" starttime="20200601 14:14:40.402"></status>
</kw>
<kw type="foritem" name="${i} = 127">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:40.734" starttime="20200601 14:14:40.733"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:41.035" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:41.035" starttime="20200601 14:14:40.734"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:41.042" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:41.064" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000292 seconds.</msg>
<msg timestamp="20200601 14:14:41.064" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:42 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:41.064" starttime="20200601 14:14:41.035"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:41.064" starttime="20200601 14:14:40.733"></status>
</kw>
<kw type="foritem" name="${i} = 128">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:41.065" starttime="20200601 14:14:41.065"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:41.366" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:41.366" starttime="20200601 14:14:41.066"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:41.377" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:41.400" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000311 seconds.</msg>
<msg timestamp="20200601 14:14:41.401" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:42 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:41.401" starttime="20200601 14:14:41.367"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:41.401" starttime="20200601 14:14:41.065"></status>
</kw>
<kw type="foritem" name="${i} = 129">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:41.402" starttime="20200601 14:14:41.401"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:41.703" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:41.703" starttime="20200601 14:14:41.402"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:41.712" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:41.736" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000372 seconds.</msg>
<msg timestamp="20200601 14:14:41.736" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:43 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:41.736" starttime="20200601 14:14:41.704"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:41.736" starttime="20200601 14:14:41.401"></status>
</kw>
<kw type="foritem" name="${i} = 130">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:41.737" starttime="20200601 14:14:41.737"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:42.039" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:42.039" starttime="20200601 14:14:41.738"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:42.047" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:42.069" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000374000000001 seconds.</msg>
<msg timestamp="20200601 14:14:42.069" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:43 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:42.069" starttime="20200601 14:14:42.039"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:42.069" starttime="20200601 14:14:41.736"></status>
</kw>
<kw type="foritem" name="${i} = 131">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:42.070" starttime="20200601 14:14:42.070"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:42.371" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:42.371" starttime="20200601 14:14:42.071"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:42.378" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:42.397" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000312 seconds.</msg>
<msg timestamp="20200601 14:14:42.398" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:43 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:42.398" starttime="20200601 14:14:42.372"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:42.398" starttime="20200601 14:14:42.070"></status>
</kw>
<kw type="foritem" name="${i} = 132">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:42.399" starttime="20200601 14:14:42.398"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:42.700" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:42.700" starttime="20200601 14:14:42.399"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:42.707" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:42.731" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000293 seconds.</msg>
<msg timestamp="20200601 14:14:42.732" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:44 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:42.732" starttime="20200601 14:14:42.700"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:42.732" starttime="20200601 14:14:42.398"></status>
</kw>
<kw type="foritem" name="${i} = 133">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:42.733" starttime="20200601 14:14:42.732"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:43.038" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:43.038" starttime="20200601 14:14:42.733"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:43.048" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:43.070" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000326 seconds.</msg>
<msg timestamp="20200601 14:14:43.070" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:44 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:43.071" starttime="20200601 14:14:43.038"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:43.071" starttime="20200601 14:14:42.732"></status>
</kw>
<kw type="foritem" name="${i} = 134">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:43.072" starttime="20200601 14:14:43.071"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:43.378" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:43.378" starttime="20200601 14:14:43.072"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:43.389" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:43.407" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000317 seconds.</msg>
<msg timestamp="20200601 14:14:43.407" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:44 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:43.407" starttime="20200601 14:14:43.378"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:43.407" starttime="20200601 14:14:43.071"></status>
</kw>
<kw type="foritem" name="${i} = 135">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:43.409" starttime="20200601 14:14:43.408"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:43.715" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:43.715" starttime="20200601 14:14:43.409"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:43.724" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:43.749" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000389999999999 seconds.</msg>
<msg timestamp="20200601 14:14:43.750" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:45 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:43.750" starttime="20200601 14:14:43.716"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:43.750" starttime="20200601 14:14:43.408"></status>
</kw>
<kw type="foritem" name="${i} = 136">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:43.751" starttime="20200601 14:14:43.750"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:44.052" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:44.052" starttime="20200601 14:14:43.752"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:44.060" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:44.083" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00034 seconds.</msg>
<msg timestamp="20200601 14:14:44.084" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:45 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:44.084" starttime="20200601 14:14:44.053"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:44.084" starttime="20200601 14:14:43.750"></status>
</kw>
<kw type="foritem" name="${i} = 137">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:44.085" starttime="20200601 14:14:44.084"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:44.386" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:44.386" starttime="20200601 14:14:44.086"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:44.394" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:44.416" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.0003 seconds.</msg>
<msg timestamp="20200601 14:14:44.416" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:45 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:44.417" starttime="20200601 14:14:44.387"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:44.417" starttime="20200601 14:14:44.084"></status>
</kw>
<kw type="foritem" name="${i} = 138">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:44.418" starttime="20200601 14:14:44.417"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:44.719" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:44.719" starttime="20200601 14:14:44.418"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:44.730" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:44.753" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000425 seconds.</msg>
<msg timestamp="20200601 14:14:44.754" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:46 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:44.754" starttime="20200601 14:14:44.719"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:44.754" starttime="20200601 14:14:44.417"></status>
</kw>
<kw type="foritem" name="${i} = 139">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:44.755" starttime="20200601 14:14:44.754"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:45.058" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:45.058" starttime="20200601 14:14:44.755"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:45.070" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:45.092" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000481000000001 seconds.</msg>
<msg timestamp="20200601 14:14:45.093" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:46 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:45.093" starttime="20200601 14:14:45.058"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:45.093" starttime="20200601 14:14:44.754"></status>
</kw>
<kw type="foritem" name="${i} = 140">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:45.094" starttime="20200601 14:14:45.094"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:45.396" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:45.396" starttime="20200601 14:14:45.095"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:45.403" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:45.424" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000293 seconds.</msg>
<msg timestamp="20200601 14:14:45.425" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:46 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:45.425" starttime="20200601 14:14:45.396"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:45.425" starttime="20200601 14:14:45.093"></status>
</kw>
<kw type="foritem" name="${i} = 141">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:45.426" starttime="20200601 14:14:45.425"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:45.728" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:45.728" starttime="20200601 14:14:45.426"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:45.735" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:45.756" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000312 seconds.</msg>
<msg timestamp="20200601 14:14:45.757" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:47 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:45.757" starttime="20200601 14:14:45.728"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:45.757" starttime="20200601 14:14:45.425"></status>
</kw>
<kw type="foritem" name="${i} = 142">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:45.758" starttime="20200601 14:14:45.757"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:46.060" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:46.060" starttime="20200601 14:14:45.758"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:46.068" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:46.089" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000297 seconds.</msg>
<msg timestamp="20200601 14:14:46.089" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:47 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:46.089" starttime="20200601 14:14:46.061"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:46.089" starttime="20200601 14:14:45.757"></status>
</kw>
<kw type="foritem" name="${i} = 143">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:46.090" starttime="20200601 14:14:46.090"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:46.391" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:46.392" starttime="20200601 14:14:46.091"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:46.398" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:46.419" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000319 seconds.</msg>
<msg timestamp="20200601 14:14:46.421" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:47 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:46.421" starttime="20200601 14:14:46.392"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:46.421" starttime="20200601 14:14:46.089"></status>
</kw>
<kw type="foritem" name="${i} = 144">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:46.422" starttime="20200601 14:14:46.421"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:46.723" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:46.723" starttime="20200601 14:14:46.423"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:46.731" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:46.754" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000391 seconds.</msg>
<msg timestamp="20200601 14:14:46.754" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:48 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:46.754" starttime="20200601 14:14:46.724"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:46.754" starttime="20200601 14:14:46.421"></status>
</kw>
<kw type="foritem" name="${i} = 145">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:46.755" starttime="20200601 14:14:46.755"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:47.057" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:47.058" starttime="20200601 14:14:46.756"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:47.069" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:47.101" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000515 seconds.</msg>
<msg timestamp="20200601 14:14:47.101" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:48 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:47.101" starttime="20200601 14:14:47.058"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:47.101" starttime="20200601 14:14:46.754"></status>
</kw>
<kw type="foritem" name="${i} = 146">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:47.103" starttime="20200601 14:14:47.102"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:47.404" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:47.404" starttime="20200601 14:14:47.104"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:47.411" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:47.435" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000315000000001 seconds.</msg>
<msg timestamp="20200601 14:14:47.435" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:48 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:47.435" starttime="20200601 14:14:47.405"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:47.435" starttime="20200601 14:14:47.101"></status>
</kw>
<kw type="foritem" name="${i} = 147">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:47.436" starttime="20200601 14:14:47.435"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:47.737" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:47.737" starttime="20200601 14:14:47.437"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:47.745" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:47.770" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000307 seconds.</msg>
<msg timestamp="20200601 14:14:47.770" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:49 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:47.770" starttime="20200601 14:14:47.737"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:47.770" starttime="20200601 14:14:47.435"></status>
</kw>
<kw type="foritem" name="${i} = 148">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:47.771" starttime="20200601 14:14:47.771"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:48.072" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:48.073" starttime="20200601 14:14:47.772"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:48.087" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:48.112" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000618999999999 seconds.</msg>
<msg timestamp="20200601 14:14:48.113" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:49 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:48.113" starttime="20200601 14:14:48.073"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:48.113" starttime="20200601 14:14:47.770"></status>
</kw>
<kw type="foritem" name="${i} = 149">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:48.115" starttime="20200601 14:14:48.114"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:48.416" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:48.417" starttime="20200601 14:14:48.116"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:48.431" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:48.455" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00036 seconds.</msg>
<msg timestamp="20200601 14:14:48.456" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:49 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:48.456" starttime="20200601 14:14:48.417"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:48.456" starttime="20200601 14:14:48.113"></status>
</kw>
<kw type="foritem" name="${i} = 150">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:48.457" starttime="20200601 14:14:48.456"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:48.758" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:48.758" starttime="20200601 14:14:48.458"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:48.770" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:48.794" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000521 seconds.</msg>
<msg timestamp="20200601 14:14:48.794" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:50 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:48.794" starttime="20200601 14:14:48.759"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:48.795" starttime="20200601 14:14:48.456"></status>
</kw>
<kw type="foritem" name="${i} = 151">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:48.796" starttime="20200601 14:14:48.795"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:49.097" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:49.097" starttime="20200601 14:14:48.797"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:49.105" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:49.128" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000312 seconds.</msg>
<msg timestamp="20200601 14:14:49.128" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:50 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:49.128" starttime="20200601 14:14:49.098"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:49.128" starttime="20200601 14:14:48.795"></status>
</kw>
<kw type="foritem" name="${i} = 152">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:49.129" starttime="20200601 14:14:49.128"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:49.430" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:49.430" starttime="20200601 14:14:49.130"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:49.437" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:49.460" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000294999999999 seconds.</msg>
<msg timestamp="20200601 14:14:49.460" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:50 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:49.461" starttime="20200601 14:14:49.431"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:49.461" starttime="20200601 14:14:49.128"></status>
</kw>
<kw type="foritem" name="${i} = 153">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:49.461" starttime="20200601 14:14:49.461"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:49.763" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:49.763" starttime="20200601 14:14:49.462"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:49.769" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:49.792" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00028 seconds.</msg>
<msg timestamp="20200601 14:14:49.792" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:51 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:49.793" starttime="20200601 14:14:49.763"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:49.793" starttime="20200601 14:14:49.461"></status>
</kw>
<kw type="foritem" name="${i} = 154">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:49.793" starttime="20200601 14:14:49.793"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:50.095" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:50.095" starttime="20200601 14:14:49.794"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:50.103" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:50.127" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000363999999999 seconds.</msg>
<msg timestamp="20200601 14:14:50.128" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:51 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:50.128" starttime="20200601 14:14:50.095"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:50.128" starttime="20200601 14:14:49.793"></status>
</kw>
<kw type="foritem" name="${i} = 155">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:50.129" starttime="20200601 14:14:50.128"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:50.430" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:50.430" starttime="20200601 14:14:50.129"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:50.438" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:50.461" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000374 seconds.</msg>
<msg timestamp="20200601 14:14:50.461" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:51 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:50.461" starttime="20200601 14:14:50.431"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:50.462" starttime="20200601 14:14:50.128"></status>
</kw>
<kw type="foritem" name="${i} = 156">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:50.463" starttime="20200601 14:14:50.462"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:50.764" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:50.764" starttime="20200601 14:14:50.464"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:50.772" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:50.796" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000298 seconds.</msg>
<msg timestamp="20200601 14:14:50.796" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:52 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:50.796" starttime="20200601 14:14:50.764"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:50.796" starttime="20200601 14:14:50.462"></status>
</kw>
<kw type="foritem" name="${i} = 157">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:50.797" starttime="20200601 14:14:50.797"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:51.099" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:51.099" starttime="20200601 14:14:50.798"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:51.108" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:51.132" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000444 seconds.</msg>
<msg timestamp="20200601 14:14:51.133" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:52 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:51.133" starttime="20200601 14:14:51.099"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:51.133" starttime="20200601 14:14:50.796"></status>
</kw>
<kw type="foritem" name="${i} = 158">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:51.134" starttime="20200601 14:14:51.133"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:51.438" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:51.438" starttime="20200601 14:14:51.135"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:51.446" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:51.468" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000489 seconds.</msg>
<msg timestamp="20200601 14:14:51.469" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:52 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:51.469" starttime="20200601 14:14:51.438"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:51.469" starttime="20200601 14:14:51.133"></status>
</kw>
<kw type="foritem" name="${i} = 159">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:51.470" starttime="20200601 14:14:51.470"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:51.778" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:51.778" starttime="20200601 14:14:51.471"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:51.789" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:51.813" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000513 seconds.</msg>
<msg timestamp="20200601 14:14:51.814" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:53 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:51.814" starttime="20200601 14:14:51.778"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:51.814" starttime="20200601 14:14:51.469"></status>
</kw>
<kw type="foritem" name="${i} = 160">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:51.816" starttime="20200601 14:14:51.815"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:52.118" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:52.118" starttime="20200601 14:14:51.816"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:52.125" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:52.149" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.00035 seconds.</msg>
<msg timestamp="20200601 14:14:52.149" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:53 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:52.149" starttime="20200601 14:14:52.118"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:52.149" starttime="20200601 14:14:51.814"></status>
</kw>
<kw type="foritem" name="${i} = 161">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:52.150" starttime="20200601 14:14:52.150"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:52.452" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:52.452" starttime="20200601 14:14:52.151"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:52.460" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:52.483" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000394 seconds.</msg>
<msg timestamp="20200601 14:14:52.483" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:53 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:52.483" starttime="20200601 14:14:52.452"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:52.483" starttime="20200601 14:14:52.149"></status>
</kw>
<kw type="foritem" name="${i} = 162">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:52.484" starttime="20200601 14:14:52.484"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:52.786" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:52.786" starttime="20200601 14:14:52.485"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:52.793" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:52.816" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000343 seconds.</msg>
<msg timestamp="20200601 14:14:52.817" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:54 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:52.817" starttime="20200601 14:14:52.786"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:52.817" starttime="20200601 14:14:52.483"></status>
</kw>
<kw type="foritem" name="${i} = 163">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:52.819" starttime="20200601 14:14:52.818"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:53.128" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:53.128" starttime="20200601 14:14:52.819"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:53.134" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:53.156" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000325999999999 seconds.</msg>
<msg timestamp="20200601 14:14:53.156" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:54 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:53.156" starttime="20200601 14:14:53.128"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:53.156" starttime="20200601 14:14:52.817"></status>
</kw>
<kw type="foritem" name="${i} = 164">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:53.157" starttime="20200601 14:14:53.157"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:53.468" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:53.468" starttime="20200601 14:14:53.157"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:53.475" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:53.499" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000324 seconds.</msg>
<msg timestamp="20200601 14:14:53.499" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:54 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:53.499" starttime="20200601 14:14:53.468"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:53.499" starttime="20200601 14:14:53.156"></status>
</kw>
<kw type="foritem" name="${i} = 165">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:53.500" starttime="20200601 14:14:53.500"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:53.803" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:53.803" starttime="20200601 14:14:53.501"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:53.816" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:53.842" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000374 seconds.</msg>
<msg timestamp="20200601 14:14:53.843" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:55 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:53.843" starttime="20200601 14:14:53.803"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:53.843" starttime="20200601 14:14:53.499"></status>
</kw>
<kw type="foritem" name="${i} = 166">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:53.844" starttime="20200601 14:14:53.844"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:54.146" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:54.146" starttime="20200601 14:14:53.845"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:54.154" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:54.176" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000347 seconds.</msg>
<msg timestamp="20200601 14:14:54.177" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:55 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:54.177" starttime="20200601 14:14:54.147"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:54.177" starttime="20200601 14:14:53.843"></status>
</kw>
<kw type="foritem" name="${i} = 167">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:54.178" starttime="20200601 14:14:54.177"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:54.479" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:54.479" starttime="20200601 14:14:54.178"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:54.487" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:54.511" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000311 seconds.</msg>
<msg timestamp="20200601 14:14:54.511" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:55 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:54.511" starttime="20200601 14:14:54.479"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:54.511" starttime="20200601 14:14:54.177"></status>
</kw>
<kw type="foritem" name="${i} = 168">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:54.512" starttime="20200601 14:14:54.512"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:54.818" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:54.818" starttime="20200601 14:14:54.512"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:54.828" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:54.852" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000351 seconds.</msg>
<msg timestamp="20200601 14:14:54.852" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:56 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:54.852" starttime="20200601 14:14:54.818"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:54.852" starttime="20200601 14:14:54.511"></status>
</kw>
<kw type="foritem" name="${i} = 169">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:54.853" starttime="20200601 14:14:54.852"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:55.154" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:55.154" starttime="20200601 14:14:54.853"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:55.162" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:55.190" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000403 seconds.</msg>
<msg timestamp="20200601 14:14:55.191" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:56 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:55.191" starttime="20200601 14:14:55.154"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:55.191" starttime="20200601 14:14:54.852"></status>
</kw>
<kw type="foritem" name="${i} = 170">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"################### raw[${payload_["raw_data"][${i}]}] ###################"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:55.192" starttime="20200601 14:14:55.192"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.3s</arg>
</arguments>
<msg timestamp="20200601 14:14:55.493" level="INFO">Slept 300 milliseconds</msg>
<status status="PASS" endtime="20200601 14:14:55.493" starttime="20200601 14:14:55.192"></status>
</kw>
<kw name="Post" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${PON_PORT_ID}/ONUs/${ONU_ID}/Omci</arg>
<arg>body=${payload_["raw_data"][${i}]}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:55.501" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci</msg>
<msg timestamp="20200601 14:14:55.524" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1/ONUs/1/Omci: 0.000386 seconds.</msg>
<msg timestamp="20200601 14:14:55.525" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:56 GMT
connection Keep-Alive
content-type application/json
content-length 0


</msg>
<status status="PASS" endtime="20200601 14:14:55.525" starttime="20200601 14:14:55.493"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:55.525" starttime="20200601 14:14:55.191"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:55.525" starttime="20200601 14:13:58.026"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:55.525" starttime="20200601 14:13:58.021"></status>
</kw>
<kw name="Enable All Tx Port">
<tags>
<tag>Enable Pon Port Tx</tag>
</tags>
<doc>Enable all port function</doc>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:55.533" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/</msg>
<msg timestamp="20200601 14:14:55.562" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/: 0.000487 seconds.</msg>
<msg timestamp="20200601 14:14:55.562" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:56 GMT
connection Keep-Alive
content-type application/json
content-length 1467


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPortCollection.EthernetSwitchPor...</msg>
<status status="PASS" endtime="20200601 14:14:55.562" starttime="20200601 14:14:55.526"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${resp.dict['Members']}</arg>
</arguments>
<assign>
<var>${item_count}</var>
</assign>
<msg timestamp="20200601 14:14:55.563" level="INFO">Length is 20</msg>
<msg timestamp="20200601 14:14:55.563" level="INFO">${item_count} = 20</msg>
<status status="PASS" endtime="20200601 14:14:55.563" starttime="20200601 14:14:55.563"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Enable All Pon Port Tx ${item_count} ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:55.564" starttime="20200601 14:14:55.564"></status>
</kw>
<kw type="for" name="${ID} IN RANGE [ 1 | ${item_count} ]">
<kw type="foritem" name="${ID} = 1">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:55.573" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200601 14:14:55.671" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000415 seconds.</msg>
<msg timestamp="20200601 14:14:55.672" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:57 GMT
connection Keep-Alive
content-type application/json
content-length 2410


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:14:55.672" starttime="20200601 14:14:55.565"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:14:55.672" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:14:55.673" starttime="20200601 14:14:55.672"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:14:55.673" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200601 14:14:55.673" starttime="20200601 14:14:55.673"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:14:55.674" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:14:55.674" starttime="20200601 14:14:55.673"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:55.675" starttime="20200601 14:14:55.674"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:55.676" starttime="20200601 14:14:55.676"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:55.677" starttime="20200601 14:14:55.677"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
</arguments>
<kw name="Test Tx Op Up">
<tags>
<tag>Test tx_disable</tag>
</tags>
<doc>Test SFP port tx disable function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads($OP_UP)</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20200601 14:14:55.683" level="INFO">${payload} = {u'OperationalState': u'Up'}</msg>
<status status="PASS" endtime="20200601 14:14:55.683" starttime="20200601 14:14:55.679"></status>
</kw>
<kw name="Patch" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
<arg>body=${payload}</arg>
</arguments>
<msg timestamp="20200601 14:14:55.690" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/1</msg>
<msg timestamp="20200601 14:14:55.737" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/1: 0.000401 seconds.</msg>
<status status="PASS" endtime="20200601 14:14:55.737" starttime="20200601 14:14:55.683"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:55.737" starttime="20200601 14:14:55.679"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:55.737" starttime="20200601 14:14:55.678"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:55.738" starttime="20200601 14:14:55.678"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:55.738" starttime="20200601 14:14:55.565"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:55.738" starttime="20200601 14:14:55.565"></status>
</kw>
<kw type="foritem" name="${ID} = 2">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:55.745" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/2</msg>
<msg timestamp="20200601 14:14:55.761" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/2: 0.00038 seconds.</msg>
<msg timestamp="20200601 14:14:55.761" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:57 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:14:55.761" starttime="20200601 14:14:55.738"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:14:55.762" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:14:55.762" starttime="20200601 14:14:55.762"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:14:55.762" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:14:55.762" starttime="20200601 14:14:55.762"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:14:55.763" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:14:55.763" starttime="20200601 14:14:55.763"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:55.764" starttime="20200601 14:14:55.763"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:55.764" starttime="20200601 14:14:55.764"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:55.765" starttime="20200601 14:14:55.765"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:55.766" starttime="20200601 14:14:55.766"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:55.767" starttime="20200601 14:14:55.766"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:55.767" starttime="20200601 14:14:55.738"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:55.767" starttime="20200601 14:14:55.738"></status>
</kw>
<kw type="foritem" name="${ID} = 3">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:55.774" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/3</msg>
<msg timestamp="20200601 14:14:55.795" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/3: 0.00028 seconds.</msg>
<msg timestamp="20200601 14:14:55.796" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:57 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:14:55.796" starttime="20200601 14:14:55.768"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:14:55.796" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:14:55.796" starttime="20200601 14:14:55.796"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:14:55.797" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:14:55.797" starttime="20200601 14:14:55.797"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:14:55.797" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:14:55.797" starttime="20200601 14:14:55.797"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:55.798" starttime="20200601 14:14:55.798"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:55.799" starttime="20200601 14:14:55.798"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:55.800" starttime="20200601 14:14:55.799"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:55.801" starttime="20200601 14:14:55.801"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:55.801" starttime="20200601 14:14:55.800"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:55.801" starttime="20200601 14:14:55.767"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:55.801" starttime="20200601 14:14:55.767"></status>
</kw>
<kw type="foritem" name="${ID} = 4">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:55.808" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/4</msg>
<msg timestamp="20200601 14:14:55.831" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/4: 0.000286 seconds.</msg>
<msg timestamp="20200601 14:14:55.832" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:57 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:14:55.832" starttime="20200601 14:14:55.802"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:14:55.832" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:14:55.833" starttime="20200601 14:14:55.832"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:14:55.833" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:14:55.833" starttime="20200601 14:14:55.833"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:14:55.834" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:14:55.834" starttime="20200601 14:14:55.833"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:55.834" starttime="20200601 14:14:55.834"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:55.835" starttime="20200601 14:14:55.835"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:55.836" starttime="20200601 14:14:55.836"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:55.837" starttime="20200601 14:14:55.837"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:55.837" starttime="20200601 14:14:55.836"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:55.837" starttime="20200601 14:14:55.802"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:55.837" starttime="20200601 14:14:55.802"></status>
</kw>
<kw type="foritem" name="${ID} = 5">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:55.845" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/5</msg>
<msg timestamp="20200601 14:14:55.867" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/5: 0.000290000000001 seconds.</msg>
<msg timestamp="20200601 14:14:55.868" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:57 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:14:55.868" starttime="20200601 14:14:55.838"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:14:55.869" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:14:55.869" starttime="20200601 14:14:55.868"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:14:55.869" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:14:55.869" starttime="20200601 14:14:55.869"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:14:55.870" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:14:55.870" starttime="20200601 14:14:55.869"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:55.870" starttime="20200601 14:14:55.870"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:55.871" starttime="20200601 14:14:55.871"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:55.872" starttime="20200601 14:14:55.871"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:55.873" starttime="20200601 14:14:55.873"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:55.873" starttime="20200601 14:14:55.872"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:55.873" starttime="20200601 14:14:55.838"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:55.873" starttime="20200601 14:14:55.838"></status>
</kw>
<kw type="foritem" name="${ID} = 6">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:55.879" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/6</msg>
<msg timestamp="20200601 14:14:55.898" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/6: 0.000286999999999 seconds.</msg>
<msg timestamp="20200601 14:14:55.898" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:57 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:14:55.898" starttime="20200601 14:14:55.874"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:14:55.899" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:14:55.899" starttime="20200601 14:14:55.899"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:14:55.900" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:14:55.900" starttime="20200601 14:14:55.899"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:14:55.900" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:14:55.900" starttime="20200601 14:14:55.900"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:55.901" starttime="20200601 14:14:55.900"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:55.901" starttime="20200601 14:14:55.901"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:55.902" starttime="20200601 14:14:55.902"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:55.903" starttime="20200601 14:14:55.903"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:55.903" starttime="20200601 14:14:55.902"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:55.903" starttime="20200601 14:14:55.873"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:55.903" starttime="20200601 14:14:55.873"></status>
</kw>
<kw type="foritem" name="${ID} = 7">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:55.909" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/7</msg>
<msg timestamp="20200601 14:14:55.934" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/7: 0.000276 seconds.</msg>
<msg timestamp="20200601 14:14:55.935" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:57 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:14:55.935" starttime="20200601 14:14:55.904"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:14:55.936" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:14:55.936" starttime="20200601 14:14:55.935"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:14:55.936" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:14:55.936" starttime="20200601 14:14:55.936"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:14:55.937" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:14:55.937" starttime="20200601 14:14:55.936"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:55.937" starttime="20200601 14:14:55.937"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:55.938" starttime="20200601 14:14:55.938"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:55.939" starttime="20200601 14:14:55.938"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:55.940" starttime="20200601 14:14:55.940"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:55.940" starttime="20200601 14:14:55.939"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:55.940" starttime="20200601 14:14:55.903"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:55.940" starttime="20200601 14:14:55.903"></status>
</kw>
<kw type="foritem" name="${ID} = 8">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:55.947" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/8</msg>
<msg timestamp="20200601 14:14:55.972" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/8: 0.00028 seconds.</msg>
<msg timestamp="20200601 14:14:55.973" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:57 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:14:55.973" starttime="20200601 14:14:55.941"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:14:55.974" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:14:55.974" starttime="20200601 14:14:55.973"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:14:55.974" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:14:55.974" starttime="20200601 14:14:55.974"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:14:55.975" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:14:55.975" starttime="20200601 14:14:55.975"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:55.975" starttime="20200601 14:14:55.975"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:55.976" starttime="20200601 14:14:55.976"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:55.977" starttime="20200601 14:14:55.976"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:55.978" starttime="20200601 14:14:55.978"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:55.978" starttime="20200601 14:14:55.977"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:55.978" starttime="20200601 14:14:55.940"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:55.978" starttime="20200601 14:14:55.940"></status>
</kw>
<kw type="foritem" name="${ID} = 9">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:55.985" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/9</msg>
<msg timestamp="20200601 14:14:56.007" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/9: 0.000348 seconds.</msg>
<msg timestamp="20200601 14:14:56.007" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:57 GMT
connection Keep-Alive
content-type application/json
content-length 1050


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:14:56.008" starttime="20200601 14:14:55.979"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:14:56.008" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:14:56.008" starttime="20200601 14:14:56.008"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:14:56.009" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:14:56.009" starttime="20200601 14:14:56.009"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:14:56.010" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:14:56.010" starttime="20200601 14:14:56.010"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:56.011" starttime="20200601 14:14:56.010"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:56.011" starttime="20200601 14:14:56.011"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:56.012" starttime="20200601 14:14:56.011"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:56.013" starttime="20200601 14:14:56.013"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:56.013" starttime="20200601 14:14:56.012"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:56.013" starttime="20200601 14:14:55.978"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:56.013" starttime="20200601 14:14:55.978"></status>
</kw>
<kw type="foritem" name="${ID} = 10">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:56.020" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/10</msg>
<msg timestamp="20200601 14:14:56.044" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/10: 0.000356 seconds.</msg>
<msg timestamp="20200601 14:14:56.045" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:57 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:14:56.045" starttime="20200601 14:14:56.014"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:14:56.045" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:14:56.046" starttime="20200601 14:14:56.045"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:14:56.046" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:14:56.046" starttime="20200601 14:14:56.046"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:14:56.047" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:14:56.047" starttime="20200601 14:14:56.046"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:56.048" starttime="20200601 14:14:56.047"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:56.049" starttime="20200601 14:14:56.048"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:56.050" starttime="20200601 14:14:56.049"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:56.051" starttime="20200601 14:14:56.050"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:56.051" starttime="20200601 14:14:56.050"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:56.051" starttime="20200601 14:14:56.013"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:56.051" starttime="20200601 14:14:56.013"></status>
</kw>
<kw type="foritem" name="${ID} = 11">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:56.059" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/11</msg>
<msg timestamp="20200601 14:14:56.079" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/11: 0.000319999999999 seconds.</msg>
<msg timestamp="20200601 14:14:56.079" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:57 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:14:56.079" starttime="20200601 14:14:56.052"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:14:56.080" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:14:56.080" starttime="20200601 14:14:56.080"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:14:56.081" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:14:56.081" starttime="20200601 14:14:56.081"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:14:56.081" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:14:56.081" starttime="20200601 14:14:56.081"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:56.082" starttime="20200601 14:14:56.082"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:56.082" starttime="20200601 14:14:56.082"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:56.083" starttime="20200601 14:14:56.083"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:56.084" starttime="20200601 14:14:56.084"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:56.084" starttime="20200601 14:14:56.083"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:56.084" starttime="20200601 14:14:56.051"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:56.084" starttime="20200601 14:14:56.051"></status>
</kw>
<kw type="foritem" name="${ID} = 12">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:56.091" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/12</msg>
<msg timestamp="20200601 14:14:56.111" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/12: 0.00031 seconds.</msg>
<msg timestamp="20200601 14:14:56.111" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:57 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:14:56.111" starttime="20200601 14:14:56.085"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:14:56.112" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:14:56.112" starttime="20200601 14:14:56.112"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:14:56.113" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:14:56.113" starttime="20200601 14:14:56.113"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:14:56.113" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:14:56.114" starttime="20200601 14:14:56.113"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:56.114" starttime="20200601 14:14:56.114"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:56.115" starttime="20200601 14:14:56.114"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:56.115" starttime="20200601 14:14:56.115"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:56.117" starttime="20200601 14:14:56.116"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:56.117" starttime="20200601 14:14:56.116"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:56.117" starttime="20200601 14:14:56.085"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:56.117" starttime="20200601 14:14:56.084"></status>
</kw>
<kw type="foritem" name="${ID} = 13">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:56.123" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/13</msg>
<msg timestamp="20200601 14:14:56.145" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/13: 0.000299 seconds.</msg>
<msg timestamp="20200601 14:14:56.146" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:57 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:14:56.146" starttime="20200601 14:14:56.117"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:14:56.146" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:14:56.146" starttime="20200601 14:14:56.146"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:14:56.147" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:14:56.147" starttime="20200601 14:14:56.147"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:14:56.148" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:14:56.148" starttime="20200601 14:14:56.148"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:56.148" starttime="20200601 14:14:56.148"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:56.149" starttime="20200601 14:14:56.149"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:56.150" starttime="20200601 14:14:56.149"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:56.151" starttime="20200601 14:14:56.151"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:56.151" starttime="20200601 14:14:56.150"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:56.151" starttime="20200601 14:14:56.117"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:56.151" starttime="20200601 14:14:56.117"></status>
</kw>
<kw type="foritem" name="${ID} = 14">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:56.158" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/14</msg>
<msg timestamp="20200601 14:14:56.177" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/14: 0.000336 seconds.</msg>
<msg timestamp="20200601 14:14:56.177" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:57 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:14:56.177" starttime="20200601 14:14:56.152"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:14:56.178" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:14:56.178" starttime="20200601 14:14:56.178"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:14:56.179" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:14:56.179" starttime="20200601 14:14:56.179"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:14:56.180" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:14:56.180" starttime="20200601 14:14:56.179"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:56.180" starttime="20200601 14:14:56.180"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:56.181" starttime="20200601 14:14:56.180"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:56.181" starttime="20200601 14:14:56.181"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:56.182" starttime="20200601 14:14:56.182"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:56.183" starttime="20200601 14:14:56.182"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:56.183" starttime="20200601 14:14:56.151"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:56.183" starttime="20200601 14:14:56.151"></status>
</kw>
<kw type="foritem" name="${ID} = 15">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:56.190" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/15</msg>
<msg timestamp="20200601 14:14:56.212" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/15: 0.000404000000001 seconds.</msg>
<msg timestamp="20200601 14:14:56.213" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:57 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:14:56.213" starttime="20200601 14:14:56.183"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:14:56.213" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:14:56.214" starttime="20200601 14:14:56.213"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:14:56.214" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:14:56.214" starttime="20200601 14:14:56.214"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:14:56.215" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:14:56.215" starttime="20200601 14:14:56.215"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:56.216" starttime="20200601 14:14:56.215"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:56.216" starttime="20200601 14:14:56.216"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:56.217" starttime="20200601 14:14:56.217"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:56.219" starttime="20200601 14:14:56.218"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:56.219" starttime="20200601 14:14:56.217"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:56.219" starttime="20200601 14:14:56.183"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:56.219" starttime="20200601 14:14:56.183"></status>
</kw>
<kw type="foritem" name="${ID} = 16">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:56.228" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/16</msg>
<msg timestamp="20200601 14:14:56.252" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/16: 0.000383 seconds.</msg>
<msg timestamp="20200601 14:14:56.253" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:57 GMT
connection Keep-Alive
content-type application/json
content-length 1055


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:14:56.253" starttime="20200601 14:14:56.220"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:14:56.254" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:14:56.254" starttime="20200601 14:14:56.253"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:14:56.255" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:14:56.255" starttime="20200601 14:14:56.254"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:14:56.255" level="INFO">${PORT_ID} = PON port</msg>
<status status="PASS" endtime="20200601 14:14:56.255" starttime="20200601 14:14:56.255"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:56.256" starttime="20200601 14:14:56.256"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:56.257" starttime="20200601 14:14:56.256"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:56.258" starttime="20200601 14:14:56.257"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:56.259" starttime="20200601 14:14:56.258"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:56.259" starttime="20200601 14:14:56.258"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:56.259" starttime="20200601 14:14:56.219"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:56.259" starttime="20200601 14:14:56.219"></status>
</kw>
<kw type="foritem" name="${ID} = 17">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:56.267" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/17</msg>
<msg timestamp="20200601 14:14:56.287" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/17: 0.000442 seconds.</msg>
<msg timestamp="20200601 14:14:56.288" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:57 GMT
connection Keep-Alive
content-type application/json
content-length 2445


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:14:56.288" starttime="20200601 14:14:56.260"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:14:56.289" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:14:56.289" starttime="20200601 14:14:56.288"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:14:56.289" level="INFO">${PORT_ENABLE} = Enabled</msg>
<status status="PASS" endtime="20200601 14:14:56.289" starttime="20200601 14:14:56.289"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:14:56.290" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200601 14:14:56.290" starttime="20200601 14:14:56.290"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:56.291" starttime="20200601 14:14:56.290"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:56.291" starttime="20200601 14:14:56.291"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:56.292" starttime="20200601 14:14:56.292"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:56.293" starttime="20200601 14:14:56.293"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:56.293" starttime="20200601 14:14:56.292"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:56.294" starttime="20200601 14:14:56.259"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:56.294" starttime="20200601 14:14:56.259"></status>
</kw>
<kw type="foritem" name="${ID} = 18">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:56.302" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/18</msg>
<msg timestamp="20200601 14:14:56.324" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/18: 0.000309000000001 seconds.</msg>
<msg timestamp="20200601 14:14:56.325" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:57 GMT
connection Keep-Alive
content-type application/json
content-length 1056


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:14:56.325" starttime="20200601 14:14:56.294"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:14:56.326" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:14:56.326" starttime="20200601 14:14:56.325"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:14:56.326" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:14:56.326" starttime="20200601 14:14:56.326"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:14:56.327" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200601 14:14:56.327" starttime="20200601 14:14:56.327"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:56.328" starttime="20200601 14:14:56.327"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:56.353" starttime="20200601 14:14:56.328"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:56.354" starttime="20200601 14:14:56.353"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:56.355" starttime="20200601 14:14:56.355"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:56.355" starttime="20200601 14:14:56.354"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:56.355" starttime="20200601 14:14:56.294"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:56.355" starttime="20200601 14:14:56.294"></status>
</kw>
<kw type="foritem" name="${ID} = 19">
<kw name="Tx Disable Up">
<tags>
<tag>Test tx_disable up</tag>
</tags>
<doc>Test SFP port tx disable Up function</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<kw name="Get" library="Redfish">
<arguments>
<arg>/redfish/v1/EthernetSwitches/1/Ports/${ID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200601 14:14:56.363" level="INFO">Attempt 1 of /redfish/v1/EthernetSwitches/1/Ports/19</msg>
<msg timestamp="20200601 14:14:56.416" level="INFO">Response Time to /redfish/v1/EthernetSwitches/1/Ports/19: 0.000279 seconds.</msg>
<msg timestamp="20200601 14:14:56.416" level="INFO">${resp} = 200
date Mon, 01 Jun 2020 06:14:57 GMT
connection Keep-Alive
content-type application/json
content-length 1056


{"@odata.context":"/redfish/v1/$metadata#EthernetSwitchPort.EthernetSwitchPort","@odata...</msg>
<status status="PASS" endtime="20200601 14:14:56.416" starttime="20200601 14:14:56.356"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20200601 14:14:56.417" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200601 14:14:56.418" starttime="20200601 14:14:56.417"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['Status']['State']}</arg>
</arguments>
<assign>
<var>${PORT_ENABLE}</var>
</assign>
<msg timestamp="20200601 14:14:56.418" level="INFO">${PORT_ENABLE} = Absent</msg>
<status status="PASS" endtime="20200601 14:14:56.418" starttime="20200601 14:14:56.418"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.dict['PortId']}</arg>
</arguments>
<assign>
<var>${PORT_ID}</var>
</assign>
<msg timestamp="20200601 14:14:56.419" level="INFO">${PORT_ID} = QSFP port</msg>
<status status="PASS" endtime="20200601 14:14:56.419" starttime="20200601 14:14:56.418"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PORT_ENABLE}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:56.419" starttime="20200601 14:14:56.419"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PortId}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:56.420" starttime="20200601 14:14:56.419"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp.dict['OperationalState']}</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:56.420" starttime="20200601 14:14:56.420"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PORT_ENABLE}' == 'Enabled'</arg>
<arg>Run Keyword If</arg>
<arg>'${PORT_ID}' == 'PON port' or '${PORT_ID}' == 'SFP port'</arg>
<arg>Test Tx Op Up</arg>
<arg>${ID}</arg>
<arg>ELSE</arg>
<arg>Log to console</arg>
<arg>"####### Disable ######"</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"####### Disable ######"</arg>
</arguments>
<status status="PASS" endtime="20200601 14:14:56.421" starttime="20200601 14:14:56.421"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:56.422" starttime="20200601 14:14:56.421"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:56.422" starttime="20200601 14:14:56.356"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:56.422" starttime="20200601 14:14:56.355"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:56.422" starttime="20200601 14:14:55.564"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:56.422" starttime="20200601 14:14:55.525"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:56.422" starttime="20200601 14:13:58.021"></status>
</kw>
<kw type="teardown" name="Test Teardown Execution">
<doc>Do the post test teardown.</doc>
<kw name="Logout" library="Redfish">
<doc>Logout of session. YOU MUST CALL THIS WHEN YOU ARE DONE TO FREE</doc>
<msg timestamp="20200601 14:14:56.429" level="INFO">Attempt 1 of /redfish/v1/SessionService/Sessions/1</msg>
<msg timestamp="20200601 14:14:56.451" level="INFO">Response Time to /redfish/v1/SessionService/Sessions/1: 0.00029 seconds.</msg>
<msg timestamp="20200601 14:14:56.451" level="INFO">User logged out: </msg>
<status status="PASS" endtime="20200601 14:14:56.451" starttime="20200601 14:14:56.422"></status>
</kw>
<status status="PASS" endtime="20200601 14:14:56.451" starttime="20200601 14:14:56.422"></status>
</kw>
<doc>Test omci send</doc>
<tags>
<tag>Test omci send</tag>
</tags>
<status status="PASS" endtime="20200601 14:14:56.451" critical="yes" starttime="20200601 14:13:57.990"></status>
</test>
<doc>Test BAL Rstful functionality.</doc>
<status status="PASS" endtime="20200601 14:14:56.453" starttime="20200601 14:10:28.065"></status>
</suite>
<status status="PASS" endtime="20200601 14:14:56.455" starttime="20200601 14:10:28.050"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="4">Critical Tests</stat>
<stat fail="0" pass="4">All Tests</stat>
</total>
<tag>
<stat fail="0" pass="1">Test Bal Restful opertaion test</stat>
<stat fail="0" pass="1">Test Flow add</stat>
<stat fail="0" pass="1">Test omci send</stat>
<stat fail="0" pass="1">Test ONU Rnage test</stat>
</tag>
<suite>
<stat fail="0" id="s1" name="Bal Test" pass="4">Bal Test</stat>
<stat fail="0" id="s1-s1" name="Test Bal" pass="4">Bal Test.Test Bal</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
